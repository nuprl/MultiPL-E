language: cs
name: HumanEval_158_find_max
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxStr = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                maxStr
    = word;\n            }\n        }\n        return maxStr;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50254d04b71d4109a013900dbdc39100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50254d04b71d4109a013900dbdc39100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        int max = 0;\n        string maxWord = \"\";\n        foreach
    (string word in words) {\n            int count = 0;\n            foreach (char
    c in word) {\n                if (!word.Contains(c)) {\n                    count++;\n
    \               }\n            }\n            if (count > max) {\n                max
    = count;\n                maxWord = word;\n            }\n        }\n        return
    maxWord;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6ef8b0dde0145cf8499210bde734e77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6ef8b0dde0145cf8499210bde734e77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return null;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00029] in <ff251ea04d0c42979fc561d6dbdcb541>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00029] in <ff251ea04d0c42979fc561d6dbdcb541>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Write your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return words.OrderByDescending(x
    => x.Distinct().Count()).ThenBy(x => x).First();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                maxWord
    = word;\n            }\n        }\n        return maxWord;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Write your
    code here.\n        int max = 0;\n        string result = \"\";\n        foreach
    (string word in words) {\n            int count = 0;\n            foreach (char
    c in word) {\n                if (!result.Contains(c)) {\n                    count++;\n
    \               }\n            }\n            if (count > max) {\n                max
    = count;\n                result = word;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2b1cddb1eb2142399271f91037d703ba>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_count = 0;\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return words.OrderByDescending(w
    => w.Distinct().Count()).ThenBy(w => w).First();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return words.OrderByDescending(word
    => word.Distinct().Count()).ThenBy(word => word).First();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91e8dbf4aaab468fa0309899ea81695d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91e8dbf4aaab468fa0309899ea81695d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        int max = 0;\n        string maxWord = \"\";\n        foreach
    (string word in words) {\n            int count = 0;\n            foreach (char
    c in word) {\n                if (!word.Contains(c)) {\n                    count++;\n
    \               }\n            }\n            if (count > max) {\n                max
    = count;\n                maxWord = word;\n            }\n        }\n        return
    maxWord;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d74ad6ff0924e7c9152f01c05d7fc73>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7d74ad6ff0924e7c9152f01c05d7fc73>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f0f89c37084a839a4809deb58c9c9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f0f89c37084a839a4809deb58c9c9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Your code goes
    here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4bd4030d084b99b3760980e6d8f1bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4bd4030d084b99b3760980e6d8f1bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return words.OrderByDescending(x
    => x.Distinct().Count()).ThenBy(x => x).First();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        if (words.Count
    == 0) {\n            return \"\";\n        }\n        string max = words[0];\n
    \       int max_unique = 0;\n        foreach (string word in words) {\n            int
    unique = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    unique++;\n                }\n
    \           }\n            if (unique > max_unique) {\n                max = word;\n
    \               max_unique = unique;\n            }\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86e62878eeeb42108f7984ea213cb858>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86e62878eeeb42108f7984ea213cb858>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_unique = 0;\n        foreach (string word in words) {\n            int
    unique = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    unique++;\n                }\n
    \           }\n            if (unique > max_unique) {\n                max = word;\n
    \               max_unique = unique;\n            }\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33c9158856ac451894d0680ed6c1f265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33c9158856ac451894d0680ed6c1f265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                maxWord
    = word;\n            }\n        }\n        return maxWord;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        int max = 0;\n        string result = \"\";\n        foreach
    (string word in words) {\n            HashSet<char> set = new HashSet<char>();\n
    \           foreach (char c in word) {\n                set.Add(c);\n            }\n
    \           if (set.Count > max) {\n                max = set.Count;\n                result
    = word;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <043f1636f4d443b8b48a04ba624be9e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <043f1636f4d443b8b48a04ba624be9e9>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Your code goes
    here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4bd4030d084b99b3760980e6d8f1bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4bd4030d084b99b3760980e6d8f1bc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Write your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                maxWord
    = word;\n            }\n        }\n        return maxWord;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32eae404ef934ec7ade2137ed16db05a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            int
    count = word.Distinct().Count();\n            if (count > max) {\n                max
    = count;\n                maxWord = word;\n            }\n        }\n        return
    maxWord;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cfe8294f05ef4367981f9e3d9991f2b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cfe8294f05ef4367981f9e3d9991f2b0>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // your code here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be933c336b82441d80b4e7117d75171d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be933c336b82441d80b4e7117d75171d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            for (int i = 0; i < word.Length; i++) {\n                if
    (word.IndexOf(word[i]) == i) {\n                    count++;\n                }\n
    \           }\n            if (count > max) {\n                max = count;\n
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc4c89ba73e24a50bd082a76c7aa2316>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc4c89ba73e24a50bd082a76c7aa2316>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_count = 0;\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Your code here\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34648cbf7acb458aa8ba1472bf74762c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34648cbf7acb458aa8ba1472bf74762c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string result = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                result
    = word;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00029] in <883056499ecf44e4b347bf6dbea0c52b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00029] in <883056499ecf44e4b347bf6dbea0c52b>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_count = 0;\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e56488a56c64df1ad1858fc6cb1de4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e56488a56c64df1ad1858fc6cb1de4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00029] in <7208243c461e40c9a211ffd843acc4e2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00029] in <7208243c461e40c9a211ffd843acc4e2>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_count = 0;\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Write your
    code here\n        int max = 0;\n        string result = \"\";\n        foreach
    (string word in words) {\n            int count = 0;\n            foreach (char
    c in word) {\n                if (!result.Contains(c)) {\n                    count++;\n
    \               }\n            }\n            if (count > max) {\n                max
    = count;\n                result = word;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bc6c2008b4474ebf86cdd22bf851e53f>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        var max = words.Select(x
    => x.Distinct().Count()).Max();\n        return words.Where(x => x.Distinct().Count()
    == max).First();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eaf7f3143ea4aa5b2198782d2d3ad6b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eaf7f3143ea4aa5b2198782d2d3ad6b>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this method\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e85c711be6844dd906f25ab54b831fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e85c711be6844dd906f25ab54b831fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        var max = words.Max(x => x.Distinct().Count());\n        return
    words.First(x => x.Distinct().Count() == max);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6126276cdc9943b2b3668147536816c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6126276cdc9943b2b3668147536816c7>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string ans = \"\";\n        foreach (string word in words) {\n            if
    (word.Distinct().Count() > max) {\n                max = word.Distinct().Count();\n
    \               ans = word;\n            }\n        }\n        return ans;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69354ac66dee4b8aa9f48e709915dea2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69354ac66dee4b8aa9f48e709915dea2>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string result = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                result
    = word;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        string max = \"\";\n
    \       int max_count = 0;\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50fba7e8844c4f4483fff4c4a7fee77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // Write your
    code here\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13772d4ba8e43f69d91072948faa07e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string result = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                result
    = word;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76451ac0aec24131887134f5347d78a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxWord = \"\";\n        foreach (string word in words) {\n            if
    (word.Length > max) {\n                max = word.Length;\n                maxWord
    = word;\n            }\n        }\n        return maxWord;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f60188c543e6420284c3ee616969c773>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        string max = \"\";\n        int max_count = 0;\n        foreach
    (string word in words) {\n            int count = 0;\n            foreach (char
    c in word) {\n                if (word.IndexOf(c) == word.LastIndexOf(c)) {\n
    \                   count++;\n                }\n            }\n            if
    (count > max_count) {\n                max = word;\n                max_count
    = count;\n            }\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21a716d91f564114b6e78b1857915fde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21a716d91f564114b6e78b1857915fde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string res = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                res
    = word;\n            }\n        }\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <769e13e188b24ccea4a8ffd6361f8ae8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <769e13e188b24ccea4a8ffd6361f8ae8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        var max = words.Select(w
    => w.Distinct().Count()).Max();\n        return words.Where(w => w.Distinct().Count()
    == max).First();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae95e96714ad41e2b8cba1e6730b8352>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae95e96714ad41e2b8cba1e6730b8352>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this\n        return \"\";\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d4fe4c67be64dc2820511f15297b06d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d4fe4c67be64dc2820511f15297b06d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00029] in <7208243c461e40c9a211ffd843acc4e2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00029] in <7208243c461e40c9a211ffd843acc4e2>:0
    \n"
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO\n        return
    \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f0f89c37084a839a4809deb58c9c9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f0f89c37084a839a4809deb58c9c9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        var max = words.Max(w
    => w.Distinct().Count());\n        return words.First(w => w.Distinct().Count()
    == max);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf85583c8ff542eba38f8709d55204e1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf85583c8ff542eba38f8709d55204e1>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        var max = 0;\n
    \       var maxWord = \"\";\n        foreach (var word in words) {\n            var
    unique = new HashSet<char>();\n            foreach (var c in word) {\n                unique.Add(c);\n
    \           }\n            if (unique.Count > max) {\n                max = unique.Count;\n
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff44646cc51346d3b64098e7f295af40>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff44646cc51346d3b64098e7f295af40>:0
    \n"
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement\n
    \       return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf3688456624626b334f9ce9c1bf76c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Write
    your code here\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f404444edc140e7a57c97cec4594be6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f404444edc140e7a57c97cec4594be6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <309b8a693008421e99f59c90e263c1ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    me!\n        return \"\";\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"of\",
    (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ade19994fbad47a89681e185d047369e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ade19994fbad47a89681e185d047369e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string max_word = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)
    == word.LastIndexOf(c)) {\n                    count++;\n                }\n            }\n
    \           if (count > max) {\n                max = count;\n                max_word
    = word;\n            }\n        }\n        return max_word;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa4d121f27414c4dbb8e863cf5b68d1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa4d121f27414c4dbb8e863cf5b68d1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe74d6fed5654c57b13fe985af41279f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: implement
    this function\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9340fc14e792492f8a3c815dad61a629>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        int max = 0;\n
    \       string maxString = \"\";\n        foreach (string word in words) {\n            int
    count = 0;\n            foreach (char c in word) {\n                if (!word.Contains(c))
    {\n                    count++;\n                }\n            }\n            if
    (count > max) {\n                max = count;\n                maxString = word;\n
    \           }\n        }\n        return maxString;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901090a1cdef428881b08e1713563948>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901090a1cdef428881b08e1713563948>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        return \"\";\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e56488a56c64df1ad1858fc6cb1de4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e56488a56c64df1ad1858fc6cb1de4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        // TODO: Implement
    this function.\n        return \"\";\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\",
    (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\",
    (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\",
    (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",
    (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"nation\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"this\", (string)\"is\",
    (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62b4566df0c843ebba96e33625e94e46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that accepts a list of strings.\n    // The
    list contains different words. Return the word with maximum number\n    // of
    unique characters. If multiple strings have maximum number of unique\n    // characters,
    return the one which comes first in lexicographical order.\n    // find_max([\"name\",
    \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\", \"game\"])
    == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n
    \   public static string FindMax(List<string> words) {\n        throw new NotImplementedException();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"enam\",
    (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"this\",
    (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\", (string)\"are\",
    (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new
    List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\",
    (string)\"nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new
    string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"b\")));\n
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\", (string)\"play\",
    (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NotImplementedException: The method or operation
    is not implemented.\n  at Problem.Main (System.String[] args) [0x00024] in <eb2d6e96109245d291b696d76f92c599>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NotImplementedException: The method
    or operation is not implemented.\n  at Problem.Main (System.String[] args) [0x00024]
    in <eb2d6e96109245d291b696d76f92c599>:0 \n"
  stdout: ''
  timestamp: 1659798367

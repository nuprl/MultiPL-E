name: HumanEval_140_fix_spaces
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\n\
  \    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
  \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\n\
  \    public static string FixSpaces(string text) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
  Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
  \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
  \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
  Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1\
  \ 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
completions: ['        return text.Replace("  ", "-").Replace(" ", "_");', "     \
    \   var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                } else if (spaceCount\
    \ > 0) {\n                    sb.Append('_');\n                }\n           \
    \     sb.Append(c);\n                spaceCount = 0;\n            }\n        }\n\
    \        if (spaceCount > 2) {\n            sb.Append('-');\n        } else if\
    \ (spaceCount > 0) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var spaceCount = 0;\n      \
    \  foreach (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    result.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    result.Append('-');\n                }\n            \
    \    result.Append(c);\n                spaceCount = 0;\n            }\n     \
    \   }\n        return result.ToString();", '        return text.Replace("  ",
    "-").Replace(" ", "_");', "        string result = \"\";\n        int count =\
    \ 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                result += '-';\n                    count = 0;\n            \
    \    }\n            } else {\n                if (count == 1) {\n            \
    \        result += '_';\n                }\n                count = 0;\n     \
    \           result += text[i];\n            }\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', "        // TODO: Implement me\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("__", "-");', "        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    result += '-';\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count ==\
    \ 1) {\n                    result += '_';\n                }\n              \
    \  result += text[i];\n                count = 0;\n            }\n        }\n\
    \        return result;", "        var sb = new StringBuilder();\n        var\
    \ count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                count++;\n                if (count == 1) {\n               \
    \     sb.Append('_');\n                }\n            } else {\n             \
    \   if (count > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < count; i++) {\n                 \
    \       sb.Append('_');\n                    }\n                }\n          \
    \      count = 0;\n                sb.Append(c);\n            }\n        }\n \
    \       if (count > 2) {\n            sb.Append('-');\n        } else {\n    \
    \        for (int i = 0; i < count; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace("  ", "-").Replace("
    ", "_");', "        // TODO: implement\n        return null;", '        return
    "";', "        // TODO: Implement this method\n        return text;", "      \
    \  // TODO: Implement\n        return text;", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           sb.Append('_', count);\n                }\n                count =\
    \ 0;\n            }\n            sb.Append(c);\n            prev = c;\n      \
    \  }\n        if (count > 2) {\n            sb.Append('-');\n        } else {\n\
    \            sb.Append('_', count);\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 0) {\n                   \
    \ if (spaces > 2) {\n                        result.Append('-');\n           \
    \         } else {\n                        result.Append('_');\n            \
    \        }\n                    spaces = 0;\n                }\n             \
    \   result.Append(c);\n            }\n        }\n        if (spaces > 0) {\n \
    \           if (spaces > 2) {\n                result.Append('-');\n         \
    \   } else {\n                result.Append('_');\n            }\n        }\n\
    \        return result.ToString();"]
stop_tokens:
- "\n    }\n"

name: HumanEval_140_fix_spaces
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string text, replace all spaces in it with underscores,\
  \ \n    // and if a string has more than 2 consecutive spaces, \n    // then replace\
  \ all consecutive spaces with - \n    // fix_spaces(\"Example\") == \"Example\"\n\
  \    // fix_spaces(\"Example 1\") == \"Example_1\"\n    // fix_spaces(\" Example\
  \ 2\") == \"_Example_2\"\n    // fix_spaces(\" Example   3\") == \"_Example-3\"\n\
  \    public static string FixSpaces(string text) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FixSpaces((\"\
  Example\")).Equals((\"Example\")));\n    Debug.Assert(FixSpaces((\"Mudasir Hanif\
  \ \")).Equals((\"Mudasir_Hanif_\")));\n    Debug.Assert(FixSpaces((\"Yellow Yellow\
  \  Dirty  Fellow\")).Equals((\"Yellow_Yellow__Dirty__Fellow\")));\n    Debug.Assert(FixSpaces((\"\
  Exa   mple\")).Equals((\"Exa-mple\")));\n    Debug.Assert(FixSpaces((\"   Exa 1\
  \ 2 2 mple\")).Equals((\"-Exa_1_2_2_mple\")));\n    }\n\n}\n"
completions: ['        return text.Replace("  ", "-").Replace(" ", "_");', "     \
    \   var sb = new StringBuilder();\n        var spaceCount = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    sb.Append('-');\n                } else if (spaceCount\
    \ > 0) {\n                    sb.Append('_');\n                }\n           \
    \     sb.Append(c);\n                spaceCount = 0;\n            }\n        }\n\
    \        if (spaceCount > 2) {\n            sb.Append('-');\n        } else if\
    \ (spaceCount > 0) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var spaceCount = 0;\n      \
    \  foreach (var c in text) {\n            if (c == ' ') {\n                spaceCount++;\n\
    \                if (spaceCount == 1) {\n                    result.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    result.Append('-');\n                }\n            \
    \    result.Append(c);\n                spaceCount = 0;\n            }\n     \
    \   }\n        return result.ToString();", '        return text.Replace("  ",
    "-").Replace(" ", "_");', "        string result = \"\";\n        int count =\
    \ 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count > 2) {\n    \
    \                result += '-';\n                    count = 0;\n            \
    \    }\n            } else {\n                if (count == 1) {\n            \
    \        result += '_';\n                }\n                count = 0;\n     \
    \           result += text[i];\n            }\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', "        // TODO: Implement me\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("__", "-");', "        string result = \"\";\n\
    \        int count = 0;\n        for (int i = 0; i < text.Length; i++) {\n   \
    \         if (text[i] == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    result += '-';\n                    count\
    \ = 0;\n                }\n            } else {\n                if (count ==\
    \ 1) {\n                    result += '_';\n                }\n              \
    \  result += text[i];\n                count = 0;\n            }\n        }\n\
    \        return result;", "        var sb = new StringBuilder();\n        var\
    \ count = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                count++;\n                if (count == 1) {\n               \
    \     sb.Append('_');\n                }\n            } else {\n             \
    \   if (count > 2) {\n                    sb.Append('-');\n                } else\
    \ {\n                    for (int i = 0; i < count; i++) {\n                 \
    \       sb.Append('_');\n                    }\n                }\n          \
    \      count = 0;\n                sb.Append(c);\n            }\n        }\n \
    \       if (count > 2) {\n            sb.Append('-');\n        } else {\n    \
    \        for (int i = 0; i < count; i++) {\n                sb.Append('_');\n\
    \            }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace("  ", "-").Replace("
    ", "_");', "        // TODO: implement\n        return null;", '        return
    "";', "        // TODO: Implement this method\n        return text;", "      \
    \  // TODO: Implement\n        return text;", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           sb.Append('_', count);\n                }\n                count =\
    \ 0;\n            }\n            sb.Append(c);\n            prev = c;\n      \
    \  }\n        if (count > 2) {\n            sb.Append('-');\n        } else {\n\
    \            sb.Append('_', count);\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 0) {\n                   \
    \ if (spaces > 2) {\n                        result.Append('-');\n           \
    \         } else {\n                        result.Append('_');\n            \
    \        }\n                    spaces = 0;\n                }\n             \
    \   result.Append(c);\n            }\n        }\n        if (spaces > 0) {\n \
    \           if (spaces > 2) {\n                result.Append('-');\n         \
    \   } else {\n                result.Append('_');\n            }\n        }\n\
    \        return result.ToString();", "        // TODO: Implement this method\n\
    \        return text;", "        var result = new StringBuilder();\n        var\
    \ spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaceCount++;\n                if (spaceCount == 1) {\n \
    \                   result.Append('_');\n                }\n            } else\
    \ {\n                if (spaceCount > 2) {\n                    result.Append('-');\n\
    \                }\n                spaceCount = 0;\n                result.Append(c);\n\
    \            }\n        }\n        return result.ToString();", "        var sb\
    \ = new StringBuilder();\n        var last = ' ';\n        var spaceCount = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaceCount++;\n                if (spaceCount == 1) {\n                 \
    \   sb.Append('_');\n                }\n            } else {\n               \
    \ if (spaceCount > 2) {\n                    sb.Append('-');\n               \
    \ }\n                sb.Append(c);\n                spaceCount = 0;\n        \
    \    }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        return \"\";", '        return text.Replace(" ", "_").Replace("__",
    "-");', '        return text.Replace(" ", "_").Replace("__", "-");', '        return
    text.Replace("  ", "-").Replace(" ", "_");', '        return text.Replace(" ",
    "_").Replace("__", "-");', "        // TODO: implement this method\n        return\
    \ \"\";", '        return text.Replace(" ", "_").Replace("__", "-");', "     \
    \   var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           count++;\n                if (count > 2) {\n                    sb.Append('-');\n\
    \                    count = 0;\n                }\n            } else {\n   \
    \             sb.Append(c);\n                count = 0;\n            }\n     \
    \   }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n                if (spaces == 1) {\n \
    \                   sb.Append('_');\n                }\n            } else {\n\
    \                if (spaces > 2) {\n                    sb.Append('-');\n    \
    \            } else if (spaces == 2) {\n                    sb.Append('_');\n\
    \                }\n                sb.Append(c);\n                spaces = 0;\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else if (spaces == 2) {\n            sb.Append('_');\n        }\n \
    \       return sb.ToString();", "        var sb = new StringBuilder();\n     \
    \   var spaceCount = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaceCount++;\n                if (spaceCount ==\
    \ 1) {\n                    sb.Append('_');\n                }\n            }\
    \ else {\n                if (spaceCount > 2) {\n                    sb.Append('-');\n\
    \                }\n                sb.Append(c);\n                spaceCount\
    \ = 0;\n            }\n        }\n        return sb.ToString();", '        return
    text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace(" ",
    "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', '        return text.Replace(" ", "_").Replace("__", "-");', '        return
    text.Replace(" ", "_").Replace("__", "-");', "        StringBuilder sb = new StringBuilder();\n\
    \        bool space = false;\n        for (int i = 0; i < text.Length; i++) {\n\
    \            if (text[i] == ' ') {\n                if (space) {\n           \
    \         sb.Append('-');\n                } else {\n                    sb.Append('_');\n\
    \                    space = true;\n                }\n            } else {\n\
    \                sb.Append(text[i]);\n                space = false;\n       \
    \     }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', "        var sb = new StringBuilder();\n       \
    \ var spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaces++;\n                if (spaces > 2) {\n          \
    \          sb.Append('-');\n                    spaces = 0;\n                }\n\
    \            } else {\n                sb.Append(c);\n                spaces =\
    \ 0;\n            }\n        }\n        return sb.ToString();", "        // TODO:\
    \ implement this method\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "_").Replace("___", "-");', "        // TODO: implement\
    \ this method\n        return text;", "        // TODO: implement this method\n\
    \        return text;", "        var sb = new StringBuilder();\n        var lastChar\
    \ = ' ';\n        var spacesCount = 0;\n        foreach (var c in text) {\n  \
    \          if (c == ' ') {\n                spacesCount++;\n            } else\
    \ {\n                if (spacesCount > 0) {\n                    if (spacesCount\
    \ > 2) {\n                        sb.Append('-');\n                    } else\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \            spacesCount = 0;\n                }\n                sb.Append(c);\n\
    \            }\n        }\n        if (spacesCount > 0) {\n            if (spacesCount\
    \ > 2) {\n                sb.Append('-');\n            } else {\n            \
    \    sb.Append('_');\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement this method\n        return \"\";", "        var sb\
    \ = new StringBuilder();\n        var prev = ' ';\n        var spaceCount = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaceCount++;\n                if (spaceCount > 2) {\n                  \
    \  sb.Append('-');\n                    spaceCount = 0;\n                }\n \
    \           } else {\n                if (prev == ' ') {\n                   \
    \ sb.Append('_');\n                }\n                sb.Append(c);\n        \
    \        spaceCount = 0;\n            }\n            prev = c;\n        }\n  \
    \      if (prev == ' ') {\n            sb.Append('_');\n        }\n        return\
    \ sb.ToString();", "        var sb = new StringBuilder();\n        var spaces\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaces++;\n                if (spaces == 1) {\n                  \
    \  sb.Append('_');\n                }\n            } else {\n                if\
    \ (spaces > 2) {\n                    sb.Append('-');\n                } else\
    \ if (spaces == 2) {\n                    sb.Append('_');\n                }\n\
    \                sb.Append(c);\n                spaces = 0;\n            }\n \
    \       }\n        if (spaces > 2) {\n            sb.Append('-');\n        } else\
    \ if (spaces == 2) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  '        return text.Replace("  ", "-").Replace(" ", "_");', "        var sb = new\
    \ StringBuilder();\n        var prev = ' ';\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count > 2) {\n                    if (prev != '-') {\n   \
    \                     sb.Append('-');\n                        prev = '-';\n \
    \                   }\n                } else {\n                    if (prev\
    \ != '_') {\n                        sb.Append('_');\n                       \
    \ prev = '_';\n                    }\n                }\n            } else {\n\
    \                sb.Append(c);\n                prev = c;\n                count\
    \ = 0;\n            }\n        }\n        return sb.ToString();", '        return
    text.Replace("  ", "-").Replace(" ", "_");', "        var sb = new StringBuilder();\n\
    \        var spaceCount = 0;\n        foreach (var c in text) {\n            if\
    \ (c == ' ') {\n                spaceCount++;\n                if (spaceCount\
    \ == 1) {\n                    sb.Append('_');\n                }\n          \
    \  } else {\n                if (spaceCount > 2) {\n                    sb.Append('-');\n\
    \                }\n                sb.Append(c);\n                spaceCount\
    \ = 0;\n            }\n        }\n        return sb.ToString();", "        var\
    \ sb = new StringBuilder();\n        var lastChar = ' ';\n        var spaceCount\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaceCount++;\n                if (spaceCount == 1) {\n          \
    \          sb.Append('_');\n                }\n                if (spaceCount\
    \ == 3) {\n                    sb.Append('-');\n                    spaceCount\
    \ = 0;\n                }\n            } else {\n                spaceCount =\
    \ 0;\n                sb.Append(c);\n            }\n        }\n        return\
    \ sb.ToString();", "        // TODO: Implement this function\n        return \"\
    \";", "        // TODO: implement\n        return null;", "        var result\
    \ = new StringBuilder();\n        var spaces = 0;\n        foreach (var ch in\
    \ text) {\n            if (ch == ' ') {\n                spaces++;\n         \
    \   } else {\n                if (spaces > 2) {\n                    result.Append('-');\n\
    \                } else if (spaces > 0) {\n                    result.Append('_');\n\
    \                }\n                result.Append(ch);\n                spaces\
    \ = 0;\n            }\n        }\n        if (spaces > 2) {\n            result.Append('-');\n\
    \        } else if (spaces > 0) {\n            result.Append('_');\n        }\n\
    \        return result.ToString();", "        var result = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var ch in text) {\n            if (ch\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    result.Append('_');\n              \
    \  } else if (spaces > 1) {\n                    result.Append('-');\n       \
    \         }\n                result.Append(ch);\n                spaces = 0;\n\
    \            }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n\
    \        } else if (spaces > 1) {\n            result.Append('-');\n        }\n\
    \        return result.ToString();", '        return text.Replace(" ", "_").Replace("__",
    "-");', "        // TODO: implement\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "-");', "        var result = new StringBuilder();\n   \
    \     var lastChar = '\\0';\n        var consecutiveSpaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                consecutiveSpaces++;\n\
    \                if (consecutiveSpaces == 1) {\n                    result.Append('_');\n\
    \                } else if (consecutiveSpaces == 2) {\n                    result.Append('-');\n\
    \                }\n            } else {\n                consecutiveSpaces =\
    \ 0;\n                result.Append(c);\n            }\n        }\n        return\
    \ result.ToString();", '        return text.Replace(" ", "_").Replace("__", "-");',
  '        return text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace("
    ", "_").Replace("__", "-");', "        // TODO: implement this method\n      \
    \  return \"\";", "        var sb = new StringBuilder();\n        var spaces =\
    \ 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n       \
    \         spaces++;\n                if (spaces == 2) {\n                    sb.Append('-');\n\
    \                }\n            } else {\n                spaces = 0;\n      \
    \          if (c == ' ') {\n                    sb.Append('_');\n            \
    \    } else {\n                    sb.Append(c);\n                }\n        \
    \    }\n        }\n        return sb.ToString();", '        return text.Replace("  ",
    "-").Replace(" ", "_");', "        var sb = new StringBuilder();\n        var\
    \ prev = ' ';\n        var count = 0;\n        foreach (var c in text) {\n   \
    \         if (c == ' ') {\n                if (prev == ' ') {\n              \
    \      count++;\n                } else {\n                    count = 1;\n  \
    \              }\n            } else {\n                if (count > 2) {\n   \
    \                 sb.Append('-');\n                } else {\n                \
    \    for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.Append(c);\n            }\n            prev = c;\n        }\n  \
    \      if (count > 2) {\n            sb.Append('-');\n        } else {\n     \
    \       for (int i = 0; i < count; i++) {\n                sb.Append('_');\n \
    \           }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', "        var result = new StringBuilder();\n   \
    \     var spaces = 0;\n        foreach (var c in text) {\n            if (c ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces > 2) {\n                    result.Append('-');\n                } else\
    \ if (spaces > 0) {\n                    result.Append('_');\n               \
    \ }\n                result.Append(c);\n                spaces = 0;\n        \
    \    }\n        }\n        if (spaces > 2) {\n            result.Append('-');\n\
    \        } else if (spaces > 0) {\n            result.Append('_');\n        }\n\
    \        return result.ToString();", "        var sb = new StringBuilder();\n\
    \        var last = ' ';\n        var spaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                spaces++;\n            } else\
    \ {\n                if (spaces > 2) {\n                    sb.Append('-');\n\
    \                } else if (spaces > 0) {\n                    sb.Append('_');\n\
    \                }\n                sb.Append(c);\n                spaces = 0;\n\
    \            }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else if (spaces > 0) {\n            sb.Append('_');\n        }\n  \
    \      return sb.ToString();", "        string result = \"\";\n        int count\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                count++;\n                if (count == 1) {\n   \
    \                 result += '_';\n                }\n                else if (count\
    \ == 2) {\n                    result += '-';\n                }\n           \
    \ }\n            else {\n                count = 0;\n                result +=\
    \ text[i];\n            }\n        }\n        return result;", '        return
    text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace(" ",
    "_").Replace("__", "-");', "        var sb = new StringBuilder();\n        var\
    \ lastChar = ' ';\n        var spaceCount = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                spaceCount++;\n            \
    \    if (spaceCount > 2) {\n                    continue;\n                }\n\
    \            } else {\n                spaceCount = 0;\n            }\n      \
    \      if (c == ' ' && lastChar == ' ') {\n                sb.Append('-');\n \
    \           } else {\n                sb.Append(c == ' ' ? '_' : c);\n       \
    \     }\n            lastChar = c;\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           if (prev == ' ') {\n                    count++;\n               \
    \ } else {\n                    count = 1;\n                }\n            } else\
    \ {\n                if (count > 2) {\n                    sb.Append('-');\n \
    \               } else {\n                    for (int i = 0; i < count; i++)\
    \ {\n                        sb.Append('_');\n                    }\n        \
    \        }\n                count = 0;\n                sb.Append(c);\n      \
    \      }\n            prev = c;\n        }\n        if (count > 2) {\n       \
    \     sb.Append('-');\n        } else {\n            for (int i = 0; i < count;\
    \ i++) {\n                sb.Append('_');\n            }\n        }\n        return\
    \ sb.ToString();", "        // your code here\n        return \"\";", "      \
    \  var sb = new StringBuilder();\n        var spaces = 0;\n        foreach (var\
    \ c in text) {\n            if (c == ' ') {\n                spaces++;\n     \
    \           if (spaces == 1) {\n                    sb.Append('_');\n        \
    \        }\n            } else {\n                if (spaces > 2) {\n        \
    \            sb.Append('-');\n                } else if (spaces == 2) {\n    \
    \                sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                spaces = 0;\n            }\n        }\n        if (spaces > 2)\
    \ {\n            sb.Append('-');\n        } else if (spaces == 2) {\n        \
    \    sb.Append('_');\n        }\n        return sb.ToString();", "        var\
    \ sb = new StringBuilder();\n        var prev = ' ';\n        var count = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    count++;\n                if (count == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.Append('-');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  '        return text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace("  ",
    "-").Replace(" ", "_");', '        return text.Replace(" ", "_").Replace("__",
    "-");', '        return text.Replace(" ", "_").Replace("__", "-");', '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', "        var\
    \ result = new StringBuilder();\n        var spaces = 0;\n        foreach (var\
    \ ch in text) {\n            if (ch == ' ') {\n                spaces++;\n   \
    \         } else {\n                if (spaces > 2) {\n                    result.Append('-');\n\
    \                } else if (spaces > 0) {\n                    result.Append('_');\n\
    \                }\n                result.Append(ch);\n                spaces\
    \ = 0;\n            }\n        }\n        if (spaces > 2) {\n            result.Append('-');\n\
    \        } else if (spaces > 0) {\n            result.Append('_');\n        }\n\
    \        return result.ToString();", "        // TODO: Implement this method\n\
    \        return \"\";", '        return text.Replace(" ", "_").Replace("__", "-");',
  "        var sb = new StringBuilder();\n        var lastChar = ' ';\n        var\
    \ spaceCount = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaceCount++;\n                if (spaceCount == 1) {\n \
    \                   sb.Append('_');\n                }\n                if (spaceCount\
    \ > 2) {\n                    sb.Append('-');\n                }\n           \
    \ } else {\n                spaceCount = 0;\n                sb.Append(c);\n \
    \           }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this method\n        return null;", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    if (prev != '-') {\n                    \
    \    sb.Append('-');\n                        prev = '-';\n                  \
    \  }\n                } else {\n                    if (prev != '_') {\n     \
    \                   sb.Append('_');\n                        prev = '_';\n   \
    \                 }\n                }\n            } else {\n               \
    \ sb.Append(c);\n                prev = c;\n                count = 0;\n     \
    \       }\n        }\n        return sb.ToString();", "        // TODO: Implement\
    \ this function\n        return text;", "        var result = new StringBuilder();\n\
    \        var spaces = 0;\n        foreach (var c in text) {\n            if (c\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces > 2) {\n                    result.Append('-');\n               \
    \ } else if (spaces > 0) {\n                    result.Append('_');\n        \
    \        }\n                result.Append(c);\n                spaces = 0;\n \
    \           }\n        }\n        if (spaces > 2) {\n            result.Append('-');\n\
    \        } else if (spaces > 0) {\n            result.Append('_');\n        }\n\
    \        return result.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                if (prev == ' ') {\n       \
    \             count++;\n                } else {\n                    count =\
    \ 1;\n                }\n            } else {\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                } else {\n         \
    \           for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.Append(c);\n            }\n            prev = c;\n        }\n  \
    \      if (count > 2) {\n            sb.Append('-');\n        } else {\n     \
    \       for (int i = 0; i < count; i++) {\n                sb.Append('_');\n \
    \           }\n        }\n        return sb.ToString();", "        var sb = new\
    \ StringBuilder();\n        var spaces = 0;\n        foreach (var c in text) {\n\
    \            if (c == ' ') {\n                spaces++;\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                    spaces = 0;\n\
    \                }\n            } else {\n                if (spaces > 0) {\n\
    \                    sb.Append('_');\n                    spaces = 0;\n      \
    \          }\n                sb.Append(c);\n            }\n        }\n      \
    \  if (spaces > 0) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  '        return text.Replace(" ", "_").Replace("__", "-");', '        return text;',
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \                if (spaces == 1) {\n                    sb.Append('_');\n   \
    \             }\n            } else {\n                if (spaces > 2) {\n   \
    \                 sb.Append('-');\n                } else if (spaces == 2) {\n\
    \                    sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                spaces = 0;\n            }\n        }\n        if (spaces > 2)\
    \ {\n            sb.Append('-');\n        } else if (spaces == 2) {\n        \
    \    sb.Append('_');\n        }\n        return sb.ToString();", '        return
    text.Replace("  ", "-").Replace(" ", "_");', '        return text.Replace(" ",
    "_").Replace("__", "-");', '        return null;', '        return "";', '        return
    text.Replace(" ", "_").Replace("__", "-");', "        // TODO: implement\n   \
    \     return \"\";", '        return text.Replace(" ", "_").Replace("_ _", "-");',
  "        var sb = new StringBuilder();\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count == 1) {\n                    sb.Append('_');\n     \
    \           }\n            } else {\n                if (count > 2) {\n      \
    \              sb.Append('-');\n                } else {\n                   \
    \ for (int i = 0; i < count; i++) {\n                        sb.Append('_');\n\
    \                    }\n                }\n                count = 0;\n      \
    \          sb.Append(c);\n            }\n        }\n        if (count > 2) {\n\
    \            sb.Append('-');\n        } else {\n            for (int i = 0; i\
    \ < count; i++) {\n                sb.Append('_');\n            }\n        }\n\
    \        return sb.ToString();", '        return "";', "        // TODO: Implement\
    \ this method\n        return \"\";", "        var sb = new StringBuilder();\n\
    \        var prevSpace = false;\n        var consecutiveSpaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                if (prevSpace)\
    \ {\n                    consecutiveSpaces++;\n                } else {\n    \
    \                consecutiveSpaces = 1;\n                    prevSpace = true;\n\
    \                }\n            } else {\n                if (prevSpace) {\n \
    \                   if (consecutiveSpaces > 2) {\n                        sb.Append('-');\n\
    \                    } else {\n                        sb.Append('_');\n     \
    \               }\n                    prevSpace = false;\n                }\n\
    \                sb.Append(c);\n            }\n        }\n        if (prevSpace)\
    \ {\n            if (consecutiveSpaces > 2) {\n                sb.Append('-');\n\
    \            } else {\n                sb.Append('_');\n            }\n      \
    \  }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        var prev = '\\0';\n        var count = 0;\n        foreach (var c in\
    \ text) {\n            if (c == ' ') {\n                count++;\n           \
    \     if (count == 1) {\n                    sb.Append('_');\n               \
    \ }\n            } else {\n                if (count > 2) {\n                \
    \    sb.Append('-');\n                } else if (count == 2) {\n             \
    \       sb.Append('_');\n                }\n                sb.Append(c);\n  \
    \              count = 0;\n            }\n            prev = c;\n        }\n \
    \       if (count > 2) {\n            sb.Append('-');\n        } else if (count\
    \ == 2) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count == 2) {\n                    result.Append('-');\n \
    \               }\n            } else {\n                if (count == 1) {\n \
    \                   result.Append('_');\n                }\n                count\
    \ = 0;\n                result.Append(c);\n            }\n        }\n        if\
    \ (count == 1) {\n            result.Append('_');\n        }\n        return result.ToString();",
  '        return text;', "        var result = new StringBuilder();\n        var\
    \ spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                spaces++;\n            } else {\n                if (spaces >\
    \ 2) {\n                    result.Append('-');\n                } else if (spaces\
    \ > 0) {\n                    result.Append('_');\n                }\n       \
    \         result.Append(c);\n                spaces = 0;\n            }\n    \
    \    }\n        if (spaces > 2) {\n            result.Append('-');\n        }\
    \ else if (spaces > 0) {\n            result.Append('_');\n        }\n       \
    \ return result.ToString();", "        var result = new StringBuilder();\n   \
    \     var spaces = 0;\n        foreach (var c in text) {\n            if (c ==\
    \ ' ') {\n                spaces++;\n            } else {\n                if\
    \ (spaces == 1) {\n                    result.Append('_');\n                }\
    \ else if (spaces > 1) {\n                    result.Append('-');\n          \
    \      }\n                result.Append(c);\n                spaces = 0;\n   \
    \         }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n\
    \        } else if (spaces > 1) {\n            result.Append('-');\n        }\n\
    \        return result.ToString();", "        var result = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count > 2) {\n                    result.Append('-');\n                   \
    \ count = 0;\n                }\n            } else {\n                if (prev\
    \ == ' ') {\n                    result.Append('_');\n                }\n    \
    \            result.Append(c);\n                count = 0;\n            }\n  \
    \          prev = c;\n        }\n        if (prev == ' ') {\n            result.Append('_');\n\
    \        }\n        return result.ToString();", "        // TODO: Implement\n\
    \        return text;", "        var result = new StringBuilder();\n        var\
    \ spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                spaces++;\n            } else {\n                if (spaces >\
    \ 2) {\n                    result.Append('-');\n                } else if (spaces\
    \ > 0) {\n                    result.Append('_');\n                }\n       \
    \         result.Append(c);\n                spaces = 0;\n            }\n    \
    \    }\n        if (spaces > 2) {\n            result.Append('-');\n        }\
    \ else if (spaces > 0) {\n            result.Append('_');\n        }\n       \
    \ return result.ToString();", "        var sb = new StringBuilder();\n       \
    \ var spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ')\
    \ {\n                spaces++;\n                if (spaces == 1) {\n         \
    \           sb.Append('_');\n                }\n            } else {\n       \
    \         if (spaces > 2) {\n                    sb.Append('-');\n           \
    \     } else if (spaces == 2) {\n                    sb.Append('_');\n       \
    \         }\n                sb.Append(c);\n                spaces = 0;\n    \
    \        }\n        }\n        if (spaces > 2) {\n            sb.Append('-');\n\
    \        } else if (spaces == 2) {\n            sb.Append('_');\n        }\n \
    \       return sb.ToString();", "        var sb = new StringBuilder();\n     \
    \   var spaceCount = 0;\n        foreach (var ch in text) {\n            if (ch\
    \ == ' ') {\n                spaceCount++;\n                if (spaceCount > 2)\
    \ {\n                    continue;\n                }\n            } else {\n\
    \                spaceCount = 0;\n            }\n            sb.Append(ch);\n\
    \        }\n        return sb.ToString().Replace(\" \", \"_\").Replace(\"  \"\
    , \"-\");", "        // TODO: Implement me\n        return \"\";", "        if\
    \ (text == null) {\n            throw new ArgumentNullException();\n        }\n\
    \        var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           count++;\n                if (count == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.Append('-');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  "        // TODO: implement this method\n        return \"\";", "        var result\
    \ = new StringBuilder();\n        var spaceCount = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ spaceCount++;\n                if (spaceCount == 1) {\n                    result.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    result.Append('-');\n                }\n            \
    \    result.Append(text[i]);\n                spaceCount = 0;\n            }\n\
    \        }\n        return result.ToString();", '        return text.Replace("  ",
    "-").Replace(" ", "_");', '        return text.Replace(" ", "_").Replace("__",
    "-");', "        // TODO: implement this function\n        return \"\";", "  \
    \      string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += '_';\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   result += '-';\n                }\n                count =\
    \ 0;\n                result += text[i];\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this method\n        return \"\";", '        return
    text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace("  ",
    "-").Replace(" ", "_");', "        var sb = new StringBuilder();\n        var\
    \ last = ' ';\n        var count = 0;\n        foreach (var c in text) {\n   \
    \         if (c == ' ') {\n                if (last == ' ') {\n              \
    \      count++;\n                } else {\n                    count = 1;\n  \
    \              }\n            } else {\n                if (count > 2) {\n   \
    \                 sb.Append('-');\n                } else {\n                \
    \    sb.Append('_', count);\n                }\n                count = 0;\n \
    \           }\n            sb.Append(c);\n            last = c;\n        }\n \
    \       if (count > 2) {\n            sb.Append('-');\n        } else {\n    \
    \        sb.Append('_', count);\n        }\n        return sb.ToString();", '        return
    text.Replace(" ", "_").Replace("__", "_").Replace("___", "-");', '        return
    text.Replace(" ", "_").Replace("__", "-");', "        var sb = new StringBuilder();\n\
    \        var prev = ' ';\n        var count = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                count++;\n                if\
    \ (count == 1) {\n                    sb.Append('_');\n                }\n   \
    \         } else {\n                if (count > 2) {\n                    sb.Append('-');\n\
    \                }\n                sb.Append(c);\n                count = 0;\n\
    \            }\n        }\n        return sb.ToString();", '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', '        return text.Replace(" ", "_").Replace("__", "-");', "       \
    \ // TODO: implement this method\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "-");', "        string result = \"\";\n        int spaces\
    \ = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i]\
    \ == ' ') {\n                spaces++;\n            } else {\n               \
    \ if (spaces == 1) {\n                    result += \"_\";\n                }\
    \ else if (spaces > 1) {\n                    result += \"-\";\n             \
    \   }\n                result += text[i];\n                spaces = 0;\n     \
    \       }\n        }\n        if (spaces == 1) {\n            result += \"_\"\
    ;\n        } else if (spaces > 1) {\n            result += \"-\";\n        }\n\
    \        return result;", "        // TODO: implement\n        return \"\";",
  "        var sb = new StringBuilder();\n        var prev = ' ';\n        var count\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           count++;\n                if (count == 1) {\n                    sb.Append('_');\n\
    \                }\n            } else {\n                if (count > 2) {\n \
    \                   sb.Append('-');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var lastChar = '\\0';\n        var\
    \ spaces = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n\
    \                spaces++;\n            } else {\n                if (spaces >\
    \ 2) {\n                    sb.Append('-');\n                } else if (spaces\
    \ > 0) {\n                    sb.Append('_');\n                }\n           \
    \     sb.Append(c);\n                spaces = 0;\n            }\n        }\n \
    \       if (spaces > 2) {\n            sb.Append('-');\n        } else if (spaces\
    \ > 0) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        string result = \"\";\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 2) {\n                    result += '-';\n\
    \                }\n            } else {\n                if (count == 1) {\n\
    \                    result += '_';\n                }\n                count\
    \ = 0;\n                result += text[i];\n            }\n        }\n       \
    \ if (count == 1) {\n            result += '_';\n        }\n        return result;",
  '        return text.Replace(" ", "_").Replace("  ", "-");', "        var sb = new\
    \ StringBuilder();\n        var spaces = 0;\n        foreach (var c in text) {\n\
    \            if (c == ' ') {\n                spaces++;\n                if (spaces\
    \ > 2) {\n                    sb.Append('-');\n                    spaces = 0;\n\
    \                }\n            } else {\n                if (spaces > 0) {\n\
    \                    sb.Append('_');\n                    spaces = 0;\n      \
    \          }\n                sb.Append(c);\n            }\n        }\n      \
    \  if (spaces > 0) {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  '        return "";', "        // TODO: implement this method\n        return text;",
  '        return text.Replace("  ", "-").Replace(" ", "_");', "        var sb = new\
    \ StringBuilder();\n        var prev = ' ';\n        var count = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                count++;\n \
    \               if (count == 1) {\n                    sb.Append('_');\n     \
    \           }\n            } else {\n                if (count > 2) {\n      \
    \              sb.Append('-');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n        }\n        return sb.ToString();",
  '        return text.Replace(" ", "_").Replace("__", "-");', "        var result\
    \ = new StringBuilder();\n        var spaces = 0;\n        foreach (var c in text)\
    \ {\n            if (c == ' ') {\n                spaces++;\n            } else\
    \ {\n                if (spaces == 1) {\n                    result.Append('_');\n\
    \                } else if (spaces > 1) {\n                    result.Append('-');\n\
    \                }\n                result.Append(c);\n                spaces\
    \ = 0;\n            }\n        }\n        if (spaces == 1) {\n            result.Append('_');\n\
    \        } else if (spaces > 1) {\n            result.Append('-');\n        }\n\
    \        return result.ToString();", "        // TODO: Implement this method\n\
    \        return \"\";", "        var sb = new StringBuilder();\n        var prev\
    \ = ' ';\n        var count = 0;\n        foreach (var c in text) {\n        \
    \    if (c == ' ') {\n                count++;\n                if (count > 2)\
    \ {\n                    sb.Append('-');\n                    count = 0;\n   \
    \             }\n            } else {\n                if (prev == ' ') {\n  \
    \                  sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                count = 0;\n            }\n            prev = c;\n        }\n\
    \        if (prev == ' ') {\n            sb.Append('_');\n        }\n        return\
    \ sb.ToString();", "        var result = new StringBuilder();\n        var spaceCount\
    \ = 0;\n        foreach (var c in text) {\n            if (c == ' ') {\n     \
    \           spaceCount++;\n                if (spaceCount == 1) {\n          \
    \          result.Append('_');\n                }\n            } else {\n    \
    \            if (spaceCount > 2) {\n                    result.Append('-');\n\
    \                }\n                spaceCount = 0;\n                result.Append(c);\n\
    \            }\n        }\n        return result.ToString();", "        var sb\
    \ = new StringBuilder();\n        var spaceCount = 0;\n        foreach (var c\
    \ in text) {\n            if (c == ' ') {\n                spaceCount++;\n   \
    \             if (spaceCount == 1) {\n                    sb.Append('_');\n  \
    \              }\n            } else {\n                if (spaceCount > 2) {\n\
    \                    sb.Append('-');\n                }\n                sb.Append(c);\n\
    \                spaceCount = 0;\n            }\n        }\n        return sb.ToString();",
  "        StringBuilder sb = new StringBuilder();\n        int spaces = 0;\n    \
    \    foreach (char c in text) {\n            if (c == ' ') {\n               \
    \ spaces++;\n                if (spaces == 2) {\n                    sb.Append('-');\n\
    \                }\n            } else {\n                if (spaces > 0) {\n\
    \                    sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                spaces = 0;\n            }\n        }\n        return sb.ToString();",
  "        var result = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \            } else {\n                if (spaces > 0) {\n                   \
    \ if (spaces > 2) {\n                        result.Append('-');\n           \
    \         } else {\n                        result.Append('_');\n            \
    \        }\n                    spaces = 0;\n                }\n             \
    \   result.Append(c);\n            }\n        }\n        if (spaces > 0) {\n \
    \           if (spaces > 2) {\n                result.Append('-');\n         \
    \   } else {\n                result.Append('_');\n            }\n        }\n\
    \        return result.ToString();", '        return text.Replace(" ", "_").Replace("__",
    "-");', "        string result = \"\";\n        bool space = false;\n        int\
    \ count = 0;\n        for (int i = 0; i < text.Length; i++) {\n            if\
    \ (text[i] == ' ') {\n                count++;\n                if (count == 1)\
    \ {\n                    result += ' ';\n                }\n                if\
    \ (count == 2) {\n                    result += '_';\n                }\n    \
    \            if (count > 2) {\n                    result += '-';\n          \
    \      }\n            } else {\n                count = 0;\n                result\
    \ += text[i];\n            }\n        }\n        return result;", '        return
    text.Replace(" ", "_").Replace("__", "-");', "        var sb = new StringBuilder();\n\
    \        var lastChar = ' ';\n        var spacesCount = 0;\n        foreach (var\
    \ c in text) {\n            if (c == ' ') {\n                spacesCount++;\n\
    \            } else {\n                if (spacesCount > 0) {\n              \
    \      if (spacesCount > 2) {\n                        sb.Append('-');\n     \
    \               } else {\n                        for (var i = 0; i < spacesCount;\
    \ i++) {\n                            sb.Append('_');\n                      \
    \  }\n                    }\n                    spacesCount = 0;\n          \
    \      }\n                sb.Append(c);\n            }\n        }\n        if\
    \ (spacesCount > 0) {\n            if (spacesCount > 2) {\n                sb.Append('-');\n\
    \            } else {\n                for (var i = 0; i < spacesCount; i++) {\n\
    \                    sb.Append('_');\n                }\n            }\n     \
    \   }\n        return sb.ToString();", "        // Your code here\n        return\
    \ text;", "        string result = \"\";\n        int count = 0;\n        for\
    \ (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ') {\n   \
    \             count++;\n                if (count > 2) {\n                   \
    \ result += '-';\n                    count = 0;\n                }\n        \
    \    } else {\n                if (count > 0) {\n                    result +=\
    \ '_';\n                    count = 0;\n                }\n                result\
    \ += text[i];\n            }\n        }\n        return result;", '        return
    text.Replace("  ", "-").Replace(" ", "_");', "        string result = \"\";\n\
    \        bool space = false;\n        int count = 0;\n        for (int i = 0;\
    \ i < text.Length; i++) {\n            if (text[i] == ' ') {\n               \
    \ count++;\n                if (count == 1) {\n                    result += '_';\n\
    \                }\n                if (count > 2) {\n                    result\
    \ += '-';\n                }\n            } else {\n                count = 0;\n\
    \                result += text[i];\n            }\n        }\n        return\
    \ result;", '        return text.Replace(" ", "_").Replace("__", "-");', '        return
    text.Replace(" ", "_").Replace("__", "-");', '        return text.Replace(" ",
    "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', "        // TODO: implement\n        return text;", '        return text.Replace("
    ", "_").Replace("__", "-");', '        return text.Replace(" ", "_").Replace("__",
    "-");', "        var result = new StringBuilder();\n        var spaces = 0;\n\
    \        foreach (var c in text) {\n            if (c == ' ') {\n            \
    \    spaces++;\n            } else {\n                if (spaces > 0) {\n    \
    \                if (spaces > 2) {\n                        result.Append('-');\n\
    \                    } else {\n                        result.Append('_');\n \
    \                   }\n                    spaces = 0;\n                }\n  \
    \              result.Append(c);\n            }\n        }\n        if (spaces\
    \ > 0) {\n            if (spaces > 2) {\n                result.Append('-');\n\
    \            } else {\n                result.Append('_');\n            }\n  \
    \      }\n        return result.ToString();", "        // TODO: implement this\
    \ method\n        return \"\";", "        var result = new StringBuilder();\n\
    \        var spaceCount = 0;\n        foreach (var ch in text) {\n           \
    \ if (ch == ' ') {\n                spaceCount++;\n                if (spaceCount\
    \ == 1) {\n                    result.Append('_');\n                }\n      \
    \      } else {\n                if (spaceCount > 2) {\n                    result.Append('-');\n\
    \                }\n                result.Append(ch);\n                spaceCount\
    \ = 0;\n            }\n        }\n        return result.ToString();", "      \
    \  // TODO: Implement this method\n        return \"\";", "        var result\
    \ = new StringBuilder();\n        var spaceCount = 0;\n        foreach (var c\
    \ in text) {\n            if (c == ' ') {\n                spaceCount++;\n   \
    \             if (spaceCount == 1) {\n                    result.Append('_');\n\
    \                }\n            } else {\n                if (spaceCount > 2)\
    \ {\n                    result.Append('-');\n                }\n            \
    \    result.Append(c);\n                spaceCount = 0;\n            }\n     \
    \   }\n        return result.ToString();", "        var sb = new StringBuilder();\n\
    \        bool prevSpace = false;\n        foreach (var c in text) {\n        \
    \    if (c == ' ') {\n                if (prevSpace) {\n                    sb.Append('-');\n\
    \                } else {\n                    sb.Append('_');\n             \
    \   }\n                prevSpace = true;\n            } else {\n             \
    \   sb.Append(c);\n                prevSpace = false;\n            }\n       \
    \ }\n        return sb.ToString();", '        return text.Replace(" ", "_").Replace("__",
    "-");', '        return text.Replace(" ", "_").Replace("__", "-");', "       \
    \ // TODO: implement this method\n        return \"\";", '        return text.Replace("  ",
    "-").Replace(" ", "_");', '        return text.Replace("  ", "-").Replace(" ",
    "_");', "        // TODO: Implement this method\n        return null;", '        return
    text.Replace(" ", "_").Replace("__", "-");', "        // TODO: implement\n   \
    \     return text;", '        return text.Replace("  ", "-").Replace(" ", "_");',
  "        // TODO: Implement me\n        return \"\";", '        return text;', " \
    \       // TODO: implement this method\n        return \"\";", '        return
    text.Replace("  ", "-").Replace(" ", "_");', '        return text.Replace(" ",
    "_").Replace("__", "-");', "        string result = \"\";\n        bool space\
    \ = false;\n        int count = 0;\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (text[i] == ' ') {\n                count++;\n           \
    \     if (count > 2) {\n                    if (!space) {\n                  \
    \      result += '-';\n                        space = true;\n               \
    \     }\n                } else {\n                    result += '_';\n      \
    \              space = true;\n                }\n            } else {\n      \
    \          result += text[i];\n                space = false;\n              \
    \  count = 0;\n            }\n        }\n        return result;", "        //\
    \ TODO: Implement this method\n        return \"\";", '        return text.Replace("
    ", "_").Replace("__", "-");', "        var sb = new StringBuilder();\n       \
    \ var prevChar = ' ';\n        var spaceCount = 0;\n        foreach (var c in\
    \ text) {\n            if (c == ' ') {\n                spaceCount++;\n      \
    \          if (spaceCount > 2) {\n                    sb.Append('-');\n      \
    \              spaceCount = 0;\n                }\n            } else {\n    \
    \            if (prevChar == ' ') {\n                    sb.Append('_');\n   \
    \             }\n                sb.Append(c);\n                spaceCount = 0;\n\
    \            }\n            prevChar = c;\n        }\n        if (prevChar ==\
    \ ' ') {\n            sb.Append('_');\n        }\n        return sb.ToString();",
  "        var sb = new StringBuilder();\n        var spaces = 0;\n        foreach\
    \ (var c in text) {\n            if (c == ' ') {\n                spaces++;\n\
    \                if (spaces == 1) {\n                    sb.Append('_');\n   \
    \             }\n            } else {\n                if (spaces > 2) {\n   \
    \                 sb.Append('-');\n                } else if (spaces > 0) {\n\
    \                    sb.Append('_');\n                }\n                sb.Append(c);\n\
    \                spaces = 0;\n            }\n        }\n        if (spaces > 2)\
    \ {\n            sb.Append('-');\n        } else if (spaces > 0) {\n         \
    \   sb.Append('_');\n        }\n        return sb.ToString();", '        return
    text.Replace(" ", "_").Replace("__", "-");', "        // TODO: implement\n   \
    \     return \"\";"]
stop_tokens:
- "\n    }\n"

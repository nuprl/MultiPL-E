name: HumanEval_71_triangle_area
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given the lengths of the three sides of a triangle. Return the\
  \ area of\n    // the triangle rounded to 2 decimal points if the three sides form\
  \ a valid triangle. \n    // Otherwise return -1\n    // Three sides make a valid\
  \ triangle when the sum of any two sides is greater \n    // than the third side.\n\
  \    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    // triangle_area(1,\
  \ 2, 10) == -1\n    public static float TriangleArea(long a, long b, long c) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
  \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
  \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
  \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
  \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
  \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) ==\
  \ (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
  \    }\n\n}\n"
completions: ["        if (a + b > c && a + c > b && b + c > a) {\n            float\
    \ s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            double s = (a + b + c) / 2.0;\n       \
    \     return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n \
    \       return -1;", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         var s = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            double s = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) /\
    \ 2;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            float s = (a + b + c) / 2f;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            var p = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(p * (p - a) * (p - b) * (p - c));\n     \
    \   }\n        return -1;", "        // Your code here\n        return -1;", " \
    \       if (a + b > c && a + c > b && b + c > a) {\n            double s = (a\
    \ + b + c) / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) *\
    \ (s - c));\n        }\n        return -1;", "        if (a + b > c && a + c >\
    \ b && b + c > a) {\n            float s = (a + b + c) / 2f;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        // Your code here\n        return -1;", "        if (a + b >\
    \ c && a + c > b && b + c > a) {\n            float p = (a + b + c) / 2f;\n  \
    \          float area = (float)Math.Sqrt(p * (p - a) * (p - b) * (p - c));\n \
    \           return (float)Math.Round(area, 2);\n        }\n        return -1;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b\
    \ + c) / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        }\n        return -1;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            float s = (a + b + c) / 2;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        // TODO: Implement this function\n        return 0;", "     \
    \   if (a + b > c && a + c > b && b + c > a) {\n            float s = (a + b +\
    \ c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b <= c || a + c <= b || b +\
    \ c <= a) {\n            return -1;\n        }\n        float s = (a + b + c)\
    \ / 2.0f;\n        return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));",
  "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
    \ b + c) / 2f;\n            return (float)Math.Sqrt(p * (p - a) * (p - b) * (p\
    \ - c));\n        }\n        return -1;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            float s = (a + b + c) / 2f;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        if (a + b > c && a + c > b && b + c > a) {\n            float\
    \ s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            double s = (a + b + c) / 2.0;\n       \
    \     return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n \
    \       return -1;", "        if (a + b > c && a + c > b && b + c > a) {\n   \
    \         double s = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) /\
    \ 2f;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            float s = (a + b + c) / 2f;\n            float area = (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float)Math.Round(area,\
    \ 2);\n        }\n        return -1;", "        // Your code here\n        return\
    \ 0;", "        if (a + b > c && a + c > b && b + c > a) {\n            float\
    \ s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            float s = (a + b + c) / 2f;\n         \
    \   return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n   \
    \     return -1;", "        if (a + b > c && a + c > b && b + c > a) {\n     \
    \       double s = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s *\
    \ (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        // Your code goes here\n        return -1;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b\
    \ + c) / 2f;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s -\
    \ c));\n        }\n        return -1;", "        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            float s = (a + b + c) / 2f;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        // TODO: Implement me\n        return -1;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
    \ b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        }\n        return -1;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            double s = (a + b + c) / 2.0;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        if (a + b > c && a + c > b && b + c > a) {\n            float\
    \ s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            var s = (a + b + c) / 2.0;\n          \
    \  return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n    \
    \    return -1;", "        // TODO: Implement this function\n        return 0;",
  "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
    \        }\n        float s = (a + b + c) / 2.0f;\n        return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));", "        if (a + b > c && a + c > b && b +\
    \ c > a) {\n            float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            double s = (a + b + c)\
    \ / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            double s = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) /\
    \ 2;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        // TODO: Implement this method\n   \
    \     return -1;", "        if (a + b <= c || a + c <= b || b + c <= a) {\n  \
    \          return -1;\n        }\n        float s = (a + b + c) / 2f;\n      \
    \  return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));", "        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            var p = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(p * (p - a) * (p - b) * (p - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            float s = (a + b + c) / 2f;\n            float area = (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float)Math.Round(area,\
    \ 2);\n        } else {\n            return -1;\n        }", "        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2;\n\
    \            float area = (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \            return (float)Math.Round(area, 2);\n        }\n        return -1;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            double s = (a +\
    \ b + c) / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        }\n        return -1;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            var p = (a + b + c) / 2.0;\n            return\
    \ (float)Math.Sqrt(p * (p - a) * (p - b) * (p - c));\n        }\n        return\
    \ -1;", "        if (a + b > c && a + c > b && b + c > a) {\n            var s\
    \ = (a + b + c) / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            float s = (a + b + c) / 2;\n          \
    \  return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n    \
    \    return -1;", "        // TODO: Implement me\n        return -1;", "     \
    \   if (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b + c)\
    \ / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            var s = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            float s = (a + b + c) / 2;\n            float area = (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n            return (float)Math.Round(area,\
    \ 2);\n        }\n        return -1;", "        if (a + b > c && a + c > b &&\
    \ b + c > a) {\n            double s = (a + b + c) / 2.0;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;", "        if (a + b > c && a + c > b && b + c > a) {\n            float\
    \ s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s -\
    \ b) * (s - c));\n        }\n        return -1;", "        if (a + b > c && a\
    \ + c > b && b + c > a) {\n            var s = (a + b + c) / 2.0;\n          \
    \  return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n    \
    \    return -1;", "        if (a + b > c && a + c > b && b + c > a) {\n      \
    \      float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if (a +\
    \ b > c && a + c > b && b + c > a) {\n            double s = (a + b + c) / 2.0;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            float s = (a + b + c) / 2f;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            double s = (a + b + c)\
    \ / 2.0;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) /\
    \ 2f;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n\
    \        }\n        return -1;", "        if (a + b > c && a + c > b && b + c\
    \ > a) {\n            return (float)Math.Round(0.5 * Math.Abs(a * (b - c) + b\
    \ * (c - a) + c * (a - b)), 2);\n        }\n        return -1;", "        if (a\
    \ + b > c && a + c > b && b + c > a) {\n            float s = (a + b + c) / 2f;\n\
    \            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n     \
    \   }\n        return -1;", "        if (a + b > c && a + c > b && b + c > a)\
    \ {\n            float s = (a + b + c) / 2;\n            return (float)Math.Sqrt(s\
    \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;", "        if\
    \ (a + b > c && a + c > b && b + c > a)\n            return (float)Math.Round(0.5\
    \ * Math.Abs(a * (b - c) + b * (c - a) + c * (a - b)), 2);\n        return -1;",
  "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
    \ b + c) / 2;\n            return (float)Math.Sqrt(s * (s - a) * (s - b) * (s\
    \ - c));\n        }\n        return -1;", "        if (a + b > c && a + c > b\
    \ && b + c > a) {\n            float s = (a + b + c) / 2;\n            return\
    \ (float)Math.Sqrt(s * (s - a) * (s - b) * (s - c));\n        }\n        return\
    \ -1;"]
stop_tokens:
- "\n    }\n"

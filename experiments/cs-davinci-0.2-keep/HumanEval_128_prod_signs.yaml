name: HumanEval_128_prod_signs
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given an array arr of integers and you need to return\n\
  \    // sum of magnitudes of integers multiplied by product of all signs\n    //\
  \ of each number in the array, represented by 1, -1 or 0.\n    // Note: return None\
  \ for empty arr.\n    // Example:\n    // >>> prod_signs([1, 2, 2, -4]) == -9\n\
  \    // >>> prod_signs([0, 1]) == 0\n    // >>> prod_signs([]) == None\n    public\
  \ static Nullable<long> ProdSigns(List<long> arr) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ProdSigns((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)2L, (long)-4L}))).Equals(-9L));\n\
  \    Debug.Assert(ProdSigns((new List<long>(new long[]{(long)0L, (long)1L}))).Equals(0L));\n\
  \    Debug.Assert(ProdSigns((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
  \ (long)2L, (long)3L, (long)-1L, (long)1L}))).Equals(-10L));\n    Debug.Assert(ProdSigns((new\
  \ List<long>())).Equals(null));\n    Debug.Assert(ProdSigns((new List<long>(new\
  \ long[]{(long)2L, (long)4L, (long)1L, (long)2L, (long)-1L, (long)-1L, (long)9L}))).Equals(20L));\n\
  \    Debug.Assert(ProdSigns((new List<long>(new long[]{(long)-1L, (long)1L, (long)-1L,\
  \ (long)1L}))).Equals(4L));\n    Debug.Assert(ProdSigns((new List<long>(new long[]{(long)-1L,\
  \ (long)1L, (long)1L, (long)1L}))).Equals(-4L));\n    Debug.Assert(ProdSigns((new\
  \ List<long>(new long[]{(long)-1L, (long)1L, (long)1L, (long)0L}))).Equals(0L));\n\
  \    }\n\n}\n"
completions: ["        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ i in arr) {\n            sum += Math.Abs(i);\n            if (i > 0) {\n   \
    \             prod *= 1;\n            } else if (i < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        if (prod == 0) {\n            return null;\n        }\n    \
    \    return sum * prod;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            if (x > 0) {\n                sum += x;\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            if (x > 0) {\n\
    \                sum += x;\n                prod *= 1;\n            } else if\
    \ (x < 0) {\n                sum += -x;\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n        }\n       \
    \ return sum * prod;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ num in arr) {\n            if (num > 0) {\n                sum += num;\n   \
    \             prod *= 1;\n            } else if (num < 0) {\n                sum\
    \ += -num;\n                prod *= -1;\n            } else {\n              \
    \  prod *= 0;\n            }\n        }\n        return sum * prod;", "      \
    \  if (arr.Count == 0) {\n            return null;\n        }\n        long prod\
    \ = 1;\n        long sum = 0;\n        foreach (long x in arr) {\n           \
    \ prod *= Math.Sign(x);\n            sum += Math.Abs(x);\n        }\n        return\
    \ prod * sum;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            sum += Math.Abs(x);\n            if (x < 0) {\n   \
    \             prod *= -1;\n            } else if (x > 0) {\n                prod\
    \ *= 1;\n            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long prod = 1;\n     \
    \   long sum = 0;\n        foreach (long num in arr) {\n            prod *= Math.Sign(num);\n\
    \            sum += Math.Abs(num);\n        }\n        return prod * sum;", " \
    \       // Your code here\n        return null;", "        if (arr.Count == 0)\
    \ {\n            return null;\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        foreach (long n in arr) {\n            if (n > 0) {\n   \
    \             sum += n;\n                prod *= 1;\n            } else if (n\
    \ < 0) {\n                sum += -n;\n                prod *= -1;\n          \
    \  } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long prod = 1;\n        long sum = 0;\n        foreach (long\
    \ num in arr) {\n            if (num > 0) {\n                prod *= 1;\n    \
    \        } else if (num < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n            sum += Math.Abs(num);\n\
    \        }\n        return prod * sum;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long num in arr) {\n            if (num > 0) {\n           \
    \     sum += num;\n                prod *= 1;\n            } else if (num < 0)\
    \ {\n                sum += -num;\n                prod *= -1;\n            }\
    \ else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (var el\
    \ in arr) {\n            if (el > 0) {\n                sum += el;\n         \
    \       prod *= 1;\n            } else if (el < 0) {\n                sum += -el;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long prod = 1;\n     \
    \   long sum = 0;\n        foreach (long val in arr) {\n            if (val >\
    \ 0) {\n                prod *= 1;\n            } else if (val < 0) {\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n            sum += Math.Abs(val);\n        }\n        return prod\
    \ * sum;", "        if (arr.Count == 0) {\n            return null;\n        }\n\
    \        long sum = 0;\n        long prod = 1;\n        foreach (long x in arr)\
    \ {\n            if (x > 0) {\n                sum += x;\n                prod\
    \ *= 1;\n            } else if (x < 0) {\n                sum += -x;\n       \
    \         prod *= -1;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        return sum * prod;", "        // Your code here\n\
    \        return null;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            if (x > 0) {\n                sum += x;\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long prod = 1;\n     \
    \   long sum = 0;\n        foreach (long x in arr) {\n            if (x > 0) {\n\
    \                prod *= 1;\n            } else if (x < 0) {\n               \
    \ prod *= -1;\n            } else {\n                prod *= 0;\n            }\n\
    \            sum += Math.Abs(x);\n        }\n        return prod * sum;", "  \
    \      if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long num in arr) {\n    \
    \        sum += Math.Abs(num);\n            if (num < 0) {\n                prod\
    \ *= -1;\n            } else if (num > 0) {\n                prod *= 1;\n    \
    \        }\n        }\n        return sum * prod;", "        if (arr.Count ==\
    \ 0) {\n            return null;\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        foreach (long num in arr) {\n            if (num == 0) {\n\
    \                continue;\n            }\n            sum += Math.Abs(num);\n\
    \            prod *= Math.Sign(num);\n        }\n        return sum * prod;",
  "        if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ prod = 1;\n        long sum = 0;\n        foreach (long num in arr) {\n    \
    \        prod *= Math.Sign(num);\n            sum += Math.Abs(num);\n        }\n\
    \        return sum * prod;", "        if (arr.Count == 0) {\n            return\
    \ null;\n        }\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (long i in arr) {\n            if (i > 0) {\n                sum += i;\n   \
    \             prod *= 1;\n            } else if (i < 0) {\n                sum\
    \ += -i;\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            if (x > 0) {\n\
    \                sum += x;\n                prod *= 1;\n            } else if\
    \ (x < 0) {\n                sum += -x;\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n        }\n       \
    \ return sum * prod;", "        if (arr.Count == 0)\n            return null;\n\
    \        long prod = 1;\n        long sum = 0;\n        foreach (long i in arr)\
    \ {\n            if (i < 0) {\n                prod *= -1;\n            } else\
    \ if (i == 0) {\n                prod = 0;\n                break;\n         \
    \   }\n            sum += Math.Abs(i);\n        }\n        return prod * sum;",
  "        if (arr.Count == 0)\n            return null;\n        long prod = 1;\n\
    \        long sum = 0;\n        foreach (long i in arr) {\n            if (i >\
    \ 0)\n                prod *= 1;\n            else if (i < 0)\n              \
    \  prod *= -1;\n            else\n                prod *= 0;\n            sum\
    \ += Math.Abs(i);\n        }\n        return prod * sum;", "        // Your code\
    \ goes here\n        return null;", "        if (arr.Count == 0) {\n         \
    \   return null;\n        }\n        long sum = 0;\n        long prod = 1;\n \
    \       foreach (long i in arr) {\n            sum += Math.Abs(i);\n         \
    \   if (i > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        // Your code\
    \ here\n        return null;", "        if (arr.Count == 0) {\n            return\
    \ null;\n        }\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (long i in arr) {\n            if (i > 0) {\n                sum += i;\n   \
    \             prod *= 1;\n            } else if (i < 0) {\n                sum\
    \ += -i;\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        // Your\
    \ code goes here\n        return null;", "        // Your code here\n        return\
    \ null;", "        if (arr.Count == 0) {\n            return null;\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        foreach (long n in arr)\
    \ {\n            if (n == 0) {\n                continue;\n            }\n   \
    \         prod *= n / Math.Abs(n);\n            sum += Math.Abs(n);\n        }\n\
    \        return prod * sum;", "        if (arr.Count == 0) {\n            return\
    \ null;\n        }\n        long prod = 1;\n        long sum = 0;\n        foreach\
    \ (long i in arr) {\n            if (i < 0) {\n                prod *= -1;\n \
    \           }\n            sum += Math.Abs(i);\n        }\n        return prod\
    \ * sum;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"\
    Hello world!\");\n        if (arr.Count == 0)\n            return null;\n    \
    \    long sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n\
    \            sum += Math.Abs(x);\n            if (x > 0)\n                prod\
    \ *= 1;\n            else if (x < 0)\n                prod *= -1;\n          \
    \  else\n                prod *= 0;\n        }\n        return sum * prod;", " \
    \       // Your code here\n        return null;", "        if (arr.Count == 0)\
    \ {\n            return null;\n        }\n        long prod = 1;\n        long\
    \ sum = 0;\n        foreach (long x in arr) {\n            if (x > 0) {\n    \
    \            prod *= 1;\n            } else if (x < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.Abs(x);\n        }\n        return prod * sum;", "    \
    \    if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long num in arr) {\n    \
    \        sum += Math.Abs(num);\n            if (num > 0) {\n                prod\
    \ *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n    \
    \        } else {\n                prod *= 0;\n            }\n        }\n    \
    \    return sum * prod;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (var\
    \ x in arr) {\n            if (x > 0) {\n                sum += x;\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long prod = 1;\n     \
    \   long sum = 0;\n        foreach (long i in arr) {\n            if (i > 0) {\n\
    \                prod *= 1;\n            } else if (i < 0) {\n               \
    \ prod *= -1;\n            } else {\n                prod *= 0;\n            }\n\
    \            sum += Math.Abs(i);\n        }\n        return sum * prod;", "  \
    \      // Your code here\n        return null;", "        if (arr.Count == 0)\
    \ {\n            return null;\n        }\n        long prod = 1;\n        long\
    \ sum = 0;\n        foreach (long x in arr) {\n            if (x > 0) {\n    \
    \            prod *= 1;\n            } else if (x < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \          sum += Math.Abs(x);\n        }\n        return sum * prod;", "    \
    \    // Your code goes here\n        return null;", "        if (arr.Count ==\
    \ 0) {\n            return null;\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        // Your\
    \ code here\n        return null;", "        // Your code here\n        return\
    \ null;", "        if (arr.Count == 0)\n            return null;\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n      \
    \      sum += Math.Abs(x);\n            if (x != 0)\n                prod *= Math.Sign(x);\n\
    \        }\n        return sum * prod;", "        if (arr.Count == 0)\n      \
    \      return null;\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (long i in arr) {\n            if (i > 0)\n                sum += i;\n     \
    \       else if (i < 0) {\n                sum -= i;\n                prod *=\
    \ -1;\n            }\n        }\n        return sum * prod;", "        long sum\
    \ = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n          \
    \  sum += Math.Abs(x);\n            prod *= Math.Sign(x);\n        }\n       \
    \ if (arr.Count == 0) {\n            return null;\n        }\n        return sum\
    \ * prod;", "        if (arr.Count == 0)\n            return null;\n        long\
    \ prod = 1;\n        long sum = 0;\n        foreach (long x in arr) {\n      \
    \      if (x > 0) {\n                prod *= 1;\n                sum += x;\n \
    \           } else if (x < 0) {\n                prod *= -1;\n               \
    \ sum += -x;\n            } else {\n                prod *= 0;\n            }\n\
    \        }\n        return prod * sum;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long n in arr) {\n            if (n == 0) {\n              \
    \  continue;\n            }\n            sum += Math.Abs(n);\n            prod\
    \ *= Math.Sign(n);\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0)\n            return null;\n        long sum = 0;\n        long prod =\
    \ 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n   \
    \         if (x > 0)\n                prod *= 1;\n            else if (x < 0)\n\
    \                prod *= -1;\n            else\n                prod = 0;\n  \
    \      }\n        return sum * prod;", "        long sum = 0;\n        long prod\
    \ = 1;\n        foreach (long x in arr) {\n            if (x > 0) {\n        \
    \        sum += x;\n                prod *= 1;\n            } else if (x < 0)\
    \ {\n                sum += -x;\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        if (prod ==\
    \ 0) {\n            return null;\n        }\n        return sum * prod;", "  \
    \      // Your code goes here\n        return null;", "        if (arr.Count ==\
    \ 0) {\n            return null;\n        }\n        long sum = 0;\n        long\
    \ prod = 1;\n        foreach (long x in arr) {\n            if (x > 0) {\n   \
    \             sum += x;\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                sum += -x;\n                prod *= -1;\n          \
    \  } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;", "        // Your code goes here\n        return null;", "    \
    \    long prod = 1;\n        long sum = 0;\n        foreach (long num in arr)\
    \ {\n            if (num > 0) {\n                prod *= 1;\n                sum\
    \ += num;\n            } else if (num < 0) {\n                prod *= -1;\n  \
    \              sum += Math.Abs(num);\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        if (arr.Count == 0) {\n           \
    \ return null;\n        }\n        return prod * sum;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            if (x > 0) {\n\
    \                sum += x;\n                prod *= 1;\n            } else if\
    \ (x < 0) {\n                sum += -x;\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n        }\n       \
    \ return sum * prod;", "        // Your code here\n        return null;", "  \
    \      if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long i in arr) {\n      \
    \      if (i > 0) {\n                sum += i;\n                prod *= 1;\n \
    \           } else if (i < 0) {\n                sum += -i;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        if (arr.Count == 0) {\n      \
    \      return null;\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        foreach (long x in arr) {\n            if (x == 0) {\n              \
    \  continue;\n            }\n            if (x < 0) {\n                prod *=\
    \ -1;\n            }\n            sum += Math.Abs(x);\n        }\n        return\
    \ prod * sum;", "        if (arr.Count == 0)\n            return null;\n     \
    \   long prod = 1;\n        long sum = 0;\n        foreach (long x in arr) {\n\
    \            if (x > 0) {\n                prod *= 1;\n                sum +=\
    \ x;\n            } else if (x < 0) {\n                prod *= -1;\n         \
    \       sum += -x;\n            } else {\n                prod *= 0;\n       \
    \     }\n        }\n        return prod * sum;", "        // Your code here\n\
    \        return null;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            sum += Math.Abs(x);\n            if (x > 0) {\n   \
    \             prod *= 1;\n            } else if (x < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        // Your code goes here\n     \
    \   return null;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ i in arr) {\n            sum += Math.Abs(i);\n            if (i > 0) {\n   \
    \             prod *= 1;\n            } else if (i < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        // Write your code here\n    \
    \    // To print results to the standard output you can use Console.WriteLine()\n\
    \        // Example: Console.WriteLine(\"Hello world!\");\n        if (arr.Count\
    \ == 0)\n            return null;\n        long prod = 1;\n        long sum =\
    \ 0;\n        foreach (long i in arr) {\n            if (i > 0)\n            \
    \    prod *= 1;\n            else if (i < 0)\n                prod *= -1;\n  \
    \          else\n                prod *= 0;\n            sum += Math.Abs(i);\n\
    \        }\n        return sum * prod;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long x in arr) {\n            sum += Math.Abs(x);\n        \
    \    if (x > 0) {\n                prod *= 1;\n            } else if (x < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        // Write your\
    \ code here\n        // To print results to the standard output you can use Console.WriteLine()\n\
    \        // Example: Console.WriteLine(\"Hello world!\");\n        long sum =\
    \ 0;\n        long prod = 1;\n        foreach (var item in arr)\n        {\n \
    \           sum += Math.Abs(item);\n            if (item < 0)\n            {\n\
    \                prod *= -1;\n            }\n            else if (item > 0)\n\
    \            {\n                prod *= 1;\n            }\n        }\n       \
    \ if (arr.Count == 0)\n        {\n            return null;\n        }\n      \
    \  return sum * prod;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            if (x > 0) {\n                sum += x;\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0)\n            return null;\n        long prod = 1;\n        long sum =\
    \ 0;\n        foreach (long x in arr) {\n            if (x < 0)\n            \
    \    prod *= -1;\n            else if (x > 0)\n                sum += x;\n   \
    \     }\n        return prod * sum;", "        if (arr.Count == 0) {\n       \
    \     return null;\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        foreach (long i in arr) {\n            if (i > 0) {\n               \
    \ prod *= 1;\n            } else if (i < 0) {\n                prod *= -1;\n \
    \           } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.Abs(i);\n        }\n        return prod * sum;", "        long sum =\
    \ 0;\n        long prod = 1;\n        foreach (long i in arr) {\n            sum\
    \ += Math.Abs(i);\n            if (i > 0) {\n                prod *= 1;\n    \
    \        } else if (i < 0) {\n                prod *= -1;\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return sum\
    \ * prod;", "        // Write your code here\n        // To print results to the\
    \ standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"\
    Hello world!\");\n        if (arr.Count == 0)\n            return null;\n    \
    \    long sum = 0;\n        long prod = 1;\n        foreach (long i in arr) {\n\
    \            if (i > 0)\n                sum += i;\n            else if (i < 0)\
    \ {\n                sum -= i;\n                prod *= -1;\n            }\n \
    \       }\n        return sum * prod;", "        // Your code goes here\n    \
    \    return null;", "        // Your code goes here.\n        return null;", " \
    \       // Your code here\n        return null;", "        if (arr.Count == 0)\
    \ {\n            return null;\n        }\n        long prod = 1;\n        long\
    \ sum = 0;\n        foreach (long num in arr) {\n            prod *= Math.Sign(num);\n\
    \            sum += Math.Abs(num);\n        }\n        return prod * sum;", " \
    \       if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long num in arr) {\n    \
    \        if (num > 0) {\n                sum += num;\n                prod *=\
    \ 1;\n            } else if (num < 0) {\n                sum += -num;\n      \
    \          prod *= -1;\n            } else {\n                prod *= 0;\n   \
    \         }\n        }\n        return sum * prod;", "        // Your code goes\
    \ here\n        return null;", "        if (arr.Count == 0) {\n            return\
    \ null;\n        }\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (long n in arr) {\n            if (n > 0) {\n                sum += n;\n   \
    \             prod *= 1;\n            } else if (n < 0) {\n                sum\
    \ += -n;\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        // Your\
    \ code goes here\n        if (arr.Count == 0)\n            return null;\n    \
    \    long sum = 0;\n        long prod = 1;\n        foreach (long i in arr) {\n\
    \            if (i > 0)\n                sum += i;\n            else if (i < 0)\
    \ {\n                sum -= i;\n                prod *= -1;\n            }\n \
    \       }\n        return sum * prod;", "        if (arr.Count == 0)\n       \
    \     return null;\n        long prod = 1;\n        long sum = 0;\n        foreach\
    \ (var item in arr) {\n            if (item > 0) {\n                prod *= 1;\n\
    \                sum += item;\n            } else if (item < 0) {\n          \
    \      prod *= -1;\n                sum += Math.Abs(item);\n            } else\
    \ {\n                prod *= 0;\n            }\n        }\n        return sum\
    \ * prod;", "        if (arr.Count == 0) {\n            return null;\n       \
    \ }\n        long sum = 0;\n        long prod = 1;\n        foreach (long x in\
    \ arr) {\n            if (x > 0) {\n                sum += x;\n              \
    \  prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n \
    \               prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        // Your code\
    \ here\n        return null;", "        if (arr.Count == 0) {\n            return\
    \ null;\n        }\n        long prod = 1;\n        long sum = 0;\n        foreach\
    \ (long x in arr) {\n            prod *= Math.Sign(x);\n            sum += Math.Abs(x);\n\
    \        }\n        return prod * sum;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long x in arr) {\n            sum += Math.Abs(x);\n        \
    \    if (x > 0) {\n                prod *= 1;\n            } else if (x < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0)\n            return null;\n        long prod = 1;\n        long sum =\
    \ 0;\n        foreach (long i in arr) {\n            if (i < 0)\n            \
    \    prod *= -1;\n            else if (i > 0)\n                sum += i;\n   \
    \     }\n        return prod * sum;", "        if (arr.Count == 0)\n         \
    \   return null;\n        long prod = 1;\n        long sum = 0;\n        foreach\
    \ (long x in arr) {\n            if (x > 0)\n                prod *= 1;\n    \
    \        else if (x < 0)\n                prod *= -1;\n            else\n    \
    \            prod *= 0;\n            sum += Math.Abs(x);\n        }\n        return\
    \ prod * sum;", "        if (arr.Count == 0)\n            return null;\n     \
    \   long sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n\
    \            sum += Math.Abs(x);\n            if (x > 0)\n                prod\
    \ *= 1;\n            else if (x < 0)\n                prod *= -1;\n          \
    \  else\n                prod = 0;\n        }\n        return sum * prod;", " \
    \       if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n      \
    \      sum += Math.Abs(x);\n            prod *= Math.Sign(x);\n        }\n   \
    \     return sum * prod;", "        if (arr.Count == 0)\n            return null;\n\
    \        long sum = 0;\n        long prod = 1;\n        foreach (long x in arr)\
    \ {\n            if (x > 0)\n                prod *= 1;\n            else if (x\
    \ < 0)\n                prod *= -1;\n            else\n                prod *=\
    \ 0;\n            sum += Math.Abs(x);\n        }\n        return sum * prod;",
  "        // Your code goes here.\n        return null;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            prod *= Math.Sign(x);\n        }\n        return sum * prod;", " \
    \       if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n      \
    \      sum += Math.Abs(x);\n            if (x > 0) {\n                prod *=\
    \ 1;\n            } else if (x < 0) {\n                prod *= -1;\n         \
    \   } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ i in arr) {\n            sum += Math.Abs(i);\n            if (i > 0) {\n   \
    \             prod *= 1;\n            } else if (i < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        long sum = 0;\n        long prod\
    \ = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n \
    \           prod *= Math.Sign(x);\n        }\n        return prod == 0 ? (Nullable<long>)0\
    \ : prod * sum;", "        // Your code here\n        return null;", "       \
    \ // Your code here\n        return null;", "        if (arr.Count == 0)\n   \
    \         return null;\n        long prod = 1;\n        long sum = 0;\n      \
    \  foreach (long i in arr) {\n            if (i > 0)\n                prod *=\
    \ 1;\n            else if (i < 0)\n                prod *= -1;\n            else\n\
    \                prod *= 0;\n            sum += Math.Abs(i);\n        }\n    \
    \    return prod * sum;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            sum += Math.Abs(x);\n            if (x > 0) {\n   \
    \             prod *= 1;\n            } else if (x < 0) {\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        if (arr.Count == 0) {\n      \
    \      return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long i in arr) {\n            sum += Math.Abs(i);\n        \
    \    if (i > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0)\n            return null;\n        long prod = 1;\n        long sum =\
    \ 0;\n        foreach (long x in arr) {\n            if (x > 0) {\n          \
    \      prod *= 1;\n                sum += x;\n            } else if (x < 0) {\n\
    \                prod *= -1;\n                sum += -x;\n            } else {\n\
    \                prod *= 0;\n            }\n        }\n        return prod * sum;",
  "        // Your code here\n        return null;", "        // Your code here\n\
    \        return null;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ n in arr) {\n            if (n > 0) {\n                sum += n;\n         \
    \       prod *= 1;\n            } else if (n < 0) {\n                sum += -n;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            if (x == 0)\
    \ {\n                continue;\n            }\n            sum += Math.Abs(x);\n\
    \            prod *= Math.Sign(x);\n        }\n        return sum * prod;", " \
    \       long prod = 1;\n        long sum = 0;\n        foreach (long x in arr)\
    \ {\n            if (x > 0) {\n                prod *= 1;\n                sum\
    \ += x;\n            } else if (x < 0) {\n                prod *= -1;\n      \
    \          sum += -x;\n            } else {\n                prod *= 0;\n    \
    \        }\n        }\n        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        return prod * sum;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        foreach (long num in arr) {\n            if (num > 0) {\n           \
    \     prod *= 1;\n            } else if (num < 0) {\n                prod *= -1;\n\
    \            } else {\n                prod *= 0;\n            }\n           \
    \ sum += Math.Abs(num);\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0)\n            return null;\n        long prod = 1;\n        long sum =\
    \ 0;\n        foreach (long num in arr) {\n            if (num > 0)\n        \
    \        prod *= 1;\n            else if (num < 0)\n                prod *= -1;\n\
    \            else\n                prod *= 0;\n            sum += Math.Abs(num);\n\
    \        }\n        return prod * sum;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        foreach (long i in arr) {\n            if (i > 0) {\n               \
    \ prod *= 1;\n            } else if (i < 0) {\n                prod *= -1;\n \
    \           } else {\n                prod *= 0;\n            }\n            sum\
    \ += Math.Abs(i);\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long i in arr) {\n            if (i > 0) {\n\
    \                sum += i;\n                prod *= 1;\n            } else if\
    \ (i < 0) {\n                sum += -i;\n                prod *= -1;\n       \
    \     } else {\n                prod *= 0;\n            }\n        }\n       \
    \ return sum * prod;", "        if (arr.Count == 0) {\n            return null;\n\
    \        }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ num in arr) {\n            sum += Math.Abs(num);\n            if (num > 0) {\n\
    \                prod *= 1;\n            } else if (num < 0) {\n             \
    \   prod *= -1;\n            } else {\n                prod *= 0;\n          \
    \  }\n        }\n        return sum * prod;", "        if (arr.Count == 0) {\n\
    \            return null;\n        }\n        long prod = 1;\n        long sum\
    \ = 0;\n        foreach (long x in arr) {\n            if (x > 0) {\n        \
    \        prod *= 1;\n            } else if (x < 0) {\n                prod *=\
    \ -1;\n            } else {\n                prod *= 0;\n            }\n     \
    \       sum += Math.Abs(x);\n        }\n        return sum * prod;", "       \
    \ if (arr.Count == 0) {\n            return null;\n        }\n        long sum\
    \ = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n          \
    \  if (x > 0) {\n                sum += x;\n                prod *= 1;\n     \
    \       } else if (x < 0) {\n                sum += -x;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        if (arr.Count == 0) {\n      \
    \      return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long num in arr) {\n            if (num > 0) {\n           \
    \     sum += num;\n                prod *= 1;\n            } else if (num < 0)\
    \ {\n                sum += -num;\n                prod *= -1;\n            }\
    \ else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ i in arr) {\n            sum += Math.Abs(i);\n            prod *= Math.Sign(i);\n\
    \        }\n        return sum * prod;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long sum = 0;\n        long prod = 1;\n\
    \        foreach (long x in arr) {\n            sum += Math.Abs(x);\n        \
    \    if (x > 0) {\n                prod *= 1;\n            } else if (x < 0) {\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long prod = 1;\n     \
    \   long sum = 0;\n        foreach (long i in arr) {\n            if (i == 0)\
    \ {\n                continue;\n            }\n            prod *= Math.Sign(i);\n\
    \            sum += Math.Abs(i);\n        }\n        return sum * prod;", "  \
    \      if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n      \
    \      if (x > 0) {\n                sum += x;\n                prod *= 1;\n \
    \           } else if (x < 0) {\n                sum += -x;\n                prod\
    \ *= -1;\n            } else {\n                prod *= 0;\n            }\n  \
    \      }\n        return sum * prod;", "        if (arr.Count == 0)\n        \
    \    return null;\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (long x in arr) {\n            sum += Math.Abs(x);\n            if (x > 0)\n\
    \                prod *= 1;\n            else if (x < 0)\n                prod\
    \ *= -1;\n            else\n                prod = 0;\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            if (x > 0) {\n                sum += x;\n         \
    \       prod *= 1;\n            } else if (x < 0) {\n                sum += -x;\n\
    \                prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n        }\n        return sum * prod;", "        if (arr.Count\
    \ == 0) {\n            return null;\n        }\n        long sum = 0;\n      \
    \  long prod = 1;\n        foreach (long x in arr) {\n            sum += Math.Abs(x);\n\
    \            if (x > 0) {\n                prod *= 1;\n            } else if (x\
    \ < 0) {\n                prod *= -1;\n            } else {\n                prod\
    \ *= 0;\n            }\n        }\n        return sum * prod;", "        // Your\
    \ code here\n        return null;", "        if (arr.Count == 0)\n           \
    \ return null;\n        long sum = 0;\n        long prod = 1;\n        foreach\
    \ (var x in arr) {\n            sum += Math.Abs(x);\n            if (x > 0)\n\
    \                prod *= 1;\n            else if (x < 0)\n                prod\
    \ *= -1;\n            else\n                prod = 0;\n        }\n        return\
    \ sum * prod;", "        if (arr.Count == 0) {\n            return null;\n   \
    \     }\n        long sum = 0;\n        long prod = 1;\n        foreach (long\
    \ x in arr) {\n            sum += Math.Abs(x);\n            prod *= Math.Sign(x);\n\
    \        }\n        return sum * prod;", "        if (arr.Count == 0) {\n    \
    \        return null;\n        }\n        long prod = 1;\n        long sum = 0;\n\
    \        foreach (long x in arr) {\n            prod *= Math.Sign(x);\n      \
    \      sum += Math.Abs(x);\n        }\n        return prod * sum;", "        if\
    \ (arr.Count == 0) {\n            return null;\n        }\n        long prod =\
    \ 1;\n        long sum = 0;\n        foreach (long i in arr) {\n            if\
    \ (i > 0) {\n                prod *= 1;\n            } else if (i < 0) {\n   \
    \             prod *= -1;\n            } else {\n                prod *= 0;\n\
    \            }\n            sum += Math.Abs(i);\n        }\n        return prod\
    \ * sum;", "        if (arr.Count == 0) {\n            return null;\n        }\n\
    \        long prod = 1;\n        long sum = 0;\n        foreach (long i in arr)\
    \ {\n            if (i > 0) {\n                prod *= 1;\n            } else\
    \ if (i < 0) {\n                prod *= -1;\n            } else {\n          \
    \      prod *= 0;\n            }\n            sum += Math.Abs(i);\n        }\n\
    \        return sum * prod;", "        if (arr.Count == 0)\n            return\
    \ null;\n        long prod = 1;\n        long sum = 0;\n        foreach (var i\
    \ in arr) {\n            if (i > 0)\n                prod *= 1;\n            else\
    \ if (i < 0)\n                prod *= -1;\n            else\n                prod\
    \ *= 0;\n            sum += Math.Abs(i);\n        }\n        return sum * prod;",
  "        if (arr.Count == 0) {\n            return null;\n        }\n        long\
    \ sum = 0;\n        long prod = 1;\n        foreach (long x in arr) {\n      \
    \      sum += Math.Abs(x);\n            if (x > 0) {\n                prod *=\
    \ 1;\n            } else if (x < 0) {\n                prod *= -1;\n         \
    \   } else {\n                prod *= 0;\n            }\n        }\n        return\
    \ sum * prod;"]
stop_tokens:
- "\n    }\n"

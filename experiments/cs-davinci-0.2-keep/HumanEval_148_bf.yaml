name: HumanEval_148_bf
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // There are eight planets in our solar system: the closerst to\
  \ the Sun \n    // is Mercury, the next one is Venus, then Earth, Mars, Jupiter,\
  \ Saturn, \n    // Uranus, Neptune.\n    // Write a function that takes two planet\
  \ names as strings planet1 and planet2. \n    // The function should return a tuple\
  \ containing all planets whose orbits are \n    // located between the orbit of\
  \ planet1 and the orbit of planet2, sorted by \n    // the proximity to the sun.\
  \ \n    // The function should return an empty tuple if planet1 or planet2\n   \
  \ // are not correct planet names. \n    // Examples\n    // bf(\"Jupiter\", \"\
  Neptune\") ==> (\"Saturn\", \"Uranus\")\n    // bf(\"Earth\", \"Mercury\") ==> (\"\
  Venus\")\n    // bf(\"Mercury\", \"Uranus\") ==> (\"Venus\", \"Earth\", \"Mars\"\
  , \"Jupiter\", \"Saturn\")\n    public static List<string> Bf(string planet1, string\
  \ planet2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Bf((\"\
  Jupiter\"), (\"Neptune\")).Equals((new List<string>(new string[]{(string)\"Saturn\"\
  , (string)\"Uranus\"}))));\n    Debug.Assert(Bf((\"Earth\"), (\"Mercury\")).Equals((new\
  \ List<string>(new string[]{(string)\"Venus\"}))));\n    Debug.Assert(Bf((\"Mercury\"\
  ), (\"Uranus\")).Equals((new List<string>(new string[]{(string)\"Venus\", (string)\"\
  Earth\", (string)\"Mars\", (string)\"Jupiter\", (string)\"Saturn\"}))));\n    Debug.Assert(Bf((\"\
  Neptune\"), (\"Venus\")).Equals((new List<string>(new string[]{(string)\"Earth\"\
  , (string)\"Mars\", (string)\"Jupiter\", (string)\"Saturn\", (string)\"Uranus\"\
  }))));\n    Debug.Assert(Bf((\"Earth\"), (\"Earth\")).Equals((new List<string>())));\n\
  \    Debug.Assert(Bf((\"Mars\"), (\"Earth\")).Equals((new List<string>())));\n \
  \   Debug.Assert(Bf((\"Jupiter\"), (\"Makemake\")).Equals((new List<string>())));\n\
  \    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))
    {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i]))
    {\n                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).Aggregate(\"\", (s, c) => s + c);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] charArray = str.ToCharArray();\n
    \       for (int i = 0; i < charArray.Length; i++) {\n            if (char.IsLower(charArray[i]))
    {\n                charArray[i] = char.ToUpper(charArray[i]);\n            } else
    {\n                charArray[i] = char.ToLower(charArray[i]);\n            }\n
    \       }\n        return new string(charArray);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(x => char.IsUpper(x)
    ? char.ToLower(x) : char.ToUpper(x)).Aggregate(\"\", (x, y) => x + y);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i])) {\n
    \               result += char.ToLower(str[i]);\n            } else {\n                result
    += char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))
    {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i]))
    {\n                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).Aggregate(new StringBuilder(), (sb, c) =>
    sb.Append(c)).ToString();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(ch
    => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n
    \               result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            if (char.IsUpper(arr[i]))
    {\n                arr[i] = char.ToLower(arr[i]);\n            } else if (char.IsLower(arr[i]))
    {\n                arr[i] = char.ToUpper(arr[i]);\n            }\n        }\n
    \       return new string(arr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in str) {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (Char.IsUpper(c)) {\n                result
    += Char.ToLower(c);\n            } else {\n                result += Char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        // TODO: Implement me\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <b974e8acc84244a9b3680624840d3dd0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <b974e8acc84244a9b3680624840d3dd0>:0
    \n"
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] arr = str.ToCharArray();\n
    \       for (int i = 0; i < arr.Length; i++) {\n            if (char.IsUpper(arr[i]))
    {\n                arr[i] = char.ToLower(arr[i]);\n            } else if (char.IsLower(arr[i]))
    {\n                arr[i] = char.ToUpper(arr[i]);\n            }\n        }\n
    \       return new string(arr);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n
    \               result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        // TODO: Implement me\n        return
    null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x0000b] in <b974e8acc84244a9b3680624840d3dd0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x0000b] in <b974e8acc84244a9b3680624840d3dd0>:0
    \n"
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] result = new char[str.Length];\n
    \       for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))
    {\n                result[i] = char.ToLower(str[i]);\n            } else {\n                result[i]
    = char.ToUpper(str[i]);\n            }\n        }\n        return new string(result);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return String.Join(\"\", str.Select(c
    => Char.IsUpper(c) ? Char.ToLower(c) : Char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62d8a8b24dfc4a138835a944b82af6ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62d8a8b24dfc4a138835a944b82af6ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n
    \               result += Char.ToLower(str[i]);\n            } else {\n                result
    += Char.ToUpper(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        for
    (int i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i])) {\n
    \               result += char.ToUpper(str[i]);\n            } else {\n                result
    += char.ToLower(str[i]);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(x => char.IsUpper(x)
    ? char.ToLower(x) : char.ToUpper(x)).ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df133844994344178ba42e7bcd77cf18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df133844994344178ba42e7bcd77cf18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))
    {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i]))
    {\n                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in str) {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n
    \           } else {\n                sb.Append(char.ToLower(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return String.Concat(str.Select(c
    => Char.IsUpper(c) ? Char.ToLower(c) : Char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62d8a8b24dfc4a138835a944b82af6ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <62d8a8b24dfc4a138835a944b82af6ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659793646
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsLower(c)) {\n                result
    += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        string result = \"\";\n        foreach
    (char c in str) {\n            if (char.IsUpper(c)) {\n                result
    += char.ToLower(c);\n            } else {\n                result += char.ToUpper(c);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n
    \   Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n    Debug.Assert(FlipCase((\"These
    violent delights have violent ends\")).Equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT
    ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        var sb = new StringBuilder();\n
    \       foreach (var c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n
    \           } else {\n                sb.Append(char.ToUpper(c));\n            }\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // For a given string, flip lowercase characters to uppercase and
    uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public
    static string FlipCase(string str) {\n        char[] chars = str.ToCharArray();\n
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))
    {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i]))
    {\n                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FlipCase((\"\")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\")));\n
    \   Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"tHESE
    VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793645

name: HumanEval_117_select_words
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a string s and a natural number n, you have been tasked\
  \ to implement \n    // a function that returns a list of all words from string\
  \ s that contain exactly \n    // n consonants, in order these words appear in the\
  \ string s.\n    // If the string s is empty then the function should return an\
  \ empty list.\n    // Note: you may assume the input string contains only letters\
  \ and spaces.\n    // Examples:\n    // select_words(\"Mary had a little lamb\"\
  , 4) ==> [\"little\"]\n    // select_words(\"Mary had a little lamb\", 3) ==> [\"\
  Mary\", \"lamb\"]\n    // select_words(\"simple white space\", 2) ==> []\n    //\
  \ select_words(\"Hello world\", 4) ==> [\"world\"]\n    // select_words(\"Uncle\
  \ sam\", 3) ==> [\"Uncle\"]\n    public static List<string> SelectWords(string s,\
  \ long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SelectWords((\"\
  Mary had a little lamb\"), (4L)).Equals((new List<string>(new string[]{(string)\"\
  little\"}))));\n    Debug.Assert(SelectWords((\"Mary had a little lamb\"), (3L)).Equals((new\
  \ List<string>(new string[]{(string)\"Mary\", (string)\"lamb\"}))));\n    Debug.Assert(SelectWords((\"\
  simple white space\"), (2L)).Equals((new List<string>())));\n    Debug.Assert(SelectWords((\"\
  Hello world\"), (4L)).Equals((new List<string>(new string[]{(string)\"world\"}))));\n\
  \    Debug.Assert(SelectWords((\"Uncle sam\"), (3L)).Equals((new List<string>(new\
  \ string[]{(string)\"Uncle\"}))));\n    Debug.Assert(SelectWords((\"\"), (4L)).Equals((new\
  \ List<string>())));\n    Debug.Assert(SelectWords((\"a b c d e f\"), (1L)).Equals((new\
  \ List<string>(new string[]{(string)\"b\", (string)\"c\", (string)\"d\", (string)\"\
  f\"}))));\n    }\n\n}\n"
completions: ["        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !\"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        List<string> words = new List<string>();\n\
    \        string[] words_in_s = s.Split(' ');\n        foreach (string word in\
    \ words_in_s) {\n            if (CountConsonants(word) == n) {\n             \
    \   words.Add(word);\n            }\n        }\n        return words;", "    \
    \    // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO\n        return null;",
  "        // TODO: implement this function\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ letter in word) {\n                if (letter != 'a' && letter != 'e' && letter\
    \ != 'i' && letter != 'o' && letter != 'u') {\n                    consonants++;\n\
    \                }\n            }\n            if (consonants == n) {\n      \
    \          result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            var consonants = 0;\n            foreach (var c in word)\
    \ {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                    consonants++;\n                }\n            }\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        // TODO: Implement the\
    \ function\n        return null;", "        // TODO: Implement me\n        return\
    \ null;", "        // TODO: Implement this method\n        return null;", "  \
    \      // TODO: Implement this function\n        return null;", "        var result\
    \ = new List<string>();\n        var words = s.Split(' ');\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        List<string> result = new List<string>();\n \
    \       string[] words = s.Split(' ');\n        foreach (string word in words)\
    \ {\n            if (word.Length == 0) {\n                continue;\n        \
    \    }\n            int consonants = 0;\n            foreach (char c in word)\
    \ {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                    consonants++;\n                }\n            }\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        // Write your code here\n\
    \        return new List<string>();", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !\"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", '        return null;', "        var words =\
    \ s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            if (word.Count(c => !IsVowel(c)) == n) {\n   \
    \             result.Add(word);\n            }\n        }\n        return result;",
  "        // Write your code here\n        return null;", "        // Implement your\
    \ solution here\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement your solution here\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            var consonants = 0;\n     \
    \       foreach (var letter in word) {\n                if (letter != 'a' && letter\
    \ != 'e' && letter != 'i' && letter != 'o' && letter != 'u') {\n             \
    \       consonants++;\n                }\n            }\n            if (consonants\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement your solution here\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !\"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        // TODO: implement this function\n \
    \       return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ your solution here\n        return null;", "        // TODO: implement this\
    \ function\n        return null;", "        var result = new List<string>();\n\
    \        var words = s.Split(' ');\n        foreach (var word in words) {\n  \
    \          var consonants = 0;\n            foreach (var c in word) {\n      \
    \          if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n \
    \                   consonants++;\n                }\n            }\n        \
    \    if (consonants == n) {\n                result.Add(word);\n            }\n\
    \        }\n        return result;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: implement this function\n        return null;", "        // TODO:\
    \ Implement this method\n        return null;", "        // TODO: implement this\
    \ function\n        return null;", "        var words = s.Split(' ');\n      \
    \  var result = new List<string>();\n        foreach (var word in words) {\n \
    \           if (word.Count(c => \"aeiou\".Contains(c)) == n) {\n             \
    \   result.Add(word);\n            }\n        }\n        return result;", "  \
    \      var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (word.Count(c => \"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        // TODO: implement this function\n \
    \       return null;", "        // TODO: implement the function\n        return\
    \ null;", "        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => \"aeiou\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        // TODO: Implement this function\n \
    \       return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') ==\
    \ n) {\n                result.Add(word);\n            }\n        }\n        return\
    \ result;", "        // TODO: Implement this function\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (word.Count(c => c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: implement\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            if (word.Count(c => !IsVowel(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement your solution here\n        return\
    \ null;", "        List<string> result = new List<string>();\n        string[]\
    \ words = s.Split(' ');\n        foreach (string word in words) {\n          \
    \  if (word.Count(c => \"aeiou\".Contains(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // Implement your solution here\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        List<string> words\
    \ = new List<string>();\n        string[] words_array = s.Split(' ');\n      \
    \  foreach (string word in words_array) {\n            if (CountConsonants(word)\
    \ == n) {\n                words.Add(word);\n            }\n        }\n      \
    \  return words;", "        // TODO: Implement me!\n        return null;", " \
    \       // TODO: implement your solution here\n        return null;", "      \
    \  // TODO: Implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        // TODO: implement\
    \ the function\n        return null;", "        var words = s.Split(' ');\n  \
    \      var result = new List<string>();\n        foreach (var word in words) {\n\
    \            if (word.Count(c => \"bcdfghjklmnpqrstvwxyz\".Contains(c)) == n)\
    \ {\n                result.Add(word);\n            }\n        }\n        return\
    \ result;", "        // TODO: implement this function\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            if (word.Count(c => c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ your solution here\n        return null;", "        // TODO: Implement your\
    \ solution here\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var result = new List<string>();\n        var\
    \ words = s.Split(' ');\n        foreach (var word in words) {\n            var\
    \ consonants = 0;\n            foreach (var c in word) {\n                if (c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                \
    \    consonants++;\n                }\n            }\n            if (consonants\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement your solution here\n        return\
    \ null;", "        // TODO: implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        // TODO:\
    \ Implement your solution here\n        return null;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => \"bcdfghjklmnpqrstvwxyz\".Contains(c))\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        var words = s.Split(' ');\n        var result =\
    \ new List<string>();\n        foreach (var word in words) {\n            if (word.Count(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".Contains(c)) == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        List<string> words\
    \ = new List<string>();\n        string[] words_array = s.Split(' ');\n      \
    \  foreach (string word in words_array) {\n            if (CountConsonants(word)\
    \ == n) {\n                words.Add(word);\n            }\n        }\n      \
    \  return words;", "        // TODO: implement this function\n        return null;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ Implement this function\n        return null;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement your solution\
    \ here\n        return null;", "        // TODO: Implement this function\n   \
    \     return null;", "        var words = s.Split(' ');\n        var result =\
    \ new List<string>();\n        foreach (var word in words) {\n            var\
    \ consonants = 0;\n            foreach (var c in word) {\n                if (!\"\
    aeiou\".Contains(c)) {\n                    consonants++;\n                }\n\
    \            }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            if (word.Count(c => \"aeiou\".Contains(c)) == n) {\n        \
    \        result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            var consonants = 0;\n            foreach (var c in word)\
    \ {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u') {\n                    consonants++;\n                }\n            }\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        List<string> words = new\
    \ List<string>();\n        string[] wordsInString = s.Split(' ');\n        foreach\
    \ (string word in wordsInString) {\n            if (CountConsonants(word) == n)\
    \ {\n                words.Add(word);\n            }\n        }\n        return\
    \ words;", "        // TODO: Implement your solution here\n        return null;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            var consonants = 0;\n     \
    \       foreach (var c in word) {\n                if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                    consonants++;\n   \
    \             }\n            }\n            if (consonants == n) {\n         \
    \       result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: Implement this function\n        return null;", "        // Implement\
    \ your solution here\n        return null;", "        var words = s.Split(' ');\n\
    \        var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var consonants = 0;\n            foreach (var letter in word)\
    \ {\n                if (!\"aeiou\".Contains(letter)) {\n                    consonants++;\n\
    \                }\n            }\n            if (consonants == n) {\n      \
    \          result.Add(word);\n            }\n        }\n        return result;",
  "        var words = s.Split(' ');\n        var result = new List<string>();\n \
    \       foreach (var word in words) {\n            var consonants = word.Where(c\
    \ => \"bcdfghjklmnpqrstvwxyz\".Contains(c));\n            if (consonants.Count()\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // TODO: Implement this function\n        return null;", "        List<string>\
    \ words = new List<string>();\n        string[] words_array = s.Split(' ');\n\
    \        foreach (string word in words_array) {\n            if (CountConsonants(word)\
    \ == n) {\n                words.Add(word);\n            }\n        }\n      \
    \  return words;", "        // TODO: Implement your solution here\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       // Implement your solution here\n        return null;", "        var words\
    \ = s.Split(' ');\n        var result = new List<string>();\n        foreach (var\
    \ word in words) {\n            if (word.Count(c => c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u') == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function.\n\
    \        // Hint: You may find the following functions useful:\n        // string.Split(char[])\n\
    \        // string.Contains(char)\n        // string.ToLower()\n        // string.ToCharArray()\n\
    \        // Array.IndexOf(char[], char)\n        // Array.Sort(char[])\n     \
    \   // Array.BinarySearch(char[], char)\n        // Array.ConvertAll(string[],\
    \ Func<string, T>)\n        // List<T>.Add(T)\n        // List<T>.ToArray()\n\
    \        return null;", "        List<string> result = new List<string>();\n \
    \       string[] words = s.Split(' ');\n        foreach (string word in words)\
    \ {\n            if (word.Length == 0) {\n                continue;\n        \
    \    }\n            long count = 0;\n            foreach (char c in word) {\n\
    \                if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u')\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count == n) {\n                result.Add(word);\n            }\n   \
    \     }\n        return result;", "        // TODO: implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            var\
    \ consonants = 0;\n            foreach (var ch in word) {\n                if\
    \ (ch != 'a' && ch != 'e' && ch != 'i' && ch != 'o' && ch != 'u') {\n        \
    \            consonants++;\n                }\n            }\n            if (consonants\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: implement this function\n        return\
    \ null;", "        List<string> words = new List<string>();\n        string[]\
    \ wordsArray = s.Split(' ');\n        foreach (string word in wordsArray) {\n\
    \            if (word.Length == n) {\n                words.Add(word);\n     \
    \       }\n        }\n        return words;", "        // TODO: implement this\
    \ function\n        return null;", "        // TODO: implement this function\n\
    \        return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            if\
    \ (word.Count(c => !IsVowel(c)) == n) {\n                result.Add(word);\n \
    \           }\n        }\n        return result;", "        // TODO: implement\
    \ this function\n        return null;", "        // TODO: implement your solution\
    \ here\n        return null;", "        // TODO: Implement your solution here\n\
    \        return null;", "        List<string> words = new List<string>();\n  \
    \      string[] wordsInString = s.Split(' ');\n        foreach (string word in\
    \ wordsInString) {\n            int consonants = 0;\n            for (int i =\
    \ 0; i < word.Length; i++) {\n                if (word[i] != 'a' && word[i] !=\
    \ 'e' && word[i] != 'i' && word[i] != 'o' && word[i] != 'u') {\n             \
    \       consonants++;\n                }\n            }\n            if (consonants\
    \ == n) {\n                words.Add(word);\n            }\n        }\n      \
    \  return words;", "        // TODO: implement your solution here\n        return\
    \ null;", '        return new List<string>();', "        // TODO: implement your\
    \ solution here\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: implement this function\n        return\
    \ null;", "        // TODO: implement your solution here\n        return null;",
  "        // TODO: implement this function\n        return null;", "        // Write\
    \ your code here\n        return new List<string>();", "        // TODO: Implement\
    \ this function\n        return null;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        // TODO: Implement this function\n        return null;", " \
    \       var words = s.Split(' ');\n        var consonants = new HashSet<char>\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'z' };\n        var result = new List<string>();\n     \
    \   foreach (var word in words) {\n            var count = 0;\n            foreach\
    \ (var c in word) {\n                if (consonants.Contains(c)) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        var words = s.Split(' ');\n        var result =\
    \ new List<string>();\n        foreach (var word in words) {\n            if (word.Count(c\
    \ => !IsVowel(c)) == n) {\n                result.Add(word);\n            }\n\
    \        }\n        return result;", "        // TODO: Implement this function\n\
    \        return null;", "        // TODO: Implement this function\n        return\
    \ null;", "        var words = s.Split(' ');\n        var result = new List<string>();\n\
    \        foreach (var word in words) {\n            var consonants = word.Where(c\
    \ => !\"aeiou\".Contains(c)).Count();\n            if (consonants == n) {\n  \
    \              result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ this function\n        return null;", "        var words = s.Split(' ');\n \
    \       var result = new List<string>();\n        foreach (var word in words)\
    \ {\n            var consonants = word.Where(c => \"bcdfghjklmnpqrstvwxyz\".Contains(c)).Count();\n\
    \            if (consonants == n) {\n                result.Add(word);\n     \
    \       }\n        }\n        return result;", "        // TODO: Implement this\
    \ function\n        return null;", "        var words = s.Split(' ');\n      \
    \  var result = new List<string>();\n        foreach (var word in words) {\n \
    \           if (word.Count(c => \"aeiou\".Contains(c)) == n) {\n             \
    \   result.Add(word);\n            }\n        }\n        return result;", "  \
    \      var result = new List<string>();\n        var words = s.Split(' ');\n \
    \       foreach (var word in words) {\n            var consonants = 0;\n     \
    \       foreach (var c in word) {\n                if (c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u') {\n                    consonants++;\n   \
    \             }\n            }\n            if (consonants == n) {\n         \
    \       result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: Implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ the function\n        return null;", "        // TODO: Implement your solution\
    \ here\n        return null;", "        var words = s.Split(' ');\n        var\
    \ result = new List<string>();\n        foreach (var word in words) {\n      \
    \      var consonants = 0;\n            foreach (var letter in word) {\n     \
    \           if (!\"aeiou\".Contains(letter)) {\n                    consonants++;\n\
    \                }\n            }\n            if (consonants == n) {\n      \
    \          result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // Implement\
    \ your solution here\n        return null;", "        // TODO: Implement this\
    \ function\n        return null;", "        // TODO: Implement your solution here\n\
    \        return null;", "        // TODO: Implement your solution here\n     \
    \   return null;", "        // TODO: Implement this function\n        return null;",
  "        // TODO: Implement this function\n        return null;", "        List<string>\
    \ words = new List<string>();\n        string[] words_array = s.Split(' ');\n\
    \        foreach (string word in words_array) {\n            if (word.Count(c\
    \ => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') == n) {\n     \
    \           words.Add(word);\n            }\n        }\n        return words;",
  "        // TODO: implement the function here\n        return null;", "        //\
    \ TODO: implement this function\n        return null;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            var consonants = 0;\n            foreach (var letter in\
    \ word) {\n                if (letter != 'a' && letter != 'e' && letter != 'i'\
    \ && letter != 'o' && letter != 'u') {\n                    consonants++;\n  \
    \              }\n            }\n            if (consonants == n) {\n        \
    \        result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        List<string>\
    \ result = new List<string>();\n        string[] words = s.Split(' ');\n     \
    \   foreach (string word in words) {\n            if (word.Count(c => \"aeiouAEIOU\"\
    .Contains(c)) == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        var words = s.Split(' ');\n        var\
    \ result = new List<string>();\n        foreach (var word in words) {\n      \
    \      var consonants = 0;\n            foreach (var c in word) {\n          \
    \      if (c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n     \
    \               consonants++;\n                }\n            }\n            if\
    \ (consonants == n) {\n                result.Add(word);\n            }\n    \
    \    }\n        return result;", "        // TODO: implement this function\n \
    \       return null;", "        var words = s.Split(' ');\n        var result\
    \ = new List<string>();\n        foreach (var word in words) {\n            var\
    \ consonants = 0;\n            foreach (var c in word) {\n                if (c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                \
    \    consonants++;\n                }\n            }\n            if (consonants\
    \ == n) {\n                result.Add(word);\n            }\n        }\n     \
    \   return result;", "        // TODO: Implement this function\n        return\
    \ null;", "        var result = new List<string>();\n        var words = s.Split(new\
    \ char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (var\
    \ word in words) {\n            var consonants = 0;\n            foreach (var\
    \ c in word) {\n                if (c != 'a' && c != 'e' && c != 'i' && c != 'o'\
    \ && c != 'u') {\n                    consonants++;\n                }\n     \
    \       }\n            if (consonants == n) {\n                result.Add(word);\n\
    \            }\n        }\n        return result;", "        var words = s.Split('\
    \ ');\n        var result = new List<string>();\n        foreach (var word in\
    \ words) {\n            if (word.Count(c => \"aeiou\".Contains(c)) == n) {\n \
    \               result.Add(word);\n            }\n        }\n        return result;",
  '        return null;', "        // TODO: Implement your solution here\n       \
    \ return null;", "        // Your code goes here\n        return null;", "   \
    \     var words = s.Split(' ');\n        var result = new List<string>();\n  \
    \      foreach (var word in words) {\n            var consonants = 0;\n      \
    \      foreach (var ch in word) {\n                if (ch != 'a' && ch != 'e'\
    \ && ch != 'i' && ch != 'o' && ch != 'u') {\n                    consonants++;\n\
    \                }\n            }\n            if (consonants == n) {\n      \
    \          result.Add(word);\n            }\n        }\n        return result;",
  "        // TODO: implement this function\n        return null;", "        // TODO:\
    \ implement this function\n        return null;", "        // TODO: implement\
    \ this function\n        return null;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 0; i < n - 1; i++) {\n            long c = a +\
    \ b;\n            a = b;\n            b = c;\n        }\n        return b;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ prev = 0;\n        long curr = 1;\n        for (long i = 2; i <= n; i++) {\n\
    \            long next = prev + curr;\n            prev = curr;\n            curr\
    \ = next;\n        }\n        return curr;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        return\
    \ Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (int i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (int i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (int i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        return\
    \ Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) return n;\n        long a = 0,\
    \ b = 1;\n        for (long i = 2; i <= n; i++) {\n            long c = a + b;\n\
    \            a = b;\n            b = c;\n        }\n        return b;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L)) ==\
    \ (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L)) ==\
    \ (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        return\
    \ Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n <= 1) {\n            return n;\n  \
    \      }\n        long a = 0;\n        long b = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            long c = a + b;\n            a = b;\n            b\
    \ = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        return\
    \ Fib(n - 1) + Fib(n - 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n\
    \    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n\
    \    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        long a = 0;\n        long b = 1;\n      \
    \  for (long i = 0; i < n; i++) {\n            long c = a + b;\n            a\
    \ = b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        return Fib(n - 1) + Fib(n - 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) {\n            return 0;\n  \
    \      }\n        if (n == 1) {\n            return 1;\n        }\n        long\
    \ a = 0;\n        long b = 1;\n        for (long i = 2; i <= n; i++) {\n     \
    \       long c = a + b;\n            a = b;\n            b = c;\n        }\n \
    \       return b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib((10L))\
    \ == (55L));\n    Debug.Assert(Fib((1L)) == (1L));\n    Debug.Assert(Fib((8L))\
    \ == (21L));\n    Debug.Assert(Fib((11L)) == (89L));\n    Debug.Assert(Fib((12L))\
    \ == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib(10)\n  \
    \  // 55\n    // >>> fib(1)\n    // 1\n    // >>> fib(8)\n    // 21\n    public\
    \ static long Fib(long n) {\n        if (n == 0) return 0;\n        if (n == 1)\
    \ return 1;\n        long a = 0;\n        long b = 1;\n        for (long i = 2;\
    \ i <= n; i++) {\n            long c = a + b;\n            a = b;\n          \
    \  b = c;\n        }\n        return b;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Fib((10L)) == (55L));\n    Debug.Assert(Fib((1L))\
    \ == (1L));\n    Debug.Assert(Fib((8L)) == (21L));\n    Debug.Assert(Fib((11L))\
    \ == (89L));\n    Debug.Assert(Fib((12L)) == (144L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793239

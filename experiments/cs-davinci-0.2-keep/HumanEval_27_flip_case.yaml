name: HumanEval_27_flip_case
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given string, flip lowercase characters to uppercase and\
  \ uppercase to lowercase.\n    // >>> flip_case('Hello')\n    // 'hELLO'\n    public\
  \ static string FlipCase(string str) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
  \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
  )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ["        var sb = new StringBuilder();\n        foreach (var c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                result += char.ToLower(c);\n            } else {\n      \
    \          result += char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", "        char[] chars = str.ToCharArray();\n        for (int i = 0;\
    \ i < chars.Length; i++) {\n            if (char.IsLower(chars[i])) {\n      \
    \          chars[i] = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i]))\
    \ {\n                chars[i] = char.ToLower(chars[i]);\n            }\n     \
    \   }\n        return new string(chars);", "        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).Aggregate("",
    (s, c) => s + c);', "        string result = \"\";\n        foreach (char c in\
    \ str) {\n            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n\
    \            } else {\n                result += char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsLower(charArray[i])) {\n                charArray[i]\
    \ = char.ToUpper(charArray[i]);\n            } else {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            }\n        }\n        return new\
    \ string(charArray);", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).Aggregate("",
    (x, y) => x + y);', "        string result = \"\";\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (char.IsUpper(str[i])) {\n            \
    \    result += char.ToLower(str[i]);\n            } else {\n                result\
    \ += char.ToUpper(str[i]);\n            }\n        }\n        return result;",
  '        return new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return string.Concat(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)));', '        return new string(str.Select(c => char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))\
    \ {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if\
    \ (char.IsUpper(chars[i])) {\n                chars[i] = char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).Aggregate(new
    StringBuilder(), (sb, c) => sb.Append(c)).ToString();', '        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));', '        return new
    string(str.Select(ch => char.IsUpper(ch) ? char.ToLower(ch) : char.ToUpper(ch)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsUpper(str[i])) {\n                result += Char.ToLower(str[i]);\n\
    \            } else {\n                result += Char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", '        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));', "        string result\
    \ = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                result += char.ToLower(c);\n            } else {\n      \
    \          result += char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", "        var sb = new StringBuilder();\n     \
    \   foreach (var c in str) {\n            if (char.IsUpper(c)) {\n           \
    \     sb.Append(char.ToLower(c));\n            } else {\n                sb.Append(char.ToUpper(c));\n\
    \            }\n        }\n        return sb.ToString();", '        return new
    string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                result += char.ToLower(c);\n            } else {\n      \
    \          result += char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', '        return new string(str.Select(x => char.IsUpper(x)
    ? char.ToLower(x) : char.ToUpper(x)).ToArray());', '        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", "        char[] chars = str.ToCharArray();\n \
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", "        char[]\
    \ arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length; i++) {\n \
    \           if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);", '        return new
    string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
  '        return new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsUpper(chars[i])) {\n                chars[i]\
    \ = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i])) {\n\
    \                chars[i] = Char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        char[]\
    \ chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n\
    \            if (Char.IsLower(chars[i])) {\n                chars[i] = Char.ToUpper(chars[i]);\n\
    \            } else if (Char.IsUpper(chars[i])) {\n                chars[i] =\
    \ Char.ToLower(chars[i]);\n            }\n        }\n        return new string(chars);",
  "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        StringBuilder sb = new StringBuilder();\n        foreach (char c in str)\
    \ {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (Char.IsUpper(c))\
    \ {\n                result += Char.ToLower(c);\n            } else {\n      \
    \          result += Char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", "        StringBuilder sb = new StringBuilder();\n        foreach\
    \ (char c in str) {\n            if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
  "        // TODO: Implement me\n        return null;", "        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
  "        char[] arr = str.ToCharArray();\n        for (int i = 0; i < arr.Length;\
    \ i++) {\n            if (char.IsUpper(arr[i])) {\n                arr[i] = char.ToLower(arr[i]);\n\
    \            } else if (char.IsLower(arr[i])) {\n                arr[i] = char.ToUpper(arr[i]);\n\
    \            }\n        }\n        return new string(arr);", "        string result\
    \ = \"\";\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        var sb = new StringBuilder();\n\
    \        foreach (var c in str) {\n            if (char.IsUpper(c)) {\n      \
    \          sb.Append(char.ToLower(c));\n            } else {\n               \
    \ sb.Append(char.ToUpper(c));\n            }\n        }\n        return sb.ToString();",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", "        // TODO:\
    \ Implement me\n        return null;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] result = new char[str.Length];\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (char.IsUpper(str[i])) {\n                result[i] =\
    \ char.ToLower(str[i]);\n            } else {\n                result[i] = char.ToUpper(str[i]);\n\
    \            }\n        }\n        return new string(result);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return String.Join("", str.Select(c => Char.IsUpper(c) ? Char.ToLower(c)
    : Char.ToUpper(c)));', '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsUpper(str[i])) {\n                result += Char.ToLower(str[i]);\n\
    \            } else {\n                result += Char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", "        char[] chars = str.ToCharArray();\n \
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', "        var sb = new StringBuilder();\n    \
    \    foreach (var c in str) {\n            if (char.IsLower(c)) {\n          \
    \      sb.Append(char.ToUpper(c));\n            } else {\n                sb.Append(char.ToLower(c));\n\
    \            }\n        }\n        return sb.ToString();", '        return new
    string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", "        string result = \"\";\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (char.IsLower(str[i])) {\n   \
    \             result += char.ToUpper(str[i]);\n            } else {\n        \
    \        result += char.ToLower(str[i]);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c => char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return new string(str.Select(c
    => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", '        return str.Select(x => char.IsUpper(x)
    ? char.ToLower(x) : char.ToUpper(x)).ToString();', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n         \
    \   } else {\n                sb.Append(char.ToLower(c));\n            }\n   \
    \     }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return String.Concat(str.Select(c => Char.IsUpper(c) ? Char.ToLower(c)
    : Char.ToUpper(c)));', '        return new string(str.Select(c => char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsLower(c)) {\n                result += char.ToUpper(c);\n          \
    \  } else {\n                result += char.ToLower(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));', "        char[] chars\
    \ = str.ToCharArray();\n        for (int i = 0; i < chars.Length; i++) {\n   \
    \         if (Char.IsLower(chars[i])) {\n                chars[i] = Char.ToUpper(chars[i]);\n\
    \            } else if (Char.IsUpper(chars[i])) {\n                chars[i] =\
    \ Char.ToLower(chars[i]);\n            }\n        }\n        return new string(chars);",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  var sb = new StringBuilder();\n        foreach (var c in str) {\n         \
    \   if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n    \
    \        } else {\n                sb.Append(char.ToUpper(c));\n            }\n\
    \        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);"]
stop_tokens:
- "\n    }\n"

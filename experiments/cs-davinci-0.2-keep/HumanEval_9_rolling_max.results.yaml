language: cs
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = long.MinValue;\n        for (int i = 0; i < numbers.Count;\
    \ i++) {\n            currentMax = Math.Max(currentMax, numbers[i]);\n       \
    \     max.Add(currentMax);\n        }\n        return max;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new\
    \ List<long>())));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0a215a3d7a0463e820359b8e0d6d752>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0a215a3d7a0463e820359b8e0d6d752>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var maxes = new\
    \ List<long>();\n        long max = numbers[0];\n        maxes.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            maxes.Add(max);\n        }\n        return maxes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var maxes = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            maxes.Add(max);\n\
    \        }\n        return maxes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e85ae4ef266407986fb668a4cb880f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e85ae4ef266407986fb668a4cb880f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max_so_far =\
    \ numbers[0];\n        var result = new List<long>();\n        result.Add(max_so_far);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max_so_far = Math.Max(max_so_far,\
    \ numbers[i]);\n            result.Add(max_so_far);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00001] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00001] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var num in\
    \ numbers) {\n            max = Math.Max(max, num);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aac33212aa8148ad91cf3db523a443bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aac33212aa8148ad91cf3db523a443bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var maxes = new\
    \ List<long>();\n        long currentMax = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            maxes.Add(currentMax);\n        }\n        return maxes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d946bbbdcf4f34bef9666743162a47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d946bbbdcf4f34bef9666743162a47>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        var currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1db266a6041eba72623948bc60e8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b9a1db266a6041eba72623948bc60e8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long current_max = numbers[0];\n        max.Add(current_max);\n     \
    \   for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > current_max)\
    \ {\n                current_max = numbers[i];\n            }\n            max.Add(current_max);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a572a3e5db7b486da9550344df5fca5d>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a572a3e5db7b486da9550344df5fca5d>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a572a3e5db7b486da9550344df5fca5d>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a572a3e5db7b486da9550344df5fca5d>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max_numbers\
    \ = new List<long>();\n        var max_number = long.MinValue;\n        foreach\
    \ (var number in numbers) {\n            max_number = Math.Max(max_number, number);\n\
    \            max_numbers.Add(max_number);\n        }\n        return max_numbers;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d78b41d1a3d477da42f5540288ed532>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7d78b41d1a3d477da42f5540288ed532>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            if (number > max) {\n                max = number;\n\
    \            }\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd842ea2fd75401a8ff3f0361c86b9a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dd842ea2fd75401a8ff3f0361c86b9a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var maxes = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            maxes.Add(max);\n\
    \        }\n        return maxes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e85ae4ef266407986fb668a4cb880f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9e85ae4ef266407986fb668a4cb880f1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = 0;\n        foreach (var n in numbers) {\n\
    \            max = Math.Max(max, n);\n            result.Add(max);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = 0;\n        foreach (var number in numbers) {\n   \
    \         currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f466dad2b71c4958b16edd4106665fe4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f466dad2b71c4958b16edd4106665fe4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long m = numbers[0];\n        max.Add(m);\n        for (int i = 1; i\
    \ < numbers.Count; i++) {\n            if (numbers[i] > m) {\n               \
    \ m = numbers[i];\n            }\n            max.Add(m);\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = 0;\n        foreach (var n in numbers) {\n\
    \            max = Math.Max(max, n);\n            result.Add(max);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = 0;\n        foreach (var number in numbers) {\n   \
    \         if (number > currentMax) {\n                currentMax = number;\n \
    \           }\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31c522f0cff145f288813030762cd3d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31c522f0cff145f288813030762cd3d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = 0;\n        foreach (var number in numbers)\
    \ {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <861443af87ae48fda6289d6b7b6ac581>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <861443af87ae48fda6289d6b7b6ac581>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = 0;\n        foreach (var n in numbers) {\n\
    \            max = Math.Max(max, n);\n            result.Add(max);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ed4e6c02f7949c18c628840e5923ac4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var num in\
    \ numbers) {\n            max = Math.Max(max, num);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2c0c28ac93874319a33a33c4fa4a0053>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2c0c28ac93874319a33a33c4fa4a0053>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long m = numbers[0];\n        max.Add(m);\n        for (int i = 1; i\
    \ < numbers.Count; i++) {\n            if (numbers[i] > m) {\n               \
    \ m = numbers[i];\n            }\n            max.Add(m);\n        }\n       \
    \ return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <67620e05ee934a46bf2a12be380498f1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> max_numbers\
    \ = new List<long>();\n        long max_number = numbers[0];\n        max_numbers.Add(max_number);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max_number) {\n                max_number = numbers[i];\n            }\n \
    \           max_numbers.Add(max_number);\n        }\n        return max_numbers;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <59036f9877264324a9d873053cc7a350>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <59036f9877264324a9d873053cc7a350>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <59036f9877264324a9d873053cc7a350>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <59036f9877264324a9d873053cc7a350>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <6a457bd73def43079608af3d69ee6563>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long currentMax = long.MinValue;\n        foreach (var\
    \ number in numbers) {\n            currentMax = Math.Max(currentMax, number);\n\
    \            result.Add(currentMax);\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e4c88e5358a43d8ba65223e9c15c2eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5e4c88e5358a43d8ba65223e9c15c2eb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var maxes = new\
    \ List<long>();\n        long max = numbers[0];\n        maxes.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            maxes.Add(max);\n        }\n        return maxes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <069c7137ac0544bc9008d5a7c5a9ce09>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            if (number > currentMax) {\n                currentMax = number;\n\
    \            }\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a26ae4fbab6e47a3a71c35b5361580f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a26ae4fbab6e47a3a71c35b5361580f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9507472af30e43ef8efc4319c2e35885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9507472af30e43ef8efc4319c2e35885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        var currentMax = long.MinValue;\n        foreach (var num in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, num);\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85c4c1a61edb469e8ed11efabeb519aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85c4c1a61edb469e8ed11efabeb519aa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var num in\
    \ numbers) {\n            max = Math.Max(max, num);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2c0c28ac93874319a33a33c4fa4a0053>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2c0c28ac93874319a33a33c4fa4a0053>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var n in numbers)\
    \ {\n            max = Math.Max(max, n);\n            result.Add(max);\n     \
    \   }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2cd9dafe65fd474c948420162fb7721b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <130b1b4b823a42a785597e94c9065bc0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = numbers[0];\n        max.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            max.Add(currentMax);\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <a9958aff93d7415b8c64bec8d9d7661c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max_so_far =\
    \ numbers[0];\n        var result = new List<long>();\n        result.Add(max_so_far);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max_so_far = Math.Max(max_so_far,\
    \ numbers[i]);\n            result.Add(max_so_far);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00001] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00001] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <b48eefffedb540c08fc94caf909b737a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <0f943656974a420f8edb230b49b8f2c7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        List<long> result\
    \ = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <26921370a8de400c83054e3d504659fb>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = numbers[0];\n        result.Add(max);\n   \
    \     for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <442d01e1df534e7c9bd70906a02826e8>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var n in\
    \ numbers) {\n            max = Math.Max(max, n);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0348ffe82dd640e4924a671d03462586>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        var max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ad74e3d0d3444d99719a5490cf34c67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = long.MinValue;\n        foreach (var number\
    \ in numbers) {\n            max = Math.Max(max, number);\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4c959b9068c9493999cbf046b231f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795129
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
    \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
    \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
    \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <2e728e881cf74effa6704c62ad60b499>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var max = new List<long>();\n\
    \        long currentMax = long.MinValue;\n        foreach (var number in numbers)\
    \ {\n            currentMax = Math.Max(currentMax, number);\n            max.Add(currentMax);\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9507472af30e43ef8efc4319c2e35885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9507472af30e43ef8efc4319c2e35885>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659795130
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n    // in the sequence.\n    // >>>\
    \ rolling_max([1, 2, 3, 2, 3, 4, 2])\n    // [1, 2, 3, 3, 3, 4, 4]\n    public\
    \ static List<long> RollingMax(List<long> numbers) {\n        var result = new\
    \ List<long>();\n        long max = numbers[0];\n        result.Add(max);\n  \
    \      for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] >\
    \ max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(RollingMax((new List<long>())).Equals((new List<long>())));\n\
    \    Debug.Assert(RollingMax((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
    \ (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new long[]{(long)4L,\
    \ (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)4L,\
    \ (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new List<long>(new\
    \ long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new List<long>(new\
    \ long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32\
    \ index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.RollingMax\
    \ (System.Collections.Generic.List`1[T] numbers) [0x00007] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00006] in <4fd90c20fe464aff9742e1a33475f642>:0\
    \ \n"
  stdout: ''
  timestamp: 1659795129

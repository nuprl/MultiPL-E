language: cs
name: HumanEval_16_count_distinct_characters
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return str.Distinct().Count();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84aa812c94dc4e029e754a1be476372d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84aa812c94dc4e029e754a1be476372d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec317ac5ae20436788e268c8b164e224>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec317ac5ae20436788e268c8b164e224>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ str.ToLower().Distinct().Count();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // Your code here\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <764b007967464e9cafe0f0a46b9d2ded>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <764b007967464e9cafe0f0a46b9d2ded>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToUpper().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // Your code goes\
    \ here\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <985a1184b62c4374b6c27e32a9470411>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <985a1184b62c4374b6c27e32a9470411>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var chars = str.ToLower().ToCharArray();\n\
    \        var set = new HashSet<char>();\n        foreach (var c in chars) {\n\
    \            set.Add(c);\n        }\n        return set.Count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54cd71227bca48f791f25ec608ce579a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <54cd71227bca48f791f25ec608ce579a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92bb124a3f5743db803a9fe6b2041b16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92bb124a3f5743db803a9fe6b2041b16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec317ac5ae20436788e268c8b164e224>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ec317ac5ae20436788e268c8b164e224>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // YOUR CODE HERE\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <abe499f0507f49bbbece1be17dee114f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <abe499f0507f49bbbece1be17dee114f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ str.ToLower().Distinct().Count();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5b49f1155d1a499f91db95534bc9dbe6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ str.ToLower().Distinct().Count();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var lower = str.ToLower();\n\
    \        var set = new HashSet<char>();\n        foreach (var c in lower) {\n\
    \            set.Add(c);\n        }\n        return set.Count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\n\
    \        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a30faac75348ab8accf6f8b96cd67b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4a30faac75348ab8accf6f8b96cd67b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this method\n        //throw new NotImplementedException();\n        return\
    \ str.ToLower().Distinct().Count();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ this function\n        return 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d437cb24304b4375acfba77fb96e9c81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805629
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // TODO: Implement\
    \ me\n        return 0;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28d574b4d3b347748d4944cd7629adf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var chars = str.ToLower().ToCharArray();\n\
    \        var set = new HashSet<char>();\n        foreach (var c in chars) {\n\
    \            set.Add(c);\n        }\n        return set.Count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        var set = new HashSet<char>();\n\
    \        foreach (var c in str) {\n            set.Add(char.ToLower(c));\n   \
    \     }\n        return set.Count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\"\
    )) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) ==\
    \ (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\")) ==\
    \ (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        // Your code here\n\
    \        return str.ToLower().Distinct().Count();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\")) == (0L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"\
    abcdecadeCADE\")) == (5L));\n    Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\"\
    )) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"Jerry jERRY JeRRRY\"\
    )) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a string, find out how many distinct characters\
    \ (regardless of case) does it consist of\n    // >>> count_distinct_characters('xyzXYZ')\n\
    \    // 3\n    // >>> count_distinct_characters('Jerry')\n    // 4\n    public\
    \ static long CountDistinctCharacters(string str) {\n        return str.ToLower().Distinct().Count();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountDistinctCharacters((\"\
    \")) == (0L));\n    Debug.Assert(CountDistinctCharacters((\"abcde\")) == (5L));\n\
    \    Debug.Assert(CountDistinctCharacters((\"abcdecadeCADE\")) == (5L));\n   \
    \ Debug.Assert(CountDistinctCharacters((\"aaaaAAAAaaaa\")) == (1L));\n    Debug.Assert(CountDistinctCharacters((\"\
    Jerry jERRY JeRRRY\")) == (5L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805628

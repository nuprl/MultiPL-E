name: HumanEval_91_is_bored
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You'll be given a string of words, and your task is to count\
  \ the number\n    // of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n\
  \    // >>> is_bored(\"Hello world\")\n    // 0\n    // >>> is_bored(\"The sky is\
  \ blue. The sun is shining. I love this weather\")\n    // 1\n    public static\
  \ long IsBored(string S) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
  Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
  \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
  bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
  \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for\
  \ a walk\")) == (0L));\n    }\n\n}\n"
completions: ["        return S.Split(new char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Count(s\
    \ => s.Trim().StartsWith(\"I\"));", "        // Your code goes here.\n       \
    \ return 0;", "        // TODO: Implement this function.\n        return 0;",
  "        var count = 0;\n        var words = S.Split(' ');\n        for (var i =\
    \ 0; i < words.Length; i++) {\n            if (words[i] == \"I\") {\n        \
    \        count++;\n            }\n        }\n        return count;", "       \
    \ return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        // TODO: Implement this function.\n        return 0;", "   \
    \     long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long count = 0;\n       \
    \ string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", "        // Your code here.\n  \
    \      return 0;", "        // Your code here\n        return 0;", "        return\
    \ S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));",
  "        return S.Split('.', '?', '!').Count(s => s.Trim().StartsWith(\"I\"));",
  "        // Your code here\n        return 0;", "        // Your code here\n   \
    \     return 0;", "        // Your code here\n        return 0;", "        long\
    \ count = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach\
    \ (string word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        var count = 0;\n        var\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (var sentence\
    \ in sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n    \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     // Your code goes here.\n        return 0;", "        long count = 0;\n\
    \        string[] words = S.Split('.', '?', '!');\n        foreach (string word\
    \ in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        string[] words = S.Split('.', '?', '!');\n        foreach\
    \ (string word in words) {\n            if (word.Trim().StartsWith(\"I\")) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       // Your code goes here\n        return 0;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s =>\
    \ s.Trim().StartsWith(\"I\"));", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.StartsWith(\"I\")) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // Your code here\n        return 0;", "        // TODO: Implement this\
    \ function\n        return 0;", "        long count = 0;\n        string[] words\
    \ = S.Split('.', '?', '!');\n        foreach (string word in words) {\n      \
    \      if (word.Trim().StartsWith(\"I\")) {\n                count++;\n      \
    \      }\n        }\n        return count;", "        long count = 0;\n      \
    \  string[] words = S.Split('.', '?', '!');\n        foreach (string word in words)\
    \ {\n            if (word.StartsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;", "        // Your code here\n \
    \       return 0;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // TODO: Implement\
    \ this function\n        return 0;", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        long count = 0;\n        var sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (var sentence in sentences) {\n       \
    \     if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;", "        return S.Split(new char[]\
    \ { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "        var count\
    \ = 0;\n        var words = S.Split(' ');\n        for (var i = 0; i < words.Length;\
    \ i++) {\n            if (words[i] == \"I\") {\n                count++;\n   \
    \         }\n        }\n        return count;", "        return S.Split(new char[]\
    \ { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "        return\
    \ S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));",
  "        // Your code here\n        return 0;", "        // Your code here.\n  \
    \      return 0;", "        // Your code goes here.\n        return 0;", "   \
    \     // TODO: Implement this function\n        long count = 0;\n        string[]\
    \ words = S.Split('.', '?', '!');\n        for (int i = 0; i < words.Length; i++)\n\
    \        {\n            if (words[i].Trim().StartsWith(\"I\"))\n            {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       // Your code goes here\n        return 0;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

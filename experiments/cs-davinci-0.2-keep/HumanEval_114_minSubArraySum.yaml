name: HumanEval_114_minSubArraySum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n    // of nums.\n    // Example\n    // minSubArraySum([2,\
  \ 3, 4, 1, 2, 4]) == 1\n    // minSubArraySum([-1, -2, -3]) == -6\n    public static\
  \ long Minsubarraysum(List<long> nums) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)1L, (long)2L, (long)4L})))\
  \ == (1L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)-3L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)-1L, (long)-2L, (long)-3L, (long)2L, (long)-10L}))) == (-14L));\n\
  \    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)-9999999999999999L})))\
  \ == (-9999999999999999L));\n    Debug.Assert(Minsubarraysum((new List<long>(new\
  \ long[]{(long)0L, (long)10L, (long)20L, (long)1000000L}))) == (0L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L})))\
  \ == (-6L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-1L, (long)-2L, (long)-3L, (long)10L, (long)-5L}))) == (-6L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)10L, (long)11L, (long)13L, (long)8L, (long)3L, (long)4L})))\
  \ == (3L));\n    Debug.Assert(Minsubarraysum((new List<long>(new long[]{(long)100L,\
  \ (long)-33L, (long)32L, (long)-1L, (long)0L, (long)-2L}))) == (-33L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)-10L}))) == (-10L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)7L}))) == (7L));\n    Debug.Assert(Minsubarraysum((new\
  \ List<long>(new long[]{(long)1L, (long)-1L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long min = nums[0];\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long minSum = long.MaxValue;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            minSum\
    \ = Math.Min(minSum, sum);\n            if (sum > 0) {\n                sum =\
    \ 0;\n            }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long minSum = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            minSum = Math.Min(minSum, sum);\n       \
    \     if (sum > 0) {\n                sum = 0;\n            }\n        }\n   \
    \     return minSum;", "        long minSum = long.MaxValue;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            minSum = Math.Min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long minSum = long.MaxValue;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            minSum\
    \ = Math.Min(minSum, sum);\n            if (sum > 0) {\n                sum =\
    \ 0;\n            }\n        }\n        return minSum;", "        // TODO: Implement\n\
    \        return 0;", "        long min = nums[0];\n        long sum = 0;\n   \
    \     for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n  \
    \          if (sum < min) {\n                min = sum;\n            }\n     \
    \       if (sum > 0) {\n                sum = 0;\n            }\n        }\n \
    \       return min;", "        long minSum = long.MaxValue;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            minSum = Math.Min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = nums[0];\n        long sum = nums[0];\n        for (int i =\
    \ 1; i < nums.Count; i++) {\n            sum = Math.Min(nums[i], sum + nums[i]);\n\
    \            min = Math.Min(min, sum);\n        }\n        return min;", "   \
    \     long min = long.MaxValue;\n        long sum = 0;\n        for (int i = 0;\
    \ i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > 0) {\n \
    \               sum = 0;\n            }\n        }\n        return min;", "  \
    \      // Write your code here\n        long min = nums[0];\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = nums[0];\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = nums[0];\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        // TODO: Implement this\n        return 0;", " \
    \       // O(n)\n        long min = nums[0];\n        long sum = nums[0];\n  \
    \      for (int i = 1; i < nums.Count; i++) {\n            sum = Math.Min(sum\
    \ + nums[i], nums[i]);\n            min = Math.Min(min, sum);\n        }\n   \
    \     return min;", "        long min = long.MaxValue;\n        long sum = 0;\n\
    \        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        var min = long.MaxValue;\n        var sum = 0L;\n\
    \        var start = 0;\n        var end = 0;\n        while (end < nums.Count)\
    \ {\n            sum += nums[end];\n            while (sum >= 0) {\n         \
    \       min = Math.Min(min, sum);\n                sum -= nums[start];\n     \
    \           start++;\n            }\n            end++;\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        for\
    \ (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n            if\
    \ (sum > 0) {\n                sum = 0;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        for\
    \ (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n            if\
    \ (sum > 0) {\n                sum = 0;\n            }\n        }\n        return\
    \ min;", "        long min = long.MaxValue;\n        long sum = 0;\n        for\
    \ (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n          \
    \  if (sum < min) {\n                min = sum;\n            }\n            if\
    \ (sum > 0) {\n                sum = 0;\n            }\n        }\n        return\
    \ min;", "        long min = nums[0];\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        foreach (long\
    \ num in nums) {\n            sum += num;\n            if (sum < min) {\n    \
    \            min = sum;\n            }\n            if (sum > 0) {\n         \
    \       sum = 0;\n            }\n        }\n        return min;", "        long\
    \ minSum = long.MaxValue;\n        long currentSum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            currentSum += nums[i];\n            if\
    \ (currentSum < minSum) {\n                minSum = currentSum;\n            }\n\
    \            if (currentSum > 0) {\n                currentSum = 0;\n        \
    \    }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        // TODO: Implement your solution\
    \ here\n        return 0;", "        long minSum = 0;\n        long currentSum\
    \ = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            currentSum\
    \ += nums[i];\n            if (currentSum < minSum) {\n                minSum\
    \ = currentSum;\n            }\n            if (currentSum > 0) {\n          \
    \      currentSum = 0;\n            }\n        }\n        return minSum;", " \
    \       long minSum = long.MaxValue;\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            minSum\
    \ = Math.Min(minSum, sum);\n            if (sum > 0) {\n                sum =\
    \ 0;\n            }\n        }\n        return minSum;", "        // Your code\
    \ here\n        long min = nums[0];\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        var min = nums[0];\n        var sum = 0;\n        foreach (var num in nums)\
    \ {\n            sum += num;\n            if (sum < min) {\n                min\
    \ = sum;\n            }\n            if (sum > 0) {\n                sum = 0;\n\
    \            }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n    \
    \        sum = Math.Min(nums[i], sum + nums[i]);\n            min = Math.Min(min,\
    \ sum);\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long minSum = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            minSum = Math.Min(minSum, sum);\n       \
    \     if (sum > 0) {\n                sum = 0;\n            }\n        }\n   \
    \     return minSum;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        // TODO: Implement your solution here\n      \
    \  long min = long.MaxValue;\n        long sum = 0;\n        for (int i = 0; i\
    \ < nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > 0) {\n \
    \               sum = 0;\n            }\n        }\n        return min;", "  \
    \      long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        // TODO: Implement your solution here\n        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long minSum = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            minSum = Math.Min(minSum, sum);\n       \
    \     if (sum > 0) {\n                sum = 0;\n            }\n        }\n   \
    \     return minSum;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = nums[0];\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = nums[0];\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = nums[0];\n        long sum = 0;\n \
    \       for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long min = long.MaxValue;\n        long sum =\
    \ 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            if (sum < min) {\n                min = sum;\n            }\n   \
    \         if (sum > 0) {\n                sum = 0;\n            }\n        }\n\
    \        return min;", "        long minSum = long.MaxValue;\n        long sum\
    \ = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n\
    \            minSum = Math.Min(minSum, sum);\n            if (sum > 0) {\n   \
    \             sum = 0;\n            }\n        }\n        return minSum;", " \
    \       long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        // TODO: Implement me\n        return 0;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        // TODO: Implement this method\n\
    \        long min = nums[0];\n        long sum = 0;\n        for (int i = 0; i\
    \ < nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > 0) {\n \
    \               sum = 0;\n            }\n        }\n        return min;", "  \
    \      // TODO: Implement this method\n        return 0;", "        long minSum\
    \ = long.MaxValue;\n        long sum = 0;\n        for (int i = 0; i < nums.Count;\
    \ i++) {\n            sum += nums[i];\n            minSum = Math.Min(minSum, sum);\n\
    \            if (sum > 0) {\n                sum = 0;\n            }\n       \
    \ }\n        return minSum;", "        long min = long.MaxValue;\n        long\
    \ sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum +=\
    \ nums[i];\n            if (sum < min) {\n                min = sum;\n       \
    \     }\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return min;", "        long min = long.MaxValue;\n       \
    \ long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum\
    \ += nums[i];\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n            if (sum > 0) {\n                sum = 0;\n           \
    \ }\n        }\n        return min;", "        long min = long.MaxValue;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n        \
    \    sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        // TODO: Implement this\n \
    \       return 0;", "        long min = nums[0];\n        long sum = nums[0];\n\
    \        for (int i = 1; i < nums.Count; i++) {\n            sum = Math.Min(nums[i],\
    \ sum + nums[i]);\n            min = Math.Min(min, sum);\n        }\n        return\
    \ min;", "        long min = nums[0];\n        long sum = 0;\n        for (int\
    \ i = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = nums[0];\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > 0) {\n \
    \               sum = 0;\n            }\n        }\n        return min;", "  \
    \      long min = nums[0];\n        long sum = nums[0];\n        for (int i =\
    \ 1; i < nums.Count; i++) {\n            sum = Math.Min(nums[i], sum + nums[i]);\n\
    \            min = Math.Min(min, sum);\n        }\n        return min;", "   \
    \     long min = nums[0];\n        long sum = 0;\n        for (int i = 0; i <\
    \ nums.Count; i++) {\n            sum += nums[i];\n            if (sum < min)\
    \ {\n                min = sum;\n            }\n            if (sum > 0) {\n \
    \               sum = 0;\n            }\n        }\n        return min;", "  \
    \      long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long min = long.MaxValue;\n        long sum = 0;\n        for (int i =\
    \ 0; i < nums.Count; i++) {\n            sum += nums[i];\n            if (sum\
    \ < min) {\n                min = sum;\n            }\n            if (sum > 0)\
    \ {\n                sum = 0;\n            }\n        }\n        return min;",
  "        long minSum = long.MaxValue;\n        long sum = 0;\n        for (int i\
    \ = 0; i < nums.Count; i++) {\n            sum += nums[i];\n            minSum\
    \ = Math.Min(minSum, sum);\n            if (sum > 0) {\n                sum =\
    \ 0;\n            }\n        }\n        return minSum;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        foreach (long num in nums) {\n            sum\
    \ += num;\n            if (sum < min) {\n                min = sum;\n        \
    \    }\n            if (sum > 0) {\n                sum = 0;\n            }\n\
    \        }\n        return min;", "        long min = long.MaxValue;\n       \
    \ long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            sum\
    \ += nums[i];\n            if (sum < min) {\n                min = sum;\n    \
    \        }\n            if (sum > 0) {\n                sum = 0;\n           \
    \ }\n        }\n        return min;", "        long min = long.MaxValue;\n   \
    \     long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n        \
    \    sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n    \
    \        sum = Math.Min(nums[i], sum + nums[i]);\n            min = Math.Min(min,\
    \ sum);\n        }\n        return min;", "        long min = nums[0];\n     \
    \   long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n          \
    \  sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;", "        long min = long.MaxValue;\n\
    \        long sum = 0;\n        for (int i = 0; i < nums.Count; i++) {\n     \
    \       sum += nums[i];\n            if (sum < min) {\n                min = sum;\n\
    \            }\n            if (sum > 0) {\n                sum = 0;\n       \
    \     }\n        }\n        return min;"]
stop_tokens:
- "\n    }\n"

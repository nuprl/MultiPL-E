name: HumanEval_144_simplify
language: pl
prompt: "# Your task is to implement a function that will simplify the expression\n\
  # x * n. The function returns True if x * n evaluates to a whole number and False\n\
  # otherwise. Both x and n, are string representation of a fraction, and have the\
  \ following format,\n# <numerator>/<denominator> where both numerator and denominator\
  \ are positive whole numbers.\n# You can assume that x, and n are valid fractions,\
  \ and do not have zero as denominator.\nsub simplify {\n    my($x, $n) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&simplify;\n\
  \        if(eq_deeply($candidate->(\"1/5\", \"5/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1/6\"\
  , \"2/1\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"5/1\", \"3/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"7/10\"\
  , \"10/2\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"2/10\", \"50/10\"),1)) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"7/2\"\
  , \"4/2\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"11/6\", \"6/1\"),1)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2/3\"\
  , \"5/2\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"5/2\", \"3/5\"),\"\")) {\n        print \"\
  ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"2/4\"\
  , \"8/4\"),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
  \     if(eq_deeply($candidate->(\"2/4\", \"4/2\"),1)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"1/5\", \"5/1\"\
  ),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  1/5\", \"1/5\"),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n      \
  \  }\n}\n\ntesthumaneval();"
completions: ["    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) =\
    \ split /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($num, $den);\n    return $num == $den * $gcd;\n}", "    my($x_numerator,\
    \ $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator) = split('/',\
    \ $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n \
    \   my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    return ($num\
    \ / $gcd) % ($den / $gcd) == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num /\
    \ ($x_den * $n_den);\n    return $result == int($result);\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den)\
    \ = split('/', $x);\n    my($n_num, $n_den) = split('/', $n);\n    my $num = $x_num\
    \ * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n\
    \    return $num / $gcd == $den / $gcd;\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    return $num\
    \ / $gcd == $den / $gcd;\n}", "    my($x_numerator, $x_denominator) = split /\\\
    //, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split('/', $x);\n    my($n_numerator, $n_denominator) = split('/', $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result == int($result);\n\
    }", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator)\
    \ = split('/', $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    my $gcd = gcd($result, $denominator);\n\
    \    $result /= $gcd;\n    $denominator /= $gcd;\n    return $result == $denominator;\n\
    }", "    my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator,\
    \ $n_denominator) = split('/', $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//,\
    \ $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\.0$/;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($result, $den);\n    return\
    \ $result / $gcd == $den / $gcd;\n}", "    my($x_numerator, $x_denominator) =\
    \ split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator) =\
    \ split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num;\n\
    \    my $denominator = $x_den * $n_den;\n    return $result % $denominator ==\
    \ 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result == int($result);\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $num = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n\
    \    $den /= $gcd;\n    return $num % $den == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result == int($result);\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /\\.0$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", "    my($numerator,\
    \ $denominator) = split '/', $x;\n    my($numerator2, $denominator2) = split '/',\
    \ $n;\n    my $result = $numerator * $numerator2;\n    my $result2 = $denominator\
    \ * $denominator2;\n    return $result % $result2 == 0;\n}", "    my($numerator,\
    \ $denominator) = split(/\\//, $x);\n    my($numerator2, $denominator2) = split(/\\\
    //, $n);\n    my $result = $numerator * $numerator2;\n    my $result2 = $denominator\
    \ * $denominator2;\n    if ($result % $result2 == 0) {\n        return 1;\n  \
    \  } else {\n        return 0;\n    }\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n\
    \    $den /= $gcd;\n    return $num % $den == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result == int($result);\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result == int($result);\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num *\
    \ $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den == 0;\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $res = $x_num * $n_num / ($x_den * $n_den);\n    return $res ==\
    \ int($res);\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n \
    \   my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result == int($result);\n\
    }", "    my($x_num, $x_den) = split('/', $x);\n    my($n_num, $n_den) = split('/',\
    \ $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n  \
    \  my $gcd = gcd($result, $den);\n    return $result / $gcd == $den / $gcd;\n}",
  "    my($xn, $xn_n, $xn_d) = ($x, 1, 1);\n    if ($x =~ /^(\\d+)\\/(\\d+)$/) {\n\
    \        $xn_n = $1;\n        $xn_d = $2;\n    }\n    if ($n =~ /^(\\d+)\\/(\\\
    d+)$/) {\n        $xn_n *= $1;\n        $xn_d *= $2;\n    }\n    my $gcd = gcd($xn_n,\
    \ $xn_d);\n    $xn_n /= $gcd;\n    $xn_d /= $gcd;\n    return $xn_n % $xn_d ==\
    \ 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($result, $den);\n    $result /= $gcd;\n    $den /= $gcd;\n\
    \    return $result == $den;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    return $result % $den == 0;\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $num\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_num, $x_den)\
    \ = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n    my $result =\
    \ $x_num * $n_num / $x_den / $n_den;\n    return $result == int($result);\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    return ($x_num * $n_den) % ($x_den * $n_num) == 0;\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $res = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $res % $den\
    \ == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    my $gcd = gcd($result,\
    \ $denominator);\n    return $result / $gcd == $denominator / $gcd;\n}", "   \
    \ my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator)\
    \ = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n    return\
    \ $result % $x_denominator == 0;\n}", "    my($x_numerator, $x_denominator) =\
    \ split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator *\
    \ $n_denominator);\n    return $result =~ /\\d+/;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $result = $x_num * $n_num / $x_den / $n_den;\n    return $result =~ /^\\d+$/;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / $x_denominator / $n_denominator;\n    return $result =~ /^\\\
    d+$/;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+/;\n}", " \
    \   my($x_num, $x_den) = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n\
    \    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd\
    \ = gcd($result, $den);\n    return $result / $gcd == $den / $gcd;\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result == int($result);\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ == int($result);\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $numerator =\
    \ $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    my $gcd = gcd($numerator, $denominator);\n    $numerator /= $gcd;\n    $denominator\
    \ /= $gcd;\n    return $numerator % $denominator == 0;\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num =\
    \ $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n\
    \    return $num / $gcd == $den / $gcd;\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $res = $x_num * $n_num\
    \ / ($x_den * $n_den);\n    return $res =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $product = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    return $product % $denominator == 0;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $res = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n   \
    \ my $gcd = gcd($res, $den);\n    return $res / $gcd == $den / $gcd;\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    my $result_whole\
    \ = int($result / $result_denominator);\n    return $result_whole == $result /\
    \ $result_denominator;\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /\\d+/;\n}", "    my($x_numerator, $x_denominator) = split(/\\//,\
    \ $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $result_denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $result_denominator == 0;\n}", "   \
    \ my($numerator, $denominator) = split /\\//, $x;\n    my($numerator2, $denominator2)\
    \ = split /\\//, $n;\n    my $gcd = gcd($denominator, $denominator2);\n    my\
    \ $lcm = lcm($denominator, $denominator2);\n    my $numerator3 = $numerator *\
    \ $denominator2 / $gcd + $numerator2 * $denominator / $gcd;\n    my $denominator3\
    \ = $lcm;\n    my $gcd2 = gcd($numerator3, $denominator3);\n    $numerator3 /=\
    \ $gcd2;\n    $denominator3 /= $gcd2;\n    return $numerator3 % $denominator3\
    \ == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $product = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    my $gcd = gcd($product,\
    \ $denominator);\n    return $product / $gcd == $denominator / $gcd;\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $product = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    my $gcd = gcd($product,\
    \ $denominator);\n    return $product / $gcd == $denominator / $gcd;\n}", "  \
    \  my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ == int($result);\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num,\
    \ $n_den) = split(/\\//, $n);\n    my $res = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    return $res % $den == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    return ($x_numerator * $n_denominator) % ($x_denominator * $n_numerator)\
    \ == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+\\.0/;\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my\
    \ $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    my $gcd = gcd($result, $denominator);\n\
    \    return $result / $gcd == $denominator / $gcd;\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $res =\
    \ $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $res % $den ==\
    \ 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//,\
    \ $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n    return\
    \ $result =~ /\\.[0]*$/;\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n    return\
    \ $result == int($result);\n}", "    my($x_num, $x_den) = split /\\//, $x;\n \
    \   my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n  \
    \  my $den = $x_den * $n_den;\n    return $num % $den == 0;\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result\
    \ % $den == 0;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num,\
    \ $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n    my $den\
    \ = $x_den * $n_den;\n    my $gcd = gcd($result, $den);\n    return $result /\
    \ $gcd == $den / $gcd;\n}", "    my($x_num, $x_den) = split '/', $x;\n    my($n_num,\
    \ $n_den) = split '/', $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    my $gcd = gcd($num, $den);\n    return $num / $gcd == $den /\
    \ $gcd;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    return $result\
    \ % $result_denominator == 0;\n}", "    my($xn, $xd) = split '/', $x;\n    my($nn,\
    \ $nd) = split '/', $n;\n    my $gcd = gcd($xn, $xd);\n    $xn /= $gcd;\n    $xd\
    \ /= $gcd;\n    $gcd = gcd($nn, $nd);\n    $nn /= $gcd;\n    $nd /= $gcd;\n  \
    \  return $xn * $nn == $xd * $nd;\n}", "    my($x_numerator, $x_denominator) =\
    \ split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result == int($result);\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num\
    \ / ($x_den * $n_den);\n    return $result == int($result);\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator *\
    \ $n_denominator);\n    return $result =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    return $result % $denominator == 0;\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    my $gcd = gcd($num, $den);\n    return $num / $gcd == $den /\
    \ $gcd;\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+/;\n}", " \
    \   my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($result, $den);\n    return $result / $gcd == $den / $gcd;\n\
    }", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    return $result % $x_denominator == 0;\n}", "    my($x_num, $x_den) = split\
    \ /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num\
    \ * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n\
    \    $num /= $gcd;\n    $den /= $gcd;\n    return $num % $den == 0;\n}", "   \
    \ my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ == int($result);\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n  \
    \  return $result % $denominator == 0;\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n\
    \    $den /= $gcd;\n    return $num % $den == 0;\n}", "    my($xn) = $x * $n;\n\
    \    return $xn =~ /^\\d+$/;\n}", "    my($numerator, $denominator) = split(/\\\
    //, $x);\n    my($numerator2, $denominator2) = split(/\\//, $n);\n    my $result\
    \ = $numerator * $numerator2;\n    my $result2 = $denominator * $denominator2;\n\
    \    if ($result % $result2 == 0) {\n        return 1;\n    } else {\n       \
    \ return 0;\n    }\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /\\A\\d+\\z/;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $divisor = $x_denominator\
    \ * $n_denominator;\n    return $result % $divisor == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    return ($x_numerator * $n_denominator) % ($x_denominator * $n_numerator)\
    \ == 0;\n}", "    my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator,\
    \ $n_denominator) = split('/', $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\\
    //, $n;\n    my $res = $x_num * $n_num / ($x_den * $n_den);\n    return $res =~\
    \ /\\D/ ? 0 : 1;\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n\
    \    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator\
    \ * $n_numerator / $x_denominator / $n_denominator;\n    return $result =~ /^\\\
    d+$/;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($result, $den);\n    $result /= $gcd;\n    $den /= $gcd;\n\
    \    return $result == $den;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n \
    \   my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    $num /= $gcd;\n\
    \    $den /= $gcd;\n    return $num % $den == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_denom) = split(/\\//,\
    \ $x);\n    my($n_num, $n_denom) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num / ($x_denom * $n_denom);\n    return $result =~ /^\\d+$/;\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / $x_denominator / $n_denominator;\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\.0$/;\n}", " \
    \   my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator)\
    \ = split('/', $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / $x_denominator /\
    \ $n_denominator;\n    return $result =~ /\\./ ? 0 : 1;\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den\
    \ == 0;\n}", "    my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator,\
    \ $n_denominator) = split('/', $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_numerator, $x_denominator) = split '/', $x;\n    my($n_numerator, $n_denominator)\
    \ = split '/', $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /\\d+\\.0$/;\n}", "    my($x_num,\
    \ $x_den) = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den\
    \ == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den)\
    \ = split /\\//, $n;\n    my $result = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    return $result % $den == 0;\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result == int($result);\n}", "    my ($x_num, $x_den) = split /\\\
    //, $x;\n    my ($n_num, $n_den) = split /\\//, $n;\n    my $gcd = gcd($x_den,\
    \ $n_den);\n    my $lcm = lcm($x_den, $n_den);\n    my $num = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    my $num =\
    \ $num / $gcd;\n    my $den = $den / $gcd;\n    return $num % $den == 0;\n}",
  "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+/;\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n    return $result\
    \ =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n\
    \    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result =~ /\\\
    d+/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) =\
    \ split /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($result, $den);\n    $result /= $gcd;\n    $den /= $gcd;\n\
    \    return $result == $den;\n}", "    my($x_numerator, $x_denominator) = split(/\\\
    //, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result\
    \ = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator * $n_denominator;\n\
    \    return $result % $denominator == 0;\n}", "    my($x_num, $x_den) = split(/\\\
    //, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num;\n    my $denominator = $x_den * $n_den;\n    my $gcd = gcd($result,\
    \ $denominator);\n    return $result / $gcd == $denominator / $gcd;\n}", "   \
    \ my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator)\
    \ = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    return $result % $denominator == 0;\n\
    }", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split\
    \ /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", " \
    \   my($x_numerator, $x_denominator) = split('/', $x);\n    my($n_numerator, $n_denominator)\
    \ = split('/', $n);\n    my $result = $x_numerator * $n_numerator / $x_denominator\
    \ / $n_denominator;\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $result = $x_num * $n_num / $x_den / $n_den;\n    return $result =~ /^\\d+$/;\n\
    }", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\\
    //, $n;\n    my $result = $x_num * $n_num / $x_den / $n_den;\n    return $result\
    \ == int($result);\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result =~ /^\\\
    d+$/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den)\
    \ = split /\\//, $n;\n    my $result = $x_num * $n_num / $x_den / $n_den;\n  \
    \  return $result =~ /\\./ ? 0 : 1;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num * $n_num /\
    \ $x_den / $n_den;\n    return $result == int($result);\n}", "    my($x_num, $x_den)\
    \ = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result % $den\
    \ == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den)\
    \ = split /\\//, $n;\n    my $res = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($res, $den);\n    return $res / $gcd == $den / $gcd;\n}", " \
    \   my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\\
    //, $n;\n    my $res = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my\
    \ $gcd = gcd($res, $den);\n    return $res / $gcd == $den / $gcd;\n}", "    my($num_x,\
    \ $den_x) = split /\\//, $x;\n    my($num_n, $den_n) = split /\\//, $n;\n    my\
    \ $num = $num_x * $num_n;\n    my $den = $den_x * $den_n;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $res = $x_num * $n_num / ($x_den\
    \ * $n_den);\n    return $res =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_denom) = split(/\\//,\
    \ $x);\n    my($n_num, $n_denom) = split(/\\//, $n);\n    my $result = $x_num\
    \ * $n_num / ($x_denom * $n_denom);\n    return $result =~ /^\\d+$/;\n}", "  \
    \  my($x_num, $x_den) = split('/', $x);\n    my($n_num, $n_den) = split('/', $n);\n\
    \    my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd\
    \ = gcd($result, $den);\n    $result /= $gcd;\n    $den /= $gcd;\n    return $result\
    \ == $den;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n  \
    \  my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result == int($result);\n\
    }", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\\
    //, $n);\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n   \
    \ my $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", "  \
    \  my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result == int($result);\n}",
  "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator)\
    \ = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator *\
    \ $n_denominator);\n    return $result =~ /\\d+/;\n}", "    my($x_num, $x_denom)\
    \ = split '/', $x;\n    my($n_num, $n_denom) = split '/', $n;\n    my $result\
    \ = $x_num * $n_num / ($x_denom * $n_denom);\n    return $result =~ /^\\d+$/;\n\
    }", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $denominator = $x_denominator * $n_denominator;\n    return $result %\
    \ $denominator == 0;\n}", "    my($x_numerator, $x_denominator) = split /\\//,\
    \ $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my $result\
    \ = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n    return\
    \ $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num,\
    \ $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator) =\
    \ split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_numerator, $x_denominator) =\
    \ split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\./ ? 0 : 1;\n}", "    my($x_numerator, $x_denominator)\
    \ = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n\
    \    my $result = $x_numerator * $n_numerator;\n    my $denominator = $x_denominator\
    \ * $n_denominator;\n    return $result % $denominator == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator) = split\
    \ /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator *\
    \ $n_denominator);\n    return $result =~ /\\.[0]+$/ ? 0 : 1;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /\\.0$/;\n}", "    my($x_num, $x_den)\
    \ = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n    my $num\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / $x_denominator / $n_denominator;\n\
    \    return $result =~ /^\\d+$/;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n \
    \   my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    return ($num\
    \ / $gcd) % ($den / $gcd) == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n\
    \    my($n_num, $n_den) = split /\\//, $n;\n    my $num = $x_num * $n_num;\n \
    \   my $den = $x_den * $n_den;\n    my $gcd = gcd($num, $den);\n    return $num\
    \ / $gcd == $den / $gcd;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n   \
    \ my($n_num, $n_den) = split /\\//, $n;\n    my $gcd = gcd($x_den, $n_den);\n\
    \    return ($x_num * $n_num) % ($x_den * $n_den / $gcd) == 0;\n}", "    my($x_num,\
    \ $x_den) = split('/', $x);\n    my($n_num, $n_den) = split('/', $n);\n    my\
    \ $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($result,\
    \ $den);\n    return $result / $gcd == $den / $gcd;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split(/\\//, $x);\n    my($n_num, $n_den) = split(/\\//, $n);\n  \
    \  my $result = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $result\
    \ % $den == 0;\n}", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n\
    \    my($n_numerator, $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator\
    \ * $n_numerator / ($x_denominator * $n_denominator);\n    return $result == int($result);\n\
    }", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split\
    \ /\\//, $n;\n    my $res = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    return $res % $den == 0;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n\
    \    my($n_num, $n_den) = split(/\\//, $n);\n    my $result = $x_num * $n_num;\n\
    \    my $den = $x_den * $n_den;\n    return $result % $den == 0;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator;\n    my $denominator\
    \ = $x_denominator * $n_denominator;\n    return $result % $denominator == 0;\n\
    }", "    my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /\\d+/;\n}", " \
    \   my($x_numerator, $x_denominator) = split(/\\//, $x);\n    my($n_numerator,\
    \ $n_denominator) = split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", " \
    \   my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\\
    //, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my\
    \ $gcd = gcd($num, $den);\n    $num /= $gcd;\n    $den /= $gcd;\n    return $num\
    \ % $den == 0;\n}", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num,\
    \ $n_den) = split /\\//, $n;\n    my $res = $x_num * $n_num;\n    my $den = $x_den\
    \ * $n_den;\n    my $gcd = gcd($res, $den);\n    return $res / $gcd == $den /\
    \ $gcd;\n}", "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n\
    \    my $result_denominator = $x_denominator * $n_denominator;\n    if ($result\
    \ % $result_denominator == 0) {\n        return 1;\n    }\n    return 0;\n}",
  "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//,\
    \ $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my\
    \ $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result =~ /^\\d+$/;\n}", "    my($x_numerator,\
    \ $x_denominator) = split(/\\//, $x);\n    my($n_numerator, $n_denominator) =\
    \ split(/\\//, $n);\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n    my $num\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    return $num % $den ==\
    \ 0;\n}", "    my($x_num, $x_den) = split(/\\//, $x);\n    my($n_num, $n_den)\
    \ = split(/\\//, $n);\n    my $result = $x_num * $n_num / ($x_den * $n_den);\n\
    \    return $result == int($result);\n}", "    my($x_numerator, $x_denominator)\
    \ = split(/\\//, $x);\n    my($n_numerator, $n_denominator) = split(/\\//, $n);\n\
    \    my $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/;\n}", "    my($x_numerator, $x_denominator) = split\
    \ /\\//, $x;\n    my($n_numerator, $n_denominator) = split /\\//, $n;\n    my\
    \ $result = $x_numerator * $n_numerator / ($x_denominator * $n_denominator);\n\
    \    return $result =~ /\\d+/ ? 1 : 0;\n}", "    my($x_num, $x_den) = split /\\\
    //, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my $result = $x_num *\
    \ $n_num / ($x_den * $n_den);\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split /\\//, $n;\n    my\
    \ $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    $num /= $gcd;\n    $den /= $gcd;\n    return $num % $den == 0;\n\
    }", "    my($x_num, $x_den) = split /\\//, $x;\n    my($n_num, $n_den) = split\
    \ /\\//, $n;\n    my $num = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n\
    \    my $gcd = gcd($num, $den);\n    return $num / $gcd == $den / $gcd;\n}", " \
    \   my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator,\
    \ $n_denominator) = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator;\n\
    \    $result %= $x_denominator * $n_denominator;\n    return $result == 0;\n}",
  "    my($x_numerator, $x_denominator) = split /\\//, $x;\n    my($n_numerator, $n_denominator)\
    \ = split /\\//, $n;\n    my $result = $x_numerator * $n_numerator / ($x_denominator\
    \ * $n_denominator);\n    return $result == int($result);\n}", "    my($x_num,\
    \ $x_den) = split '/', $x;\n    my($n_num, $n_den) = split '/', $n;\n    my $num\
    \ = $x_num * $n_num;\n    my $den = $x_den * $n_den;\n    my $gcd = gcd($num,\
    \ $den);\n    return $num / $gcd == $den / $gcd;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

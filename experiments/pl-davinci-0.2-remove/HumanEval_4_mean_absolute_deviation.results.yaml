language: pl
name: HumanEval_4_mean_absolute_deviation
results:
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmppttspedr.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $n\
    \ (@$numbers) {\n        $sum += abs($n - $mean);\n    }\n    return $sum / @$numbers;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpppy19nws.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $abs_diff = 0;\n    foreach my\
    \ $num (@$numbers) {\n        $abs_diff += abs($num - $mean);\n    }\n    return\
    \ $abs_diff / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpqpf2fcuu.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmppttspedr.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [ map {\
    \ abs($_ - $mean) } @$numbers ];\n    return mean($absolute_deviations);\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpr11q64r0.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $num (@$numbers) {\n        push @$deviations, abs($num - $mean);\n    }\n\
    \    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpbv3t2ugq.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1x9lifhd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0tbj0ih5.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum_absolute_deviation) = 0;\n\
    \    foreach my $number (@$numbers) {\n        $sum_absolute_deviation += abs($number\
    \ - $mean);\n    }\n    return $sum_absolute_deviation / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpk8lnfsq1.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / @$numbers;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpe7gkffs6.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [ map { abs($_ -\
    \ $mean) } @$numbers ];\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n     \
    \   if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjldb8oat.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1x9lifhd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [ map { abs($_ -\
    \ $mean) } @$numbers ];\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n     \
    \   if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpjldb8oat.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0tbj0ih5.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpmgqwuugv.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1x9lifhd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    my $n = 0;\n  \
    \  foreach my $x (@$numbers) {\n        $sum += abs($x - $mean);\n        $n++;\n\
    \    }\n    return $sum / $n;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3socgt8t.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0tbj0ih5.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my($mean) = mean($numbers);\n    my($sum) = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp1x9lifhd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $total = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $total += abs($number - $mean);\n    }\n    return $total\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpegb9asq4.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    for my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpcissnrfa.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $abs_diff_sum = 0;\n    foreach\
    \ my $number (@$numbers) {\n        $abs_diff_sum += abs($number - $mean);\n \
    \   }\n    return $abs_diff_sum / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n       \
    \ if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmptx_x887d.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviation = 0;\n    foreach my\
    \ $number (@$numbers) {\n        $deviation += abs($number - $mean);\n    }\n\
    \    return $deviation / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmphh8ak9ss.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum_absolute_deviation = 0;\n\
    \    foreach my $number (@$numbers) {\n        $sum_absolute_deviation += abs($number\
    \ - $mean);\n    }\n    return $sum_absolute_deviation / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp9hx6ys44.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    for my\
    \ $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n  \
    \  }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpql3x1j_v.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $total = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $total += abs($number - $mean);\n    }\n    return $total\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpegb9asq4.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0tbj0ih5.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $n (@$numbers)\
    \ {\n        $sum += abs($n - $mean);\n    }\n    return $sum / scalar(@$numbers);\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n\
    \        if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\"\
    \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpfoch7prd.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $num\
    \ (@$numbers) {\n        $sum += abs($num - $mean);\n    }\n    return $sum /\
    \ scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp0tbj0ih5.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $deviations = [];\n    foreach\
    \ my $number (@$numbers) {\n        push @$deviations, abs($number - $mean);\n\
    \    }\n    return mean($deviations);\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0]),0.5)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0]),1.0)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmprjorb0fn.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / @$numbers;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpa3_k__gh.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $absolute_deviations = [];\n \
    \   foreach my $number (@$numbers) {\n        push @$absolute_deviations, abs($number\
    \ - $mean);\n    }\n    return mean($absolute_deviations);\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&mean_absolute_deviation;\n   \
    \     if(eq_deeply($candidate->([1.0, 2.0]),0.5)) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0,\
    \ 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n  \
    \      if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmpo_g3wy7x.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734
- exit_code: 255
  program: "# For a given list of input numbers, calculate Mean Absolute Deviation\n\
    # around the mean of this dataset.\n# Mean Absolute Deviation is the average absolute\
    \ difference between each\n# element and a centerpoint (mean in this case):\n\
    # MAD = average | x - x_mean |\nsub mean_absolute_deviation {\n    my($numbers)\
    \ = @_;\n    my $mean = mean($numbers);\n    my $sum = 0;\n    foreach my $number\
    \ (@$numbers) {\n        $sum += abs($number - $mean);\n    }\n    return $sum\
    \ / scalar(@$numbers);\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&mean_absolute_deviation;\n        if(eq_deeply($candidate->([1.0, 2.0]),0.5))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1.0,\
    \ 2.0, 3.0, 4.0]),1.0)) {\n        print \"ok!\" }else{\n        exit 1;\n   \
    \     }\n        if(eq_deeply($candidate->([1.0, 2.0, 3.0, 4.0, 5.0]),1.2)) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: 'Undefined subroutine &main::mean called at /tmp/tmp3retm_li.pl line 8.

    '
  stdout: ''
  timestamp: 1660013734

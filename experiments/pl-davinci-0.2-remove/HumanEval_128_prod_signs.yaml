name: HumanEval_128_prod_signs
language: pl
prompt: "# You are given an array arr of integers and you need to return\n# sum of\
  \ magnitudes of integers multiplied by product of all signs\n# of each number in\
  \ the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n# Example:\n\
  sub prod_signs {\n    my($arr) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&prod_signs;\n\
  \        if(eq_deeply($candidate->([1, 2, 2, -4]),-9)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([0, 1]),0))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 1, 1, 2, 3, -1, 1]),-10)) {\n        print \"ok!\" }else{\n        exit 1;\n \
  \       }\n        if(eq_deeply($candidate->([]),undef)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 1,\
  \ 2, -1, -1, 9]),20)) {\n        print \"ok!\" }else{\n        exit 1;\n       \
  \ }\n        if(eq_deeply($candidate->([-1, 1, -1, 1]),4)) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-1, 1,\
  \ 1, 1]),-4)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
  \    if(eq_deeply($candidate->([-1, 1, 1, 0]),0)) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n\
    \        $prod *= $num <=> 0;\n        $sum += abs($num);\n    }\n    return $prod\
    \ * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n\
    \        if ($n == 0) {\n            $prod = 0;\n            next;\n        }\n\
    \        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $prod\
    \ * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n\
    \        $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $prod\
    \ * $sum;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $num (@$arr) {\n        $prod *= $num <=>\
    \ 0;\n        $sum += abs($num);\n    }\n    return $sum * $prod;\n}", "    my\
    \ $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num\
    \ > 0) {\n            $prod *= 1;\n            $sum += $num;\n        } elsif\
    \ ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }", "    return undef if @$arr == 0;\n    my $sum = 0;\n    my $prod = 1;\n  \
    \  for my $num (@$arr) {\n        $sum += abs($num);\n        $prod *= $num <=>\
    \ 0;\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my\
    \ $prod = 1;\n    my $sum = 0;\n    for (@$arr) {\n        $prod *= $_ <=> 0;\n\
    \        $sum += abs($_);\n    }\n    return $sum * $prod;\n}", "    return undef\
    \ if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $e (@$arr) {\n \
    \       $prod *= $e <=> 0;\n        $sum += abs($e);\n    }\n    return $sum *\
    \ $prod;\n}", "    my $sum = 0;\n    my $prod = 1;\n    foreach my $num (@$arr)\
    \ {\n        if ($num > 0) {\n            $sum += $num;\n            $prod *=\
    \ 1;\n        } elsif ($num < 0) {\n            $sum += $num * -1;\n         \
    \   $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n    }\n\
    \    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $x (@$arr) {\n        $prod *= $x <=> 0;\n     \
    \   $sum += abs($x);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num < 0) {\n  \
    \          $prod *= -1;\n        } elsif ($num > 0) {\n            $prod *= 1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($num);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n\
    \            $sum += $num;\n        } elsif ($num < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $n (@$arr) {\n        if ($n > 0) {\n            $prod\
    \ *= 1;\n            $sum += $n;\n        } elsif ($n < 0) {\n            $prod\
    \ *= -1;\n            $sum += -$n;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $prod * $sum;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod\
    \ *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n           \
    \ $prod *= -1;\n            $sum += -$num;\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    return undef if\
    \ !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n    \
    \    $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $sum * $prod;\n\
    }", "    my $prod = 1;\n    my $sum = 0;\n    return undef unless @$arr;\n   \
    \ for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n      \
    \      $sum += $i;\n        } elsif ($i < 0) {\n            $prod *= -1;\n   \
    \         $sum += -$i;\n        } else {\n            $prod *= 0;\n        }\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if @$arr == 0;\n    my\
    \ $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=>\
    \ 0;\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    return\
    \ undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr)\
    \ {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr)\
    \ {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n\
    \        } elsif ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum +=\
    \ abs($num);\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n\
    \    my $prod = 1;\n    my $sum = 0;\n    for (@$arr) {\n        $prod *= $_ <=>\
    \ 0;\n        $sum += abs($_);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i\
    \ > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n            $prod\
    \ *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n        } else\
    \ {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        } else {\n            $prod *= 0;\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum =\
    \ 0;\n    foreach my $n (@$arr) {\n        if ($n > 0) {\n            $prod *=\
    \ 1;\n            $sum += $n;\n        } elsif ($n < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$n;\n        } else {\n            $prod *= 0;\n \
    \       }\n    }\n    return $prod * $sum;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n\
    \        } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n    \
    \        $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $e (@$arr) {\n        if ($e > 0) {\n            $prod *= 1;\n\
    \            $sum += $e;\n        } elsif ($e < 0) {\n            $prod *= -1;\n\
    \            $sum += -$e;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n\
    \    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *=\
    \ 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n            $prod\
    \ *= -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n\
    \    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *=\
    \ $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", " \
    \   return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $num\
    \ (@$arr) {\n        $prod *= $num <=> 0;\n        $sum += abs($num);\n    }\n\
    \    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $n (@$arr) {\n        if ($n > 0) {\n          \
    \  $prod *= 1;\n            $sum += $n;\n        } elsif ($n < 0) {\n        \
    \    $prod *= -1;\n            $sum += -$n;\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n  \
    \          $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0)\
    \ {\n            $prod *= -1;\n            $sum += -$num;\n        }\n    }\n\
    \    return $prod * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $i (@$arr) {\n        $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n\
    \    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n     \
    \   $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n  \
    \          $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0)\
    \ {\n            $prod *= -1;\n            $sum += -$num;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "  \
    \  my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i >\
    \ 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod\
    \ *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n           \
    \ $prod *= -1;\n            $sum += $num * -1;\n        } else {\n           \
    \ $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod =\
    \ 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n \
    \           $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $n (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n\
    \            $sum += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n\
    \            $sum += -$n;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my\
    \ $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=>\
    \ 0;\n        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    return\
    \ undef if !@$arr;\n    my $sign = 1;\n    my $prod = 1;\n    foreach my $e (@$arr)\
    \ {\n        if ($e > 0) {\n            $sign *= 1;\n        } elsif ($e < 0)\
    \ {\n            $sign *= -1;\n        } else {\n            $sign *= 0;\n   \
    \     }\n        $prod *= $e;\n    }\n    return abs($prod) * $sign;\n}", "  \
    \  my $sum = 0;\n    my $prod = 1;\n    foreach my $i (@$arr) {\n        $sum\
    \ += abs($i);\n        $prod *= $i <=> 0;\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $e\
    \ (@$arr) {\n        $prod *= $e <=> 0;\n        $sum += abs($e);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $n (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n          \
    \  $sum += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n       \
    \     $sum += -$n;\n        } else {\n            $prod *= 0;\n        }\n   \
    \ }\n    return $prod * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif\
    \ ($i < 0) {\n            $prod *= -1;\n        } else {\n            $prod *=\
    \ 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n   \
    \ return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n     \
    \   $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n      \
    \      $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n   \
    \     } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n\
    \            $sum += $num;\n        } elsif ($num < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n\
    \        } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n    \
    \        $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum +=\
    \ abs($num);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my\
    \ $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n        \
    \    $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n  \
    \          $prod *= -1;\n            $sum += -$num;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n   \
    \ return $sum * $prod;\n}", "    return unless @$arr;\n    my $prod = 1;\n   \
    \ my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n        $sum\
    \ += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my\
    \ $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n        \
    \    $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n  \
    \          $prod *= -1;\n            $sum += -$num;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if\
    \ ($num < 0) {\n            $prod *= -1;\n        } elsif ($num > 0) {\n     \
    \       $prod *= 1;\n        } else {\n            $prod *= 0;\n        }\n  \
    \      $sum += abs($num);\n    }\n    return $sum * $prod;\n}", "    my $sum =\
    \ 0;\n    my $prod = 1;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n\
    \            $sum += $i;\n            $prod *= 1;\n        } elsif ($i < 0) {\n\
    \            $sum += -$i;\n            $prod *= -1;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $n (@$arr) {\n        if ($n > 0) {\n\
    \            $prod *= 1;\n            $sum += $n;\n        } elsif ($n < 0) {\n\
    \            $prod *= -1;\n            $sum += -$n;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $prod * $sum;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n\
    \            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n    \
    \    } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n        \
    \    $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n    \
    \    } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n        \
    \    $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n\
    \        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    return undef\
    \ if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n \
    \       $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $sum *\
    \ $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr)\
    \ {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0)\
    \ {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n   \
    \     }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my\
    \ $prod = 1;\n    my $sum = 0;\n    foreach my $n (@$arr) {\n        if ($n >\
    \ 0) {\n            $prod *= 1;\n            $sum += $n;\n        } elsif ($n\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$n;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $prod * $sum;\n}", "  \
    \  my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if\
    \ ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n        }\
    \ elsif ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n \
    \       } else {\n            $prod *= 0;\n        }\n    }\n    return $sum *\
    \ $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $elem (@$arr)\
    \ {\n        if ($elem > 0) {\n            $prod *= 1;\n        } elsif ($elem\
    \ < 0) {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n\
    \        }\n        $sum += abs($elem);\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        } else {\n            $prod *= 0;\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n\
    \        } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n    \
    \        $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum +=\
    \ abs($num);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my\
    \ $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n        \
    \    $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n  \
    \          $prod *= -1;\n            $sum += -$num;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num == 0)\
    \ {\n            $prod = 0;\n            last;\n        }\n        elsif ($num\
    \ > 0) {\n            $sum += $num;\n        }\n        else {\n            $sum\
    \ -= $num;\n            $prod *= -1;\n        }\n    }\n    return $prod * $sum;\n\
    }", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        } else {\n            $prod *= 0;\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n   \
    \ my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n\
    \ <=> 0;\n        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "   \
    \ my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num\
    \ > 0) {\n            $prod *= 1;\n            $sum += $num;\n        } elsif\
    \ ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n       \
    \ } else {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n\
    }", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for\
    \ my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum += abs($num);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n\
    \        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        $prod *= $i <=>\
    \ 0;\n        $sum += abs($i);\n    }\n    return $prod * $sum;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i\
    \ > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n\
    \    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *=\
    \ $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", " \
    \   return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $num\
    \ (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum\
    \ += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n         \
    \   $sum += -$num;\n        } else {\n            $prod *= 0;\n        }\n   \
    \ }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif\
    \ ($i < 0) {\n            $prod *= -1;\n        } else {\n            $prod *=\
    \ 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i >\
    \ 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n            $prod\
    \ *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n        } else\
    \ {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        }\n    }\n    return $sum * $prod;\n}", " \
    \   return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i\
    \ (@$arr) {\n        if ($i == 0) {\n            $prod = 0;\n            next;\n\
    \        }\n        $prod *= $i < 0 ? -1 : 1;\n        $sum += abs($i);\n    }\n\
    \    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $sum = 0;\n\
    \    my $prod = 1;\n    for my $n (@$arr) {\n        $sum += abs($n);\n      \
    \  $prod *= $n <=> 0;\n    }\n    return $sum * $prod;\n}", "    return undef\
    \ if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n \
    \       $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum *\
    \ $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n\
    \    for my $n (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n   \
    \         $sum += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n\
    \            $sum += -$n;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n\
    \    foreach my $x (@$arr) {\n        if ($x > 0) {\n            $prod *= 1;\n\
    \            $sum += $x;\n        } elsif ($x < 0) {\n            $prod *= -1;\n\
    \            $sum += -$x;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my\
    \ $prod = 1;\n    my $sum = 0;\n    for (@$arr) {\n        $prod *= $_ > 0 ? 1\
    \ : $_ < 0 ? -1 : 0;\n        $sum += abs($_);\n    }\n    return $prod * $sum;\n\
    }", "    return undef if(!@$arr);\n    my $prod = 1;\n    my $sum = 0;\n    for\
    \ my $num (@$arr) {\n        if($num > 0) {\n            $prod *= 1;\n       \
    \     $sum += $num;\n        } elsif($num < 0) {\n            $prod *= -1;\n \
    \           $sum += -$num;\n        } else {\n            $prod *= 0;\n      \
    \  }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n\
    \    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *=\
    \ 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n            $prod\
    \ *= -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n\
    \    my $prod = 1;\n    my $sum = 0;\n    for (@$arr) {\n        $prod *= $_ <=>\
    \ 0;\n        $sum += abs($_);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        $prod *= $num\
    \ <=> 0;\n        $sum += abs($num);\n    }\n    return $prod * $sum;\n}", " \
    \   return undef if !@$arr;\n    my($sum, $prod) = (0, 1);\n    for my $n (@$arr)\
    \ {\n        $sum += abs($n);\n        $prod *= $n <=> 0;\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $n (@$arr)\
    \ {\n        if ($n > 0) {\n            $prod *= 1;\n            $sum += $n;\n\
    \        } elsif ($n < 0) {\n            $prod *= -1;\n            $sum += -$n;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $prod\
    \ * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr)\
    \ {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0)\
    \ {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n   \
    \     }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    return\
    \ undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr)\
    \ {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum =\
    \ 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n\
    \        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    return undef\
    \ if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n \
    \       $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum *\
    \ $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n\
    \    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n\
    \    }\n    return $sum * $prod;\n}", "    my $sum = 0;\n    my $prod = 1;\n \
    \   for my $i (@$arr) {\n        if ($i > 0) {\n            $sum += $i;\n    \
    \        $prod *= 1;\n        } elsif ($i < 0) {\n            $sum += -$i;\n \
    \           $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n\
    \        } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n    \
    \        $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    return undef if !@$arr;\n    my($prod, $sum) = (1, 0);\n\
    \    for my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n   \
    \         $sum += $i;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \            $sum += -$i;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my\
    \ $sum = 0;\n    my $prod = 1;\n    for my $i (@$arr) {\n        if ($i > 0) {\n\
    \            $sum += $i;\n            $prod *= 1;\n        } elsif ($i < 0) {\n\
    \            $sum += -$i;\n            $prod *= -1;\n        } else {\n      \
    \      $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n   \
    \         $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for (@$arr) {\n        $prod *= $_ <=> 0;\n    \
    \    $sum += abs($_);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $x (@$arr) {\n        my $sign = $x <=> 0;\n   \
    \     $prod *= $sign;\n        $sum += abs($x);\n    }\n    return $prod * $sum;\n\
    }", "    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if\
    \ ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n          \
    \  $prod *= -1;\n        } else {\n            $prod *= 0;\n        }\n      \
    \  $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n  \
    \          $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0)\
    \ {\n            $prod *= -1;\n            $sum += -$num;\n        }\n    }\n\
    \    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num == 0) {\n            $prod = 0;\n      \
    \      last;\n        }\n        elsif ($num > 0) {\n            $sum += $num;\n\
    \        }\n        else {\n            $sum -= $num;\n            $prod *= -1;\n\
    \        }\n    }\n    return $prod * $sum;\n}", "    return undef if scalar(@$arr)\
    \ == 0;\n    return sum(map {abs($_) * sign($_)} @$arr);\n}", "    my $prod =\
    \ 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        if ($n > 0) {\n     \
    \       $prod *= 1;\n            $sum += $n;\n        } elsif ($n < 0) {\n   \
    \         $prod *= -1;\n            $sum += -$n;\n        } else {\n         \
    \   $prod *= 0;\n        }\n    }\n    return $prod * $sum;\n}", "    return undef\
    \ if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n \
    \       $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum *\
    \ $prod;\n}", "    my $sum = 0;\n    my $prod = 1;\n    foreach my $x (@$arr)\
    \ {\n        $sum += abs($x);\n        $prod *= $x <=> 0;\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $n (@$arr)\
    \ {\n        if ($n > 0) {\n            $prod *= 1;\n            $sum += $n;\n\
    \        } elsif ($n < 0) {\n            $prod *= -1;\n            $sum += -$n;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $prod\
    \ * $sum;\n}", "    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n\
    \        if ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n\
    \            $prod *= -1;\n        } else {\n            $prod *= 0;\n       \
    \ }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n   \
    \         $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $n (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n\
    \            $sum += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n\
    \            $sum += -$n;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my\
    \ $sum = 0;\n    my $prod = 1;\n    for my $n (@$arr) {\n        $sum += abs($n);\n\
    \        $prod *= $n <=> 0;\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $i (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif\
    \ ($i < 0) {\n            $prod *= -1;\n        } else {\n            $prod *=\
    \ 0;\n        }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}",
  "    my $sum = 0;\n    my $prod = 1;\n    for my $i (@$arr) {\n        if ($i >\
    \ 0) {\n            $sum += $i;\n            $prod *= 1;\n        } elsif ($i\
    \ < 0) {\n            $sum += -$i;\n            $prod *= -1;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "  \
    \  return undef if scalar(@$arr) == 0;\n    my $sum = 0;\n    my $prod = 1;\n\
    \    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $sum += $num;\n\
    \            $prod *= 1;\n        } elsif ($num < 0) {\n            $sum += -$num;\n\
    \            $prod *= -1;\n        } else {\n            $prod *= 0;\n       \
    \ }\n    }\n    return $sum * $prod;\n}", "    return unless @$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n\
    \        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if\
    \ ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n        }\
    \ elsif ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n \
    \       } else {\n            $prod *= 0;\n        }\n    }\n    return $sum *\
    \ $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr)\
    \ {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n\
    \        } elsif ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr)\
    \ {\n        if ($num == 0) {\n            $prod = 0;\n            last;\n   \
    \     }\n        $prod *= $num <=> 0;\n        $sum += abs($num);\n    }\n   \
    \ return $prod * $sum;\n}", "    my $sum = 0;\n    my $prod = 1;\n    foreach\
    \ my $n (@$arr) {\n        $sum += abs($n);\n        $prod *= $n <=> 0;\n    }\n\
    \    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        } else {\n            $prod *= 0;\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n   \
    \ my $prod = 1;\n    my $sum = 0;\n    for my $num (@$arr) {\n        $prod *=\
    \ $num <=> 0;\n        $sum += abs($num);\n    }\n    return $sum * $prod;\n}",
  "    return unless @$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i (@$arr)\
    \ {\n        $prod *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr)\
    \ {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0)\
    \ {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n   \
    \     }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my\
    \ $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        $prod *=\
    \ $i <=> 0;\n        $sum += abs($i);\n    }\n    return $prod * $sum;\n}", " \
    \   return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $x\
    \ (@$arr) {\n        $prod *= $x <=> 0;\n        $sum += abs($x);\n    }\n   \
    \ return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $sum = 0;\n \
    \   my $prod = 1;\n    for my $n (@$arr) {\n        $sum += abs($n);\n       \
    \ $prod *= sign($n);\n    }\n    return $sum * $prod;\n}", "    my $sum = 0;\n\
    \    my $prod = 1;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n \
    \           $sum += $num;\n            $prod *= 1;\n        } elsif ($num < 0)\
    \ {\n            $sum += -$num;\n            $prod *= -1;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "  \
    \  return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $i\
    \ (@$arr) {\n        if ($i > 0) {\n            $prod *= 1;\n            $sum\
    \ += $i;\n        } elsif ($i < 0) {\n            $prod *= -1;\n            $sum\
    \ += -$i;\n        } else {\n            $prod *= 0;\n        }\n    }\n    return\
    \ $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum\
    \ = 0;\n    for my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum\
    \ += abs($num);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n   \
    \ my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n         \
    \   $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n      \
    \  } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n  \
    \  }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n   \
    \ foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n\
    \            $sum += $num;\n        } elsif ($num < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    return undef if @$arr ==\
    \ 0;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod\
    \ *= $n <=> 0;\n        $sum += abs($n);\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n    }\n   \
    \ return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += -$num;\n        } else {\n            $prod *= 0;\n     \
    \   }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum =\
    \ 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n            $prod *=\
    \ 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n        } else {\n\
    \            $prod *= 0;\n        }\n        $sum += abs($i);\n    }\n    return\
    \ $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum\
    \ = 0;\n    for (@$arr) {\n        $prod *= $_ <=> 0;\n        $sum += abs($_);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my($prod,\
    \ $sum) = (1, 0);\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n     \
    \   $sum += abs($i);\n    }\n    return $prod * $sum;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n          \
    \  $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n       \
    \ } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n   \
    \ }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        $prod *= $i <=> 0;\n\
    \        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i\
    \ > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $num (@$arr) {\n        if ($num == 0) {\n            $prod\
    \ = 0;\n            last;\n        }\n        $sum += abs($num);\n        $prod\
    \ *= ($num > 0 ? 1 : -1);\n    }\n    return $prod * $sum;\n}", "    return undef\
    \ if !@$arr;\n    my $sum = 0;\n    my $prod = 1;\n    for my $i (@$arr) {\n \
    \       $sum += abs($i);\n        $prod *= $i == 0 ? 1 : $i / abs($i);\n    }\n\
    \    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $n (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n          \
    \  $sum += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n       \
    \     $sum += -$n;\n        } else {\n            $prod *= 0;\n        }\n   \
    \ }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n\
    \        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i > 0) {\n\
    \            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n\
    \            $sum += $num;\n        } elsif ($num < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    my $sum = 0;\n    my $prod\
    \ = 1;\n    foreach my $i (@$arr) {\n        $sum += abs($i);\n        $prod *=\
    \ $i <=> 0;\n    }\n    return $sum * $prod;\n}", "    my $sum = 0;\n    my $prod\
    \ = 1;\n    foreach my $num (@$arr) {\n        if ($num == 0) {\n            $prod\
    \ = 0;\n            last;\n        }\n        $sum += abs($num);\n        $prod\
    \ *= ($num < 0 ? -1 : 1);\n    }\n    return $prod * $sum;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $i (@$arr) {\n        if ($i > 0) {\n   \
    \         $prod *= 1;\n        } elsif ($i < 0) {\n            $prod *= -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n        $sum += abs($i);\n\
    \    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n\
    \        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        $prod\
    \ *= $i <=> 0;\n        $sum += abs($i);\n    }\n    return $prod * $sum;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n            $sum\
    \ += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n            $sum\
    \ += -$n;\n        } else {\n            $prod *= 0;\n        }\n    }\n    return\
    \ $sum * $prod;\n}", "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum\
    \ = 0;\n    for my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum\
    \ += abs($num);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n   \
    \ my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num == 0) {\n    \
    \        $prod = 0;\n            next;\n        }\n        $prod *= $num <=> 0;\n\
    \        $sum += abs($num);\n    }\n    return $prod * $sum;\n}", "    return\
    \ undef if scalar(@$arr) == 0;\n    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        $prod *= $num <=> 0;\n        $sum += abs($num);\n\
    \    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n \
    \   foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n\
    \            $sum += $num;\n        } elsif ($num < 0) {\n            $prod *=\
    \ -1;\n            $sum += -$num;\n        } else {\n            $prod *= 0;\n\
    \        }\n    }\n    return $sum * $prod;\n}", "    return undef if !@$arr;\n\
    \    my $sum = 0;\n    my $prod = 1;\n    for my $x (@$arr) {\n        $sum +=\
    \ abs($x);\n        $prod *= $x <=> 0;\n    }\n    return $sum * $prod;\n}", " \
    \   my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if\
    \ ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n        }\
    \ elsif ($num < 0) {\n            $prod *= -1;\n            $sum += $num * -1;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr)\
    \ {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n\
    \        } elsif ($num < 0) {\n            $prod *= -1;\n            $sum += $num\
    \ * -1;\n        } else {\n            $prod *= 0;\n        }\n    }\n    return\
    \ $sum * $prod;\n}", "    return undef if !@$arr;\n    my($prod, $sum) = (1, 0);\n\
    \    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n\
    \    }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $n (@$arr) {\n        $prod *= $n <=> 0;\n\
    \        $sum += abs($n);\n    }\n    return $sum * $prod;\n}", "    my $prod\
    \ = 1;\n    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0)\
    \ {\n            $prod *= 1;\n            $sum += $num;\n        } elsif ($num\
    \ < 0) {\n            $prod *= -1;\n            $sum += -$num;\n        } else\
    \ {\n            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}",
  "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr) {\n        if ($i\
    \ > 0) {\n            $prod *= 1;\n        } elsif ($i < 0) {\n            $prod\
    \ *= -1;\n        } else {\n            $prod *= 0;\n        }\n        $sum +=\
    \ abs($i);\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum\
    \ = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n            $prod\
    \ *= 1;\n            $sum += $num;\n        } elsif ($num < 0) {\n           \
    \ $prod *= -1;\n            $sum += -$num;\n        } else {\n            $prod\
    \ *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "    my $prod = 1;\n\
    \    my $sum = 0;\n    foreach my $num (@$arr) {\n        if ($num > 0) {\n  \
    \          $prod *= 1;\n            $sum += $num;\n        } elsif ($num < 0)\
    \ {\n            $prod *= -1;\n            $sum += -$num;\n        } else {\n\
    \            $prod *= 0;\n        }\n    }\n    return $sum * $prod;\n}", "  \
    \  my $sum = 0;\n    my $prod = 1;\n    foreach my $n (@$arr) {\n        $sum\
    \ += abs($n);\n        $prod *= $n <=> 0;\n    }\n    return $sum * $prod;\n}",
  "    return undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $n\
    \ (@$arr) {\n        if ($n > 0) {\n            $prod *= 1;\n            $sum\
    \ += $n;\n        } elsif ($n < 0) {\n            $prod *= -1;\n            $sum\
    \ += -$n;\n        } else {\n            $prod *= 0;\n        }\n    }\n    return\
    \ $sum * $prod;\n}", "    my $sum = 0;\n    my $prod = 1;\n    foreach my $num\
    \ (@$arr) {\n        $sum += abs($num);\n        $prod *= $num <=> 0;\n    }\n\
    \    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $n (@$arr) {\n        if ($n == 0) {\n            $prod = 0;\n          \
    \  last;\n        }\n        $prod *= $n <=> 0;\n        $sum += abs($n);\n  \
    \  }\n    return $prod * $sum;\n}", "    return undef if !@$arr;\n    my $prod\
    \ = 1;\n    my $sum = 0;\n    for my $x (@$arr) {\n        $prod *= $x <=> 0;\n\
    \        $sum += abs($x);\n    }\n    return $sum * $prod;\n}", "    my $sum =\
    \ 0;\n    my $prod = 1;\n    for my $num (@$arr) {\n        $sum += abs($num);\n\
    \        $prod *= $num <=> 0;\n    }\n    return $sum * $prod;\n}", "    return\
    \ undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    for my $num (@$arr)\
    \ {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum += $num;\n\
    \        } elsif ($num < 0) {\n            $prod *= -1;\n            $sum += -$num;\n\
    \        } else {\n            $prod *= 0;\n        }\n    }\n    return $sum\
    \ * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $i (@$arr)\
    \ {\n        if ($i > 0) {\n            $prod *= 1;\n        } elsif ($i < 0)\
    \ {\n            $prod *= -1;\n        } else {\n            $prod *= 0;\n   \
    \     }\n        $sum += abs($i);\n    }\n    return $sum * $prod;\n}", "    return\
    \ undef if !@$arr;\n    my $prod = 1;\n    my $sum = 0;\n    foreach my $num (@$arr)\
    \ {\n        $prod *= $num <=> 0;\n        $sum += abs($num);\n    }\n    return\
    \ $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach my $num\
    \ (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n            $sum\
    \ += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n         \
    \   $sum += -$num;\n        } else {\n            $prod *= 0;\n        }\n   \
    \ }\n    return $sum * $prod;\n}", "    my $prod = 1;\n    my $sum = 0;\n    foreach\
    \ my $num (@$arr) {\n        if ($num > 0) {\n            $prod *= 1;\n      \
    \      $sum += $num;\n        } elsif ($num < 0) {\n            $prod *= -1;\n\
    \            $sum += $num * -1;\n        } else {\n            $prod *= 0;\n \
    \       }\n    }\n    return $sum * $prod;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

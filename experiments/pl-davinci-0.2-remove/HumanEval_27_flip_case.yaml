name: HumanEval_27_flip_case
language: pl
prompt: "# For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\nsub flip_case {\n    my($string) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&flip_case;\n\
  \        if(eq_deeply($candidate->(\"\"),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(\"Hello!\"),\"hELLO!\"\
  )) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  These violent delights have violent ends\"),\"tHESE VIOLENT DELIGHTS HAVE VIOLENT\
  \ ENDS\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $flipped = '';\n    foreach my $char (split //, $string) {\n\
    \        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n        }\n\
    \        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n     \
    \   }\n        else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}",
  "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped = '';\n   \
    \ foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/) {\n  \
    \          $flipped .= uc $char;\n        } elsif ($char =~ /[A-Z]/) {\n     \
    \       $flipped .= lc $char;\n        } else {\n            $flipped .= $char;\n\
    \        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my($flipped)\
    \ = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my($flipped)\
    \ = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    my($flipped) = '';\n    my($char);\n    foreach $char (split(//, $string))\
    \ {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n   \
    \     } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n     \
    \   } else {\n            $flipped .= $char;\n        }\n    }\n    return $flipped;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    my($flipped) = '';\n    foreach my $char (split(//,\
    \ $string)) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n\
    \        } elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n  \
    \      } else {\n            $flipped .= $char;\n        }\n    }\n    return\
    \ $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}",
  "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my($flipped)\
    \ = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        }\n        else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    my($flipped)\
    \ = \"\";\n    my($i);\n    for($i = 0; $i < length($string); $i++) {\n\tmy($char)\
    \ = substr($string, $i, 1);\n\tif($char =~ /[a-z]/) {\n\t    $char =~ tr/a-z/A-Z/;\n\
    \t}\n\telsif($char =~ /[A-Z]/) {\n\t    $char =~ tr/A-Z/a-z/;\n\t}\n\t$flipped\
    \ .= $char;\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    my $flipped\
    \ = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my($flipped)\
    \ = \"\";\n    my($i);\n    for($i = 0; $i < length($string); $i++) {\n\tmy($c)\
    \ = substr($string, $i, 1);\n\tif($c =~ /[a-z]/) {\n\t    $c =~ tr/a-z/A-Z/;\n\
    \t} elsif($c =~ /[A-Z]/) {\n\t    $c =~ tr/A-Z/a-z/;\n\t}\n\t$flipped .= $c;\n\
    \    }\n    return $flipped;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return\
    \ $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", " \
    \   $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    my $flipped = '';\n    foreach my $char (split(//, $string)) {\n    \
    \    if ($char =~ /[a-z]/) {\n            $flipped .= uc($char);\n        } elsif\
    \ ($char =~ /[A-Z]/) {\n            $flipped .= lc($char);\n        } else {\n\
    \            $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", " \
    \   $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my($flipped)\
    \ = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = '';\n    foreach my $char (split //, $string) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc $char;\n        }\n        elsif ($char =~ /[A-Z]/)\
    \ {\n            $flipped .= lc $char;\n        }\n        else {\n          \
    \  $flipped .= $char;\n        }\n    }\n    return $flipped;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    my $flipped = \"\";\n    for my $char (split //,\
    \ $string) {\n        if ($char =~ /[a-z]/) {\n            $flipped .= uc $char;\n\
    \        }\n        elsif ($char =~ /[A-Z]/) {\n            $flipped .= lc $char;\n\
    \        }\n        else {\n            $flipped .= $char;\n        }\n    }\n\
    \    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my($flipped)\
    \ = '';\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string\
    \ =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n\
    \    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n\
    }", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    my $flipped\
    \ = \"\";\n    foreach my $char (split(//, $string)) {\n        if ($char =~ /[a-z]/)\
    \ {\n            $flipped .= uc($char);\n        } elsif ($char =~ /[A-Z]/) {\n\
    \            $flipped .= lc($char);\n        } else {\n            $flipped .=\
    \ $char;\n        }\n    }\n    return $flipped;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}", "    $string =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n\
    }", "    $string =~ tr/A-Za-z/a-zA-Z/;\n    return $string;\n}", "    $string\
    \ =~ tr/a-zA-Z/A-Za-z/;\n    return $string;\n}", "    $string =~ tr/A-Za-z/a-zA-Z/;\n\
    \    return $string;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

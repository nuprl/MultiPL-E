name: HumanEval_156_int_to_mini_roman
language: pl
prompt: "# Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  # and return it in lowercase.\n# Restrictions: 1 <= num <= 1000\n# Examples:\nsub\
  \ int_to_mini_roman {\n    my($number) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&int_to_mini_roman;\n\
  \        if(eq_deeply($candidate->(19),\"xix\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->(152),\"clii\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(251),\"\
  ccli\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(426),\"\
  cdxxvi\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(500),\"d\")) {\n        print \"ok!\" }else{\n     \
  \   exit 1;\n        }\n        if(eq_deeply($candidate->(1),\"i\")) {\n       \
  \ print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(4),\"\
  iv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(43),\"\
  xliii\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(90),\"\
  xc\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(94),\"\
  xciv\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(532),\"\
  dxxxii\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n       \
  \ if(eq_deeply($candidate->(900),\"cm\")) {\n        print \"ok!\" }else{\n    \
  \    exit 1;\n        }\n        if(eq_deeply($candidate->(994),\"cmxciv\")) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(1000),\"\
  m\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = '';\n    my $i = 0;\n    my @roman = ('i', 'v', 'x');\n\
    \    while ($number > 0) {\n        my $digit = $number % 10;\n        if ($digit\
    \ == 4) {\n            $result = $roman[$i] . $roman[$i+1] . $result;\n      \
    \  } elsif ($digit == 9) {\n            $result = $roman[$i] . $roman[$i+2] .\
    \ $result;\n        } else {\n            if ($digit >= 5) {\n               \
    \ $result = $roman[$i+1] . $result;\n                $digit -= 5;\n          \
    \  }\n            $result = $roman[$i] x $digit . $result;\n        }\n      \
    \  $number = int($number / 10);\n        $i += 2;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $numeral;\n    my $digit;\n    my $i = 0;\n \
    \   my @numerals = ('m', 'c', 'x', 'i');\n    my @values = (1000, 100, 10, 1);\n\
    \    while ($number > 0) {\n        $digit = $number / $values[$i];\n        $number\
    \ -= $digit * $values[$i];\n        $numeral = $numerals[$i];\n        if ($digit\
    \ < 4) {\n            $roman .= $numeral x $digit;\n        } elsif ($digit ==\
    \ 4) {\n            $roman .= $numeral . $numerals[$i - 1];\n        } elsif ($digit\
    \ == 5) {\n            $roman .= $numerals[$i - 1];\n        } elsif ($digit <\
    \ 9) {\n            $roman .= $numerals[$i - 1] . $numeral x ($digit - 5);\n \
    \       } else {\n            $roman .= $numeral . $numerals[$i - 2];\n      \
    \  }\n        $i++;\n    }\n    return $roman;\n}", "    my $roman = \"\";\n \
    \   my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        $roman = $roman_digits[$i] x $digit . $roman;\n        $number = int($number\
    \ / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        if ($digit == 4) {\n            $result = $mini_roman_digits[$i] . $mini_roman_digits[$i+1]\
    \ . $result;\n        } elsif ($digit == 9) {\n            $result = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i+2] . $result;\n        } else {\n            $result\
    \ = ($mini_roman_digits[$i] x ($digit % 5)) . $result;\n            $result =\
    \ $mini_roman_digits[$i+1] . $result if $digit >= 5;\n        }\n        $number\
    \ = int($number / 10);\n        $i += 2;\n    }\n    return $result;\n}", "  \
    \  my $result = \"\";\n    my $remainder = $number;\n    while ($remainder >=\
    \ 1000) {\n        $result .= \"m\";\n        $remainder -= 1000;\n    }\n   \
    \ if ($remainder >= 900) {\n        $result .= \"cm\";\n        $remainder -=\
    \ 900;\n    }\n    if ($remainder >= 500) {\n        $result .= \"d\";\n     \
    \   $remainder -= 500;\n    }\n    if ($remainder >= 400) {\n        $result .=\
    \ \"cd\";\n        $remainder -= 400;\n    }\n    while ($remainder >= 100) {\n\
    \        $result .= \"c\";\n        $remainder -= 100;\n    }\n    if ($remainder\
    \ >= 90) {\n        $result .= \"xc\";\n        $remainder -= 90;\n    }\n   \
    \ if ($remainder >= 50) {\n        $result .= \"l\";\n        $remainder -= 50;\n\
    \    }\n    if ($remainder >= 40) {\n        $result .= \"xl\";\n        $remainder\
    \ -= 40;\n    }\n    while ($remainder >= 10) {\n        $result .= \"x\";\n \
    \       $remainder -= 10;\n    }\n    if ($remainder >= 9) {\n        $result\
    \ .= \"ix\";\n        $remainder -= 9;\n    }\n    if ($remainder >= 5) {\n  \
    \      $result .= \"v\";\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= \"iv\";\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= \"i\";\n        $remainder -= 1;\n \
    \   }\n    return $result;\n}", "    my $result = '';\n    my $i;\n    my @roman_numerals\
    \ = qw(I V X L C D M);\n    my @values = (1, 5, 10, 50, 100, 500, 1000);\n   \
    \ my $j = 0;\n    for ($i = $#values; $i >= 0; $i--) {\n        while ($number\
    \ >= $values[$i]) {\n            $result .= $roman_numerals[$i];\n           \
    \ $number -= $values[$i];\n        }\n        if ($i > 0) {\n            if ($number\
    \ >= $values[$i] - $values[$i - 2]) {\n                $result .= $roman_numerals[$i\
    \ - 2] . $roman_numerals[$i];\n                $number -= $values[$i] - $values[$i\
    \ - 2];\n            }\n            elsif ($number >= $values[$i] - $values[$i\
    \ - 1]) {\n                $result .= $roman_numerals[$i - 1] . $roman_numerals[$i];\n\
    \                $number -= $values[$i] - $values[$i - 1];\n            }\n  \
    \      }\n    }\n    return $result;\n}", "    my($result);\n    my(@numerals)\
    \ = (\n        ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n\
    \        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n     \
    \   ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['',\
    \ 'm', 'mm', 'mmm', '', '', '', '', '', ''],\n    );\n    my($digit);\n    my($i);\n\
    \    for ($i = 0; $i < 4; $i++) {\n        $digit = $number % 10;\n        $number\
    \ = int($number / 10);\n        $result = $numerals[$i][$digit] . $result;\n \
    \   }\n    return $result;\n}", "    my $roman = '';\n    my $numeral;\n    my\
    \ $digit;\n    my $i = 0;\n    my @roman_numerals = ('m', 'c', 'x', 'i');\n  \
    \  my @arabic_numerals = (1000, 100, 10, 1);\n    while ($number > 0) {\n    \
    \    $digit = $number % 10;\n        if ($digit % 5 < 4) {\n            $numeral\
    \ = $roman_numerals[$i] x $digit;\n        } elsif ($digit == 9) {\n         \
    \   $numeral = $roman_numerals[$i] . $roman_numerals[$i - 1];\n        } elsif\
    \ ($digit == 4) {\n            $numeral = $roman_numerals[$i] . $roman_numerals[$i\
    \ + 1];\n        } elsif ($digit > 4) {\n            $numeral = $roman_numerals[$i\
    \ + 1] . $roman_numerals[$i] x ($digit - 5);\n        }\n        $roman = $numeral\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $numeral = '';\n    my $digit = 0;\n\
    \    my $i = 0;\n    my @roman_numerals = ('m', 'cm', 'd', 'cd', 'c', 'xc', 'l',\
    \ 'xl', 'x', 'ix', 'v', 'iv', 'i');\n    my @decimal_numbers = (1000, 900, 500,\
    \ 400, 100, 90, 50, 40, 10, 9, 5, 4, 1);\n    while ($number > 0) {\n        $digit\
    \ = $number % 10;\n        if ($digit == 9) {\n            $numeral = $roman_numerals[$i];\n\
    \            $roman = $numeral . $roman;\n            $number -= 9;\n        }\n\
    \        elsif ($digit >= 5) {\n            $numeral = $roman_numerals[$i + 1];\n\
    \            $roman = $numeral . $roman;\n            $number -= 5;\n        }\n\
    \        elsif ($digit == 4) {\n            $numeral = $roman_numerals[$i];\n\
    \            $roman = $numeral . $roman;\n            $number -= 4;\n        }\n\
    \        elsif ($digit >= 1) {\n            $numeral = $roman_numerals[$i + 2];\n\
    \            $roman = $numeral . $roman;\n            $number -= 1;\n        }\n\
    \        $i += 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n    my\
    \ $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n    \
    \    $number = int($number / 10);\n        if ($digit == 9) {\n            $roman\
    \ = $mini_roman_numerals[$i + 1] . $roman;\n        } elsif ($digit >= 5) {\n\
    \            $roman = $mini_roman_numerals[$i] . ($mini_roman_numerals[$i] x ($digit\
    \ - 5)) . $roman;\n        } elsif ($digit == 4) {\n            $roman = $mini_roman_numerals[$i]\
    \ . $mini_roman_numerals[$i + 1] . $roman;\n        } else {\n            $roman\
    \ = ($mini_roman_numerals[$i] x $digit) . $roman;\n        }\n        $i += 2;\n\
    \    }\n    return $roman;\n}", "    my $result = '';\n    my $numeral;\n    my\
    \ $value;\n    my $i;\n    my @numerals = qw(i v x l c d m);\n    my @values =\
    \ (1, 5, 10, 50, 100, 500, 1000);\n    for ($i = 6; $i >= 0; $i--) {\n       \
    \ $numeral = $numerals[$i];\n        $value = $values[$i];\n        while ($number\
    \ >= $value) {\n            $result .= $numeral;\n            $number -= $value;\n\
    \        }\n    }\n    return $result;\n}", "    my $result = \"\";\n    my $i;\n\
    \    my @numerals = qw(i v x l c d m);\n    my @values = (1, 5, 10, 50, 100, 500,\
    \ 1000);\n    my $index = 6;\n    while ($number > 0) {\n        my $power = int(log($number)/log(10));\n\
    \        my $coeff = int($number/10**$power);\n        $number -= $coeff * 10**$power;\n\
    \        if ($coeff == 9) {\n            $result .= $numerals[$index - 2*$power]\
    \ . $numerals[$index];\n        } elsif ($coeff >= 5) {\n            $result .=\
    \ $numerals[$index - $power];\n            $coeff -= 5;\n            $result .=\
    \ $numerals[$index - 2*$power] x $coeff;\n        } elsif ($coeff == 4) {\n  \
    \          $result .= $numerals[$index - 2*$power] . $numerals[$index - $power];\n\
    \        } else {\n            $result .= $numerals[$index - 2*$power] x $coeff;\n\
    \        }\n    }\n    return $result;\n}", "    my $result = \"\";\n    my $i\
    \ = 0;\n    while ($number > 0) {\n        if ($number >= $mini_roman_numerals[$i])\
    \ {\n            $result .= $mini_roman_numerals[$i];\n            $number -=\
    \ $mini_roman_numerals[$i];\n        } else {\n            $i++;\n        }\n\
    \    }\n    return $result;\n}", "    my($result) = '';\n    my(@numerals) = qw(i\
    \ v x l c d m);\n    my($i) = 0;\n    while($number > 0) {\n        my($digit)\
    \ = $number % 10;\n        if($digit == 9) {\n            $result = $numerals[$i]\
    \ . $numerals[$i + 2] . $result;\n        } elsif($digit == 4) {\n           \
    \ $result = $numerals[$i] . $numerals[$i + 1] . $result;\n        } else {\n \
    \           if($digit >= 5) {\n                $result = $numerals[$i + 1] . $result;\n\
    \                $digit -= 5;\n            }\n            $result = $numerals[$i]\
    \ x $digit . $result;\n        }\n        $number /= 10;\n        $i += 2;\n \
    \   }\n    return $result;\n}", "    my($result) = \"\";\n    my($i);\n    my(@roman)\
    \ = (\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\"\
    , \"v\", \"iv\", \"i\");\n    my(@decimal) = (1000, 900, 500, 400, 100, 90, 50,\
    \ 40, 10, 9, 5, 4, 1);\n    for ($i = 0; $i < scalar(@decimal); $i++) {\n    \
    \    while ($number >= $decimal[$i]) {\n            $result .= $roman[$i];\n \
    \           $number -= $decimal[$i];\n        }\n    }\n    return $result;\n}",
  "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if ($number\
    \ >= $roman_numerals[$i]->[0]) {\n            $roman .= $roman_numerals[$i]->[1];\n\
    \            $number -= $roman_numerals[$i]->[0];\n        } else {\n        \
    \    $i++;\n        }\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $n = $number;\n    while ($n >= 100) {\n        $result .= 'c';\n    \
    \    $n -= 100;\n    }\n    if ($n >= 90) {\n        $result .= 'xc';\n      \
    \  $n -= 90;\n    }\n    if ($n >= 50) {\n        $result .= 'l';\n        $n\
    \ -= 50;\n    }\n    if ($n >= 40) {\n        $result .= 'xl';\n        $n -=\
    \ 40;\n    }\n    while ($n >= 10) {\n        $result .= 'x';\n        $n -= 10;\n\
    \    }\n    if ($n >= 9) {\n        $result .= 'ix';\n        $n -= 9;\n    }\n\
    \    if ($n >= 5) {\n        $result .= 'v';\n        $n -= 5;\n    }\n    if\
    \ ($n >= 4) {\n        $result .= 'iv';\n        $n -= 4;\n    }\n    while ($n\
    \ >= 1) {\n        $result .= 'i';\n        $n -= 1;\n    }\n    return $result;\n\
    }", "    my $result = '';\n    while ($number > 0) {\n        if ($number >= 1000)\
    \ {\n            $result .= 'm';\n            $number -= 1000;\n        } elsif\
    \ ($number >= 900) {\n            $result .= 'cm';\n            $number -= 900;\n\
    \        } elsif ($number >= 500) {\n            $result .= 'd';\n           \
    \ $number -= 500;\n        } elsif ($number >= 400) {\n            $result .=\
    \ 'cd';\n            $number -= 400;\n        } elsif ($number >= 100) {\n   \
    \         $result .= 'c';\n            $number -= 100;\n        } elsif ($number\
    \ >= 90) {\n            $result .= 'xc';\n            $number -= 90;\n       \
    \ } elsif ($number >= 50) {\n            $result .= 'l';\n            $number\
    \ -= 50;\n        } elsif ($number >= 40) {\n            $result .= 'xl';\n  \
    \          $number -= 40;\n        } elsif ($number >= 10) {\n            $result\
    \ .= 'x';\n            $number -= 10;\n        } elsif ($number >= 9) {\n    \
    \        $result .= 'ix';\n            $number -= 9;\n        } elsif ($number\
    \ >= 5) {\n            $result .= 'v';\n            $number -= 5;\n        } elsif\
    \ ($number >= 4) {\n            $result .= 'iv';\n            $number -= 4;\n\
    \        } else {\n            $result .= 'i';\n            $number -= 1;\n  \
    \      }\n    }\n    return $result;\n}", "    my $result = '';\n    my $remainder\
    \ = $number;\n    while ($remainder >= 1000) {\n        $result .= 'm';\n    \
    \    $remainder -= 1000;\n    }\n    if ($remainder >= 900) {\n        $result\
    \ .= 'cm';\n        $remainder -= 900;\n    }\n    if ($remainder >= 500) {\n\
    \        $result .= 'd';\n        $remainder -= 500;\n    }\n    if ($remainder\
    \ >= 400) {\n        $result .= 'cd';\n        $remainder -= 400;\n    }\n   \
    \ while ($remainder >= 100) {\n        $result .= 'c';\n        $remainder -=\
    \ 100;\n    }\n    if ($remainder >= 90) {\n        $result .= 'xc';\n       \
    \ $remainder -= 90;\n    }\n    if ($remainder >= 50) {\n        $result .= 'l';\n\
    \        $remainder -= 50;\n    }\n    if ($remainder >= 40) {\n        $result\
    \ .= 'xl';\n        $remainder -= 40;\n    }\n    while ($remainder >= 10) {\n\
    \        $result .= 'x';\n        $remainder -= 10;\n    }\n    if ($remainder\
    \ >= 9) {\n        $result .= 'ix';\n        $remainder -= 9;\n    }\n    if ($remainder\
    \ >= 5) {\n        $result .= 'v';\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= 'iv';\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= 'i';\n        $remainder -= 1;\n   \
    \ }\n    return $result;\n}", "    my $roman = \"\";\n    my $i = 0;\n    while\
    \ ($number) {\n        my $digit = $number % 10;\n        $number /= 10;\n   \
    \     if ($digit == 9) {\n            $roman = $mini_roman_digits[$i+1] . $roman;\n\
    \        } elsif ($digit >= 5) {\n            $roman = $mini_roman_digits[$i]\
    \ . ($mini_roman_digits[$i] x ($digit-5)) . $roman;\n        } elsif ($digit ==\
    \ 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i+1]\
    \ . $roman;\n        } else {\n            $roman = ($mini_roman_digits[$i] x\
    \ $digit) . $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n}",
  "    my $result = '';\n    my $i = 0;\n    while ($number > 0) {\n        if ($number\
    \ >= $mini_roman_numerals[$i]->[0]) {\n            $result .= $mini_roman_numerals[$i]->[1];\n\
    \            $number -= $mini_roman_numerals[$i]->[0];\n        } else {\n   \
    \         $i++;\n        }\n    }\n    return $result;\n}", "    my $result =\
    \ '';\n    my $i;\n    my @roman_numerals = qw(i v x l c d m);\n    my @decimal_values\
    \ = (1, 5, 10, 50, 100, 500, 1000);\n    my @subtractive_values = (0, 0, 10, 10,\
    \ 100, 100, 1000);\n    my $num_digits = length($number);\n    my $digit;\n  \
    \  my $subtractive_value;\n    my $decimal_value;\n    my $roman_numeral;\n  \
    \  my $next_roman_numeral;\n    my $next_decimal_value;\n    my $next_subtractive_value;\n\
    \    my $next_digit;\n    my $next_num_digits;\n    my $next_number;\n    my $next_result;\n\
    \    my $next_i;\n    my $next_roman_numeral;\n    my $next_decimal_value;\n \
    \   my $next_subtractive_value;\n    my $next_digit;\n    my $next_num_digits;\n\
    \    my $next_number;\n    my $next_result;\n    my $next_i;\n    my $next_roman_numeral;\n\
    \    my $next_decimal_value;\n    my $next_subtractive_value;\n    my $next_digit;\n\
    \    my $next_num_digits;\n    my $next_number;\n    my $next_result;\n    my\
    \ $next_i;\n    my $next_roman_numeral;\n    my $next_decimal_value;\n    my $next_subtractive_value;\n\
    \    my $next_digit;\n    my $next_num_digits;\n    my $next_number;\n    my $next_result;\n\
    \    my $next_i;\n    my $next_roman_numeral;\n    my $next_decimal_value;\n \
    \   my $next_subtractive_value;\n    my $next_digit;\n    my $next_num_digits;\n\
    \    my $next_number;\n    my $next_result;\n    my $", "    my $roman = '';\n\
    \    my @roman_numerals = qw(i v x l c d m);\n    my @arabic_numerals = (1, 5,\
    \ 10, 50, 100, 500, 1000);\n    my $i = 6;\n    while ($number > 0) {\n      \
    \  my $power = int(log($number)/log(10));\n        my $power_of_ten = 10**$power;\n\
    \        my $digit = int($number/$power_of_ten);\n        $number -= $digit *\
    \ $power_of_ten;\n        if ($digit <= 3) {\n            $roman .= $roman_numerals[$i]\
    \ x $digit;\n        } elsif ($digit == 4) {\n            $roman .= $roman_numerals[$i]\
    \ . $roman_numerals[$i+1];\n        } elsif ($digit == 5) {\n            $roman\
    \ .= $roman_numerals[$i+1];\n        } elsif ($digit <= 8) {\n            $roman\
    \ .= $roman_numerals[$i+1] . $roman_numerals[$i] x ($digit-5);\n        } else\
    \ {\n            $roman .= $roman_numerals[$i] . $roman_numerals[$i+2];\n    \
    \    }\n        $i -= 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my @numerals = qw(i v x l c d m);\n    my $i = 0;\n    while ($number) {\n\
    \        my $digit = $number % 10;\n        $roman = _int_to_mini_roman_digit($digit,\
    \ $numerals[$i]) . $roman;\n        $number = int($number / 10);\n        $i +=\
    \ 2;\n    }\n    return $roman;\n}", "    my $result = '';\n    my $numeral =\
    \ '';\n    my $numeral_value = 0;\n    my $numeral_count = 0;\n    my $remainder\
    \ = 0;\n    my $i = 0;\n    my $j = 0;\n    my @numerals = (\n        ['m', 1000],\n\
    \        ['d', 500],\n        ['c', 100],\n        ['l', 50],\n        ['x', 10],\n\
    \        ['v', 5],\n        ['i', 1]\n    );\n    if ($number < 1 || $number >\
    \ 1000) {\n        return '';\n    }\n    for ($i = 0; $i < scalar(@numerals);\
    \ $i++) {\n        $numeral = $numerals[$i][0];\n        $numeral_value = $numerals[$i][1];\n\
    \        $numeral_count = int($number / $numeral_value);\n        $remainder =\
    \ $number % $numeral_value;\n        for ($j = 0; $j < $numeral_count; $j++) {\n\
    \            $result .= $numeral;\n        }\n        $number = $remainder;\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    my @roman_numerals = qw(i v x l c d m);\n    my $i = 0;\n    while ($remainder\
    \ > 0) {\n        my $digit = $remainder % 10;\n        if ($digit == 4) {\n \
    \           $result = $roman_numerals[$i] . $roman_numerals[$i + 1] . $result;\n\
    \        } elsif ($digit == 9) {\n            $result = $roman_numerals[$i] .\
    \ $roman_numerals[$i + 2] . $result;\n        } else {\n            my $five =\
    \ $roman_numerals[$i + 1];\n            my $one = $roman_numerals[$i];\n     \
    \       if ($digit >= 5) {\n                $result = $five . $result;\n     \
    \           $digit -= 5;\n            }\n            $result = $one x $digit .\
    \ $result;\n        }\n        $remainder = int($remainder / 10);\n        $i\
    \ += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my $numeral;\n\
    \    my $digit;\n    my $i = 0;\n    my @numerals = qw(i v x l c d m);\n    while\
    \ ($number) {\n        $digit = $number % 10;\n        $number = int($number /\
    \ 10);\n        $numeral = '';\n        if ($digit < 4) {\n            $numeral\
    \ .= $numerals[$i] x $digit;\n        } elsif ($digit == 4) {\n            $numeral\
    \ = $numerals[$i] . $numerals[$i+1];\n        } elsif ($digit == 5) {\n      \
    \      $numeral = $numerals[$i+1];\n        } elsif ($digit < 9) {\n         \
    \   $numeral = $numerals[$i+1] . $numerals[$i] x ($digit-5);\n        } elsif\
    \ ($digit == 9) {\n            $numeral = $numerals[$i] . $numerals[$i+2];\n \
    \       }\n        $roman = $numeral . $roman;\n        $i += 2;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $num = $number;\n    my $i = 0;\n\
    \    while ($num > 0) {\n        my $digit = $num % 10;\n        if ($digit ==\
    \ 9) {\n            $roman = $mini_roman_digits[$i + 1] . $roman;\n        }\n\
    \        elsif ($digit >= 5) {\n            $roman = $mini_roman_digits[$i] .\
    \ ($mini_roman_digits[$i] x ($digit - 5)) . $roman;\n        }\n        elsif\
    \ ($digit == 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i\
    \ + 1] . $roman;\n        }\n        else {\n            $roman = ($mini_roman_digits[$i]\
    \ x $digit) . $roman;\n        }\n        $num = int($num / 10);\n        $i +=\
    \ 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n  \
    \  while ($number) {\n        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i][$digit]\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n\
    \        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i] x\
    \ $digit . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n\
    \    return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        $number = int($number / 10);\n\
    \        if ($digit == 9) {\n            $roman = $mini_roman_digits[$i + 1] .\
    \ $roman;\n        } elsif ($digit >= 5) {\n            $roman = $mini_roman_digits[$i]\
    \ . ($mini_roman_digits[$i] x ($digit - 5)) . $roman;\n        } elsif ($digit\
    \ == 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i\
    \ + 1] . $roman;\n        } else {\n            $roman = ($mini_roman_digits[$i]\
    \ x $digit) . $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $numeral;\n    my $value;\n    my $i;\n    my\
    \ $j;\n    my $k;\n    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n\
    \    my $q;\n    my $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my\
    \ $w;\n    my $x;\n    my $y;\n    my $z;\n    my $aa;\n    my $bb;\n    my $cc;\n\
    \    my $dd;\n    my $ee;\n    my $ff;\n    my $gg;\n    my $hh;\n    my $ii;\n\
    \    my $jj;\n    my $kk;\n    my $ll;\n    my $mm;\n    my $nn;\n    my $oo;\n\
    \    my $pp;\n    my $qq;\n    my $rr;\n    my $ss;\n    my $tt;\n    my $uu;\n\
    \    my $vv;\n    my $ww;\n    my $xx;\n    my $yy;\n    my $zz;\n    my $aaa;\n\
    \    my $bbb;\n    my $ccc;\n    my $ddd;\n    my $eee;\n    my $fff;\n    my\
    \ $ggg;\n    my $hhh;\n    my $iii;\n    my $jjj;\n    my $kkk;\n    my $lll;\n\
    \    my $mmm;\n    my $nnn;\n    my $ooo;\n    my $ppp;\n    my $qqq;\n    my\
    \ $rrr;\n    my $sss;\n    my $ttt;\n    my $uuu;\n    my $vvv;\n    my $www;\n\
    \    my $xxx;\n    my $yyy;\n    my $zzz;\n    my $aaaa;\n    my $bbbb;\n    my\
    \ $cccc;\n    my $dddd;\n    my $eeee;\n    my $ffff;\n    my $gggg;\n    my $hhhh;\n",
  "    my($result) = \"\";\n    my($digit);\n    my($i);\n    my(@roman_digits) =\
    \ (\"m\", \"cm\", \"d\", \"cd\", \"c\", \"xc\", \"l\", \"xl\", \"x\", \"ix\",\
    \ \"v\", \"iv\", \"i\");\n    my(@arabic_digits) = (1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1);\n    if ($number < 1 || $number > 1000) {\n   \
    \     return \"\";\n    }\n    $i = 0;\n    while ($number > 0) {\n        $digit\
    \ = int($number / $arabic_digits[$i]);\n        $number -= $digit * $arabic_digits[$i];\n\
    \        $result .= $roman_digits[$i] x $digit;\n        $i++;\n    }\n    return\
    \ $result;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number > 0)\
    \ {\n        if ($number >= $roman_numerals[$i]->[0]) {\n            $roman .=\
    \ $roman_numerals[$i]->[1];\n            $number -= $roman_numerals[$i]->[0];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        $roman = $mini_roman_digits[$i] x $digit . $roman;\n\
    \        $number = int($number / 10);\n        $i++;\n    }\n    return $roman;\n\
    }", "    my $roman = '';\n    my $numeral;\n    my $value;\n    my $i;\n    my\
    \ %roman2int = (I => 1, V => 5, X => 10, L => 50, C => 100, D => 500, M => 1000);\n\
    \    my @int2roman = reverse sort {$a <=> $b} keys %roman2int;\n    while ($number)\
    \ {\n        for ($i = 0; $i < @int2roman; $i++) {\n            if ($number >=\
    \ $int2roman[$i]) {\n                $number -= $int2roman[$i];\n            \
    \    $roman .= $roman2int{$int2roman[$i]};\n                last;\n          \
    \  }\n        }\n    }\n    return $roman;\n}", "    my $result = '';\n    my\
    \ $digit;\n    my $i = 0;\n    my @roman_digits = qw(i v x l c d m);\n    my @arabic_digits\
    \ = (1, 5, 10, 50, 100, 500, 1000);\n    while ($number) {\n        $digit = $number\
    \ % 10;\n        if ($digit < 4) {\n            $result = ($roman_digits[$i] x\
    \ $digit) . $result;\n        }\n        elsif ($digit == 4) {\n            $result\
    \ = $roman_digits[$i] . $roman_digits[$i+1] . $result;\n        }\n        elsif\
    \ ($digit == 5) {\n            $result = $roman_digits[$i+1] . $result;\n    \
    \    }\n        elsif ($digit < 9) {\n            $result = $roman_digits[$i+1]\
    \ . ($roman_digits[$i] x ($digit-5)) . $result;\n        }\n        else {\n \
    \           $result = $roman_digits[$i] . $roman_digits[$i+2] . $result;\n   \
    \     }\n        $number = int($number / 10);\n        $i += 2;\n    }\n    return\
    \ $result;\n}", "    my($result) = '';\n    my(@numerals) = qw(i v x l c d m);\n\
    \    my($i) = 0;\n    while ($number) {\n        my($digit) = $number % 10;\n\
    \        if ($digit == 9) {\n            $result = $numerals[$i] . $numerals[$i\
    \ + 2] . $result;\n        } elsif ($digit == 4) {\n            $result = $numerals[$i]\
    \ . $numerals[$i + 1] . $result;\n        } else {\n            $result = ($numerals[$i\
    \ + 1] x int($digit / 5)) .\n                      ($numerals[$i] x ($digit %\
    \ 5)) . $result;\n        }\n        $number = int($number / 10);\n        $i\
    \ += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my $digit =\
    \ 0;\n    my $numeral = '';\n    my @numerals = ('m', 'cm', 'd', 'cd', 'c', 'xc',\
    \ 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i');\n    my @values = (1000, 900, 500, 400,\
    \ 100, 90, 50, 40, 10, 9, 5, 4, 1);\n    while ($number > 0) {\n        $digit\
    \ = int($number / $values[$numeral]);\n        $number -= $digit * $values[$numeral];\n\
    \        $roman .= $numerals[$numeral] x $digit;\n        $numeral++;\n    }\n\
    \    return $roman;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    while ($remainder > 0) {\n        if ($remainder >= 1000) {\n           \
    \ $result .= 'm';\n            $remainder -= 1000;\n        } elsif ($remainder\
    \ >= 900) {\n            $result .= 'cm';\n            $remainder -= 900;\n  \
    \      } elsif ($remainder >= 500) {\n            $result .= 'd';\n          \
    \  $remainder -= 500;\n        } elsif ($remainder >= 400) {\n            $result\
    \ .= 'cd';\n            $remainder -= 400;\n        } elsif ($remainder >= 100)\
    \ {\n            $result .= 'c';\n            $remainder -= 100;\n        } elsif\
    \ ($remainder >= 90) {\n            $result .= 'xc';\n            $remainder -=\
    \ 90;\n        } elsif ($remainder >= 50) {\n            $result .= 'l';\n   \
    \         $remainder -= 50;\n        } elsif ($remainder >= 40) {\n          \
    \  $result .= 'xl';\n            $remainder -= 40;\n        } elsif ($remainder\
    \ >= 10) {\n            $result .= 'x';\n            $remainder -= 10;\n     \
    \   } elsif ($remainder >= 9) {\n            $result .= 'ix';\n            $remainder\
    \ -= 9;\n        } elsif ($remainder >= 5) {\n            $result .= 'v';\n  \
    \          $remainder -= 5;\n        } elsif ($remainder >= 4) {\n           \
    \ $result .= 'iv';\n            $remainder -= 4;\n        } else {\n         \
    \   $result .= 'i';\n            $remainder -= 1;\n        }\n    }\n    return\
    \ $result;\n}", "    my $roman = '';\n    my $i = 0;\n    my @numerals = qw(i\
    \ v x l c d m);\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        if ($digit == 9) {\n            $roman = $numerals[$i] . $numerals[$i\
    \ + 2] . $roman;\n        } elsif ($digit == 4) {\n            $roman = $numerals[$i]\
    \ . $numerals[$i + 1] . $roman;\n        } else {\n            $roman = ($numerals[$i\
    \ + 1] x int($digit / 5)) . ($numerals[$i] x ($digit % 5)) . $roman;\n       \
    \ }\n        $number = int($number / 10);\n        $i += 2;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number) {\n \
    \       my $digit = $number % 10;\n        $number /= 10;\n        if ($digit\
    \ == 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i\
    \ + 1] . $roman;\n        } elsif ($digit == 9) {\n            $roman = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i + 2] . $roman;\n        } else {\n            if ($digit\
    \ >= 5) {\n                $roman = $mini_roman_digits[$i + 1] . $roman;\n   \
    \             $digit -= 5;\n            }\n            $roman = $mini_roman_digits[$i]\
    \ x $digit . $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my($roman_numeral) = '';\n    my(@roman_numerals) = ('m', 'cm', 'd',\
    \ 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i');\n    my(@integers) =\
    \ (1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1);\n    for (my $i = 0;\
    \ $i < scalar(@integers); $i++) {\n        while ($number >= $integers[$i]) {\n\
    \            $roman_numeral .= $roman_numerals[$i];\n            $number -= $integers[$i];\n\
    \        }\n    }\n    return $roman_numeral;\n}", "    my $roman = '';\n    my\
    \ $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n    \
    \    $roman = $mini_roman_digits[$i] x $digit . $roman;\n        $number = int($number\
    \ / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $remainder = $number;\n    while ($remainder > 0) {\n        if ($remainder\
    \ >= 1000) {\n            $result .= 'm';\n            $remainder -= 1000;\n \
    \       } elsif ($remainder >= 900) {\n            $result .= 'cm';\n        \
    \    $remainder -= 900;\n        } elsif ($remainder >= 500) {\n            $result\
    \ .= 'd';\n            $remainder -= 500;\n        } elsif ($remainder >= 400)\
    \ {\n            $result .= 'cd';\n            $remainder -= 400;\n        } elsif\
    \ ($remainder >= 100) {\n            $result .= 'c';\n            $remainder -=\
    \ 100;\n        } elsif ($remainder >= 90) {\n            $result .= 'xc';\n \
    \           $remainder -= 90;\n        } elsif ($remainder >= 50) {\n        \
    \    $result .= 'l';\n            $remainder -= 50;\n        } elsif ($remainder\
    \ >= 40) {\n            $result .= 'xl';\n            $remainder -= 40;\n    \
    \    } elsif ($remainder >= 10) {\n            $result .= 'x';\n            $remainder\
    \ -= 10;\n        } elsif ($remainder >= 9) {\n            $result .= 'ix';\n\
    \            $remainder -= 9;\n        } elsif ($remainder >= 5) {\n         \
    \   $result .= 'v';\n            $remainder -= 5;\n        } elsif ($remainder\
    \ >= 4) {\n            $result .= 'iv';\n            $remainder -= 4;\n      \
    \  } else {\n            $result .= 'i';\n            $remainder -= 1;\n     \
    \   }\n    }\n    return $result;\n}", "    my $roman = '';\n    my @roman_numerals\
    \ = (\n        ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n\
    \        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n     \
    \   ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['',\
    \ 'm', 'mm', 'mmm', '', '', '', '', '', ''],\n    );\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        my $digit = $number % 10;\n        $roman = $roman_numerals[$i][$digit]\
    \ . $roman;\n        $number /= 10;\n        $i++;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $remainder = $number;\n    while ($remainder\
    \ > 0) {\n        if ($remainder >= 1000) {\n            $result .= 'm';\n   \
    \         $remainder -= 1000;\n        } elsif ($remainder >= 900) {\n       \
    \     $result .= 'cm';\n            $remainder -= 900;\n        } elsif ($remainder\
    \ >= 500) {\n            $result .= 'd';\n            $remainder -= 500;\n   \
    \     } elsif ($remainder >= 400) {\n            $result .= 'cd';\n          \
    \  $remainder -= 400;\n        } elsif ($remainder >= 100) {\n            $result\
    \ .= 'c';\n            $remainder -= 100;\n        } elsif ($remainder >= 90)\
    \ {\n            $result .= 'xc';\n            $remainder -= 90;\n        } elsif\
    \ ($remainder >= 50) {\n            $result .= 'l';\n            $remainder -=\
    \ 50;\n        } elsif ($remainder >= 40) {\n            $result .= 'xl';\n  \
    \          $remainder -= 40;\n        } elsif ($remainder >= 10) {\n         \
    \   $result .= 'x';\n            $remainder -= 10;\n        } elsif ($remainder\
    \ >= 9) {\n            $result .= 'ix';\n            $remainder -= 9;\n      \
    \  } elsif ($remainder >= 5) {\n            $result .= 'v';\n            $remainder\
    \ -= 5;\n        } elsif ($remainder >= 4) {\n            $result .= 'iv';\n \
    \           $remainder -= 4;\n        } else {\n            $result .= 'i';\n\
    \            $remainder -= 1;\n        }\n    }\n    return $result;\n}", "  \
    \  my $roman = '';\n    my $numeral = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        $numeral = $mini_roman_numerals[$i];\n        while ($number\
    \ >= $mini_roman_values[$i]) {\n            $roman .= $numeral;\n            $number\
    \ -= $mini_roman_values[$i];\n        }\n        $i++;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $i;\n    my $roman_numeral = {\n        1 =>\
    \ 'i',\n        5 => 'v',\n        10 => 'x',\n        50 => 'l',\n        100\
    \ => 'c',\n        500 => 'd',\n        1000 => 'm',\n    };\n    my $roman_numeral_order\
    \ = [1000, 500, 100, 50, 10, 5, 1];\n    my $roman_numeral_subtractive = {\n \
    \       4 => 'iv',\n        9 => 'ix',\n        40 => 'xl',\n        90 => 'xc',\n\
    \        400 => 'cd',\n        900 => 'cm',\n    };\n    my $roman_numeral_subtractive_order\
    \ = [900, 400, 90, 40, 9, 4];", "    my %roman_numerals = (\n        1 => 'i',\n\
    \        4 => 'iv',\n        5 => 'v',\n        9 => 'ix',\n        10 => 'x',\n\
    \        40 => 'xl',\n        50 => 'l',\n        90 => 'xc',\n        100 =>\
    \ 'c',\n        400 => 'cd',\n        500 => 'd',\n        900 => 'cm',\n    \
    \    1000 => 'm',\n    );\n    my $result = '';\n    my @keys = sort { $b <=>\
    \ $a } keys %roman_numerals;\n    while ($number > 0) {\n        foreach my $key\
    \ (@keys) {\n            if ($number >= $key) {\n                $result .= $roman_numerals{$key};\n\
    \                $number -= $key;\n                last;\n            }\n    \
    \    }\n    }\n    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n\
    \    while ($number > 0) {\n        if ($number >= $roman_numerals[$i]->[0]) {\n\
    \            $roman .= $roman_numerals[$i]->[1];\n            $number -= $roman_numerals[$i]->[0];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $roman;\n}",
  "    my $result = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        if ($digit == 9) {\n            $result = $MINI_ROMAN_DIGITS[$i+1]\
    \ . $result;\n            $digit = 1;\n        }\n        elsif ($digit == 4)\
    \ {\n            $result = $MINI_ROMAN_DIGITS[$i] . $MINI_ROMAN_DIGITS[$i+1] .\
    \ $result;\n            $digit = 0;\n        }\n        elsif ($digit >= 5) {\n\
    \            $result = $MINI_ROMAN_DIGITS[$i+1] . $result;\n            $digit\
    \ -= 5;\n        }\n        $result = ($MINI_ROMAN_DIGITS[$i] x $digit) . $result;\n\
    \        $number = int($number / 10);\n        $i += 2;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my @numerals = qw(i v x l c d m);\n    my $i = 0;\n\
    \    while ($number > 0) {\n        my $digit = $number % 10;\n        if ($digit\
    \ == 9) {\n            $roman = $numerals[$i] . $numerals[$i + 2] . $roman;\n\
    \        } elsif ($digit == 4) {\n            $roman = $numerals[$i] . $numerals[$i\
    \ + 1] . $roman;\n        } else {\n            $roman = ($numerals[$i + 1] x\
    \ int($digit / 5)) . ($numerals[$i] x ($digit % 5)) . $roman;\n        }\n   \
    \     $number = int($number / 10);\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $remainder = $number;\n    my $temp = 0;\n \
    \   my $i = 0;\n    my @numerals = qw(i v x l c d m);\n    my @values = (1, 5,\
    \ 10, 50, 100, 500, 1000);\n    while ($remainder > 0) {\n        $temp = $remainder\
    \ % 10;\n        if ($temp == 4) {\n            $result = $numerals[$i] . $numerals[$i\
    \ + 1] . $result;\n        }\n        elsif ($temp == 9) {\n            $result\
    \ = $numerals[$i] . $numerals[$i + 2] . $result;\n        }\n        else {\n\
    \            $result = $numerals[$i + 1] x int($temp / 5) .\n                $numerals[$i]\
    \ x ($temp % 5) . $result;\n        }\n        $remainder = int($remainder / 10);\n\
    \        $i += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my\
    \ $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n    \
    \    $number = int($number / 10);\n        if ($digit == 4) {\n            $roman\
    \ = $MINI_ROMAN_DIGITS[$i] . $MINI_ROMAN_DIGITS[$i + 1] . $roman;\n        } elsif\
    \ ($digit == 9) {\n            $roman = $MINI_ROMAN_DIGITS[$i] . $MINI_ROMAN_DIGITS[$i\
    \ + 2] . $roman;\n        } else {\n            if ($digit >= 5) {\n         \
    \       $roman = $MINI_ROMAN_DIGITS[$i + 1] . $roman;\n                $digit\
    \ -= 5;\n            }\n            $roman = $MINI_ROMAN_DIGITS[$i] x $digit .\
    \ $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n}", "    my\
    \ $result = '';\n    my $remainder = $number;\n    my $digit;\n    my $roman;\n\
    \    my %roman_digits = (\n        1 => 'i',\n        5 => 'v',\n        10 =>\
    \ 'x',\n        50 => 'l',\n        100 => 'c',\n        500 => 'd',\n       \
    \ 1000 => 'm',\n    );\n    my @divisors = sort { $b <=> $a } keys %roman_digits;\n\
    \    foreach my $divisor (@divisors) {\n        $digit = int($remainder / $divisor);\n\
    \        $remainder %= $divisor;\n        $roman = $roman_digits{$divisor};\n\
    \        if ($digit == 4) {\n            $result .= $roman . $roman_digits{$divisor\
    \ * 5};\n        }\n        elsif ($digit == 9) {\n            $result .= $roman\
    \ . $roman_digits{$divisor * 10};\n        }\n        else {\n            $result\
    \ .= $roman x $digit;\n        }\n    }\n    return $result;\n}", "    my $roman\
    \ = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit = $number\
    \ % 10;\n        if ($digit == 4) {\n            $roman = $ROMAN_DIGITS[$i] .\
    \ $ROMAN_DIGITS[$i+1] . $roman;\n        } elsif ($digit == 9) {\n           \
    \ $roman = $ROMAN_DIGITS[$i] . $ROMAN_DIGITS[$i+2] . $roman;\n        } else {\n\
    \            $roman = ($ROMAN_DIGITS[$i] x ($digit % 5)) . $roman;\n         \
    \   $roman = $ROMAN_DIGITS[$i+1] . $roman if $digit >= 5;\n        }\n       \
    \ $number /= 10;\n        $i += 2;\n    }\n    return $roman;\n}", "    my $roman\
    \ = '';\n    my $i = 0;\n    my @roman_numerals = qw(i v x l c d m);\n    while\
    \ ($number > 0) {\n        my $digit = $number % 10;\n        if ($digit == 9)\
    \ {\n            $roman = $roman_numerals[$i] . $roman_numerals[$i + 2] . $roman;\n\
    \        } elsif ($digit >= 5) {\n            $roman = $roman_numerals[$i + 1]\
    \ . $roman_numerals[$i] x ($digit - 5) . $roman;\n        } elsif ($digit == 4)\
    \ {\n            $roman = $roman_numerals[$i] . $roman_numerals[$i + 1] . $roman;\n\
    \        } else {\n            $roman = $roman_numerals[$i] x $digit . $roman;\n\
    \        }\n        $number /= 10;\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $remainder = $number;\n    while ($remainder\
    \ > 0) {\n        if ($remainder >= 1000) {\n            $result .= 'm';\n   \
    \         $remainder -= 1000;\n        } elsif ($remainder >= 900) {\n       \
    \     $result .= 'cm';\n            $remainder -= 900;\n        } elsif ($remainder\
    \ >= 500) {\n            $result .= 'd';\n            $remainder -= 500;\n   \
    \     } elsif ($remainder >= 400) {\n            $result .= 'cd';\n          \
    \  $remainder -= 400;\n        } elsif ($remainder >= 100) {\n            $result\
    \ .= 'c';\n            $remainder -= 100;\n        } elsif ($remainder >= 90)\
    \ {\n            $result .= 'xc';\n            $remainder -= 90;\n        } elsif\
    \ ($remainder >= 50) {\n            $result .= 'l';\n            $remainder -=\
    \ 50;\n        } elsif ($remainder >= 40) {\n            $result .= 'xl';\n  \
    \          $remainder -= 40;\n        } elsif ($remainder >= 10) {\n         \
    \   $result .= 'x';\n            $remainder -= 10;\n        } elsif ($remainder\
    \ >= 9) {\n            $result .= 'ix';\n            $remainder -= 9;\n      \
    \  } elsif ($remainder >= 5) {\n            $result .= 'v';\n            $remainder\
    \ -= 5;\n        } elsif ($remainder >= 4) {\n            $result .= 'iv';\n \
    \           $remainder -= 4;\n        } else {\n            $result .= 'i';\n\
    \            $remainder -= 1;\n        }\n    }\n    return $result;\n}", "  \
    \  my $roman = '';\n    my $numeral;\n    my $digit;\n    my $i = 0;\n    while\
    \ ($number) {\n        $digit = $number % 10;\n        $number = int($number /\
    \ 10);\n        $numeral = '';\n        if ($digit < 4) {\n            $numeral\
    \ .= 'i' x $digit;\n        } elsif ($digit == 4) {\n            $numeral = 'iv';\n\
    \        } elsif ($digit < 9) {\n            $numeral = 'v' . 'i' x ($digit -\
    \ 5);\n        } elsif ($digit == 9) {\n            $numeral = 'ix';\n       \
    \ }\n        if ($i == 0) {\n            $roman = $numeral;\n        } else {\n\
    \            $roman = $numeral . ('x' x $i) . $roman;\n        }\n        $i++;\n\
    \    }\n    return $roman;\n}", "    my $roman_numeral = '';\n    my $remainder\
    \ = $number;\n    while ($remainder > 0) {\n        if ($remainder >= 1000) {\n\
    \            $roman_numeral .= 'm';\n            $remainder -= 1000;\n       \
    \ } elsif ($remainder >= 900) {\n            $roman_numeral .= 'cm';\n       \
    \     $remainder -= 900;\n        } elsif ($remainder >= 500) {\n            $roman_numeral\
    \ .= 'd';\n            $remainder -= 500;\n        } elsif ($remainder >= 400)\
    \ {\n            $roman_numeral .= 'cd';\n            $remainder -= 400;\n   \
    \     } elsif ($remainder >= 100) {\n            $roman_numeral .= 'c';\n    \
    \        $remainder -= 100;\n        } elsif ($remainder >= 90) {\n          \
    \  $roman_numeral .= 'xc';\n            $remainder -= 90;\n        } elsif ($remainder\
    \ >= 50) {\n            $roman_numeral .= 'l';\n            $remainder -= 50;\n\
    \        } elsif ($remainder >= 40) {\n            $roman_numeral .= 'xl';\n \
    \           $remainder -= 40;\n        } elsif ($remainder >= 10) {\n        \
    \    $roman_numeral .= 'x';\n            $remainder -= 10;\n        } elsif ($remainder\
    \ >= 9) {\n            $roman_numeral .= 'ix';\n            $remainder -= 9;\n\
    \        } elsif ($remainder >= 5) {\n            $roman_numeral .= 'v';\n   \
    \         $remainder -= 5;\n        } elsif ($remainder >= 4) {\n            $roman_numeral\
    \ .= 'iv';\n            $remainder -= 4;\n        } else {\n            $roman_numeral\
    \ .= 'i';\n            $remainder -= 1;\n        }\n    }\n    return $roman_numeral;\n\
    }", "    my $result = '';\n    my @numerals = qw(i v x l c d m);\n    my $index\
    \ = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n       \
    \ if ($digit == 4) {\n            $result = $numerals[$index] . $numerals[$index\
    \ + 1] . $result;\n        } elsif ($digit == 9) {\n            $result = $numerals[$index]\
    \ . $numerals[$index + 2] . $result;\n        } else {\n            my $roman\
    \ = '';\n            if ($digit >= 5) {\n                $roman = $numerals[$index\
    \ + 1];\n                $digit -= 5;\n            }\n            $roman .= $numerals[$index]\
    \ x $digit;\n            $result = $roman . $result;\n        }\n        $number\
    \ = int($number / 10);\n        $index += 2;\n    }\n    return $result;\n}",
  "    my $result = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        if ($digit == 4) {\n            $result = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i + 1] . $result;\n        } elsif ($digit == 9) {\n \
    \           $result = $mini_roman_digits[$i] . $mini_roman_digits[$i + 2] . $result;\n\
    \        } else {\n            if ($digit >= 5) {\n                $result = $mini_roman_digits[$i\
    \ + 1] . $result;\n                $digit -= 5;\n            }\n            $result\
    \ = $mini_roman_digits[$i] x $digit . $result;\n        }\n        $number = int($number\
    \ / 10);\n        $i += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n\
    \    my @roman_numerals = (\n        ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii',\
    \ 'viii', 'ix'],\n        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx',\
    \ 'xc'],\n        ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n\
    \        ['', 'm', 'mm', 'mmm', '', '', '', '', '', ''],\n    );\n    my $digit\
    \ = 0;\n    while ($number) {\n        my $digit_value = $number % 10;\n     \
    \   $roman = $roman_numerals[$digit][$digit_value] . $roman;\n        $number\
    \ = int($number / 10);\n        $digit++;\n    }\n    return $roman;\n}", "  \
    \  my $roman = \"\";\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        if ($digit == 4) {\n            $roman = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i+1] . $roman;\n        } elsif ($digit == 9) {\n    \
    \        $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i+2] . $roman;\n\
    \        } else {\n            $roman = ($mini_roman_digits[$i] x ($digit % 5))\
    \ . $roman;\n            $roman = $mini_roman_digits[$i+1] . $roman if ($digit\
    \ >= 5);\n        }\n        $number /= 10;\n        $i += 2;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number > 0)\
    \ {\n        my $digit = $number % 10;\n        if ($digit == 9) {\n         \
    \   $result = $MINI_ROMAN_DIGITS[$i+1] . $result;\n            $number -= 9;\n\
    \        } elsif ($digit >= 5) {\n            $result = $MINI_ROMAN_DIGITS[$i]\
    \ . $result;\n            $number -= 5;\n        } elsif ($digit == 4) {\n   \
    \         $result = $MINI_ROMAN_DIGITS[$i+1] . $MINI_ROMAN_DIGITS[$i] . $result;\n\
    \            $number -= 4;\n        } else {\n            $result = $MINI_ROMAN_DIGITS[$i]\
    \ x $digit . $result;\n            $number -= $digit;\n        }\n        $i +=\
    \ 2;\n    }\n    return $result;\n}", "    my($roman) = '';\n    my(@numerals)\
    \ = (\n        ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n\
    \        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n     \
    \   ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['',\
    \ 'm', 'mm', 'mmm', '', '', '', '', '', ''],\n    );\n    my($i);\n    for ($i\
    \ = 0; $i < 4; $i++) {\n        $roman = $numerals[$i][$number % 10] . $roman;\n\
    \        $number = int($number / 10);\n    }\n    return $roman;\n}", "    my\
    \ $result = '';\n    my $numeral;\n    my $value;\n    my $i;\n    my @mini_roman_numerals\
    \ = (\n        ['m', 1000],\n        ['cm', 900],\n        ['d', 500],\n     \
    \   ['cd', 400],\n        ['c', 100],\n        ['xc', 90],\n        ['l', 50],\n\
    \        ['xl', 40],\n        ['x', 10],\n        ['ix', 9],\n        ['v', 5],\n\
    \        ['iv', 4],\n        ['i', 1],\n    );\n    foreach $i (0 .. $#mini_roman_numerals)\
    \ {\n        ($numeral, $value) = @{$mini_roman_numerals[$i]};\n        while\
    \ ($number >= $value) {\n            $result .= $numeral;\n            $number\
    \ -= $value;\n        }\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    my $remainder = $number;\n    my $i = 0;\n    while ($remainder > 0) {\n\
    \        my $digit = $remainder % 10;\n        $remainder = int($remainder / 10);\n\
    \        if ($digit == 0) {\n            $i++;\n            next;\n        }\n\
    \        my $roman_digit = $mini_roman_digits[$i];\n        if ($digit == 4) {\n\
    \            $result = $roman_digit . $result;\n            $digit = 1;\n    \
    \    }\n        elsif ($digit == 9) {\n            $result = $roman_digit . $result;\n\
    \            $digit = 1;\n        }\n        else {\n            $result = $roman_digit\
    \ x $digit . $result;\n        }\n        $i++;\n    }\n    return $result;\n}",
  "    my $result = '';\n    my $remainder = $number;\n    while ($remainder > 0)\
    \ {\n        if ($remainder >= 1000) {\n            $result .= 'm';\n        \
    \    $remainder -= 1000;\n        } elsif ($remainder >= 900) {\n            $result\
    \ .= 'cm';\n            $remainder -= 900;\n        } elsif ($remainder >= 500)\
    \ {\n            $result .= 'd';\n            $remainder -= 500;\n        } elsif\
    \ ($remainder >= 400) {\n            $result .= 'cd';\n            $remainder\
    \ -= 400;\n        } elsif ($remainder >= 100) {\n            $result .= 'c';\n\
    \            $remainder -= 100;\n        } elsif ($remainder >= 90) {\n      \
    \      $result .= 'xc';\n            $remainder -= 90;\n        } elsif ($remainder\
    \ >= 50) {\n            $result .= 'l';\n            $remainder -= 50;\n     \
    \   } elsif ($remainder >= 40) {\n            $result .= 'xl';\n            $remainder\
    \ -= 40;\n        } elsif ($remainder >= 10) {\n            $result .= 'x';\n\
    \            $remainder -= 10;\n        } elsif ($remainder >= 9) {\n        \
    \    $result .= 'ix';\n            $remainder -= 9;\n        } elsif ($remainder\
    \ >= 5) {\n            $result .= 'v';\n            $remainder -= 5;\n       \
    \ } elsif ($remainder >= 4) {\n            $result .= 'iv';\n            $remainder\
    \ -= 4;\n        } else {\n            $result .= 'i';\n            $remainder\
    \ -= 1;\n        }\n    }\n    return $result;\n}", "    my $result = '';\n  \
    \  my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        $number = int($number / 10);\n        if ($digit == 4) {\n          \
    \  $result = $mini_roman_digits[$i] . $mini_roman_digits[$i + 1] . $result;\n\
    \        } elsif ($digit == 9) {\n            $result = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i + 2] . $result;\n        } else {\n            if ($digit\
    \ >= 5) {\n                $result = $mini_roman_digits[$i + 1] . $result;\n \
    \               $digit -= 5;\n            }\n            $result = $mini_roman_digits[$i]\
    \ x $digit . $result;\n        }\n        $i += 2;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $remaining = $number;\n    while ($remaining\
    \ >= 1000) {\n        $roman .= 'm';\n        $remaining -= 1000;\n    }\n   \
    \ if ($remaining >= 900) {\n        $roman .= 'cm';\n        $remaining -= 900;\n\
    \    }\n    if ($remaining >= 500) {\n        $roman .= 'd';\n        $remaining\
    \ -= 500;\n    }\n    if ($remaining >= 400) {\n        $roman .= 'cd';\n    \
    \    $remaining -= 400;\n    }\n    while ($remaining >= 100) {\n        $roman\
    \ .= 'c';\n        $remaining -= 100;\n    }\n    if ($remaining >= 90) {\n  \
    \      $roman .= 'xc';\n        $remaining -= 90;\n    }\n    if ($remaining >=\
    \ 50) {\n        $roman .= 'l';\n        $remaining -= 50;\n    }\n    if ($remaining\
    \ >= 40) {\n        $roman .= 'xl';\n        $remaining -= 40;\n    }\n    while\
    \ ($remaining >= 10) {\n        $roman .= 'x';\n        $remaining -= 10;\n  \
    \  }\n    if ($remaining >= 9) {\n        $roman .= 'ix';\n        $remaining\
    \ -= 9;\n    }\n    if ($remaining >= 5) {\n        $roman .= 'v';\n        $remaining\
    \ -= 5;\n    }\n    if ($remaining >= 4) {\n        $roman .= 'iv';\n        $remaining\
    \ -= 4;\n    }\n    while ($remaining >= 1) {\n        $roman .= 'i';\n      \
    \  $remaining -= 1;\n    }\n    return $roman;\n}", "    my $roman = '';\n   \
    \ my $i = 0;\n    while ($number) {\n        my $digit = $number % 10;\n     \
    \   $roman = $mini_roman_digits[$i][$digit] . $roman;\n        $number = int($number\
    \ / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $numeral;\n    my $digit;\n    my $i = 0;\n    my @roman_numerals = ('m',\
    \ 'c', 'x', 'i');\n    my @arabic_numerals = (1000, 100, 10, 1);\n    while ($number\
    \ > 0) {\n        $digit = $number % 10;\n        if ($digit % 5 < 4) {\n    \
    \        $numeral = $roman_numerals[$i] x $digit;\n        } elsif ($digit ==\
    \ 9) {\n            $numeral = $roman_numerals[$i] . $roman_numerals[$i - 1];\n\
    \        } elsif ($digit == 4) {\n            $numeral = $roman_numerals[$i] .\
    \ $roman_numerals[$i + 1];\n        } else {\n            $numeral = $roman_numerals[$i\
    \ + 1] . $roman_numerals[$i] x ($digit - 5);\n        }\n        $roman = $numeral\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my($roman) = '';\n    my($digit);\n    my($i);\n    my(@roman_digit)\
    \ = ('i', 'v', 'x');\n    for ($i = 0; $i < 3; $i++) {\n        $digit = int($number\
    \ / 10**$i) % 10;\n        if (4 == $digit) {\n            $roman = $roman_digit[$i]\
    \ . $roman_digit[$i+1] . $roman;\n        } elsif (9 == $digit) {\n          \
    \  $roman = $roman_digit[$i] . $roman_digit[$i+2] . $roman;\n        } else {\n\
    \            if (5 <= $digit) {\n                $roman = $roman_digit[$i+1];\n\
    \                $digit -= 5;\n            }\n            $roman = $roman . $roman_digit[$i]\
    \ x $digit;\n        }\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $numeral;\n    my $digit;\n    my $i = 0;\n    my @numerals = qw(i v x\
    \ l c d m);\n    my @values = (1, 5, 10, 50, 100, 500, 1000);\n    while ($number)\
    \ {\n        $digit = $number % 10;\n        $numeral = '';\n        if ($digit\
    \ < 4) {\n            $numeral = $numerals[$i] x $digit;\n        } elsif ($digit\
    \ == 4) {\n            $numeral = $numerals[$i] . $numerals[$i + 1];\n       \
    \ } elsif ($digit == 5) {\n            $numeral = $numerals[$i + 1];\n       \
    \ } elsif ($digit < 9) {\n            $numeral = $numerals[$i + 1] . $numerals[$i]\
    \ x ($digit - 5);\n        } elsif ($digit == 9) {\n            $numeral = $numerals[$i]\
    \ . $numerals[$i + 2];\n        }\n        $roman = $numeral . $roman;\n     \
    \   $number = int($number / 10);\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my $result = \"\";\n    my @numerals = (\n        [1000, \"m\"],\n  \
    \      [900, \"cm\"],\n        [500, \"d\"],\n        [400, \"cd\"],\n       \
    \ [100, \"c\"],\n        [90, \"xc\"],\n        [50, \"l\"],\n        [40, \"\
    xl\"],\n        [10, \"x\"],\n        [9, \"ix\"],\n        [5, \"v\"],\n    \
    \    [4, \"iv\"],\n        [1, \"i\"],\n    );\n    foreach my $pair (@numerals)\
    \ {\n        my($value, $numeral) = @$pair;\n        while ($number >= $value)\
    \ {\n            $result .= $numeral;\n            $number -= $value;\n      \
    \  }\n    }\n    return $result;\n}", "    my $result = '';\n    my $numeral =\
    \ '';\n    my $digit = 0;\n    my $i = 0;\n    my @roman_digits = (\n        ['',\
    \ 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n        ['', 'x',\
    \ 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n        ['', 'c', 'cc',\
    \ 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['', 'm', 'mm', 'mmm',\
    \ '', '', '', '', '', ''],\n    );\n    for ($i = 0; $i < 4; $i++) {\n       \
    \ $digit = int($number % 10);\n        $number = int($number / 10);\n        $numeral\
    \ = $roman_digits[$i][$digit];\n        $result = $numeral . $result;\n    }\n\
    \    return $result;\n}", "    my($result) = '';\n    my($numeral, $value);\n\
    \    while ($number) {\n        ($numeral, $value) = each %MINI_ROMAN;\n     \
    \   while ($number >= $value) {\n            $result .= $numeral;\n          \
    \  $number -= $value;\n        }\n    }\n    return $result;\n}", "    my $roman\
    \ = '';\n    my @numerals = qw(i v x l c d m);\n    my @values = (1, 5, 10, 50,\
    \ 100, 500, 1000);\n    my $i = 6;\n    while ($number > 0) {\n        while ($number\
    \ >= $values[$i]) {\n            $roman .= $numerals[$i];\n            $number\
    \ -= $values[$i];\n        }\n        $i--;\n    }\n    return $roman;\n}", " \
    \   my $result = '';\n    my $remainder = $number;\n    my $place = 0;\n    my\
    \ @roman_digits = qw(i v x l c d m);\n    while ($remainder > 0) {\n        my\
    \ $digit = $remainder % 10;\n        $remainder = int($remainder / 10);\n    \
    \    if ($digit == 4) {\n            $result = $roman_digits[$place] . $roman_digits[$place\
    \ + 1] . $result;\n        } elsif ($digit == 9) {\n            $result = $roman_digits[$place]\
    \ . $roman_digits[$place + 2] . $result;\n        } else {\n            my $roman_digit\
    \ = $roman_digits[$place];\n            if ($digit >= 5) {\n                $roman_digit\
    \ = $roman_digits[$place + 1];\n                $digit -= 5;\n            }\n\
    \            $result = $roman_digit x $digit . $result;\n        }\n        $place\
    \ += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my @numerals\
    \ = qw(i v x l c d m);\n    my $i = 0;\n    while ($number) {\n        my $digit\
    \ = $number % 10;\n        if ($digit == 9) {\n            $roman = $numerals[$i]\
    \ . $numerals[$i + 2] . $roman;\n        } elsif ($digit == 4) {\n           \
    \ $roman = $numerals[$i] . $numerals[$i + 1] . $roman;\n        } else {\n   \
    \         $roman = $numerals[$i + 1] x ($digit / 5) . $numerals[$i] x ($digit\
    \ % 5) . $roman;\n        }\n        $number /= 10;\n        $i += 2;\n    }\n\
    \    return $roman;\n}", "    my $roman = '';\n    my $numeral = '';\n    my $digit\
    \ = 0;\n    my $i = 0;\n    my @numerals = ('m', 'c', 'x', 'i');\n    my @nines\
    \ = ('', 'cm', 'xc', 'ix');\n    my @fives = ('', 'd', 'l', 'v');\n    my @four\
    \ = ('', 'cd', 'xl', 'iv');\n    while ($number) {\n        $digit = $number %\
    \ 10;\n        if ($digit == 9) {\n            $numeral = $nines[$i];\n      \
    \  } elsif ($digit >= 5) {\n            $numeral = $fives[$i];\n            $numeral\
    \ .= $numerals[$i] x ($digit - 5);\n        } elsif ($digit == 4) {\n        \
    \    $numeral = $four[$i];\n        } else {\n            $numeral = $numerals[$i]\
    \ x $digit;\n        }\n        $roman = $numeral . $roman;\n        $number /=\
    \ 10;\n        $i++;\n    }\n    return $roman;\n}", "    my $roman = \"\";\n\
    \    my @numerals = qw(i v x l c d m);\n    my @values = (1, 5, 10, 50, 100, 500,\
    \ 1000);\n    my $i = 6;\n    while ($number > 0) {\n        my $power = int(log($number)/log(10));\n\
    \        my $base = 10**$power;\n        my $digit = int($number/$base);\n   \
    \     $number -= $digit * $base;\n        if ($digit == 4 || $digit == 9) {\n\
    \            $roman .= $numerals[$i];\n            $roman .= $numerals[$i + ($digit\
    \ == 4 ? -1 : 1)];\n        } else {\n            $roman .= $numerals[$i] x ($digit\
    \ >= 5 ? $digit - 5 : $digit);\n            $roman .= $numerals[$i - 1] x ($digit\
    \ >= 5 ? 1 : 0);\n        }\n        $i -= 2;\n    }\n    return $roman;\n}",
  "    my $result = '';\n    my $i = 0;\n    while ($number) {\n        $result .=\
    \ $roman_numerals[$i] x ($number % 5);\n        $number = int($number / 5);\n\
    \        $i++;\n    }\n    return $result;\n}", "    my($result) = '';\n    my($remainder);\n\
    \    my($i);\n    my(@roman_numerals) = ('m', 'cm', 'd', 'cd', 'c', 'xc', 'l',\
    \ 'xl', 'x', 'ix', 'v', 'iv', 'i');\n    my(@values) = (1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1);\n    for ($i = 0; $i < @values; $i++) {\n     \
    \   $remainder = int($number / $values[$i]);\n        $number -= $remainder *\
    \ $values[$i];\n        $result .= $roman_numerals[$i] x $remainder;\n    }\n\
    \    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i][$digit]\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    my @roman_numerals =\
    \ qw(i v x l c d m);\n    my @numbers = qw(1 5 10 50 100 500 1000);\n    my $last_number\
    \ = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n       \
    \ my $number_to_add = 0;\n        if ($digit == 9) {\n            $number_to_add\
    \ = $numbers[$i] . $numbers[$i + 2];\n        } elsif ($digit >= 5) {\n      \
    \      $number_to_add = $numbers[$i + 1] . ($numbers[$i] x ($digit - 5));\n  \
    \      } elsif ($digit == 4) {\n            $number_to_add = $numbers[$i] . $numbers[$i\
    \ + 1];\n        } else {\n            $number_to_add = $numbers[$i] x $digit;\n\
    \        }\n        $roman = $number_to_add . $roman;\n        $number = int($number\
    \ / 10);\n        $i += 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my @numerals = qw(i v x l c d m);\n    my $digit = 0;\n    while ($number\
    \ > 0) {\n        my $digit_value = 5 * 10 ** $digit;\n        my $digit_numeral\
    \ = $numerals[2 * $digit];\n        my $next_digit_numeral = $numerals[2 * $digit\
    \ + 2];\n        my $next_digit_value = $digit_value * 5;\n        my $prev_digit_value\
    \ = $digit_value / 5;\n        my $prev_digit_numeral = $numerals[2 * $digit -\
    \ 2];\n        my $remainder = $number % $next_digit_value;\n        my $quotient\
    \ = ($number - $remainder) / $next_digit_value;\n        if ($quotient == 9) {\n\
    \            $roman = $digit_numeral . $next_digit_numeral . $roman;\n       \
    \ }\n        elsif ($quotient >= 5) {\n            $roman = $next_digit_numeral\
    \ . $digit_numeral x ($quotient - 5) . $roman;\n        }\n        elsif ($quotient\
    \ == 4) {\n            $roman = $digit_numeral . $next_digit_numeral . $roman;\n\
    \        }\n        else {\n            $roman = $digit_numeral x $quotient .\
    \ $roman;\n        }\n        $number = $remainder;\n        $digit++;\n    }\n\
    \    return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    my @roman_numerals\
    \ = qw(i v x l c d m);\n    while ($number) {\n        my $digit = $number % 10;\n\
    \        if ($digit == 9) {\n            $roman = $roman_numerals[$i] . $roman_numerals[$i\
    \ + 2] . $roman;\n        } elsif ($digit == 4) {\n            $roman = $roman_numerals[$i]\
    \ . $roman_numerals[$i + 1] . $roman;\n        } else {\n            $roman =\
    \ $roman_numerals[$i + 1] x ($digit >= 5) .\n                     $roman_numerals[$i]\
    \ x ($digit % 5) .\n                     $roman;\n        }\n        $number /=\
    \ 10;\n        $i += 2;\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $remainder = $number;\n    while ($remainder >= 1000) {\n        $result\
    \ .= 'm';\n        $remainder -= 1000;\n    }\n    if ($remainder >= 900) {\n\
    \        $result .= 'cm';\n        $remainder -= 900;\n    }\n    if ($remainder\
    \ >= 500) {\n        $result .= 'd';\n        $remainder -= 500;\n    }\n    if\
    \ ($remainder >= 400) {\n        $result .= 'cd';\n        $remainder -= 400;\n\
    \    }\n    while ($remainder >= 100) {\n        $result .= 'c';\n        $remainder\
    \ -= 100;\n    }\n    if ($remainder >= 90) {\n        $result .= 'xc';\n    \
    \    $remainder -= 90;\n    }\n    if ($remainder >= 50) {\n        $result .=\
    \ 'l';\n        $remainder -= 50;\n    }\n    if ($remainder >= 40) {\n      \
    \  $result .= 'xl';\n        $remainder -= 40;\n    }\n    while ($remainder >=\
    \ 10) {\n        $result .= 'x';\n        $remainder -= 10;\n    }\n    if ($remainder\
    \ >= 9) {\n        $result .= 'ix';\n        $remainder -= 9;\n    }\n    if ($remainder\
    \ >= 5) {\n        $result .= 'v';\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= 'iv';\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= 'i';\n        $remainder -= 1;\n   \
    \ }\n    return $result;\n}", "    my $result = \"\";\n    my $remainder = $number;\n\
    \    while ($remainder >= 1000) {\n        $result .= \"m\";\n        $remainder\
    \ -= 1000;\n    }\n    if ($remainder >= 900) {\n        $result .= \"cm\";\n\
    \        $remainder -= 900;\n    }\n    if ($remainder >= 500) {\n        $result\
    \ .= \"d\";\n        $remainder -= 500;\n    }\n    if ($remainder >= 400) {\n\
    \        $result .= \"cd\";\n        $remainder -= 400;\n    }\n    while ($remainder\
    \ >= 100) {\n        $result .= \"c\";\n        $remainder -= 100;\n    }\n  \
    \  if ($remainder >= 90) {\n        $result .= \"xc\";\n        $remainder -=\
    \ 90;\n    }\n    if ($remainder >= 50) {\n        $result .= \"l\";\n       \
    \ $remainder -= 50;\n    }\n    if ($remainder >= 40) {\n        $result .= \"\
    xl\";\n        $remainder -= 40;\n    }\n    while ($remainder >= 10) {\n    \
    \    $result .= \"x\";\n        $remainder -= 10;\n    }\n    if ($remainder >=\
    \ 9) {\n        $result .= \"ix\";\n        $remainder -= 9;\n    }\n    if ($remainder\
    \ >= 5) {\n        $result .= \"v\";\n        $remainder -= 5;\n    }\n    if\
    \ ($remainder >= 4) {\n        $result .= \"iv\";\n        $remainder -= 4;\n\
    \    }\n    while ($remainder >= 1) {\n        $result .= \"i\";\n        $remainder\
    \ -= 1;\n    }\n    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n\
    \    while ($number > 0) {\n        my $digit = $number % 10;\n        if ($digit\
    \ == 9) {\n            $roman = $mini_roman_numerals[$i+1] . $roman;\n       \
    \ } elsif ($digit >= 5) {\n            $roman = $mini_roman_numerals[$i] . ($mini_roman_numerals[$i]\
    \ x ($digit - 5)) . $roman;\n        } elsif ($digit == 4) {\n            $roman\
    \ = $mini_roman_numerals[$i] . $mini_roman_numerals[$i+1] . $roman;\n        }\
    \ else {\n            $roman = ($mini_roman_numerals[$i] x $digit) . $roman;\n\
    \        }\n        $number = int($number / 10);\n        $i += 2;\n    }\n  \
    \  return $roman;\n}", "    my $result = '';\n    my $i = 0;\n    my @roman_numerals\
    \ = ('i', 'v', 'x');\n    while ($number > 0) {\n        my $digit = $number %\
    \ 10;\n        if ($digit == 4) {\n            $result = $roman_numerals[$i] .\
    \ $roman_numerals[$i + 1] . $result;\n        } elsif ($digit == 9) {\n      \
    \      $result = $roman_numerals[$i] . $roman_numerals[$i + 2] . $result;\n  \
    \      } else {\n            my $roman_digit = '';\n            if ($digit >=\
    \ 5) {\n                $roman_digit = $roman_numerals[$i + 1];\n            \
    \    $digit -= 5;\n            }\n            $roman_digit .= $roman_numerals[$i]\
    \ x $digit;\n            $result = $roman_digit . $result;\n        }\n      \
    \  $number /= 10;\n        $i += 2;\n    }\n    return $result;\n}", "    my $roman\
    \ = '';\n    my $num = $number;\n    while ($num >= 1000) {\n        $roman .=\
    \ 'm';\n        $num -= 1000;\n    }\n    if ($num >= 900) {\n        $roman .=\
    \ 'cm';\n        $num -= 900;\n    }\n    if ($num >= 500) {\n        $roman .=\
    \ 'd';\n        $num -= 500;\n    }\n    if ($num >= 400) {\n        $roman .=\
    \ 'cd';\n        $num -= 400;\n    }\n    while ($num >= 100) {\n        $roman\
    \ .= 'c';\n        $num -= 100;\n    }\n    if ($num >= 90) {\n        $roman\
    \ .= 'xc';\n        $num -= 90;\n    }\n    if ($num >= 50) {\n        $roman\
    \ .= 'l';\n        $num -= 50;\n    }\n    if ($num >= 40) {\n        $roman .=\
    \ 'xl';\n        $num -= 40;\n    }\n    while ($num >= 10) {\n        $roman\
    \ .= 'x';\n        $num -= 10;\n    }\n    if ($num >= 9) {\n        $roman .=\
    \ 'ix';\n        $num -= 9;\n    }\n    if ($num >= 5) {\n        $roman .= 'v';\n\
    \        $num -= 5;\n    }\n    if ($num >= 4) {\n        $roman .= 'iv';\n  \
    \      $num -= 4;\n    }\n    while ($num >= 1) {\n        $roman .= 'i';\n  \
    \      $num -= 1;\n    }\n    return $roman;\n}", "    my $roman = '';\n    my\
    \ $i = 0;\n    while ($number > 0) {\n        $roman .= $mini_roman_numerals[$i]\
    \ x ($number % 5);\n        $number = int($number / 5);\n        $i++;\n    }\n\
    \    return $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        if ($number >= $mini_roman_values[$i]) {\n            $result\
    \ .= $mini_roman_symbols[$i];\n            $number -= $mini_roman_values[$i];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $result;\n}",
  "    my($result) = '';\n    my(@symbols) = qw(i v x l c d m);\n    my(@values) =\
    \ (1, 5, 10, 50, 100, 500, 1000);\n    my($i) = 6;\n    while ($number > 0) {\n\
    \        my($value) = $values[$i];\n        if ($number >= $value) {\n       \
    \     $result .= $symbols[$i];\n            $number -= $value;\n        }\n  \
    \      else {\n            $i--;\n        }\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        $result = $MINI_ROMAN_DIGITS[$i][$digit] . $result;\n\
    \        $number = int($number / 10);\n        $i++;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $num = $number;\n    while ($num >= 1000) {\n\
    \        $roman .= 'm';\n        $num -= 1000;\n    }\n    if ($num >= 900) {\n\
    \        $roman .= 'cm';\n        $num -= 900;\n    }\n    if ($num >= 500) {\n\
    \        $roman .= 'd';\n        $num -= 500;\n    }\n    if ($num >= 400) {\n\
    \        $roman .= 'cd';\n        $num -= 400;\n    }\n    while ($num >= 100)\
    \ {\n        $roman .= 'c';\n        $num -= 100;\n    }\n    if ($num >= 90)\
    \ {\n        $roman .= 'xc';\n        $num -= 90;\n    }\n    if ($num >= 50)\
    \ {\n        $roman .= 'l';\n        $num -= 50;\n    }\n    if ($num >= 40) {\n\
    \        $roman .= 'xl';\n        $num -= 40;\n    }\n    while ($num >= 10) {\n\
    \        $roman .= 'x';\n        $num -= 10;\n    }\n    if ($num >= 9) {\n  \
    \      $roman .= 'ix';\n        $num -= 9;\n    }\n    if ($num >= 5) {\n    \
    \    $roman .= 'v';\n        $num -= 5;\n    }\n    if ($num >= 4) {\n       \
    \ $roman .= 'iv';\n        $num -= 4;\n    }\n    while ($num >= 1) {\n      \
    \  $roman .= 'i';\n        $num -= 1;\n    }\n    return $roman;\n}", "    my\
    \ $roman = '';\n    my $remaining = $number;\n    while ($remaining > 0) {\n \
    \       if ($remaining >= 1000) {\n            $roman .= 'm';\n            $remaining\
    \ -= 1000;\n        } elsif ($remaining >= 900) {\n            $roman .= 'cm';\n\
    \            $remaining -= 900;\n        } elsif ($remaining >= 500) {\n     \
    \       $roman .= 'd';\n            $remaining -= 500;\n        } elsif ($remaining\
    \ >= 400) {\n            $roman .= 'cd';\n            $remaining -= 400;\n   \
    \     } elsif ($remaining >= 100) {\n            $roman .= 'c';\n            $remaining\
    \ -= 100;\n        } elsif ($remaining >= 90) {\n            $roman .= 'xc';\n\
    \            $remaining -= 90;\n        } elsif ($remaining >= 50) {\n       \
    \     $roman .= 'l';\n            $remaining -= 50;\n        } elsif ($remaining\
    \ >= 40) {\n            $roman .= 'xl';\n            $remaining -= 40;\n     \
    \   } elsif ($remaining >= 10) {\n            $roman .= 'x';\n            $remaining\
    \ -= 10;\n        } elsif ($remaining >= 9) {\n            $roman .= 'ix';\n \
    \           $remaining -= 9;\n        } elsif ($remaining >= 5) {\n          \
    \  $roman .= 'v';\n            $remaining -= 5;\n        } elsif ($remaining >=\
    \ 4) {\n            $roman .= 'iv';\n            $remaining -= 4;\n        } else\
    \ {\n            $roman .= 'i';\n            $remaining -= 1;\n        }\n   \
    \ }\n    return $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        if ($number >= $roman_numerals[$i]->[0]) {\n      \
    \      $result .= $roman_numerals[$i]->[1];\n            $number -= $roman_numerals[$i]->[0];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $result;\n}",
  "    my $roman = '';\n    my @numerals = qw(i v x l c d m);\n    my @values = (1,\
    \ 5, 10, 50, 100, 500, 1000);\n    my $i = 6;\n    while ($number > 0) {\n   \
    \     my $power = int(log($number)/log(10));\n        my $base = int($number /\
    \ 10**$power);\n        $number -= $base * 10**$power;\n        if ($base == 9)\
    \ {\n            $roman .= $numerals[$i - 2*$power] . $numerals[$i];\n       \
    \ } elsif ($base == 4) {\n            $roman .= $numerals[$i - 2*$power] . $numerals[$i\
    \ - $power];\n        } else {\n            if ($base >= 5) {\n              \
    \  $roman .= $numerals[$i - $power];\n                $base -= 5;\n          \
    \  }\n            $roman .= $numerals[$i - 2*$power] x $base;\n        }\n   \
    \ }\n    return $roman;\n}", "    my $roman = '';\n    my @numerals = qw(i v x\
    \ l c d m);\n    my $i = 0;\n    while ($number) {\n        my $digit = $number\
    \ % 10;\n        if ($digit == 9) {\n            $roman = $numerals[$i] . $numerals[$i\
    \ + 2] . $roman;\n        } elsif ($digit >= 5) {\n            $roman = $numerals[$i\
    \ + 1] . $numerals[$i] x ($digit - 5) . $roman;\n        } elsif ($digit == 4)\
    \ {\n            $roman = $numerals[$i] . $numerals[$i + 1] . $roman;\n      \
    \  } else {\n            $roman = $numerals[$i] x $digit . $roman;\n        }\n\
    \        $number /= 10;\n        $i += 2;\n    }\n    return $roman;\n}", "  \
    \  my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if ($number\
    \ >= $mini_roman_numerals[$i]->[0]) {\n            $roman .= $mini_roman_numerals[$i]->[1];\n\
    \            $number -= $mini_roman_numerals[$i]->[0];\n        } else {\n   \
    \         $i++;\n        }\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $remainder = $number;\n    while ($remainder > 0) {\n        if ($remainder\
    \ >= 1000) {\n            $roman .= 'm';\n            $remainder -= 1000;\n  \
    \      } elsif ($remainder >= 900) {\n            $roman .= 'cm';\n          \
    \  $remainder -= 900;\n        } elsif ($remainder >= 500) {\n            $roman\
    \ .= 'd';\n            $remainder -= 500;\n        } elsif ($remainder >= 400)\
    \ {\n            $roman .= 'cd';\n            $remainder -= 400;\n        } elsif\
    \ ($remainder >= 100) {\n            $roman .= 'c';\n            $remainder -=\
    \ 100;\n        } elsif ($remainder >= 90) {\n            $roman .= 'xc';\n  \
    \          $remainder -= 90;\n        } elsif ($remainder >= 50) {\n         \
    \   $roman .= 'l';\n            $remainder -= 50;\n        } elsif ($remainder\
    \ >= 40) {\n            $roman .= 'xl';\n            $remainder -= 40;\n     \
    \   } elsif ($remainder >= 10) {\n            $roman .= 'x';\n            $remainder\
    \ -= 10;\n        } elsif ($remainder >= 9) {\n            $roman .= 'ix';\n \
    \           $remainder -= 9;\n        } elsif ($remainder >= 5) {\n          \
    \  $roman .= 'v';\n            $remainder -= 5;\n        } elsif ($remainder >=\
    \ 4) {\n            $roman .= 'iv';\n            $remainder -= 4;\n        } else\
    \ {\n            $roman .= 'i';\n            $remainder -= 1;\n        }\n   \
    \ }\n    return $roman;\n}", "    my $result = '';\n    my $i = 0;\n    my @roman_numerals\
    \ = qw(i v x l c d m);\n    while ($number > 0) {\n        my $digit = $number\
    \ % 10;\n        if ($digit == 9) {\n            $result = $roman_numerals[$i]\
    \ . $roman_numerals[$i + 2] . $result;\n        } elsif ($digit >= 5) {\n    \
    \        $result = $roman_numerals[$i + 1] . $roman_numerals[$i] x ($digit - 5)\
    \ . $result;\n        } elsif ($digit == 4) {\n            $result = $roman_numerals[$i]\
    \ . $roman_numerals[$i + 1] . $result;\n        } else {\n            $result\
    \ = $roman_numerals[$i] x $digit . $result;\n        }\n        $number /= 10;\n\
    \        $i += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my\
    \ $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n    \
    \    if ($digit == 9) {\n            $roman = $MINI_ROMAN_DIGITS[$i+1] . $roman;\n\
    \            $number -= 9;\n        }\n        elsif ($digit >= 5) {\n       \
    \     $roman = $MINI_ROMAN_DIGITS[$i] . ($MINI_ROMAN_DIGITS[$i] x ($digit - 5))\
    \ . $roman;\n            $number -= 5;\n        }\n        elsif ($digit == 4)\
    \ {\n            $roman = $MINI_ROMAN_DIGITS[$i] . $MINI_ROMAN_DIGITS[$i+1] .\
    \ $roman;\n            $number -= 4;\n        }\n        else {\n            $roman\
    \ = ($MINI_ROMAN_DIGITS[$i] x $digit) . $roman;\n        }\n        $number /=\
    \ 10;\n        $i += 2;\n    }\n    return $roman;\n}", "    my($result) = '';\n\
    \    my($numeral, $value);\n    while ($number) {\n        ($numeral, $value)\
    \ = each %mini_roman_numerals;\n        while ($number >= $value) {\n        \
    \    $result .= $numeral;\n            $number -= $value;\n        }\n    }\n\
    \    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n    my @numerals\
    \ = qw(i v x l c d m);\n    while ($number > 0) {\n        my $digit = $number\
    \ % 10;\n        if ($digit == 4) {\n            $roman = $numerals[$i] . $numerals[$i+1]\
    \ . $roman;\n        } elsif ($digit == 9) {\n            $roman = $numerals[$i]\
    \ . $numerals[$i+2] . $roman;\n        } else {\n            $roman = ($numerals[$i+1]\
    \ x ($digit >= 5)) . ($numerals[$i] x ($digit % 5)) . $roman;\n        }\n   \
    \     $number /= 10;\n        $i += 2;\n    }\n    return $roman;\n}", "    my($result);\n\
    \    my(@numerals) = (\n        [ '', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii',\
    \ 'viii', 'ix' ],\n        [ '', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx',\
    \ 'xc' ],\n        [ '', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'\
    \ ],\n        [ '', 'm', 'mm', 'mmm' ],\n    );\n    my($place) = 0;\n    while\
    \ ($number) {\n        my($digit) = $number % 10;\n        $result = $numerals[$place][$digit]\
    \ . $result;\n        $number = int($number / 10);\n        $place++;\n    }\n\
    \    return $result;\n}", "    my $roman = '';\n    my @roman_numerals = (\n \
    \       ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n      \
    \  ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n        ['',\
    \ 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['', 'm',\
    \ 'mm', 'mmm']\n    );\n    my $i = 0;\n    while ($number > 0) {\n        my\
    \ $digit = $number % 10;\n        $roman = $roman_numerals[$i][$digit] . $roman;\n\
    \        $number /= 10;\n        $i++;\n    }\n    return $roman;\n}", "    my\
    \ $roman = '';\n    my @numerals = (\n        [ '', 'i', 'ii', 'iii', 'iv', 'v',\
    \ 'vi', 'vii', 'viii', 'ix' ],\n        [ '', 'x', 'xx', 'xxx', 'xl', 'l', 'lx',\
    \ 'lxx', 'lxxx', 'xc' ],\n        [ '', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc',\
    \ 'dccc', 'cm' ],\n        [ '', 'm', 'mm', 'mmm', '', '', '', '', '', '' ],\n\
    \    );\n    my $place = 0;\n    while ($number > 0) {\n        my $digit = $number\
    \ % 10;\n        $roman = $numerals[$place][$digit] . $roman;\n        $number\
    \ = int($number / 10);\n        $place++;\n    }\n    return $roman;\n}", "  \
    \  my $result = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        $result = $mini_roman_digits[$i][$digit] . $result;\n\
    \        $number = int($number / 10);\n        $i++;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if\
    \ ($number >= $roman_numerals[$i]->[0]) {\n            $roman .= $roman_numerals[$i]->[1];\n\
    \            $number -= $roman_numerals[$i]->[0];\n        } else {\n        \
    \    $i++;\n        }\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $remainder = $number;\n    while ($remainder > 0) {\n        if ($remainder\
    \ >= 1000) {\n            $result .= 'm';\n            $remainder -= 1000;\n \
    \       } elsif ($remainder >= 900) {\n            $result .= 'cm';\n        \
    \    $remainder -= 900;\n        } elsif ($remainder >= 500) {\n            $result\
    \ .= 'd';\n            $remainder -= 500;\n        } elsif ($remainder >= 400)\
    \ {\n            $result .= 'cd';\n            $remainder -= 400;\n        } elsif\
    \ ($remainder >= 100) {\n            $result .= 'c';\n            $remainder -=\
    \ 100;\n        } elsif ($remainder >= 90) {\n            $result .= 'xc';\n \
    \           $remainder -= 90;\n        } elsif ($remainder >= 50) {\n        \
    \    $result .= 'l';\n            $remainder -= 50;\n        } elsif ($remainder\
    \ >= 40) {\n            $result .= 'xl';\n            $remainder -= 40;\n    \
    \    } elsif ($remainder >= 10) {\n            $result .= 'x';\n            $remainder\
    \ -= 10;\n        } elsif ($remainder >= 9) {\n            $result .= 'ix';\n\
    \            $remainder -= 9;\n        } elsif ($remainder >= 5) {\n         \
    \   $result .= 'v';\n            $remainder -= 5;\n        } elsif ($remainder\
    \ >= 4) {\n            $result .= 'iv';\n            $remainder -= 4;\n      \
    \  } else {\n            $result .= 'i';\n            $remainder -= 1;\n     \
    \   }\n    }\n    return $result;\n}", "    my $roman = '';\n    my $num = $number;\n\
    \    while ($num >= 1000) {\n        $roman .= 'm';\n        $num -= 1000;\n \
    \   }\n    if ($num >= 900) {\n        $roman .= 'cm';\n        $num -= 900;\n\
    \    }\n    if ($num >= 500) {\n        $roman .= 'd';\n        $num -= 500;\n\
    \    }\n    if ($num >= 400) {\n        $roman .= 'cd';\n        $num -= 400;\n\
    \    }\n    while ($num >= 100) {\n        $roman .= 'c';\n        $num -= 100;\n\
    \    }\n    if ($num >= 90) {\n        $roman .= 'xc';\n        $num -= 90;\n\
    \    }\n    if ($num >= 50) {\n        $roman .= 'l';\n        $num -= 50;\n \
    \   }\n    if ($num >= 40) {\n        $roman .= 'xl';\n        $num -= 40;\n \
    \   }\n    while ($num >= 10) {\n        $roman .= 'x';\n        $num -= 10;\n\
    \    }\n    if ($num >= 9) {\n        $roman .= 'ix';\n        $num -= 9;\n  \
    \  }\n    if ($num >= 5) {\n        $roman .= 'v';\n        $num -= 5;\n    }\n\
    \    if ($num >= 4) {\n        $roman .= 'iv';\n        $num -= 4;\n    }\n  \
    \  while ($num >= 1) {\n        $roman .= 'i';\n        $num -= 1;\n    }\n  \
    \  return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i][$digit]\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number) {\n \
    \       my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i] x $digit\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my @roman_numerals = (\n        [ '',\
    \ 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix' ],\n        [ '', 'x',\
    \ 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc' ],\n        [ '', 'c', 'cc',\
    \ 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm' ],\n        [ '', 'm', 'mm', 'mmm',\
    \ '', '', '', '', '', '' ],\n    );\n    my $digit = 0;\n    while ($number >\
    \ 0) {\n        my $digit_value = $number % 10;\n        $roman = $roman_numerals[$digit][$digit_value]\
    \ . $roman;\n        $number = int($number / 10);\n        $digit++;\n    }\n\
    \    return $roman;\n}", "    my $roman = '';\n    my $digit;\n    my $i = 0;\n\
    \    my @roman_digits = qw(i v x l c d m);\n    while ($number) {\n        $digit\
    \ = $number % 10;\n        if ($digit < 4) {\n            $roman = ($roman_digits[$i]\
    \ x $digit) . $roman;\n        } elsif ($digit == 4) {\n            $roman = $roman_digits[$i]\
    \ . $roman_digits[$i+1] . $roman;\n        } elsif ($digit == 5) {\n         \
    \   $roman = $roman_digits[$i+1] . $roman;\n        } elsif ($digit < 9) {\n \
    \           $roman = $roman_digits[$i+1] . ($roman_digits[$i] x ($digit-5)) .\
    \ $roman;\n        } elsif ($digit == 9) {\n            $roman = $roman_digits[$i]\
    \ . $roman_digits[$i+2] . $roman;\n        }\n        $number = int($number /\
    \ 10);\n        $i += 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        $number = int($number / 10);\n        if ($digit == 9) {\n          \
    \  $roman = $mini_roman_digits[$i + 1] . $roman;\n        } elsif ($digit >= 5)\
    \ {\n            $roman = $mini_roman_digits[$i] . ($mini_roman_digits[$i] x ($digit\
    \ - 5)) . $roman;\n        } elsif ($digit == 4) {\n            $roman = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i + 1] . $roman;\n        } else {\n            $roman\
    \ = ($mini_roman_digits[$i] x $digit) . $roman;\n        }\n        $i += 2;\n\
    \    }\n    return $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        if ($number >= $mini_roman_numerals[$i]->[0]) {\n \
    \           $result .= $mini_roman_numerals[$i]->[1];\n            $number -=\
    \ $mini_roman_numerals[$i]->[0];\n        } else {\n            $i++;\n      \
    \  }\n    }\n    return $result;\n}", "    my $result = '';\n    my $numeral =\
    \ '';\n    my $digit = 0;\n    my $i = 0;\n    my @roman_numerals = qw(i v x l\
    \ c d m);\n    my @values = (1, 5, 10, 50, 100, 500, 1000);\n    my $roman_numeral\
    \ = '';\n    my $value = 0;\n    my $previous_value = 0;\n    my $previous_numeral\
    \ = '';\n    my $previous_digit = 0;\n    my $previous_result = '';\n    my $previous_i\
    \ = 0;\n    my $next_numeral = '';\n    my $next_value = 0;\n    my $next_digit\
    \ = 0;\n    my $next_i = 0;\n    my $next_result = '';\n    my $remainder = 0;\n\
    \    my $quotient = 0;\n    my $j = 0;\n    my $k = 0;\n    my $l = 0;\n    my\
    \ $m = 0;\n    my $n = 0;\n    my $o = 0;\n    my $p = 0;\n    my $q = 0;\n  \
    \  my $r = 0;\n    my $s = 0;\n    my $t = 0;\n    my $u = 0;\n    my $v = 0;\n\
    \    my $w = 0;\n    my $x = 0;\n    my $y = 0;\n    my $z = 0;\n    my $aa =\
    \ 0;\n    my $bb = 0;\n    my $cc = 0;\n    my $dd = 0;\n    my $ee = 0;\n   \
    \ my $ff = 0;\n    my $gg = 0;\n    my $hh = 0;\n    my $ii = 0;\n    my $jj =\
    \ 0;\n    my $kk = 0;\n    my $ll = 0;\n    my $mm = 0;\n    my $nn = 0;\n   \
    \ my $oo = 0;\n    my $pp = 0;\n    my $qq = 0;\n    my $rr = 0;\n    my $ss =\
    \ 0;\n    my", "    my $result = '';\n    while ($number >= 1000) {\n        $result\
    \ .= 'm';\n        $number -= 1000;\n    }\n    if ($number >= 900) {\n      \
    \  $result .= 'cm';\n        $number -= 900;\n    }\n    if ($number >= 500) {\n\
    \        $result .= 'd';\n        $number -= 500;\n    }\n    if ($number >= 400)\
    \ {\n        $result .= 'cd';\n        $number -= 400;\n    }\n    while ($number\
    \ >= 100) {\n        $result .= 'c';\n        $number -= 100;\n    }\n    if ($number\
    \ >= 90) {\n        $result .= 'xc';\n        $number -= 90;\n    }\n    if ($number\
    \ >= 50) {\n        $result .= 'l';\n        $number -= 50;\n    }\n    if ($number\
    \ >= 40) {\n        $result .= 'xl';\n        $number -= 40;\n    }\n    while\
    \ ($number >= 10) {\n        $result .= 'x';\n        $number -= 10;\n    }\n\
    \    if ($number >= 9) {\n        $result .= 'ix';\n        $number -= 9;\n  \
    \  }\n    if ($number >= 5) {\n        $result .= 'v';\n        $number -= 5;\n\
    \    }\n    if ($number >= 4) {\n        $result .= 'iv';\n        $number -=\
    \ 4;\n    }\n    while ($number >= 1) {\n        $result .= 'i';\n        $number\
    \ -= 1;\n    }\n    return $result;\n}", "    my $result = '';\n    my $remainder\
    \ = $number;\n    while ($remainder >= 1000) {\n        $result .= 'm';\n    \
    \    $remainder -= 1000;\n    }\n    if ($remainder >= 900) {\n        $result\
    \ .= 'cm';\n        $remainder -= 900;\n    }\n    if ($remainder >= 500) {\n\
    \        $result .= 'd';\n        $remainder -= 500;\n    }\n    if ($remainder\
    \ >= 400) {\n        $result .= 'cd';\n        $remainder -= 400;\n    }\n   \
    \ while ($remainder >= 100) {\n        $result .= 'c';\n        $remainder -=\
    \ 100;\n    }\n    if ($remainder >= 90) {\n        $result .= 'xc';\n       \
    \ $remainder -= 90;\n    }\n    if ($remainder >= 50) {\n        $result .= 'l';\n\
    \        $remainder -= 50;\n    }\n    if ($remainder >= 40) {\n        $result\
    \ .= 'xl';\n        $remainder -= 40;\n    }\n    while ($remainder >= 10) {\n\
    \        $result .= 'x';\n        $remainder -= 10;\n    }\n    if ($remainder\
    \ >= 9) {\n        $result .= 'ix';\n        $remainder -= 9;\n    }\n    if ($remainder\
    \ >= 5) {\n        $result .= 'v';\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= 'iv';\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= 'i';\n        $remainder -= 1;\n   \
    \ }\n    return $result;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    while ($remainder > 0) {\n        if ($remainder >= 1000) {\n           \
    \ $result .= 'm';\n            $remainder -= 1000;\n        } elsif ($remainder\
    \ >= 900) {\n            $result .= 'cm';\n            $remainder -= 900;\n  \
    \      } elsif ($remainder >= 500) {\n            $result .= 'd';\n          \
    \  $remainder -= 500;\n        } elsif ($remainder >= 400) {\n            $result\
    \ .= 'cd';\n            $remainder -= 400;\n        } elsif ($remainder >= 100)\
    \ {\n            $result .= 'c';\n            $remainder -= 100;\n        } elsif\
    \ ($remainder >= 90) {\n            $result .= 'xc';\n            $remainder -=\
    \ 90;\n        } elsif ($remainder >= 50) {\n            $result .= 'l';\n   \
    \         $remainder -= 50;\n        } elsif ($remainder >= 40) {\n          \
    \  $result .= 'xl';\n            $remainder -= 40;\n        } elsif ($remainder\
    \ >= 10) {\n            $result .= 'x';\n            $remainder -= 10;\n     \
    \   } elsif ($remainder >= 9) {\n            $result .= 'ix';\n            $remainder\
    \ -= 9;\n        } elsif ($remainder >= 5) {\n            $result .= 'v';\n  \
    \          $remainder -= 5;\n        } elsif ($remainder >= 4) {\n           \
    \ $result .= 'iv';\n            $remainder -= 4;\n        } else {\n         \
    \   $result .= 'i';\n            $remainder -= 1;\n        }\n    }\n    return\
    \ $result;\n}", "    my $roman = '';\n    my $num = $number;\n    while ($num\
    \ >= 1000) {\n        $roman .= 'm';\n        $num -= 1000;\n    }\n    if ($num\
    \ >= 900) {\n        $roman .= 'cm';\n        $num -= 900;\n    }\n    while ($num\
    \ >= 500) {\n        $roman .= 'd';\n        $num -= 500;\n    }\n    if ($num\
    \ >= 400) {\n        $roman .= 'cd';\n        $num -= 400;\n    }\n    while ($num\
    \ >= 100) {\n        $roman .= 'c';\n        $num -= 100;\n    }\n    if ($num\
    \ >= 90) {\n        $roman .= 'xc';\n        $num -= 90;\n    }\n    while ($num\
    \ >= 50) {\n        $roman .= 'l';\n        $num -= 50;\n    }\n    if ($num >=\
    \ 40) {\n        $roman .= 'xl';\n        $num -= 40;\n    }\n    while ($num\
    \ >= 10) {\n        $roman .= 'x';\n        $num -= 10;\n    }\n    if ($num >=\
    \ 9) {\n        $roman .= 'ix';\n        $num -= 9;\n    }\n    while ($num >=\
    \ 5) {\n        $roman .= 'v';\n        $num -= 5;\n    }\n    if ($num >= 4)\
    \ {\n        $roman .= 'iv';\n        $num -= 4;\n    }\n    while ($num >= 1)\
    \ {\n        $roman .= 'i';\n        $num -= 1;\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my @numerals = (\n        ['I', 'V'],\n        ['X', 'L'],\n\
    \        ['C', 'D'],\n        ['M'],\n    );\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        $number = int($number / 10);\n\
    \        if ($digit == 4) {\n            $roman = $numerals[$i][0] . $numerals[$i][1]\
    \ . $roman;\n        } elsif ($digit == 9) {\n            $roman = $numerals[$i][0]\
    \ . $numerals[$i+1][0] . $roman;\n        } else {\n            my $five = $digit\
    \ >= 5 ? $numerals[$i][1] : '';\n            $roman = $five . ($digit % 5) x $numerals[$i][0]\
    \ . $roman;\n        }\n        $i++;\n    }\n    return $roman;\n}", "    my\
    \ $roman = '';\n    my $i = 0;\n    while ($number) {\n        my $digit = $number\
    \ % 10;\n        $roman = $mini_roman_digits[$i] x $digit . $roman;\n        $number\
    \ = int($number / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my\
    \ $result = '';\n    my $i = 0;\n    my @numbers = (1000, 900, 500, 400, 100,\
    \ 90, 50, 40, 10, 9, 5, 4, 1);\n    my @letters = ('m', 'cm', 'd', 'cd', 'c',\
    \ 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i');\n    while ($number > 0) {\n  \
    \      while ($number >= $numbers[$i]) {\n            $result .= $letters[$i];\n\
    \            $number -= $numbers[$i];\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}", "    my $roman = '';\n    my $remaining = $number;\n    my $count;\n\
    \    my $digit;\n    my $roman_digit;\n    my $i;\n    my @roman_digits = ('i',\
    \ 'v', 'x');\n    for ($i = 0; $i < 3; $i++) {\n        $digit = 10 ** $i;\n \
    \       $roman_digit = $roman_digits[$i];\n        $count = int($remaining / $digit);\n\
    \        $remaining = $remaining % $digit;\n        if ($count == 9) {\n     \
    \       $roman .= $roman_digit . $roman_digits[$i + 2];\n        }\n        elsif\
    \ ($count >= 5) {\n            $roman .= $roman_digits[$i + 1];\n            $roman\
    \ .= $roman_digit x ($count - 5);\n        }\n        elsif ($count == 4) {\n\
    \            $roman .= $roman_digit . $roman_digits[$i + 1];\n        }\n    \
    \    else {\n            $roman .= $roman_digit x $count;\n        }\n    }\n\
    \    return $roman;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    while ($remainder >= 1000) {\n        $result .= 'm';\n        $remainder\
    \ -= 1000;\n    }\n    if ($remainder >= 900) {\n        $result .= 'cm';\n  \
    \      $remainder -= 900;\n    }\n    if ($remainder >= 500) {\n        $result\
    \ .= 'd';\n        $remainder -= 500;\n    }\n    if ($remainder >= 400) {\n \
    \       $result .= 'cd';\n        $remainder -= 400;\n    }\n    while ($remainder\
    \ >= 100) {\n        $result .= 'c';\n        $remainder -= 100;\n    }\n    if\
    \ ($remainder >= 90) {\n        $result .= 'xc';\n        $remainder -= 90;\n\
    \    }\n    if ($remainder >= 50) {\n        $result .= 'l';\n        $remainder\
    \ -= 50;\n    }\n    if ($remainder >= 40) {\n        $result .= 'xl';\n     \
    \   $remainder -= 40;\n    }\n    while ($remainder >= 10) {\n        $result\
    \ .= 'x';\n        $remainder -= 10;\n    }\n    if ($remainder >= 9) {\n    \
    \    $result .= 'ix';\n        $remainder -= 9;\n    }\n    if ($remainder >=\
    \ 5) {\n        $result .= 'v';\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= 'iv';\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= 'i';\n        $remainder -= 1;\n   \
    \ }\n    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n    while\
    \ ($number) {\n        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i][$digit]\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $roman = '';\n    my $remainder = $number;\n    while ($remainder\
    \ >= 1000) {\n        $roman .= 'm';\n        $remainder -= 1000;\n    }\n   \
    \ while ($remainder >= 900) {\n        $roman .= 'cm';\n        $remainder -=\
    \ 900;\n    }\n    while ($remainder >= 500) {\n        $roman .= 'd';\n     \
    \   $remainder -= 500;\n    }\n    while ($remainder >= 400) {\n        $roman\
    \ .= 'cd';\n        $remainder -= 400;\n    }\n    while ($remainder >= 100) {\n\
    \        $roman .= 'c';\n        $remainder -= 100;\n    }\n    while ($remainder\
    \ >= 90) {\n        $roman .= 'xc';\n        $remainder -= 90;\n    }\n    while\
    \ ($remainder >= 50) {\n        $roman .= 'l';\n        $remainder -= 50;\n  \
    \  }\n    while ($remainder >= 40) {\n        $roman .= 'xl';\n        $remainder\
    \ -= 40;\n    }\n    while ($remainder >= 10) {\n        $roman .= 'x';\n    \
    \    $remainder -= 10;\n    }\n    while ($remainder >= 9) {\n        $roman .=\
    \ 'ix';\n        $remainder -= 9;\n    }\n    while ($remainder >= 5) {\n    \
    \    $roman .= 'v';\n        $remainder -= 5;\n    }\n    while ($remainder >=\
    \ 4) {\n        $roman .= 'iv';\n        $remainder -= 4;\n    }\n    while ($remainder\
    \ >= 1) {\n        $roman .= 'i';\n        $remainder -= 1;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number > 0)\
    \ {\n        my $digit = $number % 10;\n        $result = $mini_roman_digits[$i][$digit]\
    \ . $result;\n        $number = int($number / 10);\n        $i++;\n    }\n   \
    \ return $result;\n}", "    my $result = '';\n    my $remainder = $number;\n \
    \   while ($remainder > 0) {\n        if ($remainder >= 1000) {\n            $result\
    \ .= 'm';\n            $remainder -= 1000;\n        } elsif ($remainder >= 900)\
    \ {\n            $result .= 'cm';\n            $remainder -= 900;\n        } elsif\
    \ ($remainder >= 500) {\n            $result .= 'd';\n            $remainder -=\
    \ 500;\n        } elsif ($remainder >= 400) {\n            $result .= 'cd';\n\
    \            $remainder -= 400;\n        } elsif ($remainder >= 100) {\n     \
    \       $result .= 'c';\n            $remainder -= 100;\n        } elsif ($remainder\
    \ >= 90) {\n            $result .= 'xc';\n            $remainder -= 90;\n    \
    \    } elsif ($remainder >= 50) {\n            $result .= 'l';\n            $remainder\
    \ -= 50;\n        } elsif ($remainder >= 40) {\n            $result .= 'xl';\n\
    \            $remainder -= 40;\n        } elsif ($remainder >= 10) {\n       \
    \     $result .= 'x';\n            $remainder -= 10;\n        } elsif ($remainder\
    \ >= 9) {\n            $result .= 'ix';\n            $remainder -= 9;\n      \
    \  } elsif ($remainder >= 5) {\n            $result .= 'v';\n            $remainder\
    \ -= 5;\n        } elsif ($remainder >= 4) {\n            $result .= 'iv';\n \
    \           $remainder -= 4;\n        } else {\n            $result .= 'i';\n\
    \            $remainder -= 1;\n        }\n    }\n    return $result;\n}", "  \
    \  my @roman_numerals = qw(i v x l c d m);\n    my @numbers = (1, 5, 10, 50, 100,\
    \ 500, 1000);\n    my $result = '';\n    my $i = $#numbers;\n    while ($number\
    \ > 0) {\n        while ($number < $numbers[$i]) {\n            $i--;\n      \
    \  }\n        $result .= $roman_numerals[$i];\n        $number -= $numbers[$i];\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        if ($number >= $mini_roman_numerals[$i]->[0]) {\n \
    \           $result .= $mini_roman_numerals[$i]->[1];\n            $number -=\
    \ $mini_roman_numerals[$i]->[0];\n        } else {\n            $i++;\n      \
    \  }\n    }\n    return $result;\n}", "    my $roman = \"\";\n    my @numerals\
    \ = (\n        [1000, \"m\"],\n        [900, \"cm\"],\n        [500, \"d\"],\n\
    \        [400, \"cd\"],\n        [100, \"c\"],\n        [90, \"xc\"],\n      \
    \  [50, \"l\"],\n        [40, \"xl\"],\n        [10, \"x\"],\n        [9, \"ix\"\
    ],\n        [5, \"v\"],\n        [4, \"iv\"],\n        [1, \"i\"],\n    );\n \
    \   foreach my $pair (@numerals) {\n        my($value, $numeral) = @$pair;\n \
    \       while ($number >= $value) {\n            $roman .= $numeral;\n       \
    \     $number -= $value;\n        }\n    }\n    return $roman;\n}", "    my $result\
    \ = '';\n    my $i = 0;\n    my @roman_numerals = qw(i v x l c d m);\n    while\
    \ ($number > 0) {\n        my $digit = $number % 10;\n        my $roman_digit\
    \ = '';\n        if ($digit == 9) {\n            $roman_digit = $roman_numerals[$i]\
    \ . $roman_numerals[$i + 2];\n        } elsif ($digit == 4) {\n            $roman_digit\
    \ = $roman_numerals[$i] . $roman_numerals[$i + 1];\n        } else {\n       \
    \     $roman_digit = $roman_numerals[$i + 1] x int($digit / 5);\n            $roman_digit\
    \ .= $roman_numerals[$i] x ($digit % 5);\n        }\n        $result = $roman_digit\
    \ . $result;\n        $number = int($number / 10);\n        $i += 2;\n    }\n\
    \    return $result;\n}", "    my $roman = '';\n    my $num = $number;\n    while\
    \ ($num >= 1000) {\n        $roman .= 'm';\n        $num -= 1000;\n    }\n   \
    \ if ($num >= 900) {\n        $roman .= 'cm';\n        $num -= 900;\n    }\n \
    \   if ($num >= 500) {\n        $roman .= 'd';\n        $num -= 500;\n    }\n\
    \    if ($num >= 400) {\n        $roman .= 'cd';\n        $num -= 400;\n    }\n\
    \    while ($num >= 100) {\n        $roman .= 'c';\n        $num -= 100;\n   \
    \ }\n    if ($num >= 90) {\n        $roman .= 'xc';\n        $num -= 90;\n   \
    \ }\n    if ($num >= 50) {\n        $roman .= 'l';\n        $num -= 50;\n    }\n\
    \    if ($num >= 40) {\n        $roman .= 'xl';\n        $num -= 40;\n    }\n\
    \    while ($num >= 10) {\n        $roman .= 'x';\n        $num -= 10;\n    }\n\
    \    if ($num >= 9) {\n        $roman .= 'ix';\n        $num -= 9;\n    }\n  \
    \  if ($num >= 5) {\n        $roman .= 'v';\n        $num -= 5;\n    }\n    if\
    \ ($num >= 4) {\n        $roman .= 'iv';\n        $num -= 4;\n    }\n    while\
    \ ($num >= 1) {\n        $roman .= 'i';\n        $num -= 1;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    my $i = 0;\n    my $numeral = '';\n\
    \    my $value = 0;\n    my $numeral_value = 0;\n    while ($number > 0) {\n \
    \       $value = $number % 10;\n        $numeral = $mini_roman_numerals[$i];\n\
    \        $numeral_value = $mini_roman_values[$i];\n        if ($value == 4) {\n\
    \            $result = $numeral . $result;\n            $value = 1;\n        }\n\
    \        elsif ($value == 9) {\n            $result = $numeral . $result;\n  \
    \          $value = 1;\n        }\n        else {\n            $result = $numeral\
    \ x $value . $result;\n            $value = 0;\n        }\n        $number = ($number\
    \ - $value) / 10;\n        $i++;\n    }\n    return $result;\n}", "    my $result\
    \ = '';\n    my $numeral;\n    my $value;\n    my $i;\n    my $j;\n    my $k;\n\
    \    my $l;\n    my $m;\n    my $n;\n    my $o;\n    my $p;\n    my $q;\n    my\
    \ $r;\n    my $s;\n    my $t;\n    my $u;\n    my $v;\n    my $w;\n    my $x;\n\
    \    my $y;\n    my $z;\n    my $aa;\n    my $bb;\n    my $cc;\n    my $dd;\n\
    \    my $ee;\n    my $ff;\n    my $gg;\n    my $hh;\n    my $ii;\n    my $jj;\n\
    \    my $kk;\n    my $ll;\n    my $mm;\n    my $nn;\n    my $oo;\n    my $pp;\n\
    \    my $qq;\n    my $rr;\n    my $ss;\n    my $tt;\n    my $uu;\n    my $vv;\n\
    \    my $ww;\n    my $xx;\n    my $yy;\n    my $zz;\n    my $aaa;\n    my $bbb;\n\
    \    my $ccc;\n    my $ddd;\n    my $eee;\n    my $fff;\n    my $ggg;\n    my\
    \ $hhh;\n    my $iii;\n    my $jjj;\n    my $kkk;\n    my $lll;\n    my $mmm;\n\
    \    my $nnn;\n    my $ooo;\n    my $ppp;\n    my $qqq;\n    my $rrr;\n    my\
    \ $sss;\n    my $ttt;\n    my $uuu;\n    my $vvv;\n    my $www;\n    my $xxx;\n\
    \    my $yyy;\n    my $zzz;\n    my $aaaa;\n    my $bbbb;\n    my $cccc;\n   \
    \ my $dddd;\n    my $eeee;\n    my $ffff;\n    my $gggg;\n    my $hhhh;\n", " \
    \   my $roman = '';\n    my @roman_numerals = qw(i v x l c d m);\n    my @digits\
    \ = split(//, reverse(sprintf(\"%d\", $number)));\n    my $i = 0;\n    foreach\
    \ my $digit (@digits) {\n        my $numeral = '';\n        if ($digit == 9) {\n\
    \            $numeral = $roman_numerals[$i] . $roman_numerals[$i + 2];\n     \
    \   } elsif ($digit == 4) {\n            $numeral = $roman_numerals[$i] . $roman_numerals[$i\
    \ + 1];\n        } else {\n            $numeral = $roman_numerals[$i + 1] x int($digit\
    \ / 5);\n            $numeral .= $roman_numerals[$i] x ($digit % 5);\n       \
    \ }\n        $roman = $numeral . $roman;\n        $i += 2;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number > 0)\
    \ {\n        $result .= $mini_roman_digits[$i] x ($number % 5);\n        $number\
    \ = int($number / 5);\n        $i++;\n    }\n    return $result;\n}", "    my\
    \ $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        my $digit =\
    \ $number % 10;\n        if ($digit == 9) {\n            $roman = $mini_roman_digits[$i+1]\
    \ . $roman;\n            $number -= 9;\n        }\n        elsif ($digit >= 5)\
    \ {\n            $roman = $mini_roman_digits[$i] . ($mini_roman_digits[$i] x ($digit\
    \ - 5)) . $roman;\n            $number -= 5;\n        }\n        elsif ($digit\
    \ == 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i+1]\
    \ . $roman;\n            $number -= 4;\n        }\n        else {\n          \
    \  $roman = ($mini_roman_digits[$i] x $digit) . $roman;\n            $number -=\
    \ $digit;\n        }\n        $number /= 10;\n        $i += 2;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number > 0)\
    \ {\n        my $digit = $number % 10;\n        $result = $mini_roman_digits[$i]\
    \ x $digit . $result;\n        $number = int($number / 10);\n        $i++;\n \
    \   }\n    return $result;\n}", "    my $roman = \"\";\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        if ($number >= $mini_roman_numerals[$i]->[0]) {\n \
    \           $roman .= $mini_roman_numerals[$i]->[1];\n            $number -= $mini_roman_numerals[$i]->[0];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my @numerals = qw(i v x l c d m);\n    my $i = 0;\n  \
    \  while ($number) {\n        my $digit = $number % 10;\n        if ($digit ==\
    \ 9) {\n            $roman = $numerals[$i] . $numerals[$i + 2] . $roman;\n   \
    \     } elsif ($digit == 4) {\n            $roman = $numerals[$i] . $numerals[$i\
    \ + 1] . $roman;\n        } else {\n            $roman = ($numerals[$i + 1] x\
    \ ($digit >= 5)) . ($numerals[$i] x ($digit % 5)) . $roman;\n        }\n     \
    \   $number /= 10;\n        $i += 2;\n    }\n    return $roman;\n}", "    my($result)\
    \ = '';\n    my($ones, $tens, $hundreds, $thousands);\n    $ones = $number % 10;\n\
    \    $number = int($number / 10);\n    $tens = $number % 10;\n    $number = int($number\
    \ / 10);\n    $hundreds = $number % 10;\n    $number = int($number / 10);\n  \
    \  $thousands = $number % 10;\n    $result .= 'm' x $thousands;\n    $result .=\
    \ 'c' x $hundreds;\n    $result .= 'x' x $tens;\n    $result .= 'i' x $ones;\n\
    \    return $result;\n}", "    my $roman = '';\n    my $numeral;\n    my $digit;\n\
    \    my $i = 0;\n    my @numerals = qw(i v x l c d m);\n    while ($number) {\n\
    \        $digit = $number % 10;\n        $number = int($number / 10);\n      \
    \  $numeral = '';\n        if ($digit < 4) {\n            $numeral .= $numerals[$i]\
    \ x $digit;\n        } elsif ($digit == 4) {\n            $numeral = $numerals[$i]\
    \ . $numerals[$i+1];\n        } elsif ($digit == 5) {\n            $numeral =\
    \ $numerals[$i+1];\n        } elsif ($digit < 9) {\n            $numeral = $numerals[$i+1]\
    \ . $numerals[$i] x ($digit-5);\n        } elsif ($digit == 9) {\n           \
    \ $numeral = $numerals[$i] . $numerals[$i+2];\n        }\n        $roman = $numeral\
    \ . $roman;\n        $i += 2;\n    }\n    return $roman;\n}", "    my $result\
    \ = '';\n    my $i = 0;\n    my @numerals = qw(i v x l c d m);\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        if ($digit == 4) {\n    \
    \        $result = $numerals[$i] . $numerals[$i+1] . $result;\n        } elsif\
    \ ($digit == 9) {\n            $result = $numerals[$i] . $numerals[$i+2] . $result;\n\
    \        } else {\n            my $roman = '';\n            if ($digit >= 5) {\n\
    \                $roman = $numerals[$i+1];\n                $digit -= 5;\n   \
    \         }\n            $roman .= $numerals[$i] x $digit;\n            $result\
    \ = $roman . $result;\n        }\n        $number = int($number / 10);\n     \
    \   $i += 2;\n    }\n    return $result;\n}", "    my $roman = '';\n    my $i\
    \ = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n       \
    \ $roman = $mini_roman_digits[$i][$digit] . $roman;\n        $number = int($number\
    \ / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $i = 0;\n    while ($number > 0) {\n        $result .= $mini_roman_digits[$i];\n\
    \        $number--;\n        $i++;\n    }\n    return $result;\n}", "    my $roman\
    \ = '';\n    my $i = 0;\n    while ($number > 0) {\n        if ($number >= $numbers[$i])\
    \ {\n            $roman .= $romans[$i];\n            $number -= $numbers[$i];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my $i = 0;\n    while ($number) {\n        my $digit =\
    \ $number % 10;\n        $roman = $ROMAN_DIGITS[$i][$digit] . $roman;\n      \
    \  $number = int($number / 10);\n        $i++;\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my @roman_numerals = (\n        ['', 'i', 'ii', 'iii',\
    \ 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n        ['', 'x', 'xx', 'xxx', 'xl',\
    \ 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n        ['', 'c', 'cc', 'ccc', 'cd', 'd',\
    \ 'dc', 'dcc', 'dccc', 'cm'],\n        ['', 'm', 'mm', 'mmm', '', '', '', '',\
    \ '', ''],\n    );\n    my $i = 0;\n    while ($number) {\n        $roman = $roman_numerals[$i][$number\
    \ % 10] . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n\
    \    return $roman;\n}", "    my($roman) = '';\n    my($numeral, $value);\n  \
    \  while ($number) {\n        ($numeral, $value) = each %MINI_ROMAN;\n       \
    \ while ($number >= $value) {\n            $roman .= $numeral;\n            $number\
    \ -= $value;\n        }\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        $roman = $mini_roman_digits[$i][$digit] . $roman;\n        $number =\
    \ int($number / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my($result)\
    \ = \"\";\n    my($i);\n    my(@roman) = (\"m\", \"cm\", \"d\", \"cd\", \"c\"\
    , \"xc\", \"l\", \"xl\", \"x\", \"ix\", \"v\", \"iv\", \"i\");\n    my(@arabic)\
    \ = (1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1);\n    for ($i = 0;\
    \ $i < 13; $i++) {\n        while ($number >= $arabic[$i]) {\n            $result\
    \ .= $roman[$i];\n            $number -= $arabic[$i];\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $i = 0;\n    my @numerals = qw(i\
    \ v x l c d m);\n    while ($number) {\n        my $digit = $number % 10;\n  \
    \      if ($digit == 9) {\n            $result = $numerals[$i] . $numerals[$i\
    \ + 2] . $result;\n        } elsif ($digit == 4) {\n            $result = $numerals[$i]\
    \ . $numerals[$i + 1] . $result;\n        } else {\n            $result = ($numerals[$i\
    \ + 1] x int($digit / 5)) . ($numerals[$i] x ($digit % 5)) . $result;\n      \
    \  }\n        $number = int($number / 10);\n        $i += 2;\n    }\n    return\
    \ $result;\n}", "    my $roman = '';\n    my @roman_numerals = qw(i v x l c d\
    \ m);\n    my @decimal_numbers = (1, 5, 10, 50, 100, 500, 1000);\n    my $i =\
    \ 6;\n    while ($number > 0) {\n        my $power = int(log($number)/log(10));\n\
    \        my $power_of_ten = 10**$power;\n        my $digit = int($number/$power_of_ten);\n\
    \        if ($digit < 4) {\n            $roman .= $roman_numerals[$i] x $digit;\n\
    \        } elsif ($digit == 4) {\n            $roman .= $roman_numerals[$i] .\
    \ $roman_numerals[$i-1];\n        } elsif ($digit == 5) {\n            $roman\
    \ .= $roman_numerals[$i-1];\n        } elsif ($digit < 9) {\n            $roman\
    \ .= $roman_numerals[$i-1] . $roman_numerals[$i] x ($digit-5);\n        } elsif\
    \ ($digit == 9) {\n            $roman .= $roman_numerals[$i] . $roman_numerals[$i-2];\n\
    \        }\n        $number -= $digit * $power_of_ten;\n        $i -= 2;\n   \
    \ }\n    return $roman;\n}", "    my $result = \"\";\n    my $i;\n    my @roman_numerals\
    \ = (\n        \"\", \"i\", \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"\
    viii\", \"ix\",\n    );\n    my @roman_tens = (\n        \"\", \"x\", \"xx\",\
    \ \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n    );\n    my @roman_hundreds\
    \ = (\n        \"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"\
    dccc\", \"cm\",\n    );\n    my @roman_thousands = (\n        \"\", \"m\", \"\
    mm\", \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\",\n    );\n   \
    \ my @roman_tenthousands = (\n        \"\", \"x\", \"xx\", \"xxx\", \"xl\", \"\
    l\", \"lx\", \"lxx\", \"lxxx\", \"xc\",\n    );\n    my @roman_hundredthousands\
    \ = (\n        \"\", \"c\", \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"\
    dccc\", \"cm\",\n    );\n    my @roman_millions = (\n        \"\", \"m\", \"mm\"\
    , \"mmm\", \"mv\", \"v\", \"vm\", \"vmm\", \"vmmm\", \"mx\",\n    );\n    my @roman_tenmillions\
    \ = (\n        \"\", \"x\", \"xx\", \"xxx\", \"xl\", \"l\", \"lx\", \"lxx\", \"\
    lxxx\", \"xc\",\n    );\n    my @roman_hundredmillions = (\n        \"\", \"c\"\
    , \"cc\", \"ccc\", \"cd\", \"d\", \"dc\", \"dcc\", \"dccc\", \"cm\",\n    );\n\
    \    my @roman_billions = (\n        \"\", \"m\", \"mm\", \"mmm\", \"mv\", \"\
    v\", \"vm\", \"vmm\", \"vmmm\", \"mx\",\n    );\n    my @roman_tenbillions = (\n\
    \        \"\", \"", "    my $roman = '';\n    my @numerals = (\n        [ '',\
    \ 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix' ],\n        [ '', 'x',\
    \ 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc' ],\n        [ '', 'c', 'cc',\
    \ 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm' ],\n        [ '', 'm', 'mm', 'mmm',\
    \ '', '', '', '', '', '' ],\n    );\n    my $i = 0;\n    while ($number) {\n \
    \       $roman = $numerals[$i][$number % 10] . $roman;\n        $number = int($number\
    \ / 10);\n        $i++;\n    }\n    return $roman;\n}", "    my $roman = '';\n\
    \    my $numeral;\n    my $digit;\n    my $i = 0;\n    my @numerals = ('m', 'c',\
    \ 'x', 'i');\n    my @digits = (1000, 100, 10, 1);\n    while ($number) {\n  \
    \      $numeral = $numerals[$i];\n        $digit = $digits[$i];\n        if ($number\
    \ >= $digit) {\n            $roman .= $numeral;\n            $number -= $digit;\n\
    \        }\n        elsif ($number >= $digit - $digits[$i + 2]) {\n          \
    \  $roman .= $numerals[$i + 2] . $numeral;\n            $number -= $digit - $digits[$i\
    \ + 2];\n        }\n        elsif ($number >= $digit - $digits[$i + 1]) {\n  \
    \          $roman .= $numerals[$i + 1] . $numeral;\n            $number -= $digit\
    \ - $digits[$i + 1];\n        }\n        else {\n            $i++;\n        }\n\
    \    }\n    return $roman;\n}", "    my $result = '';\n    my $numeral;\n    my\
    \ $value;\n    my $i;\n    my @numeral_table = (\n        [ 'm', 1000 ],\n   \
    \     [ 'cm', 900 ],\n        [ 'd', 500 ],\n        [ 'cd', 400 ],\n        [\
    \ 'c', 100 ],\n        [ 'xc', 90 ],\n        [ 'l', 50 ],\n        [ 'xl', 40\
    \ ],\n        [ 'x', 10 ],\n        [ 'ix', 9 ],\n        [ 'v', 5 ],\n      \
    \  [ 'iv', 4 ],\n        [ 'i', 1 ]\n    );\n    for ($i = 0; $i < @numeral_table;\
    \ $i++) {\n        $numeral = $numeral_table[$i][0];\n        $value = $numeral_table[$i][1];\n\
    \        while ($number >= $value) {\n            $result .= $numeral;\n     \
    \       $number -= $value;\n        }\n    }\n    return $result;\n}", "    my($result);\n\
    \    my($i);\n    my($digit);\n    my(@roman_digits) = qw(i v x l c d m);\n  \
    \  my(@roman_fives) = qw(v l d);\n    my(@roman_tens) = qw(x c m);\n    my(@roman_fifties)\
    \ = qw(l d m);\n    my(@roman_hundreds) = qw(c m);\n    my(@roman_five_hundreds)\
    \ = qw(d m);\n    my(@roman_thousands) = qw(m);\n    my(@roman_five_thousands)\
    \ = qw();\n    my(@roman_tens_of_thousands) = qw();\n    my(@roman_fifties_of_thousands)\
    \ = qw();\n    my(@roman_hundreds_of_thousands) = qw();\n    my(@roman_five_hundreds_of_thousands)\
    \ = qw();\n    my(@roman_millions) = qw();\n    my(@roman_five_millions) = qw();\n\
    \    my(@roman_tens_of_millions) = qw();\n    my(@roman_fifties_of_millions) =\
    \ qw();\n    my(@roman_hundreds_of_millions) = qw();\n    my(@roman_five_hundreds_of_millions)\
    \ = qw();\n    my(@roman_billions) = qw();\n    my(@roman_five_billions) = qw();\n\
    \    my(@roman_tens_of_billions) = qw();\n    my(@roman_fifties_of_billions) =\
    \ qw();\n    my(@roman_hundreds_of_billions) = qw();\n    my(@roman_five_hundreds_of_billions)\
    \ = qw();\n    my(@roman_trillions) = qw();\n    my(@roman_five_trillions) = qw();\n\
    \    my(@roman_tens_of_trillions) = qw();\n    my", "    my $result = '';\n  \
    \  my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        $result = $mini_roman_digits[$i][$digit] . $result;\n        $number\
    \ = int($number / 10);\n        $i++;\n    }\n    return $result;\n}", "    my\
    \ $roman = \"\";\n    my $i = 0;\n    while ($number > 0) {\n        my $digit\
    \ = $number % 10;\n        $number = int($number / 10);\n        if ($digit ==\
    \ 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i +\
    \ 1] . $roman;\n        } elsif ($digit == 9) {\n            $roman = $mini_roman_digits[$i]\
    \ . $mini_roman_digits[$i + 2] . $roman;\n        } else {\n            $roman\
    \ = $mini_roman_digits[$i] x ($digit % 5) . $mini_roman_digits[$i + 1] x int($digit\
    \ / 5) . $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n}",
  "    my $roman = \"\";\n    my @roman_numerals = (\n        ['', 'i', 'ii', 'iii',\
    \ 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n        ['', 'x', 'xx', 'xxx', 'xl',\
    \ 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n        ['', 'c', 'cc', 'ccc', 'cd', 'd',\
    \ 'dc', 'dcc', 'dccc', 'cm'],\n        ['', 'm', 'mm', 'mmm', '', '', '', '',\
    \ '', '']\n    );\n    for (my $i = 0; $i < 4; $i++) {\n        my $digit = $number\
    \ % 10;\n        $roman = $roman_numerals[$i][$digit] . $roman;\n        $number\
    \ /= 10;\n    }\n    return $roman;\n}", "    my $result = '';\n    my $i;\n \
    \   my @roman_numerals = (\n        ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii',\
    \ 'viii', 'ix'],\n        ['', 'x', 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx',\
    \ 'xc'],\n        ['', 'c', 'cc', 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n\
    \        ['', 'm', 'mm', 'mmm', '', '', '', '', '', ''],\n    );\n    for ($i\
    \ = 0; $i < 4; $i++) {\n        $result = $roman_numerals[$i][$number % 10] .\
    \ $result;\n        $number = int($number / 10);\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $numeral;\n    my $digit;\n    my $i = 0;\n \
    \   my @numerals = ('m', 'c', 'x', 'i');\n    my @values = (1000, 100, 10, 1);\n\
    \    while ($number) {\n        $digit = $number % 10;\n        $numeral = $numerals[$i];\n\
    \        if ($digit == 9) {\n            $roman = $numeral . $numerals[$i - 1]\
    \ . $roman;\n        }\n        elsif ($digit >= 5) {\n            $roman = $numerals[$i\
    \ - 1] . $numeral x ($digit - 5) . $roman;\n        }\n        elsif ($digit ==\
    \ 4) {\n            $roman = $numeral . $numerals[$i - 1] . $roman;\n        }\n\
    \        else {\n            $roman = $numeral x $digit . $roman;\n        }\n\
    \        $number = int($number / 10);\n        $i++;\n    }\n    return $roman;\n\
    }", "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if\
    \ ($number >= $roman_numerals[$i]->[0]) {\n            $roman .= $roman_numerals[$i]->[1];\n\
    \            $number -= $roman_numerals[$i]->[0];\n        } else {\n        \
    \    $i++;\n        }\n    }\n    return $roman;\n}", "    my $result = '';\n\
    \    my $remainder = $number;\n    while ($remainder > 0) {\n        if ($remainder\
    \ >= 1000) {\n            $result .= 'm';\n            $remainder -= 1000;\n \
    \       } elsif ($remainder >= 900) {\n            $result .= 'cm';\n        \
    \    $remainder -= 900;\n        } elsif ($remainder >= 500) {\n            $result\
    \ .= 'd';\n            $remainder -= 500;\n        } elsif ($remainder >= 400)\
    \ {\n            $result .= 'cd';\n            $remainder -= 400;\n        } elsif\
    \ ($remainder >= 100) {\n            $result .= 'c';\n            $remainder -=\
    \ 100;\n        } elsif ($remainder >= 90) {\n            $result .= 'xc';\n \
    \           $remainder -= 90;\n        } elsif ($remainder >= 50) {\n        \
    \    $result .= 'l';\n            $remainder -= 50;\n        } elsif ($remainder\
    \ >= 40) {\n            $result .= 'xl';\n            $remainder -= 40;\n    \
    \    } elsif ($remainder >= 10) {\n            $result .= 'x';\n            $remainder\
    \ -= 10;\n        } elsif ($remainder >= 9) {\n            $result .= 'ix';\n\
    \            $remainder -= 9;\n        } elsif ($remainder >= 5) {\n         \
    \   $result .= 'v';\n            $remainder -= 5;\n        } elsif ($remainder\
    \ >= 4) {\n            $result .= 'iv';\n            $remainder -= 4;\n      \
    \  } else {\n            $result .= 'i';\n            $remainder -= 1;\n     \
    \   }\n    }\n    return $result;\n}", "    my $result = \"\";\n    my $i = 0;\n\
    \    while ($number > 0) {\n        if ($number >= $mini_roman_values[$i]) {\n\
    \            $result .= $mini_roman_numerals[$i];\n            $number -= $mini_roman_values[$i];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $result;\n}",
  "    my $roman = '';\n    my $remaining = $number;\n    while ($remaining > 0) {\n\
    \        if ($remaining >= 1000) {\n            $roman .= 'm';\n            $remaining\
    \ -= 1000;\n        } elsif ($remaining >= 900) {\n            $roman .= 'cm';\n\
    \            $remaining -= 900;\n        } elsif ($remaining >= 500) {\n     \
    \       $roman .= 'd';\n            $remaining -= 500;\n        } elsif ($remaining\
    \ >= 400) {\n            $roman .= 'cd';\n            $remaining -= 400;\n   \
    \     } elsif ($remaining >= 100) {\n            $roman .= 'c';\n            $remaining\
    \ -= 100;\n        } elsif ($remaining >= 90) {\n            $roman .= 'xc';\n\
    \            $remaining -= 90;\n        } elsif ($remaining >= 50) {\n       \
    \     $roman .= 'l';\n            $remaining -= 50;\n        } elsif ($remaining\
    \ >= 40) {\n            $roman .= 'xl';\n            $remaining -= 40;\n     \
    \   } elsif ($remaining >= 10) {\n            $roman .= 'x';\n            $remaining\
    \ -= 10;\n        } elsif ($remaining >= 9) {\n            $roman .= 'ix';\n \
    \           $remaining -= 9;\n        } elsif ($remaining >= 5) {\n          \
    \  $roman .= 'v';\n            $remaining -= 5;\n        } elsif ($remaining >=\
    \ 4) {\n            $roman .= 'iv';\n            $remaining -= 4;\n        } else\
    \ {\n            $roman .= 'i';\n            $remaining -= 1;\n        }\n   \
    \ }\n    return $roman;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    while ($remainder > 0) {\n        if ($remainder >= 1000) {\n           \
    \ $result .= 'm';\n            $remainder -= 1000;\n        } elsif ($remainder\
    \ >= 900) {\n            $result .= 'cm';\n            $remainder -= 900;\n  \
    \      } elsif ($remainder >= 500) {\n            $result .= 'd';\n          \
    \  $remainder -= 500;\n        } elsif ($remainder >= 400) {\n            $result\
    \ .= 'cd';\n            $remainder -= 400;\n        } elsif ($remainder >= 100)\
    \ {\n            $result .= 'c';\n            $remainder -= 100;\n        } elsif\
    \ ($remainder >= 90) {\n            $result .= 'xc';\n            $remainder -=\
    \ 90;\n        } elsif ($remainder >= 50) {\n            $result .= 'l';\n   \
    \         $remainder -= 50;\n        } elsif ($remainder >= 40) {\n          \
    \  $result .= 'xl';\n            $remainder -= 40;\n        } elsif ($remainder\
    \ >= 10) {\n            $result .= 'x';\n            $remainder -= 10;\n     \
    \   } elsif ($remainder >= 9) {\n            $result .= 'ix';\n            $remainder\
    \ -= 9;\n        } elsif ($remainder >= 5) {\n            $result .= 'v';\n  \
    \          $remainder -= 5;\n        } elsif ($remainder >= 4) {\n           \
    \ $result .= 'iv';\n            $remainder -= 4;\n        } else {\n         \
    \   $result .= 'i';\n            $remainder -= 1;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $remainder = $number;\n    while\
    \ ($remainder > 0) {\n        if ($remainder >= 1000) {\n            $result .=\
    \ 'm';\n            $remainder -= 1000;\n        } elsif ($remainder >= 900) {\n\
    \            $result .= 'cm';\n            $remainder -= 900;\n        } elsif\
    \ ($remainder >= 500) {\n            $result .= 'd';\n            $remainder -=\
    \ 500;\n        } elsif ($remainder >= 400) {\n            $result .= 'cd';\n\
    \            $remainder -= 400;\n        } elsif ($remainder >= 100) {\n     \
    \       $result .= 'c';\n            $remainder -= 100;\n        } elsif ($remainder\
    \ >= 90) {\n            $result .= 'xc';\n            $remainder -= 90;\n    \
    \    } elsif ($remainder >= 50) {\n            $result .= 'l';\n            $remainder\
    \ -= 50;\n        } elsif ($remainder >= 40) {\n            $result .= 'xl';\n\
    \            $remainder -= 40;\n        } elsif ($remainder >= 10) {\n       \
    \     $result .= 'x';\n            $remainder -= 10;\n        } elsif ($remainder\
    \ >= 9) {\n            $result .= 'ix';\n            $remainder -= 9;\n      \
    \  } elsif ($remainder >= 5) {\n            $result .= 'v';\n            $remainder\
    \ -= 5;\n        } elsif ($remainder >= 4) {\n            $result .= 'iv';\n \
    \           $remainder -= 4;\n        } else {\n            $result .= 'i';\n\
    \            $remainder -= 1;\n        }\n    }\n    return $result;\n}", "  \
    \  my $roman = '';\n    my $thousands = int($number / 1000);\n    $roman .= 'm'\
    \ x $thousands;\n    $number -= $thousands * 1000;\n    my $hundreds = int($number\
    \ / 100);\n    if ($hundreds == 9) {\n        $roman .= 'cm';\n    } elsif ($hundreds\
    \ >= 5) {\n        $roman .= 'd' . 'c' x ($hundreds - 5);\n    } elsif ($hundreds\
    \ == 4) {\n        $roman .= 'cd';\n    } else {\n        $roman .= 'c' x $hundreds;\n\
    \    }\n    $number -= $hundreds * 100;\n    my $tens = int($number / 10);\n \
    \   if ($tens == 9) {\n        $roman .= 'xc';\n    } elsif ($tens >= 5) {\n \
    \       $roman .= 'l' . 'x' x ($tens - 5);\n    } elsif ($tens == 4) {\n     \
    \   $roman .= 'xl';\n    } else {\n        $roman .= 'x' x $tens;\n    }\n   \
    \ $number -= $tens * 10;\n    if ($number == 9) {\n        $roman .= 'ix';\n \
    \   } elsif ($number >= 5) {\n        $roman .= 'v' . 'i' x ($number - 5);\n \
    \   } elsif ($number == 4) {\n        $roman .= 'iv';\n    } else {\n        $roman\
    \ .= 'i' x $number;\n    }\n    return $roman;\n}", "    my $result = '';\n  \
    \  my $remainder = $number;\n    my $divisor = 1000;\n    my $roman_numeral =\
    \ 'm';\n    while ($divisor >= 1) {\n        my $quotient = int($remainder / $divisor);\n\
    \        $remainder = $remainder % $divisor;\n        if ($quotient > 0) {\n \
    \           $result .= $roman_numeral x $quotient;\n        }\n        $divisor\
    \ /= 10;\n        $roman_numeral = $divisor == 1 ? 'i' : $divisor == 10 ? 'x'\
    \ : 'c';\n    }\n    return $result;\n}", "    my $result = '';\n    my $remainder\
    \ = $number;\n    while ($remainder >= 1000) {\n        $result .= 'm';\n    \
    \    $remainder -= 1000;\n    }\n    if ($remainder >= 900) {\n        $result\
    \ .= 'cm';\n        $remainder -= 900;\n    }\n    if ($remainder >= 500) {\n\
    \        $result .= 'd';\n        $remainder -= 500;\n    }\n    if ($remainder\
    \ >= 400) {\n        $result .= 'cd';\n        $remainder -= 400;\n    }\n   \
    \ while ($remainder >= 100) {\n        $result .= 'c';\n        $remainder -=\
    \ 100;\n    }\n    if ($remainder >= 90) {\n        $result .= 'xc';\n       \
    \ $remainder -= 90;\n    }\n    if ($remainder >= 50) {\n        $result .= 'l';\n\
    \        $remainder -= 50;\n    }\n    if ($remainder >= 40) {\n        $result\
    \ .= 'xl';\n        $remainder -= 40;\n    }\n    while ($remainder >= 10) {\n\
    \        $result .= 'x';\n        $remainder -= 10;\n    }\n    if ($remainder\
    \ >= 9) {\n        $result .= 'ix';\n        $remainder -= 9;\n    }\n    if ($remainder\
    \ >= 5) {\n        $result .= 'v';\n        $remainder -= 5;\n    }\n    if ($remainder\
    \ >= 4) {\n        $result .= 'iv';\n        $remainder -= 4;\n    }\n    while\
    \ ($remainder >= 1) {\n        $result .= 'i';\n        $remainder -= 1;\n   \
    \ }\n    return $result;\n}", "    my $result = '';\n    my $remainder = $number;\n\
    \    while ($remainder > 0) {\n        if ($remainder >= 1000) {\n           \
    \ $result .= 'm';\n            $remainder -= 1000;\n        } elsif ($remainder\
    \ >= 900) {\n            $result .= 'cm';\n            $remainder -= 900;\n  \
    \      } elsif ($remainder >= 500) {\n            $result .= 'd';\n          \
    \  $remainder -= 500;\n        } elsif ($remainder >= 400) {\n            $result\
    \ .= 'cd';\n            $remainder -= 400;\n        } elsif ($remainder >= 100)\
    \ {\n            $result .= 'c';\n            $remainder -= 100;\n        } elsif\
    \ ($remainder >= 90) {\n            $result .= 'xc';\n            $remainder -=\
    \ 90;\n        } elsif ($remainder >= 50) {\n            $result .= 'l';\n   \
    \         $remainder -= 50;\n        } elsif ($remainder >= 40) {\n          \
    \  $result .= 'xl';\n            $remainder -= 40;\n        } elsif ($remainder\
    \ >= 10) {\n            $result .= 'x';\n            $remainder -= 10;\n     \
    \   } elsif ($remainder >= 9) {\n            $result .= 'ix';\n            $remainder\
    \ -= 9;\n        } elsif ($remainder >= 5) {\n            $result .= 'v';\n  \
    \          $remainder -= 5;\n        } elsif ($remainder >= 4) {\n           \
    \ $result .= 'iv';\n            $remainder -= 4;\n        } else {\n         \
    \   $result .= 'i';\n            $remainder -= 1;\n        }\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $i = 0;\n    while($number > 0)\
    \ {\n        my $digit = $number % 10;\n        $result = $mini_roman_digits[$i][$digit]\
    \ . $result;\n        $number = int($number / 10);\n        $i++;\n    }\n   \
    \ return $result;\n}", "    my $result = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        my $digit = $number % 10;\n        $result = $mini_roman_digits[$i]\
    \ x $digit . $result;\n        $number = int($number / 10);\n        $i++;\n \
    \   }\n    return $result;\n}", "    my $roman = '';\n    my $i = 0;\n    while\
    \ ($number > 0) {\n        if ($number >= $roman_numerals[$i]->[0]) {\n      \
    \      $roman .= $roman_numerals[$i]->[1];\n            $number -= $roman_numerals[$i]->[0];\n\
    \        } else {\n            $i++;\n        }\n    }\n    return $roman;\n}",
  "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if ($number\
    \ >= $roman_numerals[$i]->[0]) {\n            $roman .= $roman_numerals[$i]->[1];\n\
    \            $number -= $roman_numerals[$i]->[0];\n        } else {\n        \
    \    $i++;\n        }\n    }\n    return $roman;\n}", "    my $roman = '';\n \
    \   my $i = 0;\n    while ($number) {\n        my $digit = $number % 10;\n   \
    \     if ($digit == 9) {\n            $roman = $mini_roman_numerals[$i+1] . $roman;\n\
    \        } elsif ($digit >= 5) {\n            $roman = $mini_roman_numerals[$i]\
    \ . ($mini_roman_numerals[$i] x ($digit - 5)) . $roman;\n        } elsif ($digit\
    \ == 4) {\n            $roman = $mini_roman_numerals[$i] . $mini_roman_numerals[$i+1]\
    \ . $roman;\n        } else {\n            $roman = ($mini_roman_numerals[$i]\
    \ x $digit) . $roman;\n        }\n        $number = int($number / 10);\n     \
    \   $i += 2;\n    }\n    return $roman;\n}", "    my $roman = '';\n    my $i =\
    \ 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n        $number\
    \ = int($number / 10);\n        if ($digit == 9) {\n            $roman = $mini_roman_digits[$i\
    \ + 1] . $roman;\n        } elsif ($digit >= 5) {\n            $roman = $mini_roman_digits[$i]\
    \ . ($mini_roman_digits[$i] x ($digit - 5)) . $roman;\n        } elsif ($digit\
    \ == 4) {\n            $roman = $mini_roman_digits[$i] . $mini_roman_digits[$i\
    \ + 1] . $roman;\n        } else {\n            $roman = ($mini_roman_digits[$i]\
    \ x $digit) . $roman;\n        }\n        $i += 2;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $i = 0;\n    while ($number) {\n        my $digit\
    \ = $number % 10;\n        $result = $MINI_ROMAN_DIGITS[$i][$digit] . $result;\n\
    \        $number = int($number / 10);\n        $i++;\n    }\n    return $result;\n\
    }", "    my $roman = '';\n    my $i = 0;\n    while ($number > 0) {\n        if\
    \ ($number >= $roman_numerals[$i]->[0]) {\n            $roman .= $roman_numerals[$i]->[1];\n\
    \            $number -= $roman_numerals[$i]->[0];\n        } else {\n        \
    \    $i++;\n        }\n    }\n    return $roman;\n}", "    my $roman = '';\n \
    \   my $i = 0;\n    while ($number > 0) {\n        my $digit = $number % 10;\n\
    \        if ($digit == 9) {\n            $roman = $MINI_ROMAN_DIGITS[$i+1] . $roman;\n\
    \            $number -= 9;\n        }\n        elsif ($digit >= 5) {\n       \
    \     $roman = $MINI_ROMAN_DIGITS[$i] . $roman;\n            $number -= 5;\n \
    \       }\n        elsif ($digit == 4) {\n            $roman = $MINI_ROMAN_DIGITS[$i+1]\
    \ . $roman;\n            $number -= 4;\n        }\n        else {\n          \
    \  $roman = $MINI_ROMAN_DIGITS[$i] x $digit . $roman;\n            $number -=\
    \ $digit;\n        }\n        $i += 2;\n    }\n    return $roman;\n}", "    my\
    \ $roman = '';\n    my $numeral = '';\n    my $remainder = 0;\n    my @numerals\
    \ = ('m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i');\n\
    \    my @numbers = (1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1);\n \
    \   for (my $i = 0; $i < scalar(@numbers); $i++) {\n        $numeral = $numerals[$i];\n\
    \        $remainder = $number % $numbers[$i];\n        $number = int($number /\
    \ $numbers[$i]);\n        $roman .= $numeral x $number;\n        $number = $remainder;\n\
    \    }\n    return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while\
    \ ($number) {\n        my $digit = $number % 10;\n        $roman = $mini_roman_digits[$i][$digit]\
    \ . $roman;\n        $number = int($number / 10);\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my $result = '';\n    while ($number > 0) {\n        if ($number\
    \ >= 1000) {\n            $result .= 'm';\n            $number -= 1000;\n    \
    \    } elsif ($number >= 900) {\n            $result .= 'cm';\n            $number\
    \ -= 900;\n        } elsif ($number >= 500) {\n            $result .= 'd';\n \
    \           $number -= 500;\n        } elsif ($number >= 400) {\n            $result\
    \ .= 'cd';\n            $number -= 400;\n        } elsif ($number >= 100) {\n\
    \            $result .= 'c';\n            $number -= 100;\n        } elsif ($number\
    \ >= 90) {\n            $result .= 'xc';\n            $number -= 90;\n       \
    \ } elsif ($number >= 50) {\n            $result .= 'l';\n            $number\
    \ -= 50;\n        } elsif ($number >= 40) {\n            $result .= 'xl';\n  \
    \          $number -= 40;\n        } elsif ($number >= 10) {\n            $result\
    \ .= 'x';\n            $number -= 10;\n        } elsif ($number >= 9) {\n    \
    \        $result .= 'ix';\n            $number -= 9;\n        } elsif ($number\
    \ >= 5) {\n            $result .= 'v';\n            $number -= 5;\n        } elsif\
    \ ($number >= 4) {\n            $result .= 'iv';\n            $number -= 4;\n\
    \        } else {\n            $result .= 'i';\n            $number -= 1;\n  \
    \      }\n    }\n    return $result;\n}", "    my $roman = '';\n    my $num =\
    \ $number;\n    while ($num >= 1000) {\n        $roman .= 'm';\n        $num -=\
    \ 1000;\n    }\n    if ($num >= 900) {\n        $roman .= 'cm';\n        $num\
    \ -= 900;\n    }\n    if ($num >= 500) {\n        $roman .= 'd';\n        $num\
    \ -= 500;\n    }\n    if ($num >= 400) {\n        $roman .= 'cd';\n        $num\
    \ -= 400;\n    }\n    while ($num >= 100) {\n        $roman .= 'c';\n        $num\
    \ -= 100;\n    }\n    if ($num >= 90) {\n        $roman .= 'xc';\n        $num\
    \ -= 90;\n    }\n    if ($num >= 50) {\n        $roman .= 'l';\n        $num -=\
    \ 50;\n    }\n    if ($num >= 40) {\n        $roman .= 'xl';\n        $num -=\
    \ 40;\n    }\n    while ($num >= 10) {\n        $roman .= 'x';\n        $num -=\
    \ 10;\n    }\n    if ($num >= 9) {\n        $roman .= 'ix';\n        $num -= 9;\n\
    \    }\n    if ($num >= 5) {\n        $roman .= 'v';\n        $num -= 5;\n   \
    \ }\n    if ($num >= 4) {\n        $roman .= 'iv';\n        $num -= 4;\n    }\n\
    \    while ($num >= 1) {\n        $roman .= 'i';\n        $num -= 1;\n    }\n\
    \    return $roman;\n}", "    my $roman = '';\n    my $i = 0;\n    while ($number\
    \ > 0) {\n        $i = $number % 10;\n        $number = int($number / 10);\n \
    \       $roman = $mini_roman_digits[$i] . $roman;\n    }\n    return $roman;\n\
    }", "    my $result = '';\n    my $i;\n    my @roman_numerals = (\n        ['',\
    \ 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'],\n        ['', 'x',\
    \ 'xx', 'xxx', 'xl', 'l', 'lx', 'lxx', 'lxxx', 'xc'],\n        ['', 'c', 'cc',\
    \ 'ccc', 'cd', 'd', 'dc', 'dcc', 'dccc', 'cm'],\n        ['', 'm', 'mm', 'mmm',\
    \ '', '', '', '', '', '']\n    );\n    for ($i = 0; $i < 4; $i++) {\n        $result\
    \ = $roman_numerals[$i][$number % 10] . $result;\n        $number = int($number\
    \ / 10);\n    }\n    return $result;\n}", "    my $roman = '';\n    my $numeral\
    \ = '';\n    my $digit = 0;\n    my $i = 0;\n    my @numerals = ('m', 'c', 'x',\
    \ 'i');\n    my @values = (1000, 100, 10, 1);\n    while ($number > 0) {\n   \
    \     $digit = $number / $values[$i];\n        if ($digit < 4) {\n           \
    \ $roman .= $numerals[$i] x $digit;\n        } elsif ($digit == 4) {\n       \
    \     $roman .= $numerals[$i] . $numerals[$i-1];\n        } elsif ($digit > 4\
    \ && $digit < 9) {\n            $roman .= $numerals[$i-1] . $numerals[$i] x ($digit-5);\n\
    \        } elsif ($digit == 9) {\n            $roman .= $numerals[$i] . $numerals[$i-2];\n\
    \        }\n        $number %= $values[$i];\n        $i++;\n    }\n    return\
    \ $roman;\n}", "    my @roman_numerals = qw(i v x l c d m);\n    my @digits =\
    \ split //, $number;\n    my $roman_numeral = '';\n    my $power = 0;\n    for\
    \ my $digit (reverse @digits) {\n        my $digit_value = $digit * (10 ** $power);\n\
    \        $roman_numeral = _int_to_mini_roman($digit_value) . $roman_numeral;\n\
    \        $power++;\n    }\n    return $roman_numeral;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

name: HumanEval_70_strange_sort_list
language: pl
prompt: "# Given list of integers, return list in strange order.\n# Strange sorting,\
  \ is when you start with the minimum value,\n# then maximum of the remaining integers,\
  \ then minimum and so on.\n# Examples:\nsub strange_sort_list {\n    my($lst) =\
  \ @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&strange_sort_list;\n\
  \        if(eq_deeply($candidate->([1, 2, 3, 4]),[1, 4, 2, 3])) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9]),[5, 9, 6, 8, 7])) {\n        print \"ok!\" }else{\n        exit 1;\n\
  \        }\n        if(eq_deeply($candidate->([1, 2, 3, 4, 5]),[1, 5, 2, 4, 3]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([5,\
  \ 6, 7, 8, 9, 1]),[1, 9, 5, 8, 6, 7])) {\n        print \"ok!\" }else{\n       \
  \ exit 1;\n        }\n        if(eq_deeply($candidate->([5, 5, 5, 5]),[5, 5, 5,\
  \ 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
  \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
  \ 2, 3, 4, 5, 6, 7, 8]),[1, 8, 2, 7, 3, 6, 4, 5])) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([0, 2, 2, 2, 5, 5,\
  \ -5, -5]),[-5, 5, -5, 5, 0, 2, 2, 2])) {\n        print \"ok!\" }else{\n      \
  \  exit 1;\n        }\n        if(eq_deeply($candidate->([111111]),[111111])) {\n\
  \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while\
    \ (@sorted) {\n        push @result, shift @sorted;\n        push @result, pop\
    \ @sorted;\n    }\n    return @result;\n}", "    my @sorted = sort { $a <=> $b\
    \ } @$lst;\n    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n\
    \        push @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my $len\
    \ = scalar @$lst;\n    my @res = ();\n    my $i = 0;\n    while ($i < $len) {\n\
    \        my $min = min(@$lst);\n        push @res, $min;\n        $i++;\n    \
    \    $lst = [grep {$_ != $min} @$lst];\n        if ($i < $len) {\n           \
    \ my $max = max(@$lst);\n            push @res, $max;\n            $i++;\n   \
    \         $lst = [grep {$_ != $max} @$lst];\n        }\n    }\n    return \\@res;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n    push @res,\
    \ $min;\n    my @lst2 = grep { $_ != $min } @lst;\n    while (@lst2) {\n     \
    \   my $max = max(@lst2);\n        push @res, $max;\n        @lst2 = grep { $_\
    \ != $max } @lst2;\n        my $min = min(@lst2);\n        push @res, $min;\n\
    \        @lst2 = grep { $_ != $min } @lst2;\n    }\n    return \\@res;\n}", " \
    \   my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return @result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @result;\n    my $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j)\
    \ {\n        push @result, $sorted[$i++];\n        push @result, $sorted[$j--]\
    \ if $i <= $j;\n    }\n    return \\@result;\n}", "    my @sorted = sort { $a\
    \ <=> $b } @$lst;\n    my @result;\n    my $i = 0;\n    while (@sorted) {\n  \
    \      push @result, $sorted[$i];\n        splice @sorted, $i, 1;\n        $i\
    \ = $i ? $i - 1 : @sorted - 1;\n    }\n    return \\@result;\n}", "    my @sorted\
    \ = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n      \
    \  push @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n \
    \   return \\@result;\n}", "    my @lst = @$lst;\n    my @result;\n    my $i =\
    \ 0;\n    while (@lst) {\n        if ($i % 2 == 0) {\n            push @result,\
    \ min(@lst);\n        } else {\n            push @result, max(@lst);\n       \
    \ }\n        $i++;\n    }\n    return @result;\n}", "    my @lst = @$lst;\n  \
    \  my @res;\n    while (@lst) {\n        push @res, shift @lst;\n        push\
    \ @res, pop @lst if @lst;\n    }\n    return \\@res;\n}", "    my @sorted = sort\
    \ { $a <=> $b } @$lst;\n    my @res;\n    while (@sorted) {\n        push @res,\
    \ shift @sorted;\n        push @res, pop @sorted;\n    }\n    return @res;\n}",
  "    my @res = ();\n    my @lst = @$lst;\n    my $len = scalar @lst;\n    my $i\
    \ = 0;\n    while ($i < $len) {\n        my $min = $lst[0];\n        my $min_i\
    \ = 0;\n        for (my $j = 1; $j < scalar @lst; $j++) {\n            if ($lst[$j]\
    \ < $min) {\n                $min = $lst[$j];\n                $min_i = $j;\n\
    \            }\n        }\n        push @res, $min;\n        splice @lst, $min_i,\
    \ 1;\n        if (scalar @lst == 0) {\n            last;\n        }\n        my\
    \ $max = $lst[0];\n        my $max_i = 0;\n        for (my $j = 1; $j < scalar\
    \ @lst; $j++) {\n            if ($lst[$j] > $max) {\n                $max = $lst[$j];\n\
    \                $max_i = $j;\n            }\n        }\n        push @res, $max;\n\
    \        splice @lst, $max_i, 1;\n        $i += 2;\n    }\n    return \\@res;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n\
    \    my @res = ();\n    while (@sorted) {\n        push @res, shift @sorted;\n\
    \        push @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my @lst\
    \ = @$lst;\n    my @res;\n    while (@lst) {\n        push @res, shift @lst;\n\
    \        push @res, pop @lst;\n    }\n    return @res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    while (@lst) {\n        push @res, shift @lst;\n        push\
    \ @res, pop @lst;\n    }\n    return @res;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    my $i = 0;\n\
    \    while (@sorted) {\n        push @result, $sorted[$i];\n        splice @sorted,\
    \ $i, 1;\n        $i = $i ? $i - 1 : $#sorted;\n    }\n    return \\@result;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "    my @res = ();\n    while(@$lst)\
    \ {\n        my $min = min(@$lst);\n        push @res, $min;\n        @$lst =\
    \ grep {$_ != $min} @$lst;\n        my $max = max(@$lst);\n        push @res,\
    \ $max;\n        @$lst = grep {$_ != $max} @$lst;\n    }\n    return @res;\n}",
  "    my @lst = @$lst;\n    my @res;\n    while(@lst) {\n        push @res, shift\
    \ @lst;\n        push @res, pop @lst if @lst;\n    }\n    return \\@res;\n}",
  "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n      \
    \  my $min = min(@lst);\n        my $max = max(@lst);\n        if ($i % 2 == 0)\
    \ {\n            push @res, $min;\n        } else {\n            push @res, $max;\n\
    \        }\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n        $i++;\n\
    \    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n  \
    \  my @res;\n    my $i = 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n \
    \       push @res, $sorted[$i];\n        $i++;\n        if ($i <= $j) {\n    \
    \        push @res, $sorted[$j];\n            $j--;\n        }\n    }\n    return\
    \ \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @sorted = sort { $a\
    \ <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n    while (@sorted)\
    \ {\n        push @res, shift @sorted;\n        push @res, pop @sorted;\n    }\n\
    \    return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    while(@lst)\
    \ {\n        my $min = min @lst;\n        push @res, $min;\n        @lst = grep\
    \ { $_ != $min } @lst;\n        my $max = max @lst;\n        push @res, $max if\
    \ defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n    return @res;\n\
    }", "    my @result;\n    my @lst = sort {$a <=> $b} @$lst;\n    while (@lst)\
    \ {\n        push @result, shift @lst;\n        push @result, pop @lst if @lst;\n\
    \    }\n    return @result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n    \
    \    push @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    while (@lst) {\n        my $min = min @lst;\n        push @res,\
    \ $min;\n        @lst = grep { $_ != $min } @lst;\n        my $max = max @lst;\n\
    \        push @res, $max if defined $max;\n        @lst = grep { $_ != $max }\
    \ @lst;\n    }\n    return @res;\n}", "    my @lst = @$lst;\n    my @res;\n  \
    \  my $i = 0;\n    while (@lst) {\n        my $min = min(@lst);\n        my $max\
    \ = max(@lst);\n        if ($i % 2 == 0) {\n            push @res, $min;\n   \
    \     } else {\n            push @res, $max;\n        }\n        @lst = grep {\
    \ $_ != $min && $_ != $max } @lst;\n        $i++;\n    }\n    return @res;\n}",
  "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n    while(@sorted)\
    \ {\n        push @res, shift @sorted;\n        push @res, pop @sorted if @sorted;\n\
    \    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n  \
    \  my @ret;\n    my $i = 0;\n    while (@sorted) {\n        push @ret, $sorted[$i];\n\
    \        splice @sorted, $i, 1;\n        $i = $i == 0 ? -1 : 0;\n    }\n    return\
    \ \\@ret;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n  \
    \  while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return @result;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n\
    \        push @res, pop @sorted if @sorted;\n    }\n    return \\@res;\n}", " \
    \   my @lst = @$lst;\n    my @res;\n    while (@lst) {\n        my $min = min\
    \ @lst;\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \        my $max = max @lst;\n        push @res, $max if defined $max;\n     \
    \   @lst = grep { $_ != $max } @lst;\n    }\n    return @res;\n}", "    my $len\
    \ = scalar @$lst;\n    my @res = ();\n    my $i = 0;\n    my $j = $len - 1;\n\
    \    my $dir = 1;\n    while ($i <= $j) {\n        if ($dir == 1) {\n        \
    \    push @res, $lst->[$i];\n            $i++;\n        } else {\n           \
    \ push @res, $lst->[$j];\n            $j--;\n        }\n        $dir *= -1;\n\
    \    }\n    return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst;\n   \
    \ }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my\
    \ @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n    \
    \    push @result, pop @sorted;\n    }\n    return @result;\n}", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ @result;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while\
    \ (@lst) {\n        my $min = min(@lst);\n        my $max = max(@lst);\n     \
    \   if ($i % 2 == 0) {\n            push @res, $min;\n        } else {\n     \
    \       push @res, $max;\n        }\n        @lst = grep { $_ != $min && $_ !=\
    \ $max } @lst;\n        $i++;\n    }\n    return @res;\n}", "    my @res = ();\n\
    \    my $i = 0;\n    my $j = scalar(@$lst) - 1;\n    while ($i <= $j) {\n    \
    \    if ($i == $j) {\n            push @res, $lst->[$i];\n            last;\n\
    \        }\n        push @res, $lst->[$i];\n        push @res, $lst->[$j];\n \
    \       $i++;\n        $j--;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    while(@lst) {\n        push @res, shift @lst;\n        push\
    \ @res, pop @lst if @lst;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    while (@lst) {\n        my $min = min @lst;\n        push @res,\
    \ $min;\n        @lst = grep { $_ != $min } @lst;\n        my $max = max @lst;\n\
    \        push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n \
    \   return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n\
    \        push @res, shift @lst;\n        push @res, pop @lst;\n    }\n    return\
    \ @res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n \
    \   push @res, $min;\n    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n\
    \        my $max = max(@lst);\n        push @res, $max;\n        @lst = grep {\
    \ $_ != $max } @lst;\n        my $min = min(@lst);\n        push @res, $min;\n\
    \        @lst = grep { $_ != $min } @lst;\n    }\n    return \\@res;\n}", "  \
    \  my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n    my $i = 0;\n \
    \   while (@sorted) {\n        push @res, $sorted[$i];\n        splice @sorted,\
    \ $i, 1;\n        $i = $i ? $i - 1 : @sorted - 1;\n    }\n    return \\@res;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n\
    \        my $min = min(@lst);\n        my $max = max(@lst);\n        if ($i %\
    \ 2 == 0) {\n            push @res, $min;\n        } else {\n            push\
    \ @res, $max;\n        }\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n\
    \        $i++;\n    }\n    return \\@res;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return @result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $n = scalar @lst;\n    my $i =\
    \ 0;\n    while (@lst) {\n        if ($i % 2 == 0) {\n            push @res, shift\
    \ @lst;\n        } else {\n            push @res, pop @lst;\n        }\n     \
    \   $i++;\n    }\n    return \\@res;\n}", "    my $len = scalar @$lst;\n    my\
    \ @res = ();\n    my $i = 0;\n    while ($i < $len) {\n        my $min = min_index($lst);\n\
    \        my $max = max_index($lst);\n        push @res, $lst->[$min];\n      \
    \  push @res, $lst->[$max];\n        splice @$lst, $max, 1;\n        splice @$lst,\
    \ $min, 1;\n        $i += 2;\n    }\n    return \\@res;\n}", "    my @sorted =\
    \ sort {$a <=> $b} @$lst;\n    my @res = ();\n    my $i = 0;\n    my $j = @sorted\
    \ - 1;\n    while ($i <= $j) {\n        push @res, $sorted[$i];\n        $i++;\n\
    \        if ($i <= $j) {\n            push @res, $sorted[$j];\n            $j--;\n\
    \        }\n    }\n    return \\@res;\n}", "    my @sorted = sort {$a <=> $b}\
    \ @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return \\\
    @result;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst)\
    \ {\n        my $min = min @lst;\n        my $max = max @lst;\n        if ($i\
    \ % 2 == 0) {\n            push @res, $min;\n            @lst = grep { $_ != $min\
    \ } @lst;\n        } else {\n            push @res, $max;\n            @lst =\
    \ grep { $_ != $max } @lst;\n        }\n        $i++;\n    }\n    return @res;\n\
    }", "    my @res = ();\n    my @lst = @$lst;\n    while (@lst) {\n        my $min\
    \ = min(@lst);\n        my $max = max(@lst);\n        push @res, $min;\n     \
    \   push @res, $max;\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n\
    \    }\n    return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i\
    \ = 0;\n    while (@lst) {\n        my $min = $lst[0];\n        my $max = $lst[0];\n\
    \        for my $e (@lst) {\n            $min = $e if $e < $min;\n           \
    \ $max = $e if $e > $max;\n        }\n        if ($i % 2 == 0) {\n           \
    \ push @res, $min;\n        } else {\n            push @res, $max;\n        }\n\
    \        @lst = grep { $_ != $min && $_ != $max } @lst;\n        $i++;\n    }\n\
    \    return \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @res;\n\
    \    while (@sorted) {\n        push @res, shift @sorted;\n        push @res,\
    \ pop @sorted if @sorted;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    my $i = 0;\n    while (@lst) {\n        my $min = min(@lst);\n\
    \        my $max = max(@lst);\n        push @res, $i % 2 ? $max : $min;\n    \
    \    @lst = grep { $_ != $min && $_ != $max } @lst;\n        $i++;\n    }\n  \
    \  return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n\
    \        my $min = min @lst;\n        push @res, $min;\n        @lst = grep {\
    \ $_ != $min } @lst;\n        my $max = max @lst;\n        push @res, $max if\
    \ defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n    return @res;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n        my\
    \ $min = min @lst;\n        my $max = max @lst;\n        if ($i % 2 == 0) {\n\
    \            push @res, $min;\n            @lst = grep { $_ != $min } @lst;\n\
    \        } else {\n            push @res, $max;\n            @lst = grep { $_\
    \ != $max } @lst;\n        }\n        $i++;\n    }\n    return @res;\n}", "  \
    \  my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        my $min = min @lst;\n        push @res, $min;\n        @lst\
    \ = grep { $_ != $min } @lst;\n        my $max = max @lst;\n        push @res,\
    \ $max if defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n   \
    \ return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n\
    \        push @res, shift @lst;\n        push @res, pop @lst;\n    }\n    return\
    \ @res;\n}", "    my @res = ();\n    my @lst = @$lst;\n    while (@lst) {\n  \
    \      push @res, shift @lst;\n        push @res, pop @lst;\n    }\n    return\
    \ @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n  \
    \  while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @sorted = sort {$a <=>\
    \ $b} @$lst;\n    my @res = ();\n    while (@sorted) {\n        push @res, shift\
    \ @sorted;\n        push @res, pop @sorted if @sorted;\n    }\n    return \\@res;\n\
    }", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n    my $i =\
    \ 0;\n    while (@sorted) {\n        push @res, $sorted[$i];\n        splice @sorted,\
    \ $i, 1;\n        $i = $i ? $i - 1 : $#sorted;\n    }\n    return \\@res;\n}",
  "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n        push @res, shift\
    \ @lst;\n        push @res, pop @lst;\n    }\n    return @res;\n}", "    my @lst\
    \ = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n        my $min\
    \ = min @lst;\n        my $max = max @lst;\n        if ($i % 2 == 0) {\n     \
    \       push @res, $min;\n            @lst = grep { $_ != $min } @lst;\n     \
    \   } else {\n            push @res, $max;\n            @lst = grep { $_ != $max\
    \ } @lst;\n        }\n        $i++;\n    }\n    return @res;\n}", "    my $len\
    \ = scalar @$lst;\n    my @result;\n    my @lst = sort {$a <=> $b} @$lst;\n  \
    \  my $i = 0;\n    while (@lst) {\n        push @result, $lst[$i];\n        splice\
    \ @lst, $i, 1;\n        $i = $i ? 0 : $#lst;\n    }\n    return \\@result;\n}",
  "    my @lst = @$lst;\n    my @result;\n    while (@lst) {\n        push @result,\
    \ shift @lst;\n        push @result, pop @lst;\n    }\n    return @result;\n}",
  "    my @lst = @$lst;\n    my @result;\n    while(@lst) {\n        my $min = min(@lst);\n\
    \        push @result, $min;\n        @lst = grep { $_ != $min } @lst;\n     \
    \   my $max = max(@lst);\n        push @result, $max if defined $max;\n      \
    \  @lst = grep { $_ != $max } @lst;\n    }\n    return @result;\n}", "    my @lst\
    \ = @$lst;\n    my @res;\n    while (@lst) {\n        push @res, shift @lst;\n\
    \        push @res, pop @lst;\n    }\n    return \\@res;\n}", "    my @sorted\
    \ = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n      \
    \  push @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n \
    \   return \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res\
    \ = ();\n    while(@sorted) {\n        push @res, shift @sorted;\n        push\
    \ @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n \
    \   my @res;\n    my $min = min(@lst);\n    push @res, $min;\n    @lst = grep\
    \ { $_ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n   \
    \     push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my $min\
    \ = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n  \
    \  my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n\
    \        push @result, shift @sorted;\n        push @result, pop @sorted;\n  \
    \  }\n    return \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n \
    \   my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return @result;\n}", "    my @lst\
    \ = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n        my $min\
    \ = min(@lst);\n        my $max = max(@lst);\n        if ($i % 2 == 0) {\n   \
    \         push @res, $min;\n        } else {\n            push @res, $max;\n \
    \       }\n        $i++;\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n\
    \    }\n    return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $min\
    \ = min(@lst);\n    push @res, $min;\n    @lst = grep { $_ != $min } @lst;\n \
    \   while (@lst) {\n        my $max = max(@lst);\n        push @res, $max;\n \
    \       @lst = grep { $_ != $max } @lst;\n        my $min = min(@lst);\n     \
    \   push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n    }\n    return\
    \ \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted if @sorted;\n    }\n    return \\@result;\n}", "    my @sorted =\
    \ sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted if @sorted;\n    }\n    return @result;\n}", "    my @sorted = sort\
    \ { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @res = ();\n    my @lst = @$lst;\n    while (@lst) {\n        my $min\
    \ = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \        my $max = max(@lst);\n        push @res, $max if defined $max;\n    \
    \    @lst = grep { $_ != $max } @lst;\n    }\n    return @res;\n}", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my @result;\n    my $i = 0;\n    my $j = $#sorted;\n\
    \    while ($i <= $j) {\n        push @result, $sorted[$i];\n        $i++;\n \
    \       if ($i <= $j) {\n            push @result, $sorted[$j];\n            $j--;\n\
    \        }\n    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n\
    \    my $min = min @lst;\n    my $max = max @lst;\n    my $min_idx = first_index\
    \ { $_ == $min } @lst;\n    my $max_idx = first_index { $_ == $max } @lst;\n \
    \   my $min_max_idx = $min_idx < $max_idx ? $min_idx : $max_idx;\n    my $max_min_idx\
    \ = $min_idx > $max_idx ? $min_idx : $max_idx;\n    my $min_max = $min_idx < $max_idx\
    \ ? $min : $max;\n    my $max_min = $min_idx > $max_idx ? $min : $max;\n    splice\
    \ @lst, $min_max_idx, 1;\n    splice @lst, $max_min_idx - 1, 1;\n    push @res,\
    \ $min_max, $max_min;\n    while (@lst) {\n        $min = min @lst;\n        $max\
    \ = max @lst;\n        $min_idx = first_index { $_ == $min } @lst;\n        $max_idx\
    \ = first_index { $_ == $max } @lst;\n        $min_max_idx = $min_idx < $max_idx\
    \ ? $min_idx : $max_idx;\n        $max_min_idx = $min_idx > $max_idx ? $min_idx\
    \ : $max_idx;\n        $min_max = $min_idx < $max_idx ? $min : $max;\n       \
    \ $max_min = $min_idx > $max_idx ? $min : $max;\n        splice @lst, $min_max_idx,\
    \ 1;\n        splice @lst, $max_min_idx - 1, 1;\n        push @res, $min_max,\
    \ $max_min;\n    }\n    return @res;\n", "    my @lst = @$lst;\n    my @res;\n\
    \    my $i = 0;\n    while (@lst) {\n        my $min = min(@lst);\n        my\
    \ $max = max(@lst);\n        if ($i % 2 == 0) {\n            push @res, $min;\n\
    \        } else {\n            push @res, $max;\n        }\n        @lst = grep\
    \ { $_ != $min && $_ != $max } @lst;\n        $i++;\n    }\n    return @res;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n        push @res,\
    \ shift @lst;\n        push @res, pop @lst;\n    }\n    return @res;\n}", "  \
    \  my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n      \
    \  my $min = min @lst;\n        my $max = max @lst;\n        if ($i % 2 == 0)\
    \ {\n            push @res, $min;\n            @lst = grep { $_ != $min } @lst;\n\
    \        } else {\n            push @res, $max;\n            @lst = grep { $_\
    \ != $max } @lst;\n        }\n        $i++;\n    }\n    return @res;\n}", "  \
    \  my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted if @sorted;\n    }\n    return \\@result;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted if\
    \ @sorted;\n    }\n    return \\@result;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    while(@lst) {\n        my $min =\
    \ min @lst;\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \        my $max = max @lst;\n        push @res, $max;\n        @lst = grep {\
    \ $_ != $max } @lst;\n    }\n    return @res;\n}", "    my @res = ();\n    my\
    \ @lst = @$lst;\n    my $i = 0;\n    while (@lst) {\n        my $min = min(@lst);\n\
    \        my $max = max(@lst);\n        if ($i % 2 == 0) {\n            push @res,\
    \ $min;\n        } else {\n            push @res, $max;\n        }\n        $i++;\n\
    \        @lst = grep { $_ != $min && $_ != $max } @lst;\n    }\n    return @res;\n\
    }", "    my @res = ();\n    my @lst = @$lst;\n    while (@lst) {\n        my $min\
    \ = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \        my $max = max(@lst);\n        push @res, $max if defined $max;\n    \
    \    @lst = grep { $_ != $max } @lst;\n    }\n    return @res;\n}", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while\
    \ (@lst) {\n        my $min = min @lst;\n        my $max = max @lst;\n       \
    \ if ($i % 2 == 0) {\n            push @res, $min;\n            @lst = grep {\
    \ $_ != $min } @lst;\n        } else {\n            push @res, $max;\n       \
    \     @lst = grep { $_ != $max } @lst;\n        }\n        $i++;\n    }\n    return\
    \ @res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst)\
    \ {\n        my $min = min @lst;\n        my $max = max @lst;\n        if ($i\
    \ % 2 == 0) {\n            push @res, $min;\n            @lst = grep { $_ != $min\
    \ } @lst;\n        } else {\n            push @res, $max;\n            @lst =\
    \ grep { $_ != $max } @lst;\n        }\n        $i++;\n    }\n    return @res;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @res = ();\n    my @lst = @$lst;\n    my $min = min(@lst);\n    my $max = max(@lst);\n\
    \    while(@lst) {\n        if(@res % 2 == 0) {\n            push @res, $min;\n\
    \            @lst = grep { $_ != $min } @lst;\n            $min = min(@lst);\n\
    \        } else {\n            push @res, $max;\n            @lst = grep { $_\
    \ != $max } @lst;\n            $max = max(@lst);\n        }\n    }\n    return\
    \ @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while\
    \ (@sorted) {\n        push @result, shift @sorted;\n        push @result, pop\
    \ @sorted;\n    }\n    return @result;\n}", "    my @sorted = sort { $a <=> $b\
    \ } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return \\\
    @result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n \
    \   while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my\
    \ @res;\n    my $min = min(@lst);\n    my $max = max(@lst);\n    my $min_idx =\
    \ first_index { $_ == $min } @lst;\n    my $max_idx = first_index { $_ == $max\
    \ } @lst;\n    my $min_idx_removed = $min_idx == $max_idx ? 1 : 0;\n    splice\
    \ @lst, $min_idx, 1;\n    splice @lst, $max_idx - $min_idx_removed, 1;\n    push\
    \ @res, $min, $max;\n    while (@lst) {\n        my $min = min(@lst);\n      \
    \  my $max = max(@lst);\n        my $min_idx = first_index { $_ == $min } @lst;\n\
    \        my $max_idx = first_index { $_ == $max } @lst;\n        my $min_idx_removed\
    \ = $min_idx == $max_idx ? 1 : 0;\n        splice @lst, $min_idx, 1;\n       \
    \ splice @lst, $max_idx - $min_idx_removed, 1;\n        push @res, $max, $min;\n\
    \    }\n    return @res;\n}\nsay join ', ', strange_sort_list([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9]); # 1, 9, 2, 8, 3, 7, 4, 6, 5\nsay join ', ', strange_sort_list([9,\
    \ 2, 4, 7, 3]); # 9, 3, 2, 7, 4\nsay join ', ', strange_sort_list([12, 13, 14]);\
    \ # 12, 14, 13\nsay join ', ', strange_sort_list([42]); # 42", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my $i = 0;\n    my $j = $#sorted;\n    my @result;\n\
    \    while ($i <= $j) {\n        push @result, $sorted[$i++];\n        push @result,\
    \ $sorted[$j--] if $i <= $j;\n    }\n    return \\@result;\n}", "    my @sorted\
    \ = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n      \
    \  push @result, shift @sorted;\n        push @result, pop @sorted if @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst if @lst;\n\
    \    }\n    return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst)\
    \ {\n        my $min = min(@lst);\n        push @res, $min;\n        @lst = grep\
    \ { $_ != $min } @lst;\n        my $max = max(@lst);\n        push @res, $max\
    \ if defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n    return\
    \ @res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst)\
    \ {\n        my $min = min(@lst);\n        my $max = max(@lst);\n        if ($i\
    \ % 2 == 0) {\n            push @res, $min;\n        } else {\n            push\
    \ @res, $max;\n        }\n        $i++;\n        @lst = grep { $_ != $min && $_\
    \ != $max } @lst;\n    }\n    return @res;\n}", "    my @sorted = sort {$a <=>\
    \ $b} @$lst;\n    my @result;\n    my $i = 0;\n    while (@sorted) {\n       \
    \ push @result, shift @sorted;\n        push @result, pop @sorted if @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n    \
    \    push @res, pop @sorted if @sorted;\n    }\n    return \\@res;\n}", "    my\
    \ @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n    push @res, $min;\n\
    \    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n\
    \        push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my\
    \ $min = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min\
    \ } @lst;\n    }\n    return \\@res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n\
    \    my @result;\n    while(@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n    push @res, $min;\n\
    \    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n\
    \        push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my\
    \ $min = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min\
    \ } @lst;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n\
    \    while(@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst;\n\
    \    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n  \
    \  my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted if @sorted;\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n\
    \        if ($i % 2 == 0) {\n            push @res, min(@lst);\n        } else\
    \ {\n            push @res, max(@lst);\n        }\n        $i++;\n    }\n    return\
    \ @res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n       \
    \ my $min = min @lst;\n        push @res, $min;\n        @lst = grep { $_ != $min\
    \ } @lst;\n        my $max = max @lst;\n        push @res, $max;\n        @lst\
    \ = grep { $_ != $max } @lst;\n    }\n    return @res;\n}", "    my @lst = @$lst;\n\
    \    my @ret;\n    while (@lst) {\n        my $min = min(@lst);\n        push\
    \ @ret, $min;\n        @lst = grep { $_ != $min } @lst;\n        my $max = max(@lst);\n\
    \        push @ret, $max if defined $max;\n        @lst = grep { $_ != $max }\
    \ @lst;\n    }\n    return @ret;\n}", "    my @lst = @$lst;\n    my @res;\n  \
    \  while (@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst\
    \ if @lst;\n    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b }\
    \ @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    my $i =\
    \ 0;\n    my $j = $#sorted;\n    while ($i <= $j) {\n        push @result, $sorted[$i++];\n\
    \        push @result, $sorted[$j--] if $i <= $j;\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n        my $min =\
    \ min @lst;\n        my $max = max @lst;\n        push @res, $min;\n        push\
    \ @res, $max;\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n    }\n\
    \    return @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @res = ();\n    my @lst\
    \ = @$lst;\n    my $min = min(@lst);\n    my $max = max(@lst);\n    while (@lst)\
    \ {\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n    \
    \    push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        $min\
    \ = min(@lst);\n        $max = max(@lst);\n    }\n    return @res;\n}", "    my\
    \ @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n\
    \        push @result, shift @sorted;\n        push @result, pop @sorted if @sorted;\n\
    \    }\n    return @result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n    \
    \    push @res, pop @sorted;\n    }\n    return @res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    my $min = min(@lst);\n    push @res, $min;\n    @lst = grep\
    \ { $_ != $min } @lst;\n    while(@lst) {\n        my $max = max(@lst);\n    \
    \    push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my $min\
    \ = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \    }\n    return \\@res;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        my $min = min @lst;\n        push @res, $min;\n        @lst\
    \ = grep { $_ != $min } @lst;\n        my $max = max @lst;\n        push @res,\
    \ $max if defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n   \
    \ return @res;\n}", "    my @res = ();\n    my @lst = @$lst;\n    while (@lst)\
    \ {\n        push @res, shift @lst;\n        push @res, pop @lst;\n    }\n   \
    \ return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    while(@lst) {\n \
    \       my $min = min @lst;\n        my $max = max @lst;\n        push @res, $min;\n\
    \        push @res, $max;\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n\
    \    }\n    return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst)\
    \ {\n        my $min = min @lst;\n        my $max = max @lst;\n        push @res,\
    \ $min;\n        push @res, $max;\n        @lst = grep { $_ != $min && $_ != $max\
    \ } @lst;\n    }\n    return \\@res;\n}", "    my @sorted = sort { $a <=> $b }\
    \ @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $min = min @lst;\n    push @res,\
    \ $min;\n    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n        my\
    \ $max = max @lst;\n        push @res, $max;\n        @lst = grep { $_ != $max\
    \ } @lst;\n        my $min = min @lst;\n        push @res, $min;\n        @lst\
    \ = grep { $_ != $min } @lst;\n    }\n    return \\@res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    my $min = min(@lst);\n    my $max = max(@lst);\n    my $min_idx\
    \ = first_index { $_ == $min } @lst;\n    my $max_idx = first_index { $_ == $max\
    \ } @lst;\n    while (@lst) {\n        push @res, $min;\n        splice @lst,\
    \ $min_idx, 1;\n        $min = min(@lst);\n        $min_idx = first_index { $_\
    \ == $min } @lst;\n        push @res, $max;\n        splice @lst, $max_idx, 1;\n\
    \        $max = max(@lst);\n        $max_idx = first_index { $_ == $max } @lst;\n\
    \    }\n    return @res;\n}", "    my @lst = @$lst;\n    my @res;\n    my $min\
    \ = min(@lst);\n    my $max = max(@lst);\n    my $min_idx = first_index { $_ ==\
    \ $min } @lst;\n    my $max_idx = first_index { $_ == $max } @lst;\n    push @res,\
    \ $min;\n    push @res, $max;\n    splice @lst, $min_idx, 1;\n    splice @lst,\
    \ $max_idx, 1;\n    while (@lst) {\n        $min = min(@lst);\n        $max =\
    \ max(@lst);\n        $min_idx = first_index { $_ == $min } @lst;\n        $max_idx\
    \ = first_index { $_ == $max } @lst;\n        push @res, $min;\n        push @res,\
    \ $max;\n        splice @lst, $min_idx, 1;\n        splice @lst, $max_idx, 1;\n\
    \    }\n    return \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n    push @res, $min;\n\
    \    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n\
    \        push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my\
    \ $min = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min\
    \ } @lst;\n    }\n    return @res;\n}", "    my @res = ();\n    my @lst = @$lst;\n\
    \    while (@lst) {\n        my $min = min(@lst);\n        my $max = max(@lst);\n\
    \        push @res, $min;\n        push @res, $max;\n        @lst = grep { $_\
    \ != $min && $_ != $max } @lst;\n    }\n    return @res;\n}", "    my @lst = @$lst;\n\
    \    my @res;\n    my $min = min @lst;\n    my $max = max @lst;\n    my $i = 0;\n\
    \    while (@lst) {\n        if ($i % 2 == 0) {\n            push @res, $min;\n\
    \            $min = min @lst;\n        } else {\n            push @res, $max;\n\
    \            $max = max @lst;\n        }\n        $i++;\n    }\n    return @res;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n\
    \        if ($i % 2 == 0) {\n            push @res, min(@lst);\n        } else\
    \ {\n            push @res, max(@lst);\n        }\n        $i++;\n    }\n    return\
    \ @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while(@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return @result;\n}", "    my $min = min(@$lst);\n    my $max = max(@$lst);\n\
    \    my @result;\n    while (@$lst) {\n        push @result, $min;\n        $min\
    \ = min(grep { $_ != $min } @$lst);\n        push @result, $max;\n        $max\
    \ = max(grep { $_ != $max } @$lst);\n    }\n    return @result;\n}", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my @result;\n    my $i = 0;\n    my $j = $#sorted;\n\
    \    while ($i <= $j) {\n        push @result, $sorted[$i];\n        if ($i !=\
    \ $j) {\n            push @result, $sorted[$j];\n        }\n        $i++;\n  \
    \      $j--;\n    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my\
    \ @res;\n    my $min = min(@lst);\n    push @res, $min;\n    @lst = grep { $_\
    \ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n        push\
    \ @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my $min = min(@lst);\n\
    \        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n    }\n \
    \   return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return @result;\n}", "    my $n = @$lst;\n    my $sorted\
    \ = [sort {$a <=> $b} @$lst];\n    my $result = [];\n    my $i = 0;\n    my $j\
    \ = $n - 1;\n    while ($i <= $j) {\n        push @$result, $sorted->[$i];\n \
    \       $i++;\n        if ($i <= $j) {\n            push @$result, $sorted->[$j];\n\
    \            $j--;\n        }\n    }\n    return $result;\n}", "    my @lst =\
    \ @$lst;\n    my @res;\n    while (@lst) {\n        push @res, shift @lst;\n \
    \       push @res, pop @lst;\n    }\n    return @res;\n}", "    my @sorted = sort\
    \ { $a <=> $b } @$lst;\n    my $i = 0;\n    my $j = @sorted - 1;\n    my @result;\n\
    \    while ($i <= $j) {\n        push @result, $sorted[$i++];\n        if ($i\
    \ <= $j) {\n            push @result, $sorted[$j--];\n        }\n    }\n    return\
    \ \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    my $min = min @lst;\n\
    \    push @res, $min;\n    @lst = grep { $_ != $min } @lst;\n    while (@lst)\
    \ {\n        my $max = max @lst;\n        push @res, $max;\n        @lst = grep\
    \ { $_ != $max } @lst;\n        my $min = min @lst;\n        push @res, $min;\n\
    \        @lst = grep { $_ != $min } @lst;\n    }\n    return @res;\n}", "    my\
    \ @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n\
    \        push @result, shift @sorted;\n        push @result, pop @sorted;\n  \
    \  }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst;\n   \
    \ }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my\
    \ @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n    \
    \    push @result, pop @sorted if @sorted;\n    }\n    return \\@result;\n}",
  "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    while(@sorted) {\n\
    \        push @result, shift @sorted;\n        push @result, pop @sorted;\n  \
    \  }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while\
    \ (@lst) {\n        my $min = min @lst;\n        push @res, $min;\n        @lst\
    \ = grep { $_ != $min } @lst;\n        my $max = max @lst;\n        push @res,\
    \ $max if defined $max;\n        @lst = grep { $_ != $max } @lst;\n    }\n   \
    \ return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    my $head = 0;\n    my $tail = $#sorted;\n    while ($head <= $tail) {\n \
    \       push @result, $sorted[$head++];\n        if ($head <= $tail) {\n     \
    \       push @result, $sorted[$tail--];\n        }\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    my $i = 0;\n    while (@lst) {\n\
    \        my $min = min(@lst);\n        my $max = max(@lst);\n        if ($i %\
    \ 2 == 0) {\n            push @res, $min;\n        } else {\n            push\
    \ @res, $max;\n        }\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n\
    \        $i++;\n    }\n    return \\@res;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n\
    \        push @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my @sorted\
    \ = sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n  \
    \      push @res, shift @lst;\n        push @res, pop @lst if @lst;\n    }\n \
    \   return \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @sorted = sort {$a <=>\
    \ $b} @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return @result;\n}",
  "    my $len = scalar @$lst;\n    my @res = ();\n    my $i = 0;\n    while ($i <\
    \ $len) {\n        my $min = min(@$lst);\n        push @res, $min;\n        $i++;\n\
    \        if ($i < $len) {\n            my $max = max(@$lst);\n            push\
    \ @res, $max;\n            $i++;\n        }\n    }\n    return @res;\n}", "  \
    \  my @lst = @$lst;\n    my @res;\n    my $min = min @lst;\n    my $max = max\
    \ @lst;\n    my $i = 0;\n    while (@lst) {\n        if ($i % 2 == 0) {\n    \
    \        push @res, $min;\n            $min = min @lst;\n        } else {\n  \
    \          push @res, $max;\n            $max = max @lst;\n        }\n       \
    \ $i++;\n    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n\
    \    my @res;\n    while (@sorted) {\n        push @res, shift @sorted;\n    \
    \    push @res, pop @sorted;\n    }\n    return \\@res;\n}", "    my @sorted =\
    \ sort { $a <=> $b } @$lst;\n    my @res;\n    while (@sorted) {\n        push\
    \ @res, shift @sorted;\n        push @res, pop @sorted;\n    }\n    return \\\
    @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n    my\
    \ $i = 0;\n    while(@sorted) {\n        push @res, $sorted[$i];\n        splice\
    \ @sorted, $i, 1;\n        $i = $i ? $i - 1 : @sorted - 1;\n    }\n    return\
    \ \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my\
    \ @res;\n    while (@lst) {\n        push @res, shift @lst;\n        push @res,\
    \ pop @lst;\n    }\n    return @res;\n}", "    my @sorted = sort { $a <=> $b }\
    \ @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return \\\
    @result;\n}", "    my @result;\n    my @lst = sort {$a <=> $b} @$lst;\n    while\
    \ (@lst) {\n        push @result, shift @lst;\n        push @result, pop @lst\
    \ if @lst;\n    }\n    return \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n\
    \    my $i = 0;\n    while (@lst) {\n        my $min = $lst[0];\n        my $max\
    \ = $lst[0];\n        for my $x (@lst) {\n            $min = $x if $x < $min;\n\
    \            $max = $x if $x > $max;\n        }\n        if ($i % 2 == 0) {\n\
    \            push @res, $min;\n        } else {\n            push @res, $max;\n\
    \        }\n        @lst = grep { $_ != $min && $_ != $max } @lst;\n        $i++;\n\
    \    }\n    return \\@res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n  \
    \  my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted if @sorted;\n    }\n    return @result;\n}",
  "    my @lst = @$lst;\n    my @res;\n    while(@lst) {\n        push @res, shift\
    \ @lst;\n        push @res, pop @lst;\n    }\n    return @res;\n}", "    my @sorted\
    \ = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n      \
    \  push @result, shift @sorted;\n        push @result, pop @sorted if @sorted;\n\
    \    }\n    return @result;\n}", "    my @res = ();\n    my @lst = @$lst;\n  \
    \  while(@lst) {\n        push @res, shift @lst;\n        push @res, pop @lst;\n\
    \    }\n    return @res;\n}", "    my @res = ();\n    my @lst = @$lst;\n    my\
    \ $min = min(@lst);\n    my $max = max(@lst);\n    my $min_idx = first_index {\
    \ $_ == $min } @lst;\n    my $max_idx = first_index { $_ == $max } @lst;\n   \
    \ push @res, $min;\n    push @res, $max;\n    splice @lst, $min_idx, 1;\n    splice\
    \ @lst, $max_idx, 1;\n    while (@lst) {\n        $min = min(@lst);\n        $max\
    \ = max(@lst);\n        $min_idx = first_index { $_ == $min } @lst;\n        $max_idx\
    \ = first_index { $_ == $max } @lst;\n        push @res, $min;\n        push @res,\
    \ $max;\n        splice @lst, $min_idx, 1;\n        splice @lst, $max_idx, 1;\n\
    \    }\n    return \\@res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n  \
    \  my @res = ();\n    my $i = 0;\n    while (@sorted) {\n        push @res, $sorted[$i];\n\
    \        splice @sorted, $i, 1;\n        $i = $i ? $i - 1 : $#sorted;\n    }\n\
    \    return \\@res;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted if @sorted;\n    }\n    return \\@result;\n}", "    my @sorted =\
    \ sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return \\@result;\n}", "    my @sorted = sort { $a\
    \ <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted if @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @res = ();\n\
    \    while (@sorted) {\n        push @res, shift @sorted;\n        push @res,\
    \ pop @sorted if @sorted;\n    }\n    return @res;\n}", "    my @sorted = sort\
    \ { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result,\
    \ shift @sorted;\n        push @result, pop @sorted;\n    }\n    return \\@result;\n\
    }", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n        my $min =\
    \ min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min } @lst;\n\
    \        my $max = max(@lst);\n        push @res, $max if defined $max;\n    \
    \    @lst = grep { $_ != $max } @lst;\n    }\n    return \\@res;\n}", "    my\
    \ $len = scalar @$lst;\n    my @res = ();\n    my $i = 0;\n    while ($i < $len)\
    \ {\n        my $min = min(@$lst);\n        push @res, $min;\n        $i++;\n\
    \        @$lst = grep { $_ != $min } @$lst;\n        if ($i < $len) {\n      \
    \      my $max = max(@$lst);\n            push @res, $max;\n            $i++;\n\
    \            @$lst = grep { $_ != $max } @$lst;\n        }\n    }\n    return\
    \ @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n    my\
    \ $i = 0;\n    while (@sorted) {\n        if ($i % 2 == 0) {\n            push\
    \ @result, shift @sorted;\n        } else {\n            push @result, pop @sorted;\n\
    \        }\n        $i++;\n    }\n    return \\@result;\n}", "    my @sorted =\
    \ sort {$a <=> $b} @$lst;\n    my @result;\n    while (@sorted) {\n        push\
    \ @result, shift @sorted;\n        push @result, pop @sorted;\n    }\n    return\
    \ \\@result;\n}", "    my @lst = @$lst;\n    my @res;\n    while (@lst) {\n  \
    \      push @res, shift @lst;\n        push @res, pop @lst if @lst;\n    }\n \
    \   return @res;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n    my @result;\n\
    \    while (@sorted) {\n        push @result, shift @sorted;\n        push @result,\
    \ pop @sorted;\n    }\n    return @result;\n}", "    my @sorted = sort { $a <=>\
    \ $b } @$lst;\n    my @result;\n    while (@sorted) {\n        push @result, shift\
    \ @sorted;\n        push @result, pop @sorted;\n    }\n    return @result;\n}",
  "    my @sorted = sort { $a <=> $b } @$lst;\n    my @result;\n    while (@sorted)\
    \ {\n        push @result, shift @sorted;\n        push @result, pop @sorted;\n\
    \    }\n    return \\@result;\n}", "    my @sorted = sort {$a <=> $b} @$lst;\n\
    \    my @result;\n    while (@sorted) {\n        push @result, shift @sorted;\n\
    \        push @result, pop @sorted;\n    }\n    return \\@result;\n}", "    my\
    \ @lst = @$lst;\n    my @res;\n    my $min = min(@lst);\n    push @res, $min;\n\
    \    @lst = grep { $_ != $min } @lst;\n    while (@lst) {\n        my $max = max(@lst);\n\
    \        push @res, $max;\n        @lst = grep { $_ != $max } @lst;\n        my\
    \ $min = min(@lst);\n        push @res, $min;\n        @lst = grep { $_ != $min\
    \ } @lst;\n    }\n    return \\@res;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

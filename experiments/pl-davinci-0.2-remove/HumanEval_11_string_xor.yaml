name: HumanEval_11_string_xor
language: pl
prompt: "# Input are two strings a and b consisting only of 1s and 0s.\n# Perform\
  \ binary XOR on these inputs and return result also as a string.\nsub string_xor\
  \ {\n    my($a, $b) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&string_xor;\n\
  \        if(eq_deeply($candidate->(\"111000\", \"101010\"),\"010010\")) {\n    \
  \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->(\"\
  1\", \"1\"),\"0\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
  \        if(eq_deeply($candidate->(\"0101\", \"0000\"),\"0101\")) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $len = length($a);\n    for (my\
    \ $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n       \
    \ my $b_bit = substr($b, $i, 1);\n        $result .= ($a_bit ^ $b_bit);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n \
    \   for (my $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        my $xor_bit = $a_bit ^ $b_bit;\n\
    \        $result .= $xor_bit;\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n\
    \        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        if ($a_bit eq $b_bit) {\n            $result .= \"0\";\n        } else\
    \ {\n            $result .= \"1\";\n        }\n    }\n    return $result;\n}",
  "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $res = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $res .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $res;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $r = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n   \
    \ my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my $x\
    \ = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .=\
    \ ($x ^ $y);\n    }\n    return $result;\n}", "    my $res = '';\n    for (my\
    \ $i = 0; $i < length($a); $i++) {\n        $res .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $res;\n}", "    my $result = '';\n    for (my $i\
    \ = 0; $i < length($a); $i++) {\n        my $x = substr($a, $i, 1);\n        my\
    \ $y = substr($b, $i, 1);\n        $result .= $x ^ $y;\n    }\n    return $result;\n\
    }", "    my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i <\
    \ $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        $result .= $a_bit ^ $b_bit;\n    }\n    return $result;\n}",
  "    my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n        my\
    \ $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n      \
    \  if ($a_bit eq $b_bit) {\n            $result .= \"0\";\n        } else {\n\
    \            $result .= \"1\";\n        }\n    }\n    return $result;\n}", " \
    \   my $len = length($a);\n    my $result = '';\n    for (my $i = 0; $i < $len;\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n \
    \   for (my $i = 0; $i < $len; $i++) {\n        my $x = substr($a, $i, 1);\n \
    \       my $y = substr($b, $i, 1);\n        $result .= ($x eq $y) ? '0' : '1';\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    my $i = 0;\n    while\
    \ ($i < length($a) && $i < length($b)) {\n        $result .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        my $x =\
    \ substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x\
    \ ^ $y);\n    }\n    return $result;\n}", "    my $result = '';\n    my $len =\
    \ length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a,\
    \ $i, 1);\n        my $b_bit = substr($b, $i, 1);\n        my $r_bit = $a_bit\
    \ ^ $b_bit;\n        $result .= $r_bit;\n    }\n    return $result;\n}", "   \
    \ my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        my $a_bit = substr($a,\
    \ $i, 1);\n        my $b_bit = substr($b, $i, 1);\n        $result .= ($a_bit\
    \ ^ $b_bit);\n    }\n    return $result;\n}", '    my($i, $xor);', "    my $result\
    \ = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $r = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n   \
    \ my $i = 0;\n    while ($i < length($a) && $i < length($b)) {\n        my $x\
    \ = substr($a, $i, 1) ^ substr($b, $i, 1);\n        $result .= $x;\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $r = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n\
    \    }\n    return $r;\n}", "    my $c = '';\n    my $i = 0;\n    while ($i <\
    \ length($a) && $i < length($b)) {\n        my $x = substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n        $c .= $x;\n        $i++;\n    }\n    return $c;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len;\
    \ $i++) {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i,\
    \ 1);\n        $result .= $x ^ $y;\n    }\n    return $result;\n}", "    my $r\
    \ = '';\n    for my $i (0..length($a)-1) {\n        $r .= substr($a, $i, 1) ^\
    \ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n    for\
    \ (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^\
    \ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        my $x = substr($a, $i,\
    \ 1);\n        my $y = substr($b, $i, 1);\n        $result .= $x ^ $y;\n    }\n\
    \    return $result;\n}", "    my $r = '';\n    my $i = 0;\n    while ($i < length($a)\
    \ && $i < length($b)) {\n        my $x = substr($a, $i, 1) ^ substr($b, $i, 1);\n\
    \        $r .= $x;\n        $i++;\n    }\n    return $r;\n}", "    my $result\
    \ = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        my $x = substr($a,\
    \ $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $c = \"\";\n    for (my $i = 0;\
    \ $i < length($a); $i++) {\n        $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n\
    \    }\n    return $c;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        if ($a_bit eq $b_bit) {\n            $result .= '0';\n    \
    \    } else {\n            $result .= '1';\n        }\n    }\n    return $result;\n\
    }", "    my $c = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $c\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $c;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        my $x =\
    \ substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x\
    \ ^ $y);\n    }\n    return $result;\n}", "    my $result = '';\n    my $len =\
    \ length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my $x = substr($a,\
    \ $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= $x ^ $y;\n \
    \   }\n    return $result;\n}", "    my $c = \"\";\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $c;\n}", "    my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $len = length($a);\n    for (my\
    \ $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n       \
    \ my $b_bit = substr($b, $i, 1);\n        $result .= $a_bit ^ $b_bit;\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = \"\";\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n \
    \   for (my $i = 0; $i < $len; $i++) {\n        my $x = substr($a, $i, 1);\n \
    \       my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n    }\n   \
    \ return $result;\n}", "    my $c = '';\n    my $i = 0;\n    my $len = length($a);\n\
    \    while ($i < $len) {\n        my $x = substr($a, $i, 1);\n        my $y =\
    \ substr($b, $i, 1);\n        my $z = $x ^ $y;\n        $c .= $z;\n        $i++;\n\
    \    }\n    return $c;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $r;\n}", "    my $result = \"\";\n    my $len = length($a);\n    for (my $i\
    \ = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my\
    \ $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n            $result\
    \ .= \"0\";\n        } else {\n            $result .= \"1\";\n        }\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $i = 0;\n    while ($i\
    \ < length($a) && $i < length($b)) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n   \
    \         $result .= '0';\n        } else {\n            $result .= '1';\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}", "    my $r = '';\n   \
    \ my $i = 0;\n    while ($i < length($a) && $i < length($b)) {\n        $r .=\
    \ substr($a, $i, 1) ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $r;\n\
    }", "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my\
    \ @a = split //, $a;\n    my @b = split //, $b;\n    my @c;\n    for (my $i =\
    \ 0; $i < scalar @a; $i++) {\n        $c[$i] = $a[$i] ^ $b[$i];\n    }\n    return\
    \ join '', @c;\n}", "    my $result = '';\n    for my $i (0 .. length($a)-1) {\n\
    \        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n    \
    \    $result .= $x ^ $y;\n    }\n    return $result;\n}", "    my $c = '';\n \
    \   my $i = 0;\n    my $len = length($a);\n    while ($i < $len) {\n        my\
    \ $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        my $z =\
    \ $x ^ $y;\n        $c .= $z;\n        $i++;\n    }\n    return $c;\n}", "   \
    \ my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    for my $i (0 .. length($a) - 1) {\n        my $a_bit\
    \ = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n        my $xor_bit\
    \ = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n    }\n    return $result;\n\
    }", "    my @a = split //, $a;\n    my @b = split //, $b;\n    my @c;\n    for\
    \ (my $i = 0; $i < scalar @a; $i++) {\n        $c[$i] = $a[$i] ^ $b[$i];\n   \
    \ }\n    return join('', @c);\n}", "    my $result = '';\n    my $i = 0;\n   \
    \ while ($i < length($a) && $i < length($b)) {\n        my $a_bit = substr($a,\
    \ $i, 1);\n        my $b_bit = substr($b, $i, 1);\n        $result .= ($a_bit\
    \ ^ $b_bit);\n        $i++;\n    }\n    return $result;\n}", "    my $result =\
    \ \"\";\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n \
    \       my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        my $xor_bit = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n    }\n\
    \    return $result;\n}", "    my $res = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $res .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n   \
    \ return $res;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i,\
    \ 1);\n        $result .= ($x ^ $y);\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n\
    }", "    my $result = '';\n    my $i = 0;\n    my $len = length($a);\n    while\
    \ ($i < $len) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        if ($a_bit eq $b_bit) {\n            $result .= '0';\n    \
    \    } else {\n            $result .= '1';\n        }\n        $i++;\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n \
    \   for (my $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n   \
    \         $result .= '0';\n        } else {\n            $result .= '1';\n   \
    \     }\n    }\n    return $result;\n}", "    my $result = '';\n    for (my $i\
    \ = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n    for (my\
    \ $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $r = '';\n    for (my $i =\
    \ 0; $i < length($a); $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $r;\n}", "    my $c = \"\";\n    for (my $i = 0; $i <\
    \ length($a); $i++) {\n        $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n\
    \    }\n    return $c;\n}", "    my $ret = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $ret .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n   \
    \ return $ret;\n}", "    my $res = \"\";\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i,\
    \ 1);\n        $res .= ($x ^ $y);\n    }\n    return $res;\n}", "    my $c = '';\n\
    \    my $i = 0;\n    my $len = length($a);\n    while ($i < $len) {\n        $c\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n        $i++;\n    }\n    return\
    \ $c;\n}", "    my $result = '';\n    for my $i (0 .. length($a) - 1) {\n    \
    \    my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my\
    \ $c = '';\n    my $i = 0;\n    my $len = length($a);\n    while ($i < $len) {\n\
    \        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n    \
    \    my $z = $x ^ $y;\n        $c .= $z;\n        $i++;\n    }\n    return $c;\n\
    }", "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        my\
    \ $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n      \
    \  $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my $c =\
    \ '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n   \
    \     $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $c;\n}",
  "    my $r = '';\n    my $i = 0;\n    while ($i < length($a) && $i < length($b))\
    \ {\n        my $c = substr($a, $i, 1) ^ substr($b, $i, 1);\n        $r .= $c;\n\
    \        $i++;\n    }\n    return $r;\n}", "    my $result = '';\n    for (my\
    \ $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $res = '';\n    for my $i (0..length($a)-1)\
    \ {\n        $res .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $res;\n}", "    my $result = '';\n    my $len = length($a);\n    for (my $i\
    \ = 0; $i < $len; $i++) {\n        my $x = substr($a, $i, 1);\n        my $y =\
    \ substr($b, $i, 1);\n        $result .= ($x eq $y) ? '0' : '1';\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n\
    }", "    my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i <\
    \ $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        my $xor_bit = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my @a = split //, $a;\n    my @b =\
    \ split //, $b;\n    my @c;\n    for (my $i = 0; $i < scalar @a; $i++) {\n   \
    \     $c[$i] = $a[$i] ^ $b[$i];\n    }\n    return join('', @c);\n}", "    my\
    \ $c = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $c .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $c;\n}", "    my $c = '';\n \
    \   my $i = 0;\n    while ($i < length($a) || $i < length($b)) {\n        my $x\
    \ = substr($a, $i, 1) || 0;\n        my $y = substr($b, $i, 1) || 0;\n       \
    \ $c .= ($x ^ $y);\n        $i++;\n    }\n    return $c;\n}", "    my $result\
    \ = \"\";\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n\
    \        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        my $xor_bit = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n    }\n\
    \    return $result;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $r;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n       \
    \ $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n\
    }", "    my $len = length($a);\n    my $result = '';\n    for (my $i = 0; $i <\
    \ $len; $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n \
    \   }\n    return $result;\n}", "    my $c = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i,\
    \ 1);\n        $c .= $x ^ $y;\n    }\n    return $c;\n}", "    my $c = '';\n \
    \   my $i = 0;\n    while ($i < length($a)) {\n        $c .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $c;\n}", "    my $result\
    \ = '';\n    my $i = 0;\n    while ($i < length($a) || $i < length($b)) {\n  \
    \      my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        if ($a_bit eq $b_bit) {\n            $result .= '0';\n        } else\
    \ {\n            $result .= '1';\n        }\n        $i++;\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $len = length($a);\n    for (my\
    \ $i = 0; $i < $len; $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n    for (my\
    \ $i = 0; $i < length($a); $i++) {\n        $result .= (substr($a, $i, 1) ^ substr($b,\
    \ $i, 1)) ? '1' : '0';\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $r = '';\n\
    \    my $i = 0;\n    while ($i < length($a) && $i < length($b)) {\n        $r\
    \ .= substr($a, $i, 1) eq substr($b, $i, 1) ? '0' : '1';\n        $i++;\n    }\n\
    \    while ($i < length($a)) {\n        $r .= substr($a, $i, 1);\n        $i++;\n\
    \    }\n    while ($i < length($b)) {\n        $r .= substr($b, $i, 1);\n    \
    \    $i++;\n    }\n    return $r;\n}", "    my $result = '';\n    my $len = length($a);\n\
    \    for (my $i = 0; $i < $len; $i++) {\n        $result .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my\
    \ $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result\
    \ .= ($x ^ $y);\n    }\n    return $result;\n}", "    my $r = '';\n    for (my\
    \ $i = 0; $i < length($a); $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n    for my $i (0\
    \ .. length($a) - 1) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit\
    \ = substr($b, $i, 1);\n        $result .= ($a_bit xor $b_bit);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $i;\n    my $result = '';\n    for ($i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $c = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $c;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n  \
    \      $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}",
  "    my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len;\
    \ $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n\
    }", "    my $xor = '';\n    for (my $i = 0; $i < length($a); $i++) {\n       \
    \ $xor .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $xor;\n}",
  "    my $c = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $c .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $c;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my\
    \ $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n      \
    \  $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $l = length($a);\n\
    \    my $r = '';\n    for (my $i = 0; $i < $l; $i++) {\n        my $c = substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n        $r .= $c;\n    }\n    return $r;\n}", " \
    \   my $result = '';\n    my $i = 0;\n    my $len = length($a);\n    while ($i\
    \ < $len) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        my $r_bit = $a_bit ^ $b_bit;\n        $result .= $r_bit;\n\
    \        $i++;\n    }\n    return $result;\n}", "    my $result = '';\n    my\
    \ $i = 0;\n    while ($i < length($a) && $i < length($b)) {\n        my $x = substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n        $result .= $x;\n        $i++;\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    my $i = 0;\n    while ($i\
    \ < length($a) && $i < length($b)) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n   \
    \         $result .= '0';\n        } else {\n            $result .= '1';\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    my $i = 0;\n    while ($i < length($a) && $i < length($b))\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $result = '';\n    my $i = 0;\n\
    \    while ($i < length($a) && $i < length($b)) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $result;\n}",
  "    my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $r = '';\n \
    \   for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a, $i, 1)\
    \ ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n   \
    \ my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my $x\
    \ = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .=\
    \ ($x ^ $y);\n    }\n    return $result;\n}", "    my $result = '';\n    my $len\
    \ = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my $x = substr($a,\
    \ $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $result = '';\n    for (my $i =\
    \ 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n    for my $i\
    \ (0 .. length($a) - 1) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $result = '';\n    for (my $i =\
    \ 0; $i < length($a); $i++) {\n        my $x = substr($a, $i, 1);\n        my\
    \ $y = substr($b, $i, 1);\n        $result .= $x ^ $y;\n    }\n    return $result;\n\
    }", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n    \
    \    $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n\
    }", "    my $result = '';\n    for my $i (0 .. length($a) - 1) {\n        my $a_bit\
    \ = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n        $result\
    \ .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my $result = \"\"\
    ;\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result\
    \ = \"\";\n    my $i;\n    for ($i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        my\
    \ $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result\
    \ .= ($x eq $y) ? '0' : '1';\n    }\n    return $result;\n}", "    my $result\
    \ = '';\n    for my $i (0 .. length($a) - 1) {\n        my $x = substr($a, $i,\
    \ 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n   \
    \ }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i <\
    \ length($a); $i++) {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b,\
    \ $i, 1);\n        $result .= $x ^ $y;\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n       \
    \ $result .= (substr($a, $i, 1) ^ substr($b, $i, 1)) ? \"1\" : \"0\";\n    }\n\
    \    return $result;\n}", "    my $c = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $c .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $c;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n\
    \        $result .= $x ^ $y;\n    }\n    return $result;\n}", "    my $result\
    \ = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n \
    \       my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n     \
    \   $result .= ($x ^ $y);\n    }\n    return $result;\n}", "    my $result = \"\
    \";\n    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n     \
    \   my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n \
    \       if ($a_bit eq $b_bit) {\n            $result .= \"0\";\n        } else\
    \ {\n            $result .= \"1\";\n        }\n    }\n    return $result;\n}",
  "    my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len;\
    \ $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        if ($a_bit eq $b_bit) {\n            $result .= '0';\n    \
    \    } else {\n            $result .= '1';\n        }\n    }\n    return $result;\n\
    }", "    my $result = '';\n    my $i = 0;\n    my $len = length($a);\n    while($i\
    \ < $len) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        my $xor_bit = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n\
    \        $i++;\n    }\n    return $result;\n}", "    my $result = '';\n    for\
    \ (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^\
    \ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        my $x = substr($a, $i,\
    \ 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n   \
    \ }\n    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n\
    \    for (my $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        $result .= ($a_bit ^ $b_bit);\n\
    \    }\n    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i\
    \ < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i,\
    \ 1);\n    }\n    return $result;\n}", "    my $result = '';\n    my $len = length($a);\n\
    \    for (my $i = 0; $i < $len; $i++) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n   \
    \         $result .= '0';\n        } else {\n            $result .= '1';\n   \
    \     }\n    }\n    return $result;\n}", "    my $result = '';\n    for (my $i\
    \ = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b,\
    \ $i, 1);\n    }\n    return $result;\n}", "    my $c = '';\n    my $i = 0;\n\
    \    while ($i < length($a) && $i < length($b)) {\n        $c .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $c;\n}", "    my $result\
    \ = \"\";\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result\
    \ = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result\
    \ = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $c = \"\
    \";\n    for (my $i = 0; $i < length($a); $i++) {\n        $c .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $c;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        $result .= substr($a, $i,\
    \ 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        my $x = substr($a, $i,\
    \ 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n   \
    \ }\n    return $result;\n}", "    my $len = length($a);\n    my $c = '';\n  \
    \  for (my $i = 0; $i < $len; $i++) {\n        my $x = substr($a, $i, 1);\n  \
    \      my $y = substr($b, $i, 1);\n        my $z = $x ^ $y;\n        $c .= $z;\n\
    \    }\n    return $c;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n\
    \    return $result;\n}", "    my $r = '';\n    for my $i (0..length($a)-1) {\n\
    \        my $x = substr($a, $i, 1) ^ substr($b, $i, 1);\n        $r .= $x;\n \
    \   }\n    return $r;\n}", "    my $result = '';\n    my $i = 0;\n    while ($i\
    \ < length($a) || $i < length($b)) {\n        my $a_bit = substr($a, $i, 1);\n\
    \        my $b_bit = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n   \
    \         $result .= '0';\n        } else {\n            $result .= '1';\n   \
    \     }\n        $i++;\n    }\n    return $result;\n}", "    my $result = '';\n\
    \    for (my $i = 0; $i < length($a); $i++) {\n        my $x = substr($a, $i,\
    \ 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x ^ $y);\n   \
    \ }\n    return $result;\n}", "    my $r = \"\";\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $r;\n}", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n\
    \        my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n    \
    \    $result .= $x ^ $y;\n    }\n    return $result;\n}", "    my $len = length($a);\n\
    \    my $result = '';\n    for (my $i = 0; $i < $len; $i++) {\n        my $x =\
    \ substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result .= ($x\
    \ ^ $y);\n    }\n    return $result;\n}", "    my $result = '';\n    my $i = 0;\n\
    \    while ($i < length($a) && $i < length($b)) {\n        $result .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n        $i++;\n    }\n    return $result;\n}",
  "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}", " \
    \   my $r = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $r .= substr($a,\
    \ $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n}", "    my $result = '';\n\
    \    my $len = length($a);\n    for (my $i = 0; $i < $len; $i++) {\n        my\
    \ $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n      \
    \  my $xor_bit = $a_bit ^ $b_bit;\n        $result .= $xor_bit;\n    }\n    return\
    \ $result;\n}", "    my $result = '';\n    my $i = 0;\n    while ($i < length($a)\
    \ || $i < length($b)) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit\
    \ = substr($b, $i, 1);\n        if ($a_bit eq $b_bit) {\n            $result .=\
    \ '0';\n        } else {\n            $result .= '1';\n        }\n        $i++;\n\
    \    }\n    return $result;\n}", "    my $r = '';\n    for (my $i = 0; $i < length($a);\
    \ $i++) {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $r;\n}", "    my $result = \"\";\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return\
    \ $result;\n}", "    my $r = \"\";\n    for (my $i = 0; $i < length($a); $i++)\
    \ {\n        $r .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $r;\n\
    }", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n    \
    \    $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n\
    }", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n    \
    \    $result .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n\
    }", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n    \
    \    my $x = substr($a, $i, 1);\n        my $y = substr($b, $i, 1);\n        $result\
    \ .= $x ^ $y;\n    }\n    return $result;\n}", "    my @a = split //, $a;\n  \
    \  my @b = split //, $b;\n    my @c;\n    for (my $i = 0; $i < scalar @a; $i++)\
    \ {\n        $c[$i] = $a[$i] ^ $b[$i];\n    }\n    return join '', @c;\n}", " \
    \   my $result = '';\n    my $len = length($a);\n    for (my $i = 0; $i < $len;\
    \ $i++) {\n        my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b,\
    \ $i, 1);\n        $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n\
    }", "    my $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n    \
    \    my $a_bit = substr($a, $i, 1);\n        my $b_bit = substr($b, $i, 1);\n\
    \        $result .= ($a_bit ^ $b_bit);\n    }\n    return $result;\n}", "    my\
    \ $result = '';\n    for (my $i = 0; $i < length($a); $i++) {\n        $result\
    \ .= substr($a, $i, 1) ^ substr($b, $i, 1);\n    }\n    return $result;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

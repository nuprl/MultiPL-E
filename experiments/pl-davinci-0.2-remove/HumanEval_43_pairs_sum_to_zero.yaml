name: HumanEval_43_pairs_sum_to_zero
language: pl
prompt: "# pairs_sum_to_zero takes a list of integers as an input.\n# it returns True\
  \ if there are two distinct elements in the list that\n# sum to zero, and False\
  \ otherwise.\nsub pairs_sum_to_zero {\n    my($l) = @_;\n"
tests: "use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&pairs_sum_to_zero;\n\
  \        if(eq_deeply($candidate->([1, 3, 5, 0]),\"\")) {\n        print \"ok!\"\
  \ }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1, 3, -2,\
  \ 1]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n     \
  \   if(eq_deeply($candidate->([1, 2, 3, 7]),\"\")) {\n        print \"ok!\" }else{\n\
  \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, -5, 3, 5,\
  \ 7]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1]),\"\
  \")) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 3, 2, 30]),1)) {\n        print \"ok!\" }else{\n        exit 1;\n     \
  \   }\n        if(eq_deeply($candidate->([-3, 9, -1, 3, 2, 31]),1)) {\n        print\
  \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-3,\
  \ 9, -1, 4, 2, 30]),\"\")) {\n        print \"ok!\" }else{\n        exit 1;\n  \
  \      }\n        if(eq_deeply($candidate->([-3, 9, -1, 4, 2, 31]),\"\")) {\n  \
  \      print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
completions: ["    my(%h);\n    foreach my $i (@$l) {\n        if (exists($h{-$i}))\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n        if (exists $h{-$x})\
    \ {\n            return 1;\n        }\n        $h{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for ($i = 0;\
    \ $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n         \
    \   if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n\
    \        }\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n\
    \        if (exists $h{-$x}) {\n            return 1;\n        }\n        $h{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my @list = @$l;\n    my %hash;\n    foreach\
    \ my $i (@list) {\n        if (exists $hash{-$i}) {\n            return 1;\n \
    \       }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %seen;\n\
    \    foreach my $i (@$l) {\n        if (exists $seen{-$i}) {\n            return\
    \ 1;\n        }\n        $seen{$i} = 1;\n    }\n    return 0;\n}", "    my(%h)\
    \ = ();\n    foreach my $i (@$l) {\n        if (defined($h{-$i})) {\n        \
    \    return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "  \
    \  my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n        \
    \    return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "  \
    \  my %h;\n    foreach my $x (@$l) {\n        if (exists $h{-$x}) {\n        \
    \    return 1;\n        }\n        $h{$x} = 1;\n    }\n    return 0;\n}", "  \
    \  my %seen;\n    foreach my $i (@$l) {\n        if (exists $seen{-$i}) {\n  \
    \          return 1;\n        }\n        $seen{$i} = 1;\n    }\n    return 0;\n\
    }", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n  \
    \          return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}",
  "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n        \
    \    return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "  \
    \  my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n        \
    \    return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "  \
    \  my %h;\n    foreach my $i (@$l) {\n        if(exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n         \
    \   return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n         \
    \   return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n         \
    \   return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $x (@$l) {\n        if (exists $h{-$x}) {\n         \
    \   return 1;\n        }\n        $h{$x} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "   \
    \ my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n         \
    \   return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "   \
    \ my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n   \
    \         return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n\
    }", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n  \
    \          return 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}",
  "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n        \
    \    return 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "  \
    \  my %seen;\n    foreach my $i (@$l) {\n        return 1 if exists $seen{-$i};\n\
    \        $seen{$i} = 1;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n \
    \   for ($i = 0; $i < scalar(@$l); $i++) {\n        for ($j = $i + 1; $j < scalar(@$l);\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $e (@$l) {\n        if (exists $h{-$e}) {\n            return 1;\n      \
    \  }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach\
    \ my $x (@$l) {\n        if (exists $seen{-$x}) {\n            return 1;\n   \
    \     }\n        $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $e (@$l) {\n        if (exists $h{-$e}) {\n            return 1;\n      \
    \  }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach\
    \ my $x (@$l) {\n        if (exists $seen{-$x}) {\n            return 1;\n   \
    \     }\n        $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n    my $j\
    \ = 0;\n    my $len = scalar(@$l);\n    while ($i < $len) {\n        $j = $i +\
    \ 1;\n        while ($j < $len) {\n            if ($l->[$i] + $l->[$j] == 0) {\n\
    \                return 1;\n            }\n            $j++;\n        }\n    \
    \    $i++;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n\
    \        if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $x (@$l) {\n\
    \        if (exists $hash{-$x}) {\n            return 1;\n        }\n        $hash{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n    for ($i = 0; $i\
    \ < @$l; $i++) {\n        for ($j = $i + 1; $j < @$l; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n  \
    \      if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $e (@$l) {\n\
    \        if (exists $hash{-$e}) {\n            return 1;\n        }\n        $hash{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        return 1 if exists $seen{-$x};\n        $seen{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n        if (exists $seen{-$i})\
    \ {\n            return 1;\n        }\n        $seen{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $n = scalar(@$l);\n    my $i;\n    my $j;\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n  \
    \      if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n\
    \        if (exists $seen{-$i}) {\n            return 1;\n        }\n        $seen{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (defined $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n   \
    \     if (exists $h{-$x}) {\n            return 1;\n        }\n        $h{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     return 1 if exists $h{-$e};\n        $h{$e} = 1;\n    }\n    return 0;\n\
    }", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i;\n    my $j;\n    my $n = scalar(@$l);\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            if\
    \ ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n            }\n   \
    \     }\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n  \
    \      if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $e (@$l)\
    \ {\n        if (exists $hash{-$e}) {\n            return 1;\n        }\n    \
    \    $hash{$e} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my\
    \ $i (@$l) {\n        if (exists $seen{-$i}) {\n            return 1;\n      \
    \  }\n        $seen{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $x (@$l) {\n        if (exists $h{-$x}) {\n            return 1;\n      \
    \  }\n        $h{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        return 1 if exists $h{-$i};\n        $h{$i} = 1;\n  \
    \  }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists\
    \ $h{-$e}) {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n \
    \   return 0;\n}", "    my(%h);\n    foreach my $i (@$l) {\n        if (defined($h{-$i}))\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n        if (exists $seen{-$i})\
    \ {\n            return 1;\n        }\n        $seen{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n        if (exists $seen{-$x})\
    \ {\n            return 1;\n        }\n        $seen{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash = ();\n    foreach my $e (@$l) {\n        if (exists $hash{-$e})\
    \ {\n            return 1;\n        }\n        $hash{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n        if (exists $seen{-$x})\
    \ {\n            return 1;\n        }\n        $seen{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n        if (exists $seen{-$x})\
    \ {\n            return 1;\n        }\n        $seen{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n        return 1 if exists\
    \ $seen{-$x};\n        $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $found = 0;\n    for ($i = 0; $i < scalar(@$l); $i++)\
    \ {\n        for ($j = $i + 1; $j < scalar(@$l); $j++) {\n            if ($l->[$i]\
    \ + $l->[$j] == 0) {\n                $found = 1;\n                last;\n   \
    \         }\n        }\n        if ($found) {\n            last;\n        }\n\
    \    }\n    return $found;\n}", "    my %hash;\n    foreach my $e (@$l) {\n  \
    \      if (exists $hash{-$e}) {\n            return 1;\n        }\n        $hash{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n\
    \        if (exists $seen{-$i}) {\n            return 1;\n        }\n        $seen{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $x (@$l) {\n        if (exists $h{-$x}) {\n            return 1;\n      \
    \  }\n        $h{$x} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach\
    \ my $x (@$l) {\n        if (exists $seen{-$x}) {\n            return 1;\n   \
    \     }\n        $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n   \
    \ foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        return 1 if exists $h{-$i};\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n\
    \        if (defined $seen{-$i}) {\n            return 1;\n        }\n       \
    \ $seen{$i} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x\
    \ (@$l) {\n        if (exists $seen{-$x}) {\n            return 1;\n        }\n\
    \        $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my\
    \ $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n\
    \        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i\
    \ (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n \
    \       $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x\
    \ (@$l) {\n        if (exists $h{-$x}) {\n            return 1;\n        }\n \
    \       $h{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x\
    \ (@$l) {\n        if (exists $h{-$x}) {\n            return 1;\n        }\n \
    \       $h{$x} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my\
    \ $e (@$l) {\n        if (exists $seen{-$e}) {\n            return 1;\n      \
    \  }\n        $seen{$e} = 1;\n    }\n    return 0;\n}", "    my $i;\n    my $j;\n\
    \    for ($i = 0; $i < scalar(@$l); $i++) {\n        for ($j = $i + 1; $j < scalar(@$l);\
    \ $j++) {\n            if ($l->[$i] + $l->[$j] == 0) {\n                return\
    \ 1;\n            }\n        }\n    }\n    return 0;\n}", "    my(%h);\n    foreach\
    \ my $i (@$l) {\n        if (exists($h{-$i})) {\n            return 1;\n     \
    \   }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $i (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n      \
    \  }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach\
    \ my $x (@$l) {\n        if (exists $h{-$x}) {\n            return 1;\n      \
    \  }\n        $h{$x} = 1;\n    }\n    return 0;\n}", "    my(%h);\n    foreach\
    \ my $i (@$l) {\n        if (exists($h{-$i})) {\n            return 1;\n     \
    \   }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach\
    \ my $elem (@$l) {\n        if (exists $hash{-$elem}) {\n            return 1;\n\
    \        }\n        $hash{$elem} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n            return\
    \ 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n            return\
    \ 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n            return\
    \ 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %hash;\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my $i = 0;\n\
    \    my $j = 0;\n    my $n = scalar(@$l);\n    while ($i < $n) {\n        $j =\
    \ $i + 1;\n        while ($j < $n) {\n            if ($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n            $j++;\n        }\n\
    \        $i++;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x (@$l)\
    \ {\n        if (exists $h{-$x}) {\n            return 1;\n        }\n       \
    \ $h{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i\
    \ (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n\
    \        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my\
    \ $i (@$l) {\n        return 1 if exists $h{-$i};\n        $h{$i} = 1;\n    }\n\
    \    return 0;\n}", "    my $i;\n    my $j;\n    my $len = scalar(@$l);\n    for\
    \ ($i = 0; $i < $len; $i++) {\n        for ($j = $i + 1; $j < $len; $j++) {\n\
    \            if ($l->[$i] + $l->[$j] == 0) {\n                return 1;\n    \
    \        }\n        }\n    }\n    return 0;\n}", "    my %hash;\n    foreach my\
    \ $i (@$l) {\n        if (exists $hash{-$i}) {\n            return 1;\n      \
    \  }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n\
    \    foreach my $i (@$l) {\n        if (exists $hash{-$i}) {\n            return\
    \ 1;\n        }\n        $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $i (@$l) {\n        if (exists $h{-$i}) {\n            return\
    \ 1;\n        }\n        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $e (@$l) {\n        if (exists $h{-$e}) {\n            return\
    \ 1;\n        }\n        $h{$e} = 1;\n    }\n    return 0;\n}", "    my %h;\n\
    \    foreach my $e (@$l) {\n        return 1 if exists $h{-$e};\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n   \
    \     if (exists $h{-$x}) {\n            return 1;\n        }\n        $h{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i (@$l)\
    \ {\n        if (exists $hash{-$i}) {\n            return 1;\n        }\n    \
    \    $hash{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i\
    \ (@$l) {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n \
    \       $h{$i} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e\
    \ (@$l) {\n        if (exists $h{-$e}) {\n            return 1;\n        }\n \
    \       $h{$e} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $x\
    \ (@$l) {\n        return 1 if exists $h{-$x};\n        $h{$x} = 1;\n    }\n \
    \   return 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n        if (exists\
    \ $h{-$x}) {\n            return 1;\n        }\n        $h{$x} = 1;\n    }\n \
    \   return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists\
    \ $h{-$e}) {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n \
    \   return 0;\n}", "    my %hash;\n    foreach my $e (@$l) {\n        if (exists\
    \ $hash{-$e}) {\n            return 1;\n        }\n        $hash{$e} = 1;\n  \
    \  }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists\
    \ $h{-$e}) {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n \
    \   return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists\
    \ $h{-$i}) {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n \
    \   return 0;\n}", "    my %h;\n    for my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my $i;\n    my $j;\n    for($i = 0; $i < @$l; $i++) {\n       \
    \ for($j = $i + 1; $j < @$l; $j++) {\n            if($l->[$i] + $l->[$j] == 0)\
    \ {\n                return 1;\n            }\n        }\n    }\n    return 0;\n\
    }", "    my %hash = ();\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my(%hash);\n    foreach my $i (@$l) {\n        if (defined($hash{-$i}))\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (defined $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if (exists $hash{-$i})\
    \ {\n            return 1;\n        }\n        $hash{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n        if (exists $h{-$x})\
    \ {\n            return 1;\n        }\n        $h{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %hash = ();\n    foreach my $e (@$l) {\n        if (exists $hash{-$e})\
    \ {\n            return 1;\n        }\n        $hash{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    for my $i (@$l) {\n        return 1 if exists $h{-$i};\n\
    \        $h{$i} = 1;\n    }\n    return 0;\n}", "    my %sums;\n    foreach my\
    \ $i (@$l) {\n        foreach my $j (@$l) {\n            if ($i != $j) {\n   \
    \             if ($sums{$i + $j}) {\n                    return 1;\n         \
    \       }\n                $sums{$i + $j} = 1;\n            }\n        }\n   \
    \ }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n        if\
    \ (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n     \
    \   if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i} =\
    \ 1;\n    }\n    return 0;\n}", "    my %hash = ();\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n\
    \        if (exists $seen{-$i}) {\n            return 1;\n        }\n        $seen{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my(%h);\n    foreach my $x (@$l) {\n  \
    \      if (defined($h{-$x})) {\n            return 1;\n        }\n        $h{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n   \
    \     if (exists $h{-$e}) {\n            return 1;\n        }\n        $h{$e}\
    \ = 1;\n    }\n    return 0;\n}", "    my %hash;\n    foreach my $i (@$l) {\n\
    \        if (exists $hash{-$i}) {\n            return 1;\n        }\n        $hash{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n   \
    \     if (exists $h{-$i}) {\n            return 1;\n        }\n        $h{$i}\
    \ = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l) {\n\
    \        if (exists $seen{-$x}) {\n            return 1;\n        }\n        $seen{$x}\
    \ = 1;\n    }\n    return 0;\n}", "    my %sums;\n    foreach my $i (@$l) {\n\
    \        foreach my $j (@$l) {\n            if ($i != $j) {\n                my\
    \ $sum = $i + $j;\n                if (exists $sums{$sum}) {\n               \
    \     return 1;\n                }\n                $sums{$sum} = 1;\n       \
    \     }\n        }\n    }\n    return 0;\n}", "    my %h;\n    foreach my $e (@$l)\
    \ {\n        if (exists $h{-$e}) {\n            return 1;\n        }\n       \
    \ $h{$e} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i (@$l)\
    \ {\n        if (exists $h{-$i}) {\n            return 1;\n        }\n       \
    \ $h{$i} = 1;\n    }\n    return 0;\n}", "    my(%h);\n    foreach my $e (@$l)\
    \ {\n        if (exists($h{-$e})) {\n            return 1;\n        }\n      \
    \  $h{$e} = 1;\n    }\n    return 0;\n}", "    my %seen;\n    foreach my $x (@$l)\
    \ {\n        if (exists $seen{-$x}) {\n            return 1;\n        }\n    \
    \    $seen{$x} = 1;\n    }\n    return 0;\n}", "    my %h;\n    foreach my $i\
    \ (@$l) {\n        return 1 if $h{-$i};\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $x (@$l) {\n        if (exists $h{-$x})\
    \ {\n            return 1;\n        }\n        $h{$x} = 1;\n    }\n    return\
    \ 0;\n}", "    my %seen;\n    foreach my $i (@$l) {\n        if (exists $seen{-$i})\
    \ {\n            return 1;\n        }\n        $seen{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $i (@$l) {\n        if (exists $h{-$i})\
    \ {\n            return 1;\n        }\n        $h{$i} = 1;\n    }\n    return\
    \ 0;\n}", "    my %h;\n    foreach my $e (@$l) {\n        if (exists $h{-$e})\
    \ {\n            return 1;\n        }\n        $h{$e} = 1;\n    }\n    return\
    \ 0;\n}"]
stop_tokens:
- "\nsub"
- "\n#"
- "\n\n"

language: pl
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n   \
    \ return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = scalar(grep {$_ eq '1'} split(//, unpack(\"B*\", pack(\"N\",\
    \ $a)))) || 0;\n        my $b_ones = scalar(grep {$_ eq '1'} split(//, unpack(\"\
    B*\", pack(\"N\", $b)))) || 0;\n        $a_ones <=> $b_ones || $a <=> $b\n   \
    \ } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split //, sprintf(\"%b\", $a));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split //, sprintf(\"%b\", $b));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            scalar(grep { $_ eq '1'\
    \ } split(//, sprintf(\"%b\", $a))) <=> scalar(grep { $_ eq '1' } split(//, sprintf(\"\
    %b\", $b)))\n        } @$arr\n    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    $a == $b ? 0 :\n        $a < $b ? -1 : 1\n    } @$arr ];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = unpack(\"B*\", pack(\"N\", $a));\n        my $b_ones\
    \ = () = unpack(\"B*\", pack(\"N\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            sprintf(\"%b\", $a) =~\
    \ tr/1// <=> sprintf(\"%b\", $b) =~ tr/1//\n        } @$arr\n    ];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(() = $a =~ /1/g) <=> scalar(() = $b =~ /1/g)\n        || $a <=>\
    \ $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $ones_a = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $ones_b = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($ones_a == $ones_b) {\n            return $a <=> $b;\n        }\n\
    \        return $ones_a <=> $ones_b;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        if\
    \ ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n        return\
    \ $a_ones <=> $b_ones;\n    } @$arr ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, sprintf(\"%b\", $a));\n        my $b_ones\
    \ = () = split(//, sprintf(\"%b\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = $a =~ /1/g;\n        my $b_ones = () = $b =~ /1/g;\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(() = $a =~ /1/g) <=> scalar(() = $b =~ /1/g)\n            || $a\
    \ <=> $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my\
    \ $y_ones = 0;\n        while ($x > 0) {\n            $x_ones++ if $x % 2;\n \
    \           $x /= 2;\n        }\n        while ($y > 0) {\n            $y_ones++\
    \ if $y % 2;\n            $y /= 2;\n        }\n        if ($x_ones == $y_ones)\
    \ {\n            return $a <=> $b;\n        }\n        return $x_ones <=> $y_ones;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split //, sprintf(\"%b\", $a);\n        my $b_ones\
    \ = () = split //, sprintf(\"%b\", $b);\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n   \
    \ return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = unpack('B*', pack('N', $a));\n        my $b_ones =\
    \ () = unpack('B*', pack('N', $b));\n        $a_ones == $b_ones ? $a <=> $b :\
    \ $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(split(//, unpack(\"B*\", pack(\"N\", $a)))) <=>\n        scalar(split(//,\
    \ unpack(\"B*\", pack(\"N\", $b)))) ||\n        $a <=> $b\n    } @$arr;\n    return\
    \ \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my $y_ones\
    \ = 0;\n        while ($x > 0) {\n            $x_ones++ if $x % 2;\n         \
    \   $x /= 2;\n        }\n        while ($y > 0) {\n            $y_ones++ if $y\
    \ % 2;\n            $y /= 2;\n        }\n        $x_ones <=> $y_ones || $a <=>\
    \ $b;\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr ];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            scalar(split(//, unpack('B*',\
    \ pack('N', $a)))) <=> scalar(split(//, unpack('B*', pack('N', $b))))\n      \
    \  } @$arr\n    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    return $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            scalar(split(//, sprintf(\"\
    %b\", $a))) <=> scalar(split(//, sprintf(\"%b\", $b)))\n        } @$arr\n    ];\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = $a =~ /1/g;\n        my $b_ones = () = $b =~ /1/g;\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = $a =~ /1/g;\n        my $b_ones = () = $b =~ /1/g;\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            scalar(grep { $_ eq '1'\
    \ } split //, sprintf(\"%b\", $a)) <=> scalar(grep { $_ eq '1' } split //, sprintf(\"\
    %b\", $b))\n        } @$arr\n    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = unpack('B*', pack('N', $a));\n        my $b_ones =\
    \ () = unpack('B*', pack('N', $b));\n        $a_ones <=> $b_ones || $a <=> $b\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            scalar(() = $a =~ /1/g)\
    \ <=> scalar(() = $b =~ /1/g)\n        } @$arr\n    ];\n}\nuse Test::Deep;\n\n\
    \nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n   \
    \ return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, unpack('B*', pack('N',\
    \ $a))));\n        my $b_ones = scalar(grep { $_ eq '1' } split(//, unpack('B*',\
    \ pack('N', $b))));\n        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n\
    \    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, sprintf(\"%b\", $a));\n        my $b_ones\
    \ = () = split(//, sprintf(\"%b\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep {$_ eq '1'} split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep {$_ eq '1'} split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $ones = $a =~ tr/1//;\n        my $twos = $b =~ tr/1//;\n        $ones\
    \ <=> $twos || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, sprintf(\"%b\", $a));\n        my $b_ones\
    \ = () = split(//, sprintf(\"%b\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        $a == $b ? $a <=> $b :\n        $a =~ tr/1// <=> $b =~ tr/1//\n    }\
    \ @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n\
    \    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5,\
    \ 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6,\
    \ -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(split(//, unpack('B*', pack('N', $a)))) <=>\n        scalar(split(//,\
    \ unpack('B*', pack('N', $b)))) ||\n        $a <=> $b\n    } @$arr;\n    return\
    \ \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = sprintf(\"%b\", $a) =~ /1/g;\n        my $b_ones =\
    \ () = sprintf(\"%b\", $b) =~ /1/g;\n        $a_ones <=> $b_ones || $a <=> $b;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my $y_ones\
    \ = 0;\n        while ($x > 0) {\n            $x_ones++ if $x % 2;\n         \
    \   $x = int($x / 2);\n        }\n        while ($y > 0) {\n            $y_ones++\
    \ if $y % 2;\n            $y = int($y / 2);\n        }\n        if ($x_ones ==\
    \ $y_ones) {\n            return $a <=> $b;\n        }\n        return $x_ones\
    \ <=> $y_ones;\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n \
    \   my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2,\
    \ 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n\
    \        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6,\
    \ -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n    \
    \    if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print\
    \ \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my\
    \ $y_ones = 0;\n        while ($x > 0) {\n            $x_ones++ if $x % 2;\n \
    \           $x /= 2;\n        }\n        while ($y > 0) {\n            $y_ones++\
    \ if $y % 2;\n            $y /= 2;\n        }\n        if ($x_ones == $y_ones)\
    \ {\n            return $a <=> $b;\n        }\n        return $x_ones <=> $y_ones;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n     \
    \   $a_ones <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my $a_ones = ($a =~ tr/1//);\n            my $b_ones = ($b =~\
    \ tr/1//);\n            if ($a_ones == $b_ones) {\n                $a <=> $b;\n\
    \            } else {\n                $a_ones <=> $b_ones;\n            }\n \
    \       } @$arr\n    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(split(//, unpack(\"B*\", pack(\"N\", $a)))) <=>\n        scalar(split(//,\
    \ unpack(\"B*\", pack(\"N\", $b)))) ||\n        $a <=> $b\n    } @$arr;\n    return\
    \ \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $ones_a = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $ones_b = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $ones_a <=> $ones_b || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $ones_a = () = split //, sprintf(\"%b\", $a);\n        my $ones_b\
    \ = () = split //, sprintf(\"%b\", $b);\n        $ones_a <=> $ones_b || $a <=>\
    \ $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split //, sprintf(\"%b\", $a));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split //, sprintf(\"%b\", $b));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = sprintf(\"%b\", $a) =~ /1/g;\n        my $b_ones =\
    \ () = sprintf(\"%b\", $b) =~ /1/g;\n        $a_ones <=> $b_ones || $a <=> $b;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split //, sprintf(\"%b\", $a);\n        my $b_ones\
    \ = () = split //, sprintf(\"%b\", $b);\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(split(//, unpack(\"B*\", pack(\"N\", $a)))) <=>\n        scalar(split(//,\
    \ unpack(\"B*\", pack(\"N\", $b)))) ||\n        $a <=> $b\n    } @$arr;\n    return\
    \ \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [sort {\n     \
    \   my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, sprintf(\"%b\", $a));\n        my $b_ones\
    \ = () = split(//, sprintf(\"%b\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = $a =~ /1/g;\n        my $b_ones = () = $b =~ /1/g;\n\
    \        $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = unpack \"B*\", pack \"N\", $a;\n        my $b_ones\
    \ = () = unpack \"B*\", pack \"N\", $b;\n        $a_ones <=> $b_ones || $a <=>\
    \ $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            $a <=> $b\n            ||\n            sprintf(\"%b\", $a) =~\
    \ tr/1// <=> sprintf(\"%b\", $b) =~ tr/1//\n        } @$arr\n    ];\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        scalar(() = $a =~ /1/g) <=> scalar(() = $b =~ /1/g)\n        || $a <=>\
    \ $b\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my $a_ones = $a =~ tr/1//;\n            my $b_ones = $b =~ tr/1//;\n\
    \            $a_ones == $b_ones ? $a <=> $b : $a_ones <=> $b_ones\n        } @$arr\n\
    \    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     else {\n            return $a_ones <=> $b_ones;\n        }\n    } @$arr;\n\
    \    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_bin = sprintf(\"%b\", $a);\n        my $b_bin = sprintf(\"%b\"\
    , $b);\n        $a_bin =~ tr/1//;\n        $b_bin =~ tr/1//;\n        length($a_bin)\
    \ <=> length($b_bin) || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my($a_ones) = $a =~ tr/1//;\n            my($b_ones) = $b =~\
    \ tr/1//;\n            $a_ones <=> $b_ones || $a <=> $b\n        } @$arr\n   \
    \ ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split //, sprintf(\"%b\", $a);\n        my $b_ones\
    \ = () = split //, sprintf(\"%b\", $b);\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = ($a =~ tr/1//);\n        my $b_ones = ($b =~ tr/1//);\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr ];\n}\nuse Test::Deep;\n\n\n\
    sub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my($a_ones) = $a =~ tr/1//;\n            my($b_ones) = $b =~\
    \ tr/1//;\n            if ($a_ones == $b_ones) {\n                return $a <=>\
    \ $b;\n            }\n            return $a_ones <=> $b_ones;\n        } @$arr\n\
    \    ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, unpack(\"B*\", pack(\"N\", $a)));\n     \
    \   my $b_ones = () = split(//, unpack(\"B*\", pack(\"N\", $b)));\n        $a_ones\
    \ == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split(//, sprintf(\"%b\", $a));\n        my $b_ones\
    \ = () = split(//, sprintf(\"%b\", $b));\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones == $b_ones ? $a <=> $b : $a_ones <=> $b_ones;\n    } @$arr;\n   \
    \ return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate\
    \ = \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2,\
    \ 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n   \
    \     if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [ sort {\n    \
    \    my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n        $a_ones\
    \ <=> $b_ones || $a <=> $b\n    } @$arr ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split //, sprintf(\"%b\", $a);\n        my $b_ones\
    \ = () = split //, sprintf(\"%b\", $b);\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my $a_ones = ($a =~ tr/1//);\n            my $b_ones = ($b =~\
    \ tr/1//);\n            $a_ones <=> $b_ones or $a <=> $b\n        } @$arr\n  \
    \  ];\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $bin_a = sprintf(\"%b\", $a);\n        my $bin_b = sprintf(\"%b\"\
    , $b);\n        my $ones_a = $bin_a =~ tr/1//;\n        my $ones_b = $bin_b =~\
    \ tr/1//;\n        $ones_a <=> $ones_b || $a <=> $b;\n    } @$arr;\n    return\
    \ \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate =\
    \ \\&sort_array;\n        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4,\
    \ 3, 5])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n      \
    \  if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([1,\
    \ 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([]),[])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        $a_ones <=> $b_ones || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n\
    }\nuse Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = split //, sprintf(\"%b\", $a);\n        my $b_ones\
    \ = () = split //, sprintf(\"%b\", $b);\n        $a_ones <=> $b_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = () = unpack('B*', pack('N', $a));\n        my $b_ones =\
    \ () = unpack('B*', pack('N', $b));\n        $a_ones <=> $b_ones || $a <=> $b\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_bin = sprintf(\"%b\", $a);\n        my $b_bin = sprintf(\"%b\"\
    , $b);\n        $a_bin =~ tr/1//;\n        $b_bin =~ tr/1//;\n        $a_bin <=>\
    \ $b_bin || $a <=> $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\
    \n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my\
    \ $y_ones = 0;\n        while ($x) {\n            $x_ones++ if $x & 1;\n     \
    \       $x >>= 1;\n        }\n        while ($y) {\n            $y_ones++ if $y\
    \ & 1;\n            $y >>= 1;\n        }\n        if ($x_ones == $y_ones) {\n\
    \            return $a <=> $b;\n        }\n        return $x_ones <=> $y_ones;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my\
    \ $y_ones = 0;\n        while ($x) {\n            $x_ones++ if $x & 1;\n     \
    \       $x >>= 1;\n        }\n        while ($y) {\n            $y_ones++ if $y\
    \ & 1;\n            $y >>= 1;\n        }\n        $x_ones <=> $y_ones || $a <=>\
    \ $b;\n    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $a)));\n\
    \        my $b_ones = scalar(grep { $_ eq '1' } split(//, sprintf(\"%b\", $b)));\n\
    \        if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n\
    \        return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $x = $a;\n        my $y = $b;\n        my $x_ones = 0;\n        my\
    \ $y_ones = 0;\n        while ($x > 0) {\n            $x_ones++ if $x % 2;\n \
    \           $x /= 2;\n        }\n        while ($y > 0) {\n            $y_ones++\
    \ if $y % 2;\n            $y /= 2;\n        }\n        if ($x_ones == $y_ones)\
    \ {\n            return $a <=> $b;\n        }\n        return $x_ones <=> $y_ones;\n\
    \    } @$arr;\n    return \\@sorted;\n}\nuse Test::Deep;\n\n\nsub testhumaneval\
    \ {\n    my $candidate = \\&sort_array;\n        if(eq_deeply($candidate->([1,\
    \ 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n        print \"ok!\" }else{\n        exit\
    \ 1;\n        }\n        if(eq_deeply($candidate->([-2, -3, -4, -5, -6]),[-4,\
    \ -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n        exit 1;\n       \
    \ }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0, 1, 2, 4, 3])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([]),[]))\
    \ {\n        print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n   \
    \     print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ok!
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    $a_ones <=> $b_ones || $a <=> $b\n    } @$arr;\n    return \\@sorted;\n}\n\
    use Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n\
    \        if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n    \
    \    print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    my @sorted = sort {\n\
    \        my $a_ones = $a =~ tr/1//;\n        my $b_ones = $b =~ tr/1//;\n    \
    \    if ($a_ones == $b_ones) {\n            return $a <=> $b;\n        }\n   \
    \     return $a_ones <=> $b_ones;\n    } @$arr;\n    return \\@sorted;\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374
- exit_code: 1
  program: "# In this Kata, you have to sort an array of non-negative integers according\
    \ to\n# number of ones in their binary representation in ascending order.\n# For\
    \ similar number of ones, sort based on decimal value.\n# It must be implemented\
    \ like this:\nsub sort_array {\n    my($arr) = @_;\n    return [\n        sort\
    \ {\n            my $a_ones = $a =~ tr/1//;\n            my $b_ones = $b =~ tr/1//;\n\
    \            $a_ones <=> $b_ones || $a <=> $b\n        } @$arr\n    ];\n}\nuse\
    \ Test::Deep;\n\n\nsub testhumaneval {\n    my $candidate = \\&sort_array;\n \
    \       if(eq_deeply($candidate->([1, 5, 2, 3, 4]),[1, 2, 4, 3, 5])) {\n     \
    \   print \"ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([-2,\
    \ -3, -4, -5, -6]),[-4, -2, -6, -5, -3])) {\n        print \"ok!\" }else{\n  \
    \      exit 1;\n        }\n        if(eq_deeply($candidate->([1, 0, 2, 3, 4]),[0,\
    \ 1, 2, 4, 3])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([]),[])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 5, 77, 4, 5,\
    \ 3, 5, 7, 2, 3, 4]),[2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77])) {\n        print \"\
    ok!\" }else{\n        exit 1;\n        }\n        if(eq_deeply($candidate->([3,\
    \ 6, 44, 12, 32, 5]),[32, 3, 5, 6, 12, 44])) {\n        print \"ok!\" }else{\n\
    \        exit 1;\n        }\n        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2,\
    \ 4, 8, 16, 32])) {\n        print \"ok!\" }else{\n        exit 1;\n        }\n\
    \        if(eq_deeply($candidate->([2, 4, 8, 16, 32]),[2, 4, 8, 16, 32])) {\n\
    \        print \"ok!\" }else{\n        exit 1;\n        }\n}\n\ntesthumaneval();"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013374

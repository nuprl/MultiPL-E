completions:
- '        return checkDictCase(dict, "a");'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        if\
  \ (dict.keySet().stream().allMatch(x -> x.equals(x.toLowerCase()))) {\n        \
  \    return true;\n        }\n        if (dict.keySet().stream().allMatch(x -> x.equals(x.toUpperCase())))\
  \ {\n            return true;\n        }\n        return false;"
- '        throw new UnsupportedOperationException("Not Implemented Yet");'
- "        int lowCase = 0;\n        int upCase = 0;\n        for (String key : dict.keySet())\
  \ {\n            if (key.equals(key.toLowerCase())) lowCase++;\n            else\
  \ if (key.equals(key.toUpperCase())) upCase++;\n            else return false;\n\
  \        }\n        return lowCase == dict.size() || upCase == dict.size();"
- '        return true;'
- "        return dict.keySet().stream().map(x -> x.toLowerCase()).collect(Collectors.toSet()).size()\
  \ == 1 ||\n               dict.keySet().stream().map(x -> x.toUpperCase()).collect(Collectors.toSet()).size()\
  \ == 1;"
- "        // TODO: write your code here.\n        return false;"
- '        return true;'
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n\n       \
  \ // get the first key and determine if it is uppercase or lowercase\n        String\
  \ firstKey = dict.keySet().iterator().next();\n        boolean isFirstUpper = firstKey.toUpperCase().equals(firstKey);\n\
  \n        // check all the keys to determine if they all match the first key\n \
  \       for (String key : dict.keySet()) {\n            if (isFirstUpper && !key.toUpperCase().equals(key))\
  \ {\n                return false;\n            } else if (!isFirstUpper && !key.toLowerCase().equals(key))\
  \ {\n                return false;\n            }\n        }\n\n        return true;"
- "        boolean upper = true;\n        boolean lower = true;\n        for (String\
  \ s : dict.keySet()) {\n            if (Character.isUpperCase(s.charAt(0))) upper\
  \ = false;\n            if (Character.isLowerCase(s.charAt(0))) lower = false;\n\
  \        }\n        return upper || lower;"
- "        // Your code goes here:\n        return false;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        Boolean\
  \ lower = null;\n        for (String key : dict.keySet()) {\n            if (lower\
  \ == null) {\n                lower = key.equals(key.toLowerCase());\n         \
  \   } else if (lower && !key.equals(key.toLowerCase())) {\n                return\
  \ false;\n            } else if (!lower && !key.equals(key.toUpperCase())) {\n \
  \               return false;\n            }\n        }\n        return true;"
- "        // Your code here\n        // NOTE: Use the HashMap methods you learned\
  \ in the previous exercise\n        return false;"
- '        throw new UnsupportedOperationException("Waiting to be implemented.");'
- '        return true;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        ArrayList<String>\
  \ dictKeys = new ArrayList<>(dict.keySet());\n        ArrayList<String> dictKeysLower\
  \ = new ArrayList<>();\n        ArrayList<String> dictKeysUpper = new ArrayList<>();\n\
  \        for (String key : dictKeys) {\n            dictKeysLower.add(key.toLowerCase());\n\
  \            dictKeysUpper.add(key.toUpperCase());\n        }\n        if (dictKeys.equals(dictKeysLower)\
  \ || dictKeys.equals(dictKeysUpper)) {\n            return true;\n        }\n  \
  \      return false;"
- "        boolean result = true;\n        for (String s : dict.keySet()) {\n    \
  \        if (!(s.equals(s.toLowerCase()) || s.equals(s.toUpperCase()))) {\n    \
  \            result = false;\n                break;\n            }\n        }\n\
  \        return result;"
- "        if (dict.isEmpty()) return false;\n        boolean allLower = dict.keySet().stream().allMatch(key\
  \ -> key.matches(\"^[a-z]+$\"));\n        boolean allUpper = dict.keySet().stream().allMatch(key\
  \ -> key.matches(\"^[A-Z]+$\"));\n        return allLower || allUpper;"
- "        boolean upperCase = false;\n        boolean lowerCase = false;\n      \
  \  for (String key : dict.keySet()) {\n            if (key.charAt(0) >= 'A' && key.charAt(0)\
  \ <= 'Z')\n                upperCase = true;\n            else if (key.charAt(0)\
  \ >= 'a' && key.charAt(0) <= 'z')\n                lowerCase = true;\n         \
  \   else\n                return false;\n        }\n        return upperCase !=\
  \ lowerCase;"
- "        Set<String> dictSet = dict.keySet();\n        boolean flag = true;\n  \
  \      int check = 0;\n        for (String s : dictSet) {\n            if (check\
  \ == 0) {\n                if (Character.isUpperCase(s.charAt(0))) {\n         \
  \           check = 1;\n                } else {\n                    check = 2;\n\
  \                }\n            } else {\n                if (check == 1) {\n  \
  \                  if (Character.isLowerCase(s.charAt(0))) {\n                 \
  \       flag = false;\n                        break;\n                    }\n \
  \               } else {\n                    if (Character.isUpperCase(s.charAt(0)))\
  \ {\n                        flag = false;\n                        break;\n   \
  \                 }\n                }\n            }\n        }\n        return\
  \ flag;"
- "        // Implement the function here and return True or False based on \n   \
  \     // the above description.\n        ArrayList<String> lower = new ArrayList<String>();\n\
  \        ArrayList<String> upper = new ArrayList<String>();\n        for (Map.Entry<String,\
  \ String> entry : dict.entrySet()) {\n            if(entry.getKey().matches(\"^[a-z]+$\"\
  )){\n                lower.add(entry.getKey());\n            }\n            else\
  \ if(entry.getKey().matches(\"^[A-Z]+$\")){\n                upper.add(entry.getKey());\n\
  \            }\n            else{\n                return false;\n            }\n\
  \        }\n        if(lower.size() == dict.size() || upper.size() == dict.size()){\n\
  \            return true;\n        }\n        else{\n            return false;\n\
  \        }"
- "        boolean lower = false;\n        boolean upper = false;\n        for (String\
  \ key : dict.keySet()) {\n            if (Character.isLowerCase(key.charAt(0)))\
  \ {\n                lower = true;\n            } else if (Character.isUpperCase(key.charAt(0)))\
  \ {\n                upper = true;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return (lower != upper);"
- "        // hash map is a data structure that maps keys to values\n        // for\
  \ (k:v in dict)\n        //   if k is upper case\n        //     if other keys are\
  \ not upper case\n        //       return false\n        //   if k is lower case\n\
  \        //     if other keys are not lower case\n        //       return false\n\
  \        // return true\n        boolean isUpper = false;\n        boolean isLower\
  \ = false;\n        for (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
  \ {\n                isUpper = true;\n            } else if (key.toLowerCase().equals(key))\
  \ {\n                isLower = true;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return !(isUpper && isLower);"
- '        return false;'
- "        boolean lowerCase = true;\n        boolean upperCase = true;\n        if\
  \ (dict.size() == 0) {\n            return false;\n        }\n        for (Map.Entry<String,String>\
  \ entry : dict.entrySet()) {\n            if (entry.getKey().toLowerCase().equals(entry.getKey()))\
  \ {\n                upperCase = false;\n            }\n            if (entry.getKey().toUpperCase().equals(entry.getKey()))\
  \ {\n                lowerCase = false;\n            }\n        }\n        return\
  \ (lowerCase || upperCase);"
- "        // use only Java's standard library classes, no extra packages\n      \
  \  return false;"
- "        ArrayList<Boolean> cases = new ArrayList<Boolean>();\n        for (Map.Entry<String,\
  \ String> entry : dict.entrySet()) {\n            cases.add(isLowerCase(entry.getKey()));\n\
  \        }\n        return cases.stream().distinct().count() == 1;"
- "        return dict.keySet().stream().allMatch(String::isUpperCase)\n         \
  \      || dict.keySet().stream().allMatch(String::isLowerCase);"
- "        return dict.keySet().stream().allMatch( x -> x.equals(x.toLowerCase())\
  \ ) ||\n               dict.keySet().stream().allMatch( x -> x.equals(x.toUpperCase())\
  \ );"
- "        return dict.keySet().stream().allMatch(s -> s.toLowerCase().equals(s))\n\
  \        || dict.keySet().stream().allMatch(s -> s.toUpperCase().equals(s));"
- '        return false;'
- "        String x = \"\";\n        String y = \"\";\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        for (String key : dict.keySet())\
  \ {\n            x = key;\n            break;\n        }\n        for (String key\
  \ : dict.keySet()) {\n            y = key;\n            break;\n        }\n    \
  \    if (x.toUpperCase().equals(x) && y.toUpperCase().equals(y)) {\n           \
  \ return true;\n        }\n        else if (x.toLowerCase().equals(x) && y.toLowerCase().equals(y))\
  \ {\n            return true;\n        }\n        else {\n            return false;\n\
  \        }"
- "        Boolean isUpper = true;\n        for (String key : dict.keySet()) {\n \
  \           char c = key.charAt(0);\n            if (isUpper == null) {\n      \
  \          isUpper = Character.isUpperCase(c);\n            } else if (isUpper !=\
  \ Character.isUpperCase(c)) {\n                return false;\n            }\n  \
  \      }\n        return true;"
- '        return dict.keySet().stream().allMatch(p -> p.equals(p.toLowerCase()))
  || dict.keySet().stream().allMatch(p -> p.equals(p.toUpperCase()));'
- "        Boolean keys_are_upper = null;\n        for (String key : dict.keySet())\
  \ {\n            if (keys_are_upper == null) {\n                keys_are_upper =\
  \ key.equals(key.toUpperCase());\n            } else {\n                if (keys_are_upper\
  \ != key.equals(key.toUpperCase())) {\n                    return false;\n     \
  \           }\n            }\n        }\n        return true;"
- "        // write your code here\n        return false;"
- '        return false;'
- "        //fill in your code here.\n        boolean result = true;\n        String\
  \ [] keys = dict.keySet().toArray(new String[dict.size()]);\n        String [] values\
  \ = dict.values().toArray(new String[dict.size()]);\n        boolean lowerCase =\
  \ keys[0].equals(keys[0].toLowerCase());\n        boolean upperCase = keys[0].equals(keys[0].toUpperCase());\n\
  \        for(int i = 0; i < keys.length; i++){\n            if(!keys[i].equals(keys[i].toLowerCase())\
  \ && !keys[i].equals(keys[i].toUpperCase())){\n                result = false;\n\
  \                break;\n            }\n            if(lowerCase && !keys[i].equals(keys[i].toLowerCase())){\n\
  \                result = false;\n                break;\n            }\n      \
  \      if(upperCase && !keys[i].equals(keys[i].toUpperCase())){\n              \
  \  result = false;\n                break;\n            }\n        }\n        return\
  \ result;"
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        String\
  \ upperKeys = dict.keySet().stream().map(key -> key.toUpperCase()).collect(Collectors.joining());\n\
  \        String lowerKeys = dict.keySet().stream().map(key -> key.toLowerCase()).collect(Collectors.joining());\n\
  \        if (upperKeys.equals(lowerKeys)) {\n            return false;\n       \
  \ }\n        return true;"
- "        // Write your code here.\n        // return true;\n        if (dict.size()==0)\
  \ {\n            return false;\n        }\n        int lowerCount = 0;\n       \
  \ int upperCount = 0;\n        Set<String> keys = dict.keySet();\n        for (String\
  \ key : keys) {\n            if (key.equals(key.toLowerCase())) {\n            \
  \    lowerCount++;\n            } else if (key.equals(key.toUpperCase())) {\n  \
  \              upperCount++;\n            }\n        }\n        if (lowerCount ==\
  \ dict.size() || upperCount == dict.size()) {\n            return true;\n      \
  \  }\n        return false;"
- '        return true;'
- "      boolean flag = true;\n      if(dict.size() == 0) {\n        return false;\n\
  \      }\n      for(String k : dict.keySet()) {\n        if(k.toUpperCase().equals(k))\
  \ {\n          if(flag) {\n            flag = true;\n          }\n        } else\
  \ if(k.toLowerCase().equals(k)) {\n          if(flag) {\n            flag = true;\n\
  \          }\n        } else {\n          flag = false;\n        }\n      }\n  \
  \    return flag;"
- "        boolean lowerCase = true;\n        boolean upperCase = true;\n        for\
  \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
  \ {\n                upperCase = false;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                lowerCase = false;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return lowerCase || upperCase;"
- "        // check if the input dictionary is empty\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        String firstKey = dict.keySet().stream().findFirst().get();\n\
  \        char firstKeyFirstChar = firstKey.charAt(0);\n        boolean lowerCase\
  \ = Character.isLowerCase(firstKeyFirstChar);\n        return dict.keySet().stream().allMatch(k\
  \ -> {\n            boolean klowerCase = Character.isLowerCase(k.charAt(0));\n \
  \           return lowerCase == klowerCase;\n        });"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        //\
  \ Solution 1:\n        // Iterate through all the keys in the dictionary and return\
  \ False\n        // if any key is not in lower or upper case.\n        // Iterate\
  \ through all the keys in the dictionary and return False\n        // if any key\
  \ is not in lower or upper case.\n        // for (String key : dict.keySet()) {\n\
  \        //     if (!key.equals(key.toLowerCase()) &&\n        //         !key.equals(key.toUpperCase()))\
  \ {\n        //         return false;\n        //     }\n        // }\n        //\
  \ return true;\n        // Solution 2:\n        // If the first key is in lower\
  \ case then all keys are in lower case\n        // or if the first key is in upper\
  \ case then all keys are in upper case.\n        // return dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toLowerCase())) ||\n        //        dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toUpperCase()));\n        // Solution 3:\n        // If the first\
  \ key is in lower case then all keys are in lower case\n        // or if the first\
  \ key is in upper case then all keys are in upper case.\n        // return dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toLowerCase())) ||\n        //        dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toUpperCase()));\n        // Solution 4:\n        // If the first\
  \ key is in lower case then all keys are in lower case\n        // or if the first\
  \ key is in upper case then all keys are in upper case.\n        return dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toLowerCase())) ||\n               dict.keySet().stream().allMatch(k\
  \ -> k.equals(k.toUpperCase()));"
- "        // Write your code here.\n        List<String> keys = new ArrayList<String>(dict.keySet());\n\
  \        if (keys.size() == 0) return false;\n        boolean isUpperCase = keys.get(0).equals(keys.get(0).toUpperCase());\n\
  \        for (String key : keys) {\n            if (isUpperCase) {\n           \
  \     if (!key.equals(key.toUpperCase())) return false;\n            } else {\n\
  \                if (!key.equals(key.toLowerCase())) return false;\n           \
  \ }\n        }\n        return true;"
- "        ArrayList<Boolean> caseCheckList = new ArrayList<Boolean>();\n        dict.forEach((k,v)\
  \ -> caseCheckList.add(Character.isUpperCase(k.charAt(0))));\n        boolean allUpperCase\
  \ = caseCheckList.stream().allMatch(b -> b.booleanValue() == true);\n        boolean\
  \ allLowerCase = caseCheckList.stream().allMatch(b -> b.booleanValue() == false);\n\
  \        return (allUpperCase || allLowerCase);"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n\n       \
  \ HashSet<String> upperKeys = new HashSet<String>();\n        HashSet<String> lowerKeys\
  \ = new HashSet<String>();\n        for (Map.Entry<String,String> entry : dict.entrySet())\
  \ {\n            if (entry.getKey().equals(entry.getKey().toUpperCase())) {\n  \
  \              upperKeys.add(entry.getKey());\n            } else if (entry.getKey().equals(entry.getKey().toLowerCase()))\
  \ {\n                lowerKeys.add(entry.getKey());\n            } else {\n    \
  \            return false;\n            }\n        }\n\n        return lowerKeys.size()\
  \ == 0 || upperKeys.size() == 0;"
- "        int uppercase = 0;\n        int lowercase = 0;\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        for (Map.Entry<String, String>\
  \ entry : dict.entrySet()) {\n            String key = entry.getKey();\n       \
  \     if (Character.isUpperCase(key.charAt(0))) {\n                uppercase++;\n\
  \            } else {\n                lowercase++;\n            }\n        }\n\
  \        if (uppercase == 0 || lowercase == 0) {\n            return true;\n   \
  \     }\n        return false;"
- '        throw new UnsupportedOperationException("Not Implemented");'
- '        return false;'
- "        boolean allLowercase = true;\n        boolean allUppercase = true;\n  \
  \      for (String key : dict.keySet()) {\n            if (key.toLowerCase().equals(key))\
  \ {\n                allUppercase = false;\n            } else if (key.toUpperCase().equals(key))\
  \ {\n                allLowercase = false;\n            } else {\n             \
  \   return false;\n            }\n        }\n        return allLowercase || allUppercase;"
- "        return dict.keySet().stream().allMatch(String::isUpperCase) ||\n      \
  \         dict.keySet().stream().allMatch(String::isLowerCase);"
- "        if (dict.isEmpty()) return false;\n        else {\n            Boolean\
  \ allLower = null;\n            for (String key : dict.keySet()) {\n           \
  \     boolean lower = key.toLowerCase().equals(key);\n                if (allLower\
  \ == null) allLower = lower;\n                else if (allLower != lower) return\
  \ false;\n            }\n            return true;\n        }"
- "        // TODO: Place code here\n        throw new RuntimeException(\"checkDictCase\
  \ not implemented yet\");"
- "        return dict.keySet().stream().allMatch(k -> k.matches(\"[a-z]*\"))\n  \
  \          || dict.keySet().stream().allMatch(k -> k.matches(\"[A-Z]*\"));"
- "        boolean isLower = true;\n        boolean isUpper = true;\n        for (Map.Entry<String,String>\
  \ entry : dict.entrySet()) {\n            if (isLower) {\n                isLower\
  \ = entry.getKey().equals(entry.getKey().toLowerCase());\n            }\n      \
  \      if (isUpper) {\n                isUpper = entry.getKey().equals(entry.getKey().toUpperCase());\n\
  \            }\n        }\n        return isLower || isUpper;"
- '        return false;'
- "        String capital = \"\";\n        String lowercase = \"\";\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        for (String key : dict.keySet())\
  \ {\n            if (key.equals(key.toUpperCase())) {\n                capital +=\
  \ key;\n            } else if (key.equals(key.toLowerCase())) {\n              \
  \  lowercase += key;\n            } else {\n                return false;\n    \
  \        }\n        }\n        if (capital.equals(\"\") || lowercase.equals(\"\"\
  )) {\n            return true;\n        } else {\n            return false;\n  \
  \      }"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        return\
  \ dict.keySet().stream().allMatch(s -> s.toLowerCase().equals(s)) ||\n         \
  \   dict.keySet().stream().allMatch(s -> s.toUpperCase().equals(s));"
- '        return true;'
- "        String lower = dict.keySet().stream().map(x -> x.toLowerCase()).collect(Collectors.joining(\"\
  \"));\n        String upper = dict.keySet().stream().map(x -> x.toUpperCase()).collect(Collectors.joining(\"\
  \"));\n        return (lower.equals(upper) && !lower.isEmpty()) || (lower.equals(dict.keySet().stream().collect(Collectors.joining(\"\
  \"))) && !lower.isEmpty());"
- "\t// Your code here."
- "        return dict.keySet().stream().allMatch(s -> Character.isUpperCase(s.charAt(0)))\
  \ ||\n               dict.keySet().stream().allMatch(s -> Character.isLowerCase(s.charAt(0)));"
- "        // Add your code here\n        return false;"
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        String\
  \ firstKey = dict.keySet().iterator().next();\n        if (Character.isLowerCase(firstKey.charAt(0)))\
  \ {\n            for (String key : dict.keySet()) {\n                if (!key.equals(key.toLowerCase()))\
  \ {\n                    return false;\n                }\n            }\n     \
  \   } else {\n            for (String key : dict.keySet()) {\n                if\
  \ (!key.equals(key.toUpperCase())) {\n                    return false;\n      \
  \          }\n            }\n        }\n        return true;"
- '        return true;'
- "        boolean lower=true;\n        boolean upper=true;\n        if(dict.isEmpty())\
  \ {\n            return false;\n        }\n        for(String i:dict.keySet()) {\n\
  \            if(i.equals(i.toLowerCase())) {\n                upper=false;\n   \
  \         }\n            else if(i.equals(i.toUpperCase())) {\n                lower=false;\n\
  \            }\n            else {\n                return false;\n            }\n\
  \        }\n        return upper || lower;"
- "        // TODO: your code here!\n        return false;"
- "        // YOUR CODE HERE\n        return false;"
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        HashSet<Boolean>\
  \ set = new HashSet<>();\n        for (String key : dict.keySet()) {\n         \
  \   set.add(key.matches(\"^[a-z]+$\"));\n        }\n        return set.size() ==\
  \ 1;"
- '        return false;'
- "        if (dict.isEmpty()) return false;\n        boolean lower = true;\n    \
  \    boolean upper = true;\n        for (String k : dict.keySet()) {\n         \
  \   if (k.length() == 0) return false;\n            if (Character.isLowerCase(k.charAt(0)))\
  \ {\n                upper = false;\n            } else {\n                lower\
  \ = false;\n            }\n        }\n        return lower || upper;"
- '        return checkDictCase(dict, true);'
- "        // TODO: Write the code.\n        boolean upper = false;\n        boolean\
  \ lower = false;\n        for(String key : dict.keySet()) {\n            if(isUpperCase(key))\
  \ {\n                upper = true;\n            }\n            else {\n        \
  \        lower = true;\n            }\n        }\n        if(lower && upper) {\n\
  \            return false;\n        }\n        return true;"
- "        //TODO implement this method\n        return false;"
- "        // Write your code here!\n        return true;"
- "        // Do not change the lines below.\n        PrintStream out = System.out;\n\
  \        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\
  \        // Implement this function.\n\n        return false;"
- '        throw new NotImplementedException();'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ lowerCase = true;\n        boolean upperCase = true;\n        for (String key\
  \ : dict.keySet()) {\n            if (key.equals(key.toLowerCase())) {\n       \
  \         upperCase = false;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                lowerCase = false;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return lowerCase ^ upperCase;"
- '        return checkDictCase(dict, true);'
- "        String [] d = dict.keySet().toArray(new String[0]);\n        for (int i\
  \ = 0; i < d.length; i++) {\n            if (Character.isLowerCase(d[i].charAt(0)))\
  \ {\n                for (int j = i; j < d.length; j++) {\n                    if\
  \ (Character.isUpperCase(d[j].charAt(0))) {\n                        return false;\n\
  \                    }\n                }\n            } else {\n              \
  \  for (int j = i; j < d.length; j++) {\n                    if (Character.isLowerCase(d[j].charAt(0)))\
  \ {\n                        return false;\n                    }\n            \
  \    }\n            }\n        }\n        return true;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        Set<String>\
  \ set = dict.keySet();\n        boolean flag = true;\n        for (String str :\
  \ set) {\n            if (!str.equals(str.toLowerCase()) && !str.equals(str.toUpperCase()))\
  \ {\n                flag = false;\n                break;\n            }\n    \
  \    }\n        return flag;"
- "        // Insert your code here\n        return false;"
- "        // write code here\n        return true;"
- '        return dict.isEmpty() ? false : dict.keySet().stream().map(s -> s.toUpperCase()).collect(Collectors.toSet()).equals(dict.keySet())
  || dict.keySet().stream().map(s -> s.toLowerCase()).collect(Collectors.toSet()).equals(dict.keySet());'
- "        boolean lower = true;\n        boolean upper = true;\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        for (String key : dict.keySet())\
  \ {\n            if (Character.isUpperCase(key.charAt(0))) {\n                lower\
  \ = false;\n            } else {\n                upper = false;\n            }\n\
  \        }\n        return lower || upper;"
- "\t\tboolean result = true;\n\t\tboolean flagUpper = false;\n\t\tboolean flagLower\
  \ = false;\n\t\tfor (String key : dict.keySet()) {\n\t\t\tif (flagUpper && flagLower)\
  \ {\n\t\t\t\tresult = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (key.equals(key.toUpperCase()))\
  \ {\n\t\t\t\tflagUpper = true;\n\t\t\t} else if (key.equals(key.toLowerCase()))\
  \ {\n\t\t\t\tflagLower = true;\n\t\t\t} else {\n\t\t\t\tresult = false;\n\t\t\t\t\
  break;\n\t\t\t}\n\t\t}\n\t\treturn result;"
- "        boolean b = true;\n        for (String s : dict.keySet()) {\n         \
  \   if (!s.toLowerCase().equals(s) && !s.toUpperCase().equals(s)) {\n          \
  \      b = false;\n                break;\n            }\n        }\n        return\
  \ b;"
- "        // Your code goes here.\n        int upper = 0;\n        int lower = 0;\n\
  \        boolean upperCase = false;\n        boolean lowerCase = false;\n      \
  \  for (String key : dict.keySet()) {\n            if (key.equals(key.toUpperCase()))\
  \ {\n                upper += 1;\n            }\n            if (key.equals(key.toLowerCase()))\
  \ {\n                lower += 1;\n            }\n        }\n        if (upper ==\
  \ dict.size()) {\n            upperCase = true;\n        }\n        if (lower ==\
  \ dict.size()) {\n            lowerCase = true;\n        }\n        if ((upperCase\
  \ || lowerCase) && (upper != dict.size() && lower != dict.size())) {\n         \
  \   return false;\n        }\n        return true;"
- "        // // Uncomment the following lines when you are ready to test your code.\n\
  \        // HashMap<String,String> dict1 = new HashMap<String,String>();\n     \
  \   // dict1.put(\"a\",\"apple\");\n        // dict1.put(\"b\",\"banana\");\n  \
  \      // System.out.println(checkDictCase(dict1));\n        // dict1.clear();\n\
  \        // dict1.put(\"a\",\"apple\");\n        // dict1.put(\"A\",\"banana\");\n\
  \        // dict1.put(\"B\",\"banana\");\n        // System.out.println(checkDictCase(dict1));\n\
  \        // dict1.clear();\n        // dict1.put(\"a\",\"apple\");\n        // dict1.put(\"\
  8\",\"banana\");\n        // dict1.put(\"a\",\"apple\");\n        // System.out.println(checkDictCase(dict1));\n\
  \        // dict1.clear();\n        // dict1.put(\"Name\",\"John\");\n        //\
  \ dict1.put(\"Age\",\"36\");\n        // dict1.put(\"City\",\"Houston\");\n    \
  \    // System.out.println(checkDictCase(dict1));\n        // dict1.clear();\n \
  \       // dict1.put(\"STATE\",\"NC\");\n        // dict1.put(\"ZIP\",\"12345\"\
  );\n        // System.out.println(checkDictCase(dict1));\n        // dict1.clear();\n\
  \        // System.out.println(checkDictCase(dict1));\n        String lower_case_regex\
  \ = \"^[a-z]+$\";\n        String upper_case_regex = \"^[A-Z]+$\";\n        if (dict.isEmpty())\
  \ {\n            return false;\n        }\n        ArrayList<String> keys = new\
  \ ArrayList<String>(dict.keySet());\n        boolean all_lower = true;\n       \
  \ boolean all_upper = true;\n        for (String key : keys) {\n            all_lower\
  \ = all_lower && key.matches(lower_case_regex);\n            all_upper = all_upper\
  \ && key.matches(upper_case_regex);\n        }\n        return all_lower || all_upper;"
- '        return dict.keySet().stream().allMatch(s -> s.toLowerCase().equals(s) ||
  s.toUpperCase().equals(s));'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        for\
  \ (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\
  \ {\n                return true;\n            }\n            if (key.equals(key.toUpperCase()))\
  \ {\n                return true;\n            }\n        }\n        return false;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ lowerCase = false;\n        boolean upperCase = false;\n        for (String key\
  \ : dict.keySet()) {\n            if (key.equals(key.toLowerCase())) {\n       \
  \         lowerCase = true;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                upperCase = true;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return (lowerCase && !upperCase) ||\
  \ (!lowerCase && upperCase);"
- "        boolean lowercase = true;\n        boolean uppercase = true;\n        for\
  \ (String key : dict.keySet()) {\n            if (key.toLowerCase().equals(key))\
  \ lowercase = false;\n            if (key.toUpperCase().equals(key)) uppercase =\
  \ false;\n        }\n        return (lowercase || uppercase);"
- "        boolean isUpperCase = false;\n        boolean isLowerCase = false;\n  \
  \      if (dict.isEmpty()) {\n            return false;\n        }\n        for\
  \ (Map.Entry<String, String> entry : dict.entrySet()) {\n            if (entry.getKey().equals(entry.getKey().toUpperCase()))\
  \ {\n                isUpperCase = true;\n            }\n            if (entry.getKey().equals(entry.getKey().toLowerCase()))\
  \ {\n                isLowerCase = true;\n            }\n        }\n        if ((isUpperCase\
  \ && isLowerCase) || (!isUpperCase && !isLowerCase)) {\n            return false;\n\
  \        }\n        return true;"
- '        throw new UnsupportedOperationException("Not implemented yet.");'
- "        // remove duplicates and check to see that all keys are strings\n     \
  \   // that only have letters\n        HashSet<String> keys = new HashSet<>(dict.keySet());\n\
  \        for (String key : keys) {\n            // check that all keys are strings\
  \ that only have letters\n            String lcKey = key.toLowerCase();\n      \
  \      String ucKey = key.toUpperCase();\n            // check that all keys are\
  \ string with only letters\n            if (key.equals(lcKey) || key.equals(ucKey))\
  \ {\n                continue;\n            } else {\n                return false;\n\
  \            }\n        }\n        // If all keys are all lower case or all upper\
  \ case\n        boolean lowerCase = true;\n        boolean upperCase = true;\n \
  \       for (String key : keys) {\n            if (Character.isLowerCase(key.charAt(0)))\
  \ {\n                upperCase = false;\n            } else {\n                lowerCase\
  \ = false;\n            }\n        }\n        return lowerCase || upperCase;"
- '        return false;'
- '        return false;'
- "        // Write your code here\n        return false;"
- "        if (dict.isEmpty()) return false;\n        return dict.keySet().stream().map(String::toUpperCase).collect(Collectors.toSet()).size()\
  \ == 1 ||\n               dict.keySet().stream().map(String::toLowerCase).collect(Collectors.toSet()).size()\
  \ == 1;"
- "        if (dict.isEmpty()) return false;\n        boolean allLowerCase = true;\n\
  \        boolean allUpperCase = true;\n        for (String key : dict.keySet())\
  \ {\n            allLowerCase = allLowerCase && key.equals(key.toLowerCase());\n\
  \            allUpperCase = allUpperCase && key.equals(key.toUpperCase());\n   \
  \     }\n        return allLowerCase || allUpperCase;"
- "\t\t// TODO: Fill in this function.\n\t\tfor(Map.Entry<String, String> entry :\
  \ dict.entrySet()) {\n\t\t\tString key = entry.getKey();\n\t\t\tString value = entry.getValue();\n\
  \t\t\tif(!value.equals(\"apple\") || !value.equals(\"banana\")) {\n\t\t\t\treturn\
  \ false;\n\t\t\t}\n\t\t\tif(key.equals(\"a\") || key.equals(\"b\")) {\n\t\t\t\t\
  return true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n        return false;"
- '        return !dict.isEmpty() && dict.keySet().stream().map(String::toUpperCase).allMatch(dict.keySet()::contains);'
- "        HashMap<String, String> upperDict = new HashMap<String, String>();\n  \
  \      HashMap<String, String> lowerDict = new HashMap<String, String>();\n    \
  \    String[] lowerKeys = dict.keySet().toArray(new String[dict.size()]);\n    \
  \    String[] upperKeys = dict.keySet().toArray(new String[dict.size()]);\n    \
  \    for (int i = 0; i < dict.size(); i++) {\n            upperKeys[i] = upperKeys[i].toUpperCase();\n\
  \            lowerKeys[i] = lowerKeys[i].toLowerCase();\n        }\n        for\
  \ (int i = 0; i < dict.size(); i++) {\n            upperDict.put(upperKeys[i], dict.get(upperKeys[i]));\n\
  \            lowerDict.put(lowerKeys[i], dict.get(lowerKeys[i]));\n        }\n \
  \       if (dict.keySet().equals(upperDict.keySet()) || dict.keySet().equals(lowerDict.keySet()))\
  \ {\n            return true;\n        }\n        return false;"
- "        // Type your code here\n        // Input the dictionary\n        // Implement\
  \ the algorithm\n        int number_of_lowercase_letters = 0;\n        int number_of_uppercase_letters\
  \ = 0;\n        for (String key : dict.keySet()) {\n            int number_of_lowercase_letters_in_key\
  \ = 0;\n            int number_of_uppercase_letters_in_key = 0;\n            for\
  \ (int index = 0; index < key.length(); index += 1) {\n                char character\
  \ = key.charAt(index);\n                if (character >= 'a' && character <= 'z')\
  \ {\n                    number_of_lowercase_letters_in_key += 1;\n            \
  \    } else if (character >= 'A' && character <= 'Z') {\n                    number_of_uppercase_letters_in_key\
  \ += 1;\n                }\n            }\n            if (number_of_lowercase_letters_in_key\
  \ > 0 &&\n                number_of_uppercase_letters_in_key > 0) {\n          \
  \      return false;\n            } else if (number_of_lowercase_letters_in_key\
  \ > 0) {\n                number_of_lowercase_letters += 1;\n            } else\
  \ if (number_of_uppercase_letters_in_key > 0) {\n                number_of_uppercase_letters\
  \ += 1;\n            }\n        }\n        return number_of_lowercase_letters ==\
  \ 0 ||\n               number_of_uppercase_letters == 0;"
- "        if (dict.isEmpty()) return false;\n        String previousKey = null;\n\
  \        String previousUpperKey = null;\n        String previousLowerKey = null;\n\
  \        String previousValue = null;\n        String previousUpperValue = null;\n\
  \        String previousLowerValue = null;\n        for (Map.Entry<String,String>\
  \ entry : dict.entrySet()) {\n            String key = entry.getKey();\n       \
  \     String value = entry.getValue();\n            if (previousKey == null) {\n\
  \                previousKey = key;\n                previousUpperKey = key.toUpperCase();\n\
  \                previousLowerKey = key.toLowerCase();\n                previousValue\
  \ = value;\n                previousUpperValue = value.toUpperCase();\n        \
  \        previousLowerValue = value.toLowerCase();\n            } else {\n     \
  \           if (!key.equals(previousKey) && !key.equals(previousUpperKey) && !key.equals(previousLowerKey))\
  \ {\n                    return false;\n                }\n                if (!value.equals(previousValue)\
  \ && !value.equals(previousUpperValue) && !value.equals(previousLowerValue)) {\n\
  \                    return false;\n                }\n            }\n        }\n\
  \        return true;"
- '        return false;'
- "        // Your code goes here.\n        return true;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        for\
  \ (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
  \ {\n                for (String key2 : dict.keySet()) {\n                    if\
  \ (!key2.toUpperCase().equals(key2)) {\n                        return false;\n\
  \                    }\n                }\n                return true;\n      \
  \      }\n            if (key.toLowerCase().equals(key)) {\n                for\
  \ (String key2 : dict.keySet()) {\n                    if (!key2.toLowerCase().equals(key2))\
  \ {\n                        return false;\n                    }\n            \
  \    }\n                return true;\n            }\n        }\n        return false;"
- "        boolean result = true;\n        if(dict.size() == 0) {\n            result\
  \ = false;\n        }\n        else {\n            Set<String> set = dict.keySet();\n\
  \            boolean allUpper = true;\n            boolean allLower = true;\n  \
  \          for(String key : set) {\n                if(!(key.toUpperCase().equals(key)))\
  \ {\n                    allUpper = false;\n                }\n                if(!(key.toLowerCase().equals(key)))\
  \ {\n                    allLower = false;\n                }\n            }\n \
  \           if(!(allUpper ^ allLower)) {\n                result = false;\n    \
  \        }\n        }\n        return result;"
- "        if (dict.isEmpty()) return false;\n        if (dict.size() == 1) return\
  \ true;\n        final int[] count = {0};\n        if (dict.keySet().stream().allMatch(key\
  \ -> key.equals(key.toLowerCase()))) count[0]++;\n        if (dict.keySet().stream().allMatch(key\
  \ -> key.equals(key.toUpperCase()))) count[0]++;\n        return count[0] > 0;"
- "        boolean result = true;\n        for (Map.Entry<String, String> entry :\
  \ dict.entrySet()) {\n            if (entry.getKey().equals(entry.getKey().toLowerCase()))\
  \ {\n                result = true;\n            } else if (entry.getKey().equals(entry.getKey().toUpperCase()))\
  \ {\n                result = true;\n            } else {\n                result\
  \ = false;\n            }\n        }\n        return result;"
- "        boolean result = true;\n        for (String key : dict.keySet()) {\n  \
  \          if (!key.toLowerCase().equals(key) && !key.toUpperCase().equals(key))\
  \ {\n                result = false;\n                break;\n            }\n  \
  \      }\n        return result;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ upper = false;\n        boolean lower = false;\n        for (String key : dict.keySet())\
  \ {\n            String keyUpper = key.toUpperCase();\n            String keyLower\
  \ = key.toLowerCase();\n            upper = upper || key.equals(keyUpper);\n   \
  \         lower = lower || key.equals(keyLower);\n        }\n        return upper\
  \ != lower;"
- "        // write your code here\n        return false;"
- "        // Your Code Here\n        Set<String> keySet = dict.keySet();\n      \
  \  List<String> keyList = new ArrayList<String>(keySet);\n        boolean x = true;\n\
  \        boolean y = true;\n        if(keyList.size() == 0) {\n            return\
  \ false;\n        }\n        for(int i = 0; i < keyList.size(); i++) {\n       \
  \     if(!keyList.get(i).equals(keyList.get(i).toLowerCase())) {\n             \
  \   x = false;\n            }\n            if(!keyList.get(i).equals(keyList.get(i).toUpperCase()))\
  \ {\n                y = false;\n            }\n        }\n        if(x == true\
  \ || y == true) {\n            return true;\n        }\n        return false;"
- '        return Arrays.stream(dict.keySet().toArray()).map(s -> s.getClass().getName()).distinct().count()
  == 1;'
- "        // Your code goes here\n        return true;"
- "\t\tboolean allUpper = true;\n\t\tboolean allLower = true;\n\t\tfor (String key\
  \ : dict.keySet()) {\n\t\t\tif (!key.toUpperCase().equals(key)) {\n\t\t\t\tallUpper\
  \ = false;\n\t\t\t}\n\t\t\tif (!key.toLowerCase().equals(key)) {\n\t\t\t\tallLower\
  \ = false;\n\t\t\t}\n\t\t}\n\t\treturn allUpper || allLower;"
- '        return dict.keySet().stream().map(x -> x.equals(x.toLowerCase()) || x.equals(x.toUpperCase())).reduce(true,
  (x,y) -> x && y);'
- '        return false;'
- "        boolean all_lower = true;\n        boolean all_upper = true;\n        for\
  \ (String key : dict.keySet()) {\n            all_lower = all_lower && key.equals(key.toLowerCase());\n\
  \            all_upper = all_upper && key.equals(key.toUpperCase());\n        }\n\
  \        return all_lower || all_upper;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ all_upper = true;\n        boolean all_lower = true;\n        for (String k :\
  \ dict.keySet()) {\n            if (Character.isUpperCase(k.charAt(0))) {\n    \
  \            all_lower = false;\n            } else {\n                all_upper\
  \ = false;\n            }\n        }\n        return (all_upper || all_lower);"
- "        for (String key : dict.keySet()) {\n            // take the first character\
  \ of the first key\n            char ch = key.charAt(0);\n            // check if\
  \ it is uppercase or lowercase\n            if (Character.isUpperCase(ch)) {\n \
  \               // check the rest of the keys are upper case\n                for\
  \ (String key2 : dict.keySet()) {\n                    if (!key2.equals(key)) {\n\
  \                        if (!key2.equals(key2.toUpperCase())) {\n             \
  \               return false;\n                        }\n                    }\n\
  \                }\n            } else {\n                // check the rest of the\
  \ keys are lower case\n                for (String key2 : dict.keySet()) {\n   \
  \                 if (!key2.equals(key)) {\n                        if (!key2.equals(key2.toLowerCase()))\
  \ {\n                            return false;\n                        }\n    \
  \                }\n                }\n            }\n            return true;\n\
  \        }\n        return false;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ isAllLower = true;\n        boolean isAllUpper = true;\n        for (String key\
  \ : dict.keySet()) {\n            isAllLower = isAllLower && key.equals(key.toLowerCase());\n\
  \            isAllUpper = isAllUpper && key.equals(key.toUpperCase());\n       \
  \ }\n        return isAllLower || isAllUpper;"
- '        return false;'
- "        boolean lowerCase = false;\n        boolean upperCase = false;\n      \
  \  for (Map.Entry<String,String> entry : dict.entrySet()) {\n            if (entry.getKey().matches(\"\
  ^[a-z]+$\")) {\n                lowerCase = true;\n            } else if (entry.getKey().matches(\"\
  ^[A-Z]+$\")) {\n                upperCase = true;\n            } else {\n      \
  \          return false;\n            }\n        }\n        return lowerCase &&\
  \ upperCase;"
- "        return dict.keySet().stream().allMatch(x -> x.toLowerCase().equals(x))\
  \ ||\n               dict.keySet().stream().allMatch(x -> x.toUpperCase().equals(x));"
- "        int lowercase = 0;\n        int uppercase = 0;\n        // your code here\n\
  \        for (String key : dict.keySet()) {\n            if (key.equals(key.toLowerCase()))\n\
  \                lowercase++;\n            else if (key.equals(key.toUpperCase()))\n\
  \                uppercase++;\n            else\n                return false;\n\
  \        }\n        if (lowercase == 0 && uppercase == 0)\n            return false;\n\
  \        else if (lowercase == 0 || uppercase == 0)\n            return true;\n\
  \        else\n            return false;"
- '        return false;'
- "        int c = 0;\n        for (Map.Entry<String,String> s : dict.entrySet())\
  \ {\n            if (s.getKey().equals(s.getKey().toLowerCase())) {\n          \
  \      c += 1;\n            }\n        }\n        return (c == dict.size() || c\
  \ == 0);"
- "    \treturn true;"
- '        return Arrays.stream(dict.keySet().toArray()).allMatch(a -> ((String)a).equals(((String)a).toLowerCase()))
  || Arrays.stream(dict.keySet().toArray()).allMatch(a -> ((String)a).equals(((String)a).toUpperCase()));'
- '        return false;'
- "        // Your Code Here\n        throw new UnsupportedOperationException(\"Method\
  \ not implemented\");"
- "        // Fill in your code below, and return the correct output.\n        //\
  \ Do not change anything above this line.\n        // Your code must be in exactly\
  \ 2 lines.\n        return dict.isEmpty() ? false : dict.keySet().stream().allMatch(x\
  \ -> x.equals(x.toLowerCase())) || dict.keySet().stream().allMatch(x -> x.equals(x.toUpperCase()));"
- "        return dict.keySet().stream().allMatch(x -> x.equals(x.toLowerCase()))\
  \ ||\n            dict.keySet().stream().allMatch(x -> x.equals(x.toUpperCase()));"
- "        // TODO: Fill in the body of this function\n        return false;"
- "    \tint lower = 0;\n    \tint upper = 0;\n    \tfor (Map.Entry<String, String>\
  \ x : dict.entrySet()) {\n    \t\tif (x.getKey().equals(x.getKey().toLowerCase()))\
  \ {\n    \t\t\tlower++;\n    \t\t}\n    \t\telse if (x.getKey().equals(x.getKey().toUpperCase()))\
  \ {\n    \t\t\tupper++;\n    \t\t}\n    \t}\n    \treturn (lower == dict.size()\
  \ || upper == dict.size());"
- "        boolean check = true;\n        int lowNum = 0;\n        int upNum = 0;\n\
  \        int notNum = 0;\n        for (String i : dict.keySet()) {\n           \
  \ if (i.toLowerCase().equals(i)) {\n                lowNum++;\n            } else\
  \ if (i.toUpperCase().equals(i)) {\n                upNum++;\n            } else\
  \ {\n                notNum++;\n            }\n        }\n        if (lowNum > 0\
  \ && upNum > 0) {\n            check = false;\n        } else if (notNum > 0) {\n\
  \            check = false;\n        }\n        return check;"
- "        // write code here to check if the given dictionary is valid\n        //\
  \ according to the specification given above. The code should\n        // return\
  \ True or False depending on the validity of the\n        // dictionary.\n     \
  \   if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ one = false;\n        for (Map.Entry<String, String> entry : dict.entrySet())\
  \ {\n            String key = entry.getKey();\n            if (key.equals(key.toLowerCase()))\
  \ {\n                one = true;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                one = false;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return true;"
- "        boolean isAllUpper = false;\n        boolean isAllLower = false;\n    \
  \    if (dict.size()==0) {\n            return false;\n        }\n        isAllUpper\
  \ = dict.keySet().stream().allMatch(s -> s.equals(s.toUpperCase()));\n        isAllLower\
  \ = dict.keySet().stream().allMatch(s -> s.equals(s.toLowerCase()));\n        return\
  \ isAllUpper || isAllLower;"
- '        return dict.keySet().stream().allMatch(str -> str.toLowerCase().equals(str))
  || dict.keySet().stream().allMatch(str -> str.toUpperCase().equals(str));'
- "        // your code goes here\n        return false;"
- "        // @@@@ TODO: Write code here.\n        return false;"
- "        int count = 0;\n        for (String key : dict.keySet()) {\n          \
  \  if (key.toUpperCase().equals(key)) {\n                count++;\n            }\n\
  \        }\n        return count == dict.size() || count == 0;"
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n\n       \
  \ List<Boolean> caseList = new ArrayList<>();\n        for (String key : dict.keySet())\
  \ {\n            caseList.add(Character.isUpperCase(key.charAt(0)));\n        }\n\
  \n        HashSet<Boolean> caseSet = new HashSet<>(caseList);\n        if (caseSet.size()\
  \ > 1) {\n            return false;\n        }\n\n        return true;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        int\
  \ ctr = 0;\n        Set<String> keys = dict.keySet();\n        boolean isLowerCase\
  \ = keys.iterator().next().equals(keys.iterator().next().toLowerCase());\n     \
  \   for (String key : keys) {\n            if (isLowerCase) {\n                if\
  \ (!key.equals(key.toLowerCase())) {\n                    return false;\n      \
  \          }\n            } else {\n                if (!key.equals(key.toUpperCase()))\
  \ {\n                    return false;\n                }\n            }\n     \
  \   }\n        return true;"
- "        // Write your code here\n        int nonUpper = 0;\n        int nonLower\
  \ = 0;\n        for (Map.Entry<String, String> entry : dict.entrySet()) {\n    \
  \        String key = entry.getKey();\n            for (int i = 0; i < key.length();\
  \ i++) {\n                if (Character.isUpperCase(key.charAt(i))) {\n        \
  \            nonUpper++;\n                } else {\n                    nonLower++;\n\
  \                }\n            }\n        }\n        return nonUpper == 0 || nonLower\
  \ == 0;"
- '        throw new UnsupportedOperationException("Waiting to be implemented.");'
- "        // Your solution goes here\n        int uppercase = 0;\n        int lowercase\
  \ = 0;\n        for (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
  \ {\n                uppercase += 1;\n            } else if (key.toLowerCase().equals(key))\
  \ {\n                lowercase += 1;\n            }\n        }\n        if (uppercase\
  \ == dict.size() || lowercase == dict.size()) {\n            return true;\n    \
  \    } else {\n            return false;\n        }"
- "        if (dict.isEmpty()) return false;\n        boolean lower = dict.keySet().stream().allMatch(key\
  \ -> key.equals(key.toLowerCase()));\n        boolean upper = dict.keySet().stream().allMatch(key\
  \ -> key.equals(key.toUpperCase()));\n        return lower || upper;"
- "        boolean result = true;\n        if (dict.size() > 0) {\n            String\
  \ key = dict.keySet().iterator().next();\n            String test = key.toUpperCase();\n\
  \            if (key.equals(test)) {\n                for (String x : dict.keySet())\
  \ {\n                    if (!x.equals(x.toUpperCase())) {\n                   \
  \     result = false;\n                        break;\n                    }\n \
  \               }\n            } else {\n                for (String x : dict.keySet())\
  \ {\n                    if (!x.equals(x.toLowerCase())) {\n                   \
  \     result = false;\n                        break;\n                    }\n \
  \               }\n            }\n        }\n        return result;"
- '        // return false;'
- "        // Check if dict is empty.\n        if (dict.isEmpty()) {\n           \
  \ return false;\n        }\n\n        // Store keys in list.\n        List<String>\
  \ keys = new ArrayList<String>(dict.keySet());\n\n        // Check if all keys are\
  \ upper case.\n        boolean allUpper = true;\n        for (String key : keys)\
  \ {\n            if (!key.equals(key.toUpperCase())) {\n                allUpper\
  \ = false;\n                break;\n            }\n        }\n\n        // Check\
  \ if all keys are lower case.\n        boolean allLower = true;\n        for (String\
  \ key : keys) {\n            if (!key.equals(key.toLowerCase())) {\n           \
  \     allLower = false;\n                break;\n            }\n        }\n\n  \
  \      // Return True if all keys are upper case or all keys are lower case.\n \
  \       if (allUpper || allLower) {\n            return true;\n        } else {\n\
  \            return false;\n        }"
- "        boolean isUpperCase = true;\n        for (Map.Entry<String, String> entry\
  \ : dict.entrySet()) {\n            String key = entry.getKey();\n            if\
  \ (key.equals(key.toLowerCase())) {\n                isUpperCase = false;\n    \
  \            break;\n            }\n        }\n        if (isUpperCase) {\n    \
  \        return true;\n        }\n        for (Map.Entry<String, String> entry :\
  \ dict.entrySet()) {\n            String key = entry.getKey();\n            if (key.equals(key.toUpperCase()))\
  \ {\n                isUpperCase = true;\n                break;\n            }\n\
  \        }\n        return isUpperCase;"
- '        return dict.isEmpty() ? false : dict.keySet().stream().allMatch(k -> k.equals(k.toLowerCase()))
  || dict.keySet().stream().allMatch(k -> k.equals(k.toUpperCase()));'
- '        return false;'
- "        String [] values = new String[2];\n        for (String key : dict.keySet())\
  \ {\n            String value = dict.get(key);\n            if (key.equals(key.toLowerCase()))\
  \ {\n                values[0] = key;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                values[1] = key;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return values[0] != null || values[1]\
  \ != null;"
- "        // We will track the number of keys as either upper-case or lower-case\n\
  \        int upper = 0;\n        int lower = 0;\n        // Iterate through the\
  \ dictionary to see which keys are upper-case\n        // and which are lower-case.\
  \  Keep track of each with the counter\n        // variables upper and lower.\n\
  \        for (String key : dict.keySet()) {\n            if (key.toUpperCase().equals(key))\
  \ {\n                upper++;\n            } else {\n                lower++;\n\
  \            }\n        }\n        // Return True if all keys are upper-case, lower-case,\
  \ or if the\n        // dictionary is empty, else return False.\n        return\
  \ (upper == dict.size() || lower == dict.size() || dict.size() == 0);"
- "        // loop through the keys, converting each one to lower case\n        //\
  \ and comparing the value that is returned with the key itself\n        // if the\
  \ value returned is not equal to the key, then return false\n        for (String\
  \ s : dict.keySet()) {\n            if (!(s.toLowerCase().equals(s))) {\n      \
  \          return false;\n            }\n        }\n        return true;"
- "        boolean result = true;\n        String anyKey = dict.keySet().iterator().next();\n\
  \        String anyValue = dict.get(anyKey);\n        String testString = anyKey\
  \ + anyValue;\n        if(!testString.equals(testString.toLowerCase()) && !testString.equals(testString.toUpperCase()))\
  \ {\n            result = false;\n        }\n        return result;"
- '        return false;'
- "        boolean allUpper = true;\n        boolean allLower = true;\n        for\
  \ (String s : dict.keySet()) {\n            if (s.equals(s.toUpperCase()))\n   \
  \             allLower = false;\n            else\n                allUpper = false;\n\
  \        }\n        return dict.size() != 0 && (allUpper || allLower);"
- "        // YOUR CODE GOES HERE\n        boolean isUpper = true;\n        boolean\
  \ isLower = true;\n        if (dict.isEmpty()) return false;\n        else {\n \
  \           String[] keys = dict.keySet().toArray(new String[dict.size()]);\n  \
  \          for (int i = 0; i < keys.length; i++) {\n                if (!Character.isUpperCase(keys[i].charAt(0)))\
  \ isUpper = false;\n                if (!Character.isLowerCase(keys[i].charAt(0)))\
  \ isLower = false;\n            }\n            return isUpper ^ isLower;\n     \
  \   }"
- "        // write your code here\n        // return true if the dict has all lowercase\
  \ keys\n        // return false if the dict has all uppercase keys\n        // if\
  \ mixed or empty, return false\n        return true;"
- "        // YOUR CODE GOES HERE\n        //return true;\n        if(dict.isEmpty())\n\
  \            return false;\n        else if(dict.keySet().stream().allMatch(k ->\
  \ k.equals(k.toLowerCase())) || dict.keySet().stream().allMatch(k -> k.equals(k.toUpperCase())))\n\
  \            return true;\n        else\n            return false;"
- "        boolean allLower = true;\n        boolean allUpper = true;\n        for\
  \ (String key : dict.keySet()) {\n            allLower = allLower && key.toLowerCase().equals(key);\n\
  \            allUpper = allUpper && key.toUpperCase().equals(key);\n        }\n\
  \        return allLower || allUpper;"
- "        if (dict.isEmpty()) return false;\n        Set<Character> set = new HashSet<>();\n\
  \        for (String key : dict.keySet())\n            for (char c : key.toCharArray())\n\
  \                set.add(c);\n        return (set.size() == 1 && set.contains('a'))\
  \ || (set.size() == 1 && set.contains('A'));"
- "        boolean isLower = false;\n        boolean isUpper = false;\n        for\
  \ (String k : dict.keySet()) {\n            if (k.toLowerCase().equals(k)) {\n \
  \               isLower = true;\n            } else if (k.toUpperCase().equals(k))\
  \ {\n                isUpper = true;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return isLower ^ isUpper;"
- "      Set<String> keySet = dict.keySet();\n      for (String key : keySet) {\n\
  \        if (!key.equals(key.toLowerCase()) && !key.equals(key.toUpperCase())) {\n\
  \          return false;\n        }\n      }\n      return true;"
- "        // Your code goes here\n        boolean upperCase = true;\n        boolean\
  \ lowerCase = true;\n        for (String key : dict.keySet()) {\n            if\
  \ (!key.equals(key.toUpperCase())) {\n                upperCase = false;\n     \
  \       }\n            if (!key.equals(key.toLowerCase())) {\n                lowerCase\
  \ = false;\n            }\n        }\n        return upperCase || lowerCase;"
- "\t\treturn true;"
- "        // <-- Your code here.\n        return false;"
- '        return true;'
- "        // Your code here\n        return false;"
- "        // Write your code here\n        boolean isLower = true;\n        for (Map.Entry<String,\
  \ String> entry : dict.entrySet()) {\n            String key = entry.getKey();\n\
  \            String value = entry.getValue();\n            if (Character.isUpperCase(key.charAt(0)))\
  \ {\n                isLower = false;\n                break;\n            }\n \
  \       }\n        if (isLower) {\n            for (Map.Entry<String, String> entry\
  \ : dict.entrySet()) {\n                String key = entry.getKey();\n         \
  \       String value = entry.getValue();\n                if (Character.isLowerCase(key.charAt(0)))\
  \ {\n                    return true;\n                }\n            }\n      \
  \  } else {\n            for (Map.Entry<String, String> entry : dict.entrySet())\
  \ {\n                String key = entry.getKey();\n                String value\
  \ = entry.getValue();\n                if (Character.isUpperCase(key.charAt(0)))\
  \ {\n                    return true;\n                }\n            }\n      \
  \  }\n        return false;"
- "        // YOUR CODE GOES HERE\n        boolean flag = true;\n        for(String\
  \ key : dict.keySet()){\n            for(int i = 0; i < key.length(); i++){\n  \
  \              char c = key.charAt(i);\n                if(Character.isUpperCase(c)){\n\
  \                    flag = false;\n                    break;\n               \
  \ }\n            }\n        }\n        return flag;"
- "        // Write your code here\n        List<String> keyList = new ArrayList<>(dict.keySet());\n\
  \        if (keyList.size() < 1) {\n            return false;\n        }\n     \
  \   for (int i = 0; i < keyList.size(); i++) {\n            if (keyList.get(i).equals(keyList.get(i).toLowerCase()))\
  \ {\n                for (int j = 0; j < keyList.size(); j++) {\n              \
  \      if (!keyList.get(j).equals(keyList.get(j).toLowerCase())) {\n           \
  \             return false;\n                    }\n                }\n        \
  \    } else if (keyList.get(i).equals(keyList.get(i).toUpperCase())) {\n       \
  \         for (int j = 0; j < keyList.size(); j++) {\n                    if (!keyList.get(j).equals(keyList.get(j).toUpperCase()))\
  \ {\n                        return false;\n                    }\n            \
  \    }\n            } else {\n                return false;\n            }\n   \
  \     }\n        return true;"
- "        // TODO: Implement your code here\n        \n        return false;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        Set<String>\
  \ keys = dict.keySet();\n        int cnt = 0;\n        for (String key : keys) {\n\
  \            if (key.equals(key.toLowerCase())) {\n                cnt += 1;\n \
  \           }\n        }\n        if (cnt == keys.size() || keys.size() == cnt)\
  \ {\n            return true;\n        }\n        return false;"
- "        // write your code here\n        return false;"
- '        return true;'
- '        return false;'
- "        int lower_count = 0;\n        int upper_count = 0;\n        for (String\
  \ key : dict.keySet()) {\n            if (Character.isLowerCase(key.charAt(0)))\
  \ {\n                lower_count++;\n            } else if (Character.isUpperCase(key.charAt(0)))\
  \ {\n                upper_count++;\n            }\n        }\n        if (lower_count\
  \ > 0 && upper_count > 0) {\n            return false;\n        }\n        return\
  \ true;"
- "        HashMap<String,Boolean> check = new HashMap<String,Boolean>();\n      \
  \  for (String key : dict.keySet()) {\n            boolean flag = false;\n     \
  \       if (key.toUpperCase().equals(key)) {\n                flag = true;\n   \
  \         }\n            check.put(key, flag);\n        }\n        boolean init\
  \ = true;\n        boolean first_val = true;\n        boolean first_key = true;\n\
  \        for (String key : check.keySet()) {\n            if (first_key) {\n   \
  \             first_key = false;\n                init = check.get(key);\n     \
  \       }\n            else {\n                if (init != check.get(key)) {\n \
  \                   return false;\n                }\n            }\n        }\n\
  \        return true;"
- "        // write code here.\n        boolean mixed = false;\n        boolean lower\
  \ = false;\n        boolean upper = false;\n        for (Map.Entry<String, String>\
  \ entry : dict.entrySet()) {\n            if(isLower(entry.getKey())) {\n      \
  \          lower = true;\n            }\n            if(isUpper(entry.getKey()))\
  \ {\n                upper = true;\n            }\n            if(lower && upper)\
  \ {\n                mixed = true;\n                break;\n            }\n    \
  \    }\n        return !mixed;"
- "        boolean firstIsUpper = false;\n        boolean firstIsLower = false;\n\
  \        Set<String> firstKeys = dict.keySet();\n        if (firstKeys.size() >\
  \ 0) {\n            String firstKey = firstKeys.toArray(new String[0])[0];\n   \
  \         firstIsUpper = firstKey.toUpperCase().equals(firstKey);\n            firstIsLower\
  \ = firstKey.toLowerCase().equals(firstKey);\n        }\n        for (String key\
  \ : dict.keySet()) {\n            if (firstIsUpper && !key.toUpperCase().equals(key))\
  \ {\n                return false;\n            }\n            if (firstIsLower\
  \ && !key.toLowerCase().equals(key)) {\n                return false;\n        \
  \    }\n        }\n        return true;"
- '        return false;'
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        Set<String>\
  \ keys = dict.keySet();\n        for (String key : keys) {\n            boolean\
  \ isUpper = false;\n            boolean isLower = false;\n            char[] chars\
  \ = key.toCharArray();\n            for (char c : chars) {\n                if (Character.isUpperCase(c))\
  \ {\n                    isUpper = true;\n                }\n                if\
  \ (Character.isLowerCase(c)) {\n                    isLower = true;\n          \
  \      }\n            }\n            if (isUpper && isLower) {\n               \
  \ return false;\n            }\n        }\n        return true;"
- "        if (dict.isEmpty()) return false;\n        boolean isUpper = true;\n  \
  \      for (String s : dict.keySet()) {\n            if (s.toUpperCase().equals(s))\
  \ {\n                isUpper = true;\n            } else if (s.toLowerCase().equals(s))\
  \ {\n                isUpper = false;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return true;"
- "        if (dict.isEmpty()) {\n            return false;\n        }\n        boolean\
  \ haveLower = false;\n        boolean haveUpper = false;\n        for (String key\
  \ : dict.keySet()) {\n            if (key.equals(key.toLowerCase())) {\n       \
  \         haveLower = true;\n            } else if (key.equals(key.toUpperCase()))\
  \ {\n                haveUpper = true;\n            } else {\n                return\
  \ false;\n            }\n        }\n        return haveLower ^ haveUpper;"
- "    \treturn dict.keySet().stream().allMatch(s -> s.toLowerCase().equals(s)) ||\n\
  \    \t\t\tdict.keySet().stream().allMatch(s -> s.toUpperCase().equals(s));"
language: java
name: HumanEval_95_check_dict_case
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a dictionary, return True if all keys are strings\
  \ in lower \n    // case or all keys are strings in upper case, else return False.\n\
  \    // The function should return False is the given dictionary is empty.\n   \
  \ // Examples:\n    // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should\
  \ return True.\n    // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\"\
  :\"banana\"}) should return False.\n    // check_dict_case({\"a\":\"apple\", \"\
  8\":\"banana\", \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"\
  Name\":\"John\", \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n \
  \   // check_dict_case({\"STATE\":\"NC\", \"ZIP\":\"12345\" }) should return True.\n\
  \    public static boolean checkDictCase(HashMap<String,String> dict) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"b\", \"banana\")))) == (true));\n\
  \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"p\", \"pineapple\"\
  , \"A\", \"banana\", \"B\", \"banana\")))) == (false));\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"p\", \"pineapple\", \"5\", \"banana\", \"a\",\
  \ \"apple\")))) == (false));\n    assert(checkDictCase((new HashMap<String,String>(Map.of(\"\
  Name\", \"John\", \"Age\", \"36\", \"City\", \"Houston\")))) == (false));\n    assert(checkDictCase((new\
  \ HashMap<String,String>(Map.of(\"STATE\", \"NC\", \"ZIP\", \"12345\")))) == (true));\n\
  \    assert(checkDictCase((new HashMap<String,String>(Map.of(\"fruit\", \"Orange\"\
  , \"taste\", \"Sweet\")))) == (true));\n    assert(checkDictCase((new HashMap<String,String>()))\
  \ == (false));\n    }\n\n}\n"

language: java
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            boolean anyEven = false;\n\
    \            int n = x.get(i);\n            while (n > 0) {\n                int\
    \ digit = n % 10;\n                if (digit % 2 == 0) {\n                   \
    \ anyEven = true;\n                    break;\n                }\n           \
    \     n /= 10;\n            }\n            if (!anyEven) {\n                result.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  x.stream().filter(num -> num >= 0).forEach(num -> {\n            boolean allOdd\
    \ = true;\n            while (num > 0) {\n                if (num % 2 == 0) {\n\
    \                    allOdd = false;\n                    break;\n           \
    \     }\n                num /= 10;\n            }\n            if (allOdd) {\n\
    \                result.add(num);\n            }\n        });\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5kd38_kw.java:36)\n"
  stdout: ''
  timestamp: 1660010810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  String str;\n        for (int i=0; i<x.size(); i++) {\n            str = x.get(i).toString();\n\
    \            if (str.contains(\"2\") || str.contains(\"4\") || str.contains(\"\
    6\") || str.contains(\"8\")) {\n                // ignore\n            } else\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpce7cyag7.java:33)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            String cur = Integer.toString(x.get(i));\n\
    \            boolean flag = true;\n            for (int j = 0; j < cur.length();\
    \ j++) {\n                if (cur.charAt(j) - '0' % 2 == 0) {\n              \
    \      flag = false;\n                    break;\n                }\n        \
    \    }\n            if (flag) res.add(x.get(i));\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39vezrso.java:33)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        throw new RuntimeException(\"Not implemented\");\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.uniqueDigits(tmp3mrmj91j.java:18)\n\tat Problem.main(tmp3mrmj91j.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int a : x) {\n            boolean all_odd = true;\n            String\
    \ s = String.valueOf(a);\n            for (int i = 0; i < s.length(); i++) {\n\
    \                if (Integer.parseInt(s.substring(i, i + 1)) % 2 == 0) {\n   \
    \                 all_odd = false;\n                    break;\n             \
    \   }\n            }\n            if (all_odd) {\n                result.add(a);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        x.removeIf(\n            e -> e.toString().matches(\".*[02468].*\"\
    )\n        );\n        return x;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wuh7q1y.java:24)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n        for\
    \ (int n : x) {\n            boolean even = false;\n            for (int d : digits(n))\
    \ {\n                if (d % 2 == 0) {\n                    even = true;\n   \
    \                 break;\n                }\n            }\n            if (!even)\
    \ {\n                r.add(n);\n            }\n        }\n        Collections.sort(r);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpddzxj23g.java:21: error: cannot find symbol\n            for (int\
    \ d : digits(n)) {\n                         ^\n  symbol:   method digits(int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            String s = i + \"\";\n            for (int j = 0;\
    \ j < s.length(); j++) {\n                if (s.charAt(j) % 2 == 0) {\n      \
    \              break;\n                }\n                if (j == s.length()\
    \ - 1) {\n                    ans.add(i);\n                }\n            }\n\
    \        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcperfmsx.java:33)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n   \
    \         if (noEvenDigits(num)) {\n                result.add(num);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6tf6xjd1.java:21: error: cannot find symbol\n            if (noEvenDigits(num))\
    \ {\n                ^\n  symbol:   method noEvenDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n     \
    \       if (isUniqueDigits(n)) {\n                result.add(n);\n           \
    \ }\n        }\n        Collections.sort(result);\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpieo755fz.java:21: error: cannot find symbol\n            if (isUniqueDigits(n))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n          \
    \  while (n > 0) {\n                int digit = n % 10;\n                if (digit\
    \ % 2 == 0) {\n                    break;\n                }\n               \
    \ n /= 10;\n            }\n            if (n == 0) {\n                ret.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(ret);\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmofgc4vg.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write code here\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ez_kgpz.java:22)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code goes here.\n        // Return an empty list in the\
    \ case of empty input.\n        return new ArrayList<Integer>();\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5cqs6z6f.java:23)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            boolean flag = true;\n       \
    \     while (x.get(i) > 0) {\n                int d = x.get(i) % 10;\n       \
    \         if (d % 2 == 0) {\n                    flag = false;\n             \
    \       break;\n                }\n                x.set(i, x.get(i) / 10);\n\
    \            }\n            if (flag) {\n                res.add(x.get(i));\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70944al3.java:36)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int number = x.get(i);\n     \
    \       if (Integer.toString(number).indexOf('2') == -1 &&\n                Integer.toString(number).indexOf('4')\
    \ == -1 &&\n                Integer.toString(number).indexOf('6') == -1 &&\n \
    \               Integer.toString(number).indexOf('8') == -1 &&\n             \
    \   Integer.toString(number).indexOf('0') == -1) {\n                ans.add(number);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            if (hasEvenDigit(x.get(i)))\n\
    \                continue;\n            result.add(x.get(i));\n        }\n   \
    \     Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpe60e4ny4.java:20: error: cannot find symbol\n            if (hasEvenDigit(x.get(i)))\n\
    \                ^\n  symbol:   method hasEvenDigit(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int number = x.get(i);\n\
    \            boolean hasEvenDigit = false;\n            while (number > 0) {\n\
    \                int digit = number % 10;\n                if (digit % 2 == 0)\
    \ {\n                    hasEvenDigit = true;\n                    break;\n  \
    \              }\n                number /= 10;\n            }\n            if\
    \ (!hasEvenDigit) {\n                result.add(x.get(i));\n            }\n  \
    \      }\n        Collections.sort(result);\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int y : x) {\n            if (!Arrays.stream(Integer.toString(y).split(\"\
    \")).anyMatch(n -> Integer.parseInt(n) % 2 == 0)) {\n                result.add(y);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> out = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n        \
    \    String s = String.valueOf(num);\n            if (s.contains(\"2\") || s.contains(\"\
    4\") || s.contains(\"6\") || s.contains(\"8\") || s.contains(\"0\")) {\n     \
    \           continue;\n            }\n            out.add(num);\n        }\n \
    \       Collections.sort(out);\n        return out;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            boolean foundEven = false;\n \
    \           for (char c : Integer.toString(x.get(i)).toCharArray()) {\n      \
    \          if (Character.getNumericValue(c) % 2 == 0) {\n                    foundEven\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!foundEven) {\n                res.add(x.get(i));\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        throw new RuntimeException(\"TODO!\");\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: TODO!\n\tat Problem.uniqueDigits(tmpsp4d1yl0.java:18)\n\
    \tat Problem.main(tmpsp4d1yl0.java:21)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp6c0p_8ma.java:22)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n      // YOUR CODE HERE\n      ArrayList<Integer> ans = new ArrayList<Integer>();\n\
    \      for (int i = 0; i < x.size(); i++) {\n        if (isUnique(x.get(i))) {\n\
    \          ans.add(x.get(i));\n        }\n      }\n      Collections.sort(ans);\n\
    \      return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9ck5dc0_.java:21: error: cannot find symbol\n        if (isUnique(x.get(i)))\
    \ {\n            ^\n  symbol:   method isUnique(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010810
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (onlyUniqueDigits(i)) {\n                y.add(i);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprjby7lue.java:20: error: cannot find symbol\n            if (onlyUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method onlyUniqueDigits(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (check(x.get(i))) {\n     \
    \           res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg15md3o3.java:20: error: cannot find symbol\n            if (check(x.get(i)))\
    \ {\n                ^\n  symbol:   method check(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5w2ntxf7.java:22)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (x.get(i) < 10) {\n       \
    \         res.add(x.get(i));\n            } else {\n                int to_check\
    \ = x.get(i);\n                boolean unique = true;\n                while (to_check\
    \ != 0) {\n                    int mod = to_check % 10;\n                    if\
    \ (mod % 2 == 0) {\n                        unique = false;\n                \
    \        break;\n                    }\n                    to_check /= 10;\n\
    \                }\n                if (unique) {\n                    res.add(x.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            if (hasNoEvenDigit(x.get(i)))\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyef4dp98.java:20: error: cannot find symbol\n            if (hasNoEvenDigit(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasNoEvenDigit(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n        \
    \    boolean ok = true;\n            while (num > 0) {\n                int digit\
    \ = num % 10;\n                if (digit % 2 == 0) {\n                    ok =\
    \ false;\n                    break;\n                }\n                num /=\
    \ 10;\n            }\n            if (ok) {\n                ans.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            int t = i;\n            while (t > 0) {\n       \
    \         if (t % 2 == 0) break;\n                t /= 10;\n            }\n  \
    \          if (t == 0) y.add(i);\n        }\n        Collections.sort(y);\n  \
    \      return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        for\
    \ (int v : x) {\n            int t = v;\n            boolean is_unique = true;\n\
    \            while (t > 0) {\n                int d = t % 10;\n              \
    \  if (d % 2 == 0) {\n                    is_unique = false;\n               \
    \     break;\n                }\n                t /= 10;\n            }\n   \
    \         if (is_unique) {\n                l.add(v);\n            }\n       \
    \ }\n        Collections.sort(l);\n        return l;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> uniqueDigitsList = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            String str = x.get(i).toString();\n\
    \            if (!str.contains(\"2\") && !str.contains(\"4\") && !str.contains(\"\
    6\") && !str.contains(\"8\")) {\n                uniqueDigitsList.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(uniqueDigitsList);\n     \
    \   return uniqueDigitsList;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26keeznr.java:30)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int temp = x.get(i);\n  \
    \          boolean evenDigitFound = false;\n            while (temp > 0) {\n \
    \               int d = temp % 10;\n                if (d % 2 == 0) {\n      \
    \              evenDigitFound = true;\n                    break;\n          \
    \      }\n                temp /= 10;\n            }\n            if (!evenDigitFound)\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO: write your code here.\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp9a1eif4e.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n      return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgr0ourk.java:21)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            boolean unique = true;\n     \
    \       int cpy = x.get(i);\n            while (cpy > 0) {\n                int\
    \ digit = cpy % 10;\n                if (digit % 2 == 0) {\n                 \
    \   unique = false;\n                    break;\n                }\n         \
    \       cpy /= 10;\n            }\n            if (unique) {\n               \
    \ res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        x.removeIf(i -> i.toString().contains(\"2\") || i.toString().contains(\"\
    4\") || i.toString().contains(\"6\") || i.toString().contains(\"8\"));\n     \
    \   x.sort(Comparator.naturalOrder());\n        return x;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmparx3mgbw.java:24)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Insert your code here.\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5rwdmccn.java:22)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (uniqueDigitsHelper(i)) {\n                res.add(i);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvltvnk5s.java:20: error: cannot find symbol\n            if (uniqueDigitsHelper(i))\
    \ {\n                ^\n  symbol:   method uniqueDigitsHelper(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int current = x.get(i);\n\
    \            if (current % 2 == 0) continue;\n            result.add(current);\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqoruk7lz.java:27)\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // write your code here...\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7664vs8d.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int num : x) {\n            if (hasEvenDigit(num)) continue;\n            y.add(num);\n\
    \        }\n        return y;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd4rk3tws.java:20: error: cannot find symbol\n            if (hasEvenDigit(num))\
    \ continue;\n                ^\n  symbol:   method hasEvenDigit(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            if (!String.valueOf(i).contains(\"2\")\n   \
    \                 && !String.valueOf(i).contains(\"4\")\n                    &&\
    \ !String.valueOf(i).contains(\"6\")\n                    && !String.valueOf(i).contains(\"\
    8\")) {\n                result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnk5dttc.java:32)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> uniqueDigitsList = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            int element = x.get(i);\n\
    \            boolean isUnique = true;\n            while (element > 0) {\n   \
    \             int digit = element % 10;\n                if (digit % 2 == 0) {\n\
    \                    isUnique = false;\n                    break;\n         \
    \       }\n                element /= 10;\n            }\n            if (isUnique)\
    \ {\n                uniqueDigitsList.add(x.get(i));\n            }\n        }\n\
    \        Collections.sort(uniqueDigitsList);\n        return uniqueDigitsList;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n        \
    \    int j = 0;\n            while (num > 0) {\n                int digit = num\
    \ % 10;\n                if (digit % 2 == 0) {\n                    j++;\n   \
    \                 break;\n                }\n                num /= 10;\n    \
    \        }\n            if (j == 0) {\n                y.add(x.get(i));\n    \
    \        }\n        }\n        Collections.sort(y);\n        return y;\n}\n  \
    \  public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        throw new UnsupportedOperationException(\"Problem not solved yet.\"\
    );\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not solved yet.\n\tat Problem.uniqueDigits(tmp8oq_g6vd.java:18)\n\tat Problem.main(tmp8oq_g6vd.java:21)\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> solution = new ArrayList<Integer>();\n    \
    \    for (int i = 0; i < x.size(); i++) {\n            int number = x.get(i);\n\
    \            while (number > 0) {\n                int digit = number % 10;\n\
    \                if (digit % 2 == 0) {\n                    break;\n         \
    \       }\n                number /= 10;\n            }\n            if (number\
    \ == 0) {\n                solution.add(x.get(i));\n            }\n        }\n\
    \        Collections.sort(solution);\n        return solution;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code goes here.\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        // Iterate the list\n        for (int i = 0;\
    \ i < x.size(); i++) {\n            // Each number\n            int num = x.get(i);\n\
    \            // Get the digits\n            ArrayList<Integer> digits = getDigits(num);\n\
    \            // Check if every digit is odd\n            boolean everyOdd = true;\n\
    \            for (int j = 0; j < digits.size(); j++) {\n                if (digits.get(j)\
    \ % 2 == 0) {\n                    everyOdd = false;\n                    break;\n\
    \                }\n            }\n            // If every digit is odd, add it\
    \ to the result\n            if (everyOdd) {\n                result.add(num);\n\
    \            }\n        }\n        // Sort the result\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp3nhk2b5g.java:25: error: cannot find symbol\n            ArrayList<Integer>\
    \ digits = getDigits(num);\n                                        ^\n  symbol:\
    \   method getDigits(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (check(x.get(i))) {\n     \
    \           res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg15md3o3.java:20: error: cannot find symbol\n            if (check(x.get(i)))\
    \ {\n                ^\n  symbol:   method check(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // using only integer arithmetic:\n        // return x.stream().filter(i\
    \ -> {\n        //     while (i > 0) {\n        //         if ((i % 10) % 2 ==\
    \ 0) return false;\n        //         i /= 10;\n        //     }\n        //\
    \     return true;\n        // }).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        // \n        // using Java's string operations:\n        return x.stream().filter(i\
    \ -> \n            Integer.toString(i).chars().allMatch(j -> j % 2 != 0))\n  \
    \      .sorted().collect(Collectors.toCollection(ArrayList::new));\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int number = x.get(i);\n\
    \            int temp = number;\n            boolean flag = true;\n          \
    \  while (temp > 0) {\n                int digit = temp % 10;\n              \
    \  if (digit % 2 == 0) {\n                    flag = false;\n                \
    \    break;\n                }\n                temp /= 10;\n            }\n \
    \           if (flag) {\n                result.add(number);\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            boolean flag = true;\n       \
    \     int num = x.get(i);\n            while (num > 0) {\n                int\
    \ rem = num % 10;\n                if (rem % 2 == 0) {\n                    flag\
    \ = false;\n                    break;\n                }\n                num\
    \ /= 10;\n            }\n            if (flag) ans.add(x.get(i));\n        }\n\
    \        Collections.sort(ans);\n        return ans;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            String s = String.valueOf(i);\n            char[]\
    \ ch = s.toCharArray();\n            boolean hasEven = false;\n            for\
    \ (char c : ch) {\n                if (c % 2 == 0) {\n                    hasEven\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!hasEven) {\n                res.add(i);\n            }\n       \
    \ }\n        Collections.sort(res);\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int element : x) {\n            if (!hasEvenDigit(element)) {\n      \
    \          result.add(element);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfwyendtq.java:20: error: cannot find symbol\n            if (!hasEvenDigit(element))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n            .filter(i -> Integer.toString(i).chars().allMatch(c\
    \ -> (c-'0')%2 == 1))\n            .sorted()\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n            .filter(num -> !String.valueOf(num).matches(\"\
    .*[02468]+.*\"))\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4u96u8zh.java:23)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n                .filter(Problem::isUniqueDigits)\n\
    \                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvillzs1i.java:19: error: invalid method reference\n           \
    \     .filter(Problem::isUniqueDigits)\n                        ^\n  cannot find\
    \ symbol\n    symbol:   method isUniqueDigits(T)\n    location: class Problem\n\
    \  where T is a type-variable:\n    T extends Object declared in interface Stream\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int y = x.get(i);\n          \
    \  boolean is_unique = true;\n            while (y > 0) {\n                int\
    \ digit = y % 10;\n                if (digit % 2 == 0) {\n                   \
    \ is_unique = false;\n                    break;\n                }\n        \
    \        y /= 10;\n            }\n            if (is_unique) {\n             \
    \   ans.add(x.get(i));\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer>  y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (x.get(i) % 2 == 1) {\n   \
    \             y.add(x.get(i));\n            }\n        }\n        return y;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmim2d16t.java:27)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmofgc4vg.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            String val = String.valueOf(i);\n            if (val.length()\
    \ == 1) {\n                res.add(i);\n            } else {\n               \
    \ boolean flag = true;\n                for (int j = 0; j < val.length(); j++)\
    \ {\n                    if (val.charAt(j) % 2 == 0) {\n                     \
    \   flag = false;\n                        break;\n                    }\n   \
    \             }\n                if (flag) {\n                    res.add(i);\n\
    \                }\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int counter = 0;\n      \
    \      int y = x.get(i);\n            while (y != 0) {\n                int k\
    \ = y % 10;\n                if (k % 2 == 0) {\n                    counter++;\n\
    \                }\n                y = y / 10;\n            }\n            if\
    \ (counter == 0) {\n                output.add(x.get(i));\n            }\n   \
    \     }\n        Collections.sort(output);\n        return output;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            boolean flag = true;\n            while (i >\
    \ 0) {\n                if (i % 2 == 0) {\n                    flag = false;\n\
    \                    break;\n                }\n                i /= 10;\n   \
    \         }\n            if (flag) {\n                result.add(i);\n       \
    \     }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptaap7cdk.java:36)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> odd_only = new ArrayList<Integer>();\n    \
    \    ArrayList<Integer> no_evens = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n            while\
    \ (num > 0) {\n                int digit = num % 10;\n                if (digit\
    \ % 2 == 0) {\n                    odd_only.add(x.get(i));\n                 \
    \   break;\n                }\n                num /= 10;\n            }\n   \
    \     }\n        for (int i = 0; i < x.size(); i++) {\n            if (!odd_only.contains(x.get(i)))\
    \ {\n                no_evens.add(x.get(i));\n            }\n        }\n     \
    \   Collections.sort(no_evens);\n        return no_evens;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code goes here.\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpmhb5i1v3.java:22)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO: Complete this method\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jwkk48p.java:22)\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        if\
    \ (x == null) return res;\n        for (int i = 0; i < x.size(); i++) {\n    \
    \        int num = x.get(i);\n            if (isUniqueDigits(num)) res.add(num);\n\
    \        }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppydm1dld.java:22: error: cannot find symbol\n            if (isUniqueDigits(num))\
    \ res.add(num);\n                ^\n  symbol:   method isUniqueDigits(int)\n \
    \ location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> unique = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            boolean is_valid = true;\n            String\
    \ s = Integer.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n\
    \                char c = s.charAt(j);\n                if (c == '0' || c == '2'\
    \ || c == '4' || c == '6' || c == '8') {\n                    is_valid = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (is_valid) {\n                unique.add(i);\n            }\n        }\n   \
    \     return unique;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmzzoczys.java:36)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                ret.add(x.get(i));\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb0zyclcx.java:20: error: cannot find symbol\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i=0; i<x.size(); i++) {\n            boolean isOdd = true;\n          \
    \  int num = x.get(i);\n            while (num>0) {\n                int mod =\
    \ num%10;\n                if (mod%2==0) {\n                    isOdd = false;\n\
    \                    break;\n                }\n                num = num/10;\n\
    \            }\n            if (isOdd) res.add(x.get(i));\n        }\n       \
    \ Collections.sort(res);\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // use a list comprehension\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < x.size(); i++) {\n\
    \            if (isUnique(x.get(i))) {\n                result.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpt4781ale.java:21: error: cannot find symbol\n            if (isUnique(x.get(i)))\
    \ {\n                ^\n  symbol:   method isUnique(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010813
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> z = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            int num = i;\n            while (num > 0) {\n   \
    \             int d = num % 10;\n                if (d % 2 == 0) {\n         \
    \           break;\n                }\n                num /= 10;\n          \
    \  }\n            if (num == 0) {\n                z.add(i);\n            }\n\
    \        }\n        return z;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpms19r8yy.java:35)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n                .filter(Problem::isUniqueDigits)\n\
    \                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvillzs1i.java:19: error: invalid method reference\n           \
    \     .filter(Problem::isUniqueDigits)\n                        ^\n  cannot find\
    \ symbol\n    symbol:   method isUniqueDigits(T)\n    location: class Problem\n\
    \  where T is a type-variable:\n    T extends Object declared in interface Stream\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010812
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i=0; i<x.size(); i++) {\n            String y = String.valueOf(x.get(i));\n\
    \            boolean flag = true;\n            for (int j=0; j<y.length(); j++)\
    \ {\n                if (y.charAt(j) == '0' || y.charAt(j) == '2' || y.charAt(j)\
    \ == '4' || y.charAt(j) == '6' || y.charAt(j) == '8') {\n                    flag\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (flag) res.add(x.get(i));\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int x_i : x) {\n            String s = String.valueOf(x_i);\n            boolean\
    \ check = true;\n            for (int j = 0; j < s.length(); j++) {\n        \
    \        char ch = s.charAt(j);\n                int ascii = (int) ch;\n     \
    \           if (ascii % 2 == 0) {\n                    check = false;\n      \
    \              break;\n                }\n            }\n            if (check)\
    \ {\n                y.add(x_i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code here!\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmplha35ulz.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // YOUR CODE HERE\n        ArrayList<Integer> odd = new ArrayList<Integer>();\n\
    \        x.forEach(n -> {\n            if (String.valueOf(n).chars().filter(c\
    \ -> Character.getNumericValue(c) % 2 == 0).count() == 0)\n                odd.add(n);\n\
    \        });\n        Collections.sort(odd);\n        return odd;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            if (Integer.toString(i).chars().allMatch(c ->\
    \ c % 2 != 0)) {\n                result.add(i);\n            }\n        }\n \
    \       Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            int[] a = new int[10];\n            int n = i;\n\
    \            boolean flag = true;\n            while (n > 0) {\n             \
    \   int y = n % 10;\n                if (y % 2 == 0) {\n                    flag\
    \ = false;\n                    break;\n                }\n                n /=\
    \ 10;\n            }\n            if (flag) ans.add(i);\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            int found = 0;\n            while (i > 0) {\n   \
    \             int x1 = i % 10;\n                if (x1 % 2 == 0) {\n         \
    \           found = 1;\n                    break;\n                }\n      \
    \          i = i / 10;\n            }\n            if (found == 0) {\n       \
    \         y.add(i);\n            }\n        }\n        Collections.sort(y);\n\
    \        return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2inb5zk5.java:37)\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            String str = String.valueOf(i);\n            boolean\
    \ add = true;\n            for (int j = 0; j < str.length(); j++) {\n        \
    \        if (str.charAt(j) % 2 == 0) {\n                    add = false;\n   \
    \                 break;\n                }\n            }\n            if (add)\
    \ {\n                ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here.\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp2jrlfh0d.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n     \
    \       int m = n;\n            while (m > 0) {\n                int digit = m\
    \ % 10;\n                if (digit % 2 == 0) {\n                    break;\n \
    \               }\n                m /= 10;\n            }\n            if (m\
    \ == 0) {\n                result.add(n);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            boolean found = false;\n\
    \            int n = x.get(i);\n            if (n == 0) continue;\n          \
    \  while (n > 0) {\n                int d = n % 10;\n                if (d % 2\
    \ == 0) {\n                    found = true;\n                    break;\n   \
    \             }\n                n /= 10;\n            }\n            if (!found)\
    \ result.add(x.get(i));\n        }\n        Collections.sort(result);\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // TODO: implement this method.\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < x.size(); i++) {\n\
    \            int temp = x.get(i);\n            boolean add = true;\n         \
    \   while (temp != 0) {\n                int t = temp % 10;\n                if\
    \ (t % 2 == 0) {\n                    add = false;\n                    break;\n\
    \                }\n                temp /= 10;\n            }\n            if\
    \ (add) {\n                result.add(x.get(i));\n            }\n        }\n \
    \       Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> unique = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            if (hasOddDigits(x.get(i)))\
    \ {\n                unique.add(x.get(i));\n            }\n        }\n       \
    \ return unique;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl2ffq16h.java:20: error: cannot find symbol\n            if (hasOddDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasOddDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i=0; i<x.size(); i++) {\n            boolean isUnique = true;\n       \
    \     int num = x.get(i);\n            while (num > 0) {\n                int\
    \ digit = num % 10;\n                if (digit % 2 == 0) {\n                 \
    \   isUnique = false;\n                    break;\n                }\n       \
    \         num /= 10;\n            }\n            if (isUnique) {\n           \
    \     ans.add(x.get(i));\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n                .filter(Problem::hasNoEvenDigits)\n\
    \                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_7ijv2z2.java:19: error: invalid method reference\n           \
    \     .filter(Problem::hasNoEvenDigits)\n                        ^\n  cannot find\
    \ symbol\n    symbol:   method hasNoEvenDigits(T)\n    location: class Problem\n\
    \  where T is a type-variable:\n    T extends Object declared in interface Stream\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int z : x) {\n            if (hasUniqueDigits(z)) {\n                y.add(z);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwmu77rfc.java:20: error: cannot find symbol\n            if (hasUniqueDigits(z))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmofgc4vg.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n                .filter(i -> i.toString().chars().allMatch(j\
    \ -> j % 2 != 0))\n                .sorted()\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            boolean hasEvenDigit = false;\n            for\
    \ (char c : Integer.toString(i).toCharArray()) {\n                if (c == '0'\
    \ || c == '2' || c == '4' || c == '6' || c == '8') {\n                    hasEvenDigit\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (!hasEvenDigit) {\n                result.add(i);\n            }\n\
    \        }\n        Collections.sort(result);\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010814
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            String s = String.valueOf(x.get(i));\n\
    \            boolean hasEven = false;\n            for (int j = 0; j < s.length();\
    \ j++) {\n                int d = Character.getNumericValue(s.charAt(j));\n  \
    \              if (d % 2 == 0) {\n                    hasEven = true;\n      \
    \              break;\n                }\n            }\n            if (!hasEven)\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm44a2ocs.java:36)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  // Your code here\n        int n = x.size();\n        for(int i = 0; i < n;\
    \ i++) {\n            int num = x.get(i);\n            int rem = 0;\n        \
    \    boolean even = false;\n            while(num > 0) {\n                rem\
    \ = num % 10;\n                if(rem % 2 == 0) {\n                    even =\
    \ true;\n                    break;\n                }\n                num =\
    \ num / 10;\n            }\n            if(!even) {\n                result.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // YOUR CODE HERE\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgg5qykr6.java:22)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (hasUniqueDigits(x.get(i)))\
    \ {\n                res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl7dqi2pe.java:20: error: cannot find symbol\n            if (hasUniqueDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (x.get(i) % 2 == 0) {\n   \
    \             a.add(x.get(i));\n            }\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6yn99kkg.java:27)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6p0ifkiz.java:21)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmofgc4vg.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int n : x) {\n            boolean unique = true;\n            int i = n;\n\
    \            while (i > 0) {\n                int r = i % 10;\n              \
    \  if (r % 2 == 0) {\n                    unique = false;\n                  \
    \  break;\n                }\n                i /= 10;\n            }\n      \
    \      if (unique)\n                y.add(n);\n        }\n        Collections.sort(y);\n\
    \        return y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n      \
    \  boolean all_odd = true;\n        for (int i = 0; i < x.size(); i++) {\n   \
    \         int x_value = x.get(i);\n            all_odd = true;\n            while\
    \ (x_value > 0) {\n                int digit = x_value % 10;\n               \
    \ if (digit % 2 == 0) {\n                    all_odd = false;\n              \
    \      break;\n                }\n                x_value /= 10;\n           \
    \ }\n            if (all_odd) {\n                output.add(x.get(i));\n     \
    \       }\n        }\n        Collections.sort(output);\n        return output;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            String str = String.valueOf(x.get(i));\n\
    \            if (str.contains(\"2\") || str.contains(\"4\") || str.contains(\"\
    6\") ||\n                str.contains(\"8\") || str.contains(\"0\")) {\n     \
    \           continue;\n            }\n            res.add(x.get(i));\n       \
    \ }\n        Collections.sort(res);\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n        boolean\
    \ isEven = false;\n        for (int i = 0; i < x.size(); i++) {\n            int\
    \ val = x.get(i);\n            if (val == 0) {\n                arr.add(val);\n\
    \                continue;\n            }\n            while (val > 0) {\n   \
    \             int rem = val % 10;\n                if (rem % 2 == 0) {\n     \
    \               isEven = true;\n                    break;\n                }\n\
    \                val = val / 10;\n            }\n            if (!isEven) {\n\
    \                arr.add(x.get(i));\n            }\n            isEven = false;\n\
    \        }\n        Collections.sort(arr);\n        return arr;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> unique = new ArrayList<Integer>();\n      \
    \  //boolean containsEven = false;\n        for (int i = 0; i < x.size(); i++)\
    \ {\n            //containsEven = false;\n            String str = Integer.toString(x.get(i));\n\
    \            for (int j = 0; j < str.length(); j++) {\n                if ((str.charAt(j)\
    \ - '0') % 2 == 0) {\n                    //containsEven = true;\n           \
    \         break;\n                }\n            }\n            //if (!containsEven)\
    \ {\n                unique.add(x.get(i));\n            //}\n        }\n     \
    \   return unique;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp19ml9hns.java:36)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n          \
    \  boolean ok = true;\n            while (n > 0) {\n                int d = n\
    \ % 10;\n                if (d % 2 == 0) {\n                    ok = false;\n\
    \                    break;\n                }\n                n /= 10;\n   \
    \         }\n            if (ok) {\n                ans.add(x.get(i));\n     \
    \       }\n        }\n        Collections.sort(ans);\n        return ans;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i=0; i<x.size(); i++) {\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx952_wi1.java:20: error: cannot find symbol\n            if (isUniqueDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Implement me!\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n\
    \            if (num < 10) {\n                list.add(num);\n            } else\
    \ {\n                while (num > 0) {\n                    int digit = num %\
    \ 10;\n                    if (digit % 2 == 0) {\n                        break;\n\
    \                    }\n                    num /= 10;\n                    if\
    \ (num == 0) {\n                        list.add(x.get(i));\n                \
    \    }\n                }\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            String str = Integer.toString(x.get(i));\n\
    \            if (str.contains(\"2\") || str.contains(\"4\") || str.contains(\"\
    6\") || str.contains(\"8\") || str.contains(\"0\")) {\n                continue;\n\
    \            }\n            res.add(x.get(i));\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code here!\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4csleqip.java:22)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n                .filter(xx -> (xx.toString().chars().filter(y\
    \ -> (y % 2 == 0)).count() == 0))\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnx2pxpfp.java:23)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> out = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n\
    \            }\n            out.add(i);\n        }\n        Collections.sort(out);\n\
    \        return out;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpht28dp0o.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  ArrayList<Integer> alreadyExists = new ArrayList<Integer>();\n        boolean\
    \ flag;\n        int currentElement;\n        for (int i = 0; i < x.size(); i++)\
    \ {\n            flag = true;\n            currentElement = x.get(i);\n      \
    \      if (alreadyExists.contains(currentElement)) {\n                continue;\n\
    \            }\n            for (int j = 0; j < result.size(); j++) {\n      \
    \          if (result.get(j) == currentElement) {\n                    flag =\
    \ false;\n                    break;\n                }\n            }\n     \
    \       if (flag) {\n                if (hasEvenDigit(currentElement)) {\n   \
    \                 continue;\n                }\n                result.add(currentElement);\n\
    \                alreadyExists.add(currentElement);\n            }\n        }\n\
    \        Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpltjlpkks.java:35: error: cannot find symbol\n                if\
    \ (hasEvenDigit(currentElement)) {\n                    ^\n  symbol:   method\
    \ hasEvenDigit(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Fill in your code here.\n        ArrayList<Integer> result\
    \ = new ArrayList<Integer>();\n        for (int number : x) {\n            if\
    \ (String.valueOf(number).chars().mapToObj(i -> (char) i).filter(c -> c != '0'\
    \ && c != '1' && c != '2' && c != '3' && c != '4' && c != '5' && c != '6' && c\
    \ != '7' && c != '8' && c != '9').count() == 0) {\n                result.add(number);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd1ojnhdp.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (isUniqueDigits(i)) {\n                y.add(i);\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfwrg751o.java:20: error: cannot find symbol\n            if (isUniqueDigits(i))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code goes here\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int n : x) {\n            if (digitNot2or4or6or8(n)) {\n       \
    \         ret.add(n);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqia1zwm6.java:21: error: cannot find symbol\n            if (digitNot2or4or6or8(n))\
    \ {\n                ^\n  symbol:   method digitNot2or4or6or8(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n          \
    \  int temp = n;\n            boolean flag = true;\n            while (temp >\
    \ 0) {\n                int lastDigit = temp % 10;\n                if (lastDigit\
    \ % 2 == 0) {\n                    flag = false;\n                    break;\n\
    \                }\n                temp /= 10;\n            }\n            if\
    \ (flag) {\n                res.add(n);\n            }\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nzt2l7h.java:38)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n\t\treturn x.stream().filter(num -> num.toString().chars().noneMatch(c\
    \ -> c % 2 == 0)).collect(Collectors.toCollection(ArrayList::new));\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqk2pln9o.java:21)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Fill in this method\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy13y8g1v.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code here.\n\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpgz62o1mf.java:23)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int e = x.get(i);\n          \
    \  while (e > 0) {\n                int d = e % 10;\n                if (d % 2\
    \ == 0) {\n                    break;\n                }\n                e /=\
    \ 10;\n            }\n            if (e == 0) {\n                r.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(r);\n        return r;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            String str = String.valueOf(x.get(i));\n\
    \            boolean flag = true;\n            for (int j = 0; j < str.length();\
    \ j++) {\n                if (Integer.parseInt(String.valueOf(str.charAt(j)))\
    \ % 2 == 0) {\n                    flag = false;\n                    break;\n\
    \                }\n            }\n            if (flag)\n                y.add(x.get(i));\n\
    \        }\n        return y;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ep2i2l7.java:34)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int n : x) {\n            int tmp = n;\n            boolean isAllOdd\
    \ = true;\n            while (tmp > 0) {\n                int digit = tmp % 10;\n\
    \                if (digit % 2 == 0) {\n                    isAllOdd = false;\n\
    \                    break;\n                }\n                tmp /= 10;\n \
    \           }\n            if (isAllOdd) {\n                res.add(n);\n    \
    \        }\n        }\n        Collections.sort(res);\n        return res;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n   \
    \         int prev = 0;\n            boolean unique = true;\n            while\
    \ (num > 0) {\n                int digit = num % 10;\n                if (digit\
    \ == prev) {\n                    unique = false;\n                    break;\n\
    \                }\n                prev = digit;\n                num /= 10;\n\
    \            }\n            if (unique) {\n                result.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_90f1ipc.java:40)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6p0ifkiz.java:21)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (i == 0) {\n                continue;\n      \
    \      }\n            if (i % 10 % 2 == 0) {\n                continue;\n    \
    \        }\n            boolean check = true;\n            while (i > 0) {\n \
    \               if (i % 10 % 2 == 0) {\n                    check = false;\n \
    \                   break;\n                }\n                i /= 10;\n    \
    \        }\n            if (check) {\n                y.add(i);\n            }\n\
    \        }\n        Collections.sort(y);\n        return y;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn9sabcao.java:42)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // change here:\n        return null;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpqk32kzu4.java:22)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> x2 = new ArrayList<Integer>();\n        //\
    \ Your code here.\n        for (int i : x) {\n            String s = String.valueOf(i);\n\
    \            if (s.contains(\"2\") || s.contains(\"4\") || s.contains(\"6\") ||\
    \ s.contains(\"8\") || s.contains(\"0\")) {\n                continue;\n     \
    \       }\n            x2.add(i);\n        }\n        return x2;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmnz1eyek.java:30)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int q = x.get(i);\n          \
    \  boolean is_unique = true;\n            while (q > 0) {\n                int\
    \ r = q % 10;\n                if (r % 2 == 0) {\n                    is_unique\
    \ = false;\n                    break;\n                }\n                q =\
    \ q / 10;\n            }\n            if (is_unique) {\n                y.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            String s = String.valueOf(i);\n            boolean\
    \ hasEven = false;\n            for (int j = 0; j < s.length(); j++) {\n     \
    \           if (s.charAt(j) % 2 == 0) {\n                    hasEven = true;\n\
    \                    break;\n                }\n            }\n            if\
    \ (!hasEven) {\n                result.add(i);\n            }\n        }\n   \
    \     Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> oddDigits = new ArrayList<Integer>();\n   \
    \     for (int num : x) {\n            boolean isOdd = true;\n            int\
    \ temp = num;\n            while (temp > 0) {\n                int digit = temp\
    \ % 10;\n                if (digit % 2 == 0) {\n                    isOdd = false;\n\
    \                    break;\n                }\n                temp /= 10;\n\
    \            }\n            if (isOdd) {\n                oddDigits.add(num);\n\
    \            }\n        }\n        Collections.sort(oddDigits);\n        return\
    \ oddDigits;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int n : x) {\n            String s = Integer.toString(n);\n            boolean\
    \ has_even = false;\n            for (int i = 0; i < s.length(); i++) {\n    \
    \            int d = Character.getNumericValue(s.charAt(i));\n               \
    \ if (d % 2 == 0) {\n                    has_even = true;\n                  \
    \  break;\n                }\n            }\n            if (!has_even) {\n  \
    \              ans.add(n);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6p0ifkiz.java:21)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // your code here...\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpialzxbff.java:19: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  x.stream().filter(num -> {\n            if (num % 2 == 0) {\n             \
    \   return false;\n            }\n            while (num != 0) {\n           \
    \     if ((num % 10) % 2 == 0) {\n                    return false;\n        \
    \        }\n                num /= 10;\n            }\n            return true;\n\
    \        }).forEach(num -> result.add(num));\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code here.\n        ArrayList<Integer> answer = new ArrayList<Integer>();\n\
    \        StringBuilder sb = new StringBuilder();\n        String num;\n      \
    \  for (int i : x) {\n            sb.setLength(0);\n            sb.append(i);\n\
    \            num = sb.toString();\n            boolean isEven = false;\n     \
    \       for (int j = 0; j < num.length(); j++) {\n                if (num.charAt(j)\
    \ == '0' || num.charAt(j) == '2' || num.charAt(j) == '4' || num.charAt(j) == '6'\
    \ || num.charAt(j) == '8') {\n                    isEven = true;\n           \
    \         break;\n                }\n            }\n            if (!isEven) {\n\
    \                answer.add(i);\n            }\n        }\n        Collections.sort(answer);\n\
    \        return answer;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your code goes here.\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc006l6p0.java:22)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            boolean flag = true;\n  \
    \          int temp = x.get(i);\n            while (temp > 0) {\n            \
    \    int digit = temp % 10;\n                if (digit % 2 == 0) {\n         \
    \           flag = false;\n                    break;\n                }\n   \
    \             temp /= 10;\n            }\n            if (flag) {\n          \
    \      result.add(x.get(i));\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int value = x.get(i);\n \
    \           if (check_digit(value)) {\n                result.add(value);\n  \
    \          }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf2s0n7_3.java:21: error: cannot find symbol\n            if (check_digit(value))\
    \ {\n                ^\n  symbol:   method check_digit(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            if (hasNoEvenDigit(x.get(i)))\
    \ {\n                result.add(x.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyef4dp98.java:20: error: cannot find symbol\n            if (hasNoEvenDigit(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasNoEvenDigit(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010811
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int num : x) {\n            boolean unique = true;\n            for (int i\
    \ = 0; i < String.valueOf(num).length(); i++) {\n                if (String.valueOf(num).charAt(i)\
    \ % 2 == 0) {\n                    unique = false;\n                    break;\n\
    \                }\n            }\n            if (unique) res.add(num);\n   \
    \     }\n        Collections.sort(res);\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // your code here\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo3z5ji7e.java:22)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            boolean b = has_even_digit(x.get(i));\n\
    \            if (!b) {\n                ans.add(x.get(i));\n            }\n  \
    \      }\n        Collections.sort(ans);\n        return ans;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdg1ir8ur.java:20: error: cannot find symbol\n            boolean\
    \ b = has_even_digit(x.get(i));\n                        ^\n  symbol:   method\
    \ has_even_digit(Integer)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int n : x) {\n            if (hasEvenDigit(n)) continue;\n            ans.add(n);\n\
    \        }\n        Collections.sort(ans);\n        return ans;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkgujabyz.java:20: error: cannot find symbol\n            if (hasEvenDigit(n))\
    \ continue;\n                ^\n  symbol:   method hasEvenDigit(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (x.get(i) < 10) {\n       \
    \         list.add(x.get(i));\n            } else if (x.get(i) >= 10 && x.get(i)\
    \ < 100) {\n                if (x.get(i) % 2 != 0) {\n                    list.add(x.get(i));\n\
    \                }\n            } else if (x.get(i) >= 100 && x.get(i) < 1000)\
    \ {\n                if (x.get(i) % 2 != 0 && x.get(i) % 10 != 0) {\n        \
    \            list.add(x.get(i));\n                }\n            } else if (x.get(i)\
    \ >= 1000 && x.get(i) < 10000) {\n                if (x.get(i) % 2 != 0 && x.get(i)\
    \ % 10 != 0 && x.get(i) % 100 != 0) {\n                    list.add(x.get(i));\n\
    \                }\n            } else if (x.get(i) >= 10000 && x.get(i) < 100000)\
    \ {\n                if (x.get(i) % 2 != 0 && x.get(i) % 10 != 0 && x.get(i) %\
    \ 100 != 0 && x.get(i) % 1000 != 0) {\n                    list.add(x.get(i));\n\
    \                }\n            } else if (x.get(i) >= 100000 && x.get(i) < 1000000)\
    \ {\n                if (x.get(i) % 2 != 0 && x.get(i) % 10 != 0 && x.get(i) %\
    \ 100 != 0 && x.get(i) % 1000 != 0 && x.get(i) % 10000 != 0) {\n             \
    \       list.add(x.get(i));\n                }\n            } else if (x.get(i)\
    \ >= 1000000 && x.get(i) < 10000000) {\n                if (x.get(i) % 2 != 0\
    \ && x.get(i) % 10 != 0 && x.get(i)\n}\n    public static void main(String[] args)\
    \ {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpys7yvauc.java:43: error: ')' expected\n                if (x.get(i)\
    \ % 2 != 0 && x.get(i) % 10 != 0 && x.get(i)\n                               \
    \                                        ^\n/tmp/tmpys7yvauc.java:44: error: illegal\
    \ start of statement\n}\n^\n/tmp/tmpys7yvauc.java:45: error: illegal start of\
    \ expression\n    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            // Check if the number has\
    \ even digit\n            boolean is_odd = true;\n            int number = x.get(i);\n\
    \            while (number > 0) {\n                int digit = number % 10;\n\
    \                if (digit % 2 == 0) {\n                    is_odd = false;\n\
    \                    break;\n                }\n                number /= 10;\n\
    \            }\n            if (is_odd) {\n                result.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // <Write your code here>\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpbmoznk35.java:22)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n   \
    \         if (num < 0) {\n                throw new IllegalArgumentException(\"\
    Inputs must be positive integers\");\n            }\n            if (num >= 0\
    \ && num < 10) {\n                result.add(num);\n            } else {\n   \
    \             while (num > 0) {\n                    int digit = num % 10;\n \
    \                   if (digit % 2 == 0) {\n                        break;\n  \
    \                  }\n                    num /= 10;\n                    if (num\
    \ == 0) {\n                        result.add(x.get(i));\n                   \
    \ }\n                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            int y = i;\n            boolean found = false;\n\
    \            while (y > 0) {\n                int digit = y % 10;\n          \
    \      if (digit % 2 == 0) {\n                    found = true;\n            \
    \        break;\n                }\n                y /= 10;\n            }\n\
    \            if (!found) {\n                res.add(i);\n            }\n     \
    \   }\n        Collections.sort(res);\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ z = new ArrayList<Integer>();\n        int k = 0;\n        int count = 0;\n\
    \        while (k < x.size()) {\n            if (x.get(k) < 10) {\n          \
    \      z.add(x.get(k));\n            } else {\n                for (int i = 1;\
    \ i < 10; i += 2) {\n                    if (x.get(k).toString().contains(Integer.toString(i)))\
    \ {\n                        count += 1;\n                    }\n            \
    \    }\n                if (count == 0) {\n                    z.add(x.get(k));\n\
    \                }\n                count = 0;\n            }\n            k +=\
    \ 1;\n        }\n        y = z;\n        Collections.sort(y);\n        return\
    \ y;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8zwrenx0.java:43)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (hasEvenDigit(i)) {\n                continue;\n\
    \            }\n            ans.add(i);\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdhihi3ht.java:20: error: cannot find symbol\n            if (hasEvenDigit(i))\
    \ {\n                ^\n  symbol:   method hasEvenDigit(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // STUDENT-TODO\n        ArrayList<Integer> ud = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            boolean hasEven = false;\n\
    \            int n = x.get(i);\n            do {\n                int mod = n\
    \ % 10;\n                if (mod % 2 == 0) {\n                    hasEven = true;\n\
    \                    break;\n                }\n                n = n / 10;\n\
    \            } while (n > 0);\n            if (!hasEven) {\n                ud.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(ud);\n        return ud;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (isOdd(x.get(i))) {\n     \
    \           ans.add(x.get(i));\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf35yh4gm.java:20: error: cannot find symbol\n            if (isOdd(x.get(i)))\
    \ {\n                ^\n  symbol:   method isOdd(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for\
    \ (int num : x) {\n            if (uniqueDigitsHelper(num)) {\n              \
    \  list.add(num);\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7_961mb.java:20: error: cannot find symbol\n            if (uniqueDigitsHelper(num))\
    \ {\n                ^\n  symbol:   method uniqueDigitsHelper(int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            if (!hasEvenDigit(x.get(i))) {\n\
    \                res.add(x.get(i));\n            }\n        }\n        res.sort(Comparator.naturalOrder());\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxr5yeftb.java:20: error: cannot find symbol\n            if (!hasEvenDigit(x.get(i)))\
    \ {\n                 ^\n  symbol:   method hasEvenDigit(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n      \
    \  // YOUR CODE GOES HERE\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqb1nykyg.java:23)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int i=0; i<x.size(); i++) {\n            int y = x.get(i);\n            while\
    \ (y > 0) {\n                int t = y % 10;\n                if (t % 2 == 0)\
    \ break;\n                y /= 10;\n            }\n            if (y == 0) res.add(x.get(i));\n\
    \        }\n        Collections.sort(res);\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n     \
    \       if (isUniqueDigits(n)) {\n                result.add(n);\n           \
    \ }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplysnm3qd.java:21: error: cannot find symbol\n            if (isUniqueDigits(n))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        for\
    \ (int i=0; i<x.size(); i++) {\n            String s = String.valueOf(x.get(i));\n\
    \            boolean hasEven = false;\n            for (int j=0; j<s.length();\
    \ j++) {\n                char c = s.charAt(j);\n                if (Character.getNumericValue(c)\
    \ % 2 == 0) {\n                    hasEven = true;\n                    break;\n\
    \                }\n            }\n            if (!hasEven) {\n             \
    \   a.add(x.get(i));\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        /*\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        x.forEach(number -> {\n            String numberString = number.toString();\n\
    \            ArrayList<Integer> digits = new ArrayList<Integer>();\n         \
    \   for (char digit : numberString.toCharArray()) {\n                digits.add(Character.getNumericValue(digit));\n\
    \            }\n            boolean isDigitUnique = true;\n            for (int\
    \ digit : digits) {\n                if (digit % 2 == 0) {\n                 \
    \   isDigitUnique = false;\n                    break;\n                }\n  \
    \          }\n            if (isDigitUnique) {\n                result.add(number);\n\
    \            }\n        });\n        Collections.sort(result);\n        return\
    \ result;\n        */\n        return x.stream()\n                .map(number\
    \ -> {\n                    String numberString = number.toString();\n       \
    \             ArrayList<Integer> digits = new ArrayList<Integer>();\n        \
    \            for (char digit : numberString.toCharArray()) {\n               \
    \         digits.add(Character.getNumericValue(digit));\n                    }\n\
    \                    boolean isDigitUnique = true;\n                    for (int\
    \ digit : digits) {\n                        if (digit % 2 == 0) {\n         \
    \                   isDigitUnique = false;\n                            break;\n\
    \                        }\n                    }\n                    if (isDigitUnique)\
    \ {\n                        return Optional.of(number);\n                   \
    \ } else {\n                        return Optional.empty();\n               \
    \     }\n                })\n                .filter(optional -> optional.isPresent())\n\
    \                .map(optional -> optional.get())\n                .sorted()\n\
    \                .collect(Collectors.toCollection(ArrayList::new));\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp6yi46fan.java:63: error: incompatible types: inference variable\
    \ E has incompatible bounds\n                .collect(Collectors.toCollection(ArrayList::new));\n\
    \                        ^\n    equality constraints: Integer,T\n    lower bounds:\
    \ CAP#1\n  where E,T,C are type-variables:\n    E extends Object declared in class\
    \ ArrayList\n    T extends Object declared in method <T,C>toCollection(Supplier<C>)\n\
    \    C extends Collection<T> declared in method <T,C>toCollection(Supplier<C>)\n\
    \  where CAP#1 is a fresh type-variable:\n    CAP#1 extends Object from capture\
    \ of ? extends Object\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n        \
    \    boolean isEven = false;\n            while (num > 0) {\n                int\
    \ dig = num % 10;\n                if (dig % 2 == 0) {\n                    isEven\
    \ = true;\n                    break;\n                }\n                num\
    \ /= 10;\n            }\n            if (!isEven) {\n                y.add(x.get(i));\n\
    \            }\n        }\n        Collections.sort(y);\n        return y;\n}\n\
    \    public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            String num = Integer.toString(x.get(i));\n\
    \            boolean flag = true;\n            for (int j = 0; j < num.length();\
    \ j++) {\n                if (num.charAt(j) % 2 == 0) {\n                    flag\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (flag) {\n                ans.add(x.get(i));\n            }\n   \
    \     }\n        Collections.sort(ans);\n        return ans;\n}\n    public static\
    \ void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n      \
    \  for (int i : x) {\n            if (!Integer.toString(i).matches(\".*\\\\d*[02468]\\\
    \\d*\")) {\n                result.add(i);\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> solution = new ArrayList<Integer>();\n    \
    \    // Iterate over all elements of x and add them to solution if they have\n\
    \        // unique digits.\n        for (int i = 0; i < x.size(); i++) {\n   \
    \         if (hasUniqueDigits(x.get(i))) {\n                solution.add(x.get(i));\n\
    \            }\n        }\n        // Sort the result.\n        Collections.sort(solution);\n\
    \        return solution;\n}\n    public static void main(String[] args) {\n \
    \   assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjvkwzr3n.java:22: error: cannot find symbol\n            if (hasUniqueDigits(x.get(i)))\
    \ {\n                ^\n  symbol:   method hasUniqueDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Input: List[Int]\n        // Output: List[Int]\n        ArrayList<Integer>\
    \ y = new ArrayList<Integer>();\n        for (int i = 0; i < x.size(); i++){\n\
    \            int n = x.get(i);\n            String s = String.valueOf(n);\n  \
    \          if (!s.contains(\"2\") && !s.contains(\"4\") && !s.contains(\"6\")\
    \ && !s.contains(\"8\")){\n                y.add(n);\n            }\n        }\n\
    \        Collections.sort(y);\n        return y;\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp99rhnusw.java:33)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for\
    \ (int num : x) {\n            if (isUniqueDigits(num)) {\n                res.add(num);\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi0h8rude.java:20: error: cannot find symbol\n            if (isUniqueDigits(num))\
    \ {\n                ^\n  symbol:   method isUniqueDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for\
    \ (int i : x) {\n            if (i < 10) {\n                ret.add(i);\n    \
    \        } else {\n                int tmp = i;\n                boolean is_sorted\
    \ = true;\n                while (tmp > 0) {\n                    int last = tmp\
    \ % 10;\n                    if (last % 2 == 0) {\n                        is_sorted\
    \ = false;\n                        break;\n                    }\n          \
    \          tmp /= 10;\n                }\n                if (is_sorted) {\n \
    \                   ret.add(i);\n                }\n            }\n        }\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu5pjbkqr.java:41)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return null;\n}\n    public static void main(String[] args) {\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15, (int)33,\
    \ (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1, (int)15,\
    \ (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpdxy10ku2.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n            .filter(Problem::checkUniqueDigits)\n\
    \            .sorted()\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpskq6ny7u.java:19: error: invalid method reference\n           \
    \ .filter(Problem::checkUniqueDigits)\n                    ^\n  cannot find symbol\n\
    \    symbol:   method checkUniqueDigits(T)\n    location: class Problem\n  where\
    \ T is a type-variable:\n    T extends Object declared in interface Stream\n1\
    \ error\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi4spzk0v.java:21)\n"
  stdout: ''
  timestamp: 1660010809
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        return x.stream()\n            .filter(i -> Stream.of(i.toString().split(\"\
    \"))\n                .allMatch(s -> Integer.parseInt(s) % 2 == 1))\n        \
    \    .sorted()\n            .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> digits = new ArrayList<Integer>();\n      \
    \  for (int i = 0; i < x.size(); i++) {\n            int num = x.get(i);\n   \
    \         while (num > 0) {\n                if (num % 2 == 0) {\n           \
    \         break;\n                }\n                num /= 10;\n            }\n\
    \            if (num == 0) {\n                digits.add(x.get(i));\n        \
    \    }\n        }\n        Collections.sort(digits);\n        return digits;\n\
    }\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        ArrayList<Integer> y = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < x.size(); i++) {\n            int n = x.get(i);\n          \
    \  int digits = 0;\n            while (n > 0) {\n                int d = n % 10;\n\
    \                digits |= 1 << d;\n                n /= 10;\n            }\n\
    \            if (digits == 3 || digits == 5 || digits == 7) {\n              \
    \  y.add(x.get(i));\n            }\n        }\n        return y;\n}\n    public\
    \ static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5tbcqalj.java:34)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Your solution should go here\n        return null;\n}\n   \
    \ public static void main(String[] args) {\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)33, (int)1422, (int)1)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)15, (int)33)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)152,\
    \ (int)323, (int)1422, (int)10)))).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345, (int)2033,\
    \ (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.uniqueDigits(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpaoow7a4j.java:22)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ unique_digits([15, 33, 1422, 1])\n    // [1, 15, 33]\n    // >>> unique_digits([152,\
    \ 323, 1422, 10])\n    // []\n    public static ArrayList<Integer> uniqueDigits(ArrayList<Integer>\
    \ x) {\n        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        \n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < x.size(); i++) {\n            boolean uniq = true;\n\
    \            String s = Integer.toString(x.get(i));\n            for (int j =\
    \ 0; j < s.length(); j++) {\n                int t = Character.getNumericValue(s.charAt(j));\n\
    \                if (t % 2 == 0) {\n                    uniq = false;\n      \
    \              break;\n                }\n            }\n            if (uniq)\
    \ {\n                res.add(x.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)15, (int)33, (int)1422, (int)1)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)15, (int)33)))));\n    assert(uniqueDigits((new\
    \ ArrayList<Integer>(Arrays.asList((int)152, (int)323, (int)1422, (int)10)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)12345,\
    \ (int)2033, (int)111, (int)151)))).equals((new ArrayList<Integer>(Arrays.asList((int)111,\
    \ (int)151)))));\n    assert(uniqueDigits((new ArrayList<Integer>(Arrays.asList((int)135,\
    \ (int)103, (int)31)))).equals((new ArrayList<Integer>(Arrays.asList((int)31,\
    \ (int)135)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820

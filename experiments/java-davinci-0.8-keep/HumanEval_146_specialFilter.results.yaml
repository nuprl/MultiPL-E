language: java
name: HumanEval_146_specialFilter
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1\
    \ && ((n % 10) % 2 == 1 && (n / 10) % 2 == 1)).count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpas3u0b5w.java:21)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int number = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) >= 10) {\n                int fDigit = nums.get(i)\
    \ / (int)Math.pow(10, Math.floor(Math.log10(nums.get(i))));\n                int\
    \ lDigit = nums.get(i) % 10;\n                if (fDigit % 2 != 0 && lDigit %\
    \ 2 != 0) {\n                    number++;\n                }\n            }\n\
    \        }\n        return number;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> firstDigit(x) % 2 !=\
    \ 0 && lastDigit(x) % 2 != 0 && x > 10).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmptmnq2_iy.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(x -> firstDigit(x) % 2 != 0 && lastDigit(x) % 2 != 0 &&\
    \ x > 10).count();\n                                               ^\n  symbol:\
    \   method firstDigit(Integer)\n  location: class Problem\n/tmp/tmptmnq2_iy.java:16:\
    \ error: cannot find symbol\n        return (int) nums.stream().filter(x -> firstDigit(x)\
    \ % 2 != 0 && lastDigit(x) % 2 != 0 && x > 10).count();\n                    \
    \                                                     ^\n  symbol:   method lastDigit(Integer)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011560
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int n = nums.get(i);\n            if (n >= 10) {\n          \
    \      String s = Integer.toString(n);\n                int lastDigit = Integer.parseInt(s.substring(s.length()\
    \ - 1));\n                int firstDigit = Integer.parseInt(s.substring(0, 1));\n\
    \                if (lastDigit % 2 != 0 && firstDigit % 2 != 0) {\n          \
    \          count++;\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10).filter(x ->\
    \ (x / 10) % 2 != 0 && x % 2 != 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz4_m8c1d.java:21)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(i -> i > 10 && (i % 10) % 2 !=\
    \ 0 && (i / 10) % 2 != 0).collect(Collectors.toList()).size();\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1l0rsrgv.java:21)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        //----------------------------\n        //-----YOUR CODE HERE---------\n\
    \        //----------------------------\n        //first, we filter out the numbers\
    \ that are less than 10\n        ArrayList<Integer> nums2 = new ArrayList<Integer>();\n\
    \        for(int i = 0; i < nums.size(); i++){\n            if(nums.get(i) > 10){\n\
    \                nums2.add(nums.get(i));\n            }\n        }\n        //now,\
    \ we take the first digit of the number, and check if it is odd\n        //if\
    \ it is, we take the last digit of the number, and check if it is odd\n      \
    \  //if it is, we add 1 to the count\n        int count = 0;\n        for(int\
    \ i = 0; i < nums2.size(); i++){\n            String theNum = Integer.toString(nums2.get(i));\n\
    \            if(Integer.parseInt(theNum.substring(0,1)) % 2 != 0){\n         \
    \       if(Integer.parseInt(theNum.substring(theNum.length()-1)) % 2 != 0){\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Your code goes here\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0fpizp41.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int numOfElements = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int number = nums.get(i);\n            if (number > 10)\
    \ {\n                int lastDigit = number % 10;\n                int numberWithoutLastDigit\
    \ = number / 10;\n                int firstDigit = numberWithoutLastDigit % 10;\n\
    \                int numberWithoutFirstDigit = numberWithoutLastDigit / 10;\n\
    \                if (lastDigit == 1 || lastDigit == 3 || lastDigit == 5 || lastDigit\
    \ == 7 || lastDigit == 9) {\n                    if (firstDigit == 1 || firstDigit\
    \ == 3 || firstDigit == 5 || firstDigit == 7 || firstDigit == 9) {\n         \
    \               numOfElements++;\n                    }\n                }\n \
    \           }\n        }\n        return numOfElements;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqz4974ih.java:36)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(\n            num -> num\
    \ > 10 && firstDigit(num) % 2 != 0 && lastDigit(num) % 2 != 0\n        ).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqy_icaj5.java:17: error: cannot find symbol\n            num ->\
    \ num > 10 && firstDigit(num) % 2 != 0 && lastDigit(num) % 2 != 0\n          \
    \                     ^\n  symbol:   method firstDigit(Integer)\n  location: class\
    \ Problem\n/tmp/tmpqy_icaj5.java:17: error: cannot find symbol\n            num\
    \ -> num > 10 && firstDigit(num) % 2 != 0 && lastDigit(num) % 2 != 0\n       \
    \                                                    ^\n  symbol:   method lastDigit(Integer)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> {\n            if\
    \ (num < 10) {\n                return false;\n            }\n            ArrayList<Integer>\
    \ digits = new ArrayList<>();\n            while (num > 0) {\n               \
    \ digits.add(num % 10);\n                num /= 10;\n            }\n         \
    \   return digits.get(0) % 2 != 0 && digits.get(digits.size() - 1) % 2 != 0;\n\
    \        }).count();\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // your code goes here\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpd5ejb83a.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO Write your code here.\n        return -1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcrnireix.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: Implement solution\n        int count = 0;\n     \
    \   for (int num : nums) {\n            if (num > 10 && isFirstAndLastDigitOdd(num))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcylz3x2d.java:19: error: cannot find symbol\n            if (num\
    \ > 10 && isFirstAndLastDigitOdd(num)) {\n                            ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011560
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(Problem::isOdd)\n       \
    \     .filter(Problem::isDigitOdd)\n            .filter(Problem::isGreaterThan10)\n\
    \            .count();\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwiv6ti_9.java:16: error: invalid method reference\n        return\
    \ (int) nums.stream().filter(Problem::isOdd)\n                               \
    \           ^\n  cannot find symbol\n    symbol:   method isOdd(T)\n    location:\
    \ class Problem\n  where T is a type-variable:\n    T extends Object declared\
    \ in interface Stream\n/tmp/tmpwiv6ti_9.java:17: error: invalid method reference\n\
    \            .filter(Problem::isDigitOdd)\n                    ^\n  cannot find\
    \ symbol\n    symbol:   method isDigitOdd()\n    location: class Problem\n/tmp/tmpwiv6ti_9.java:18:\
    \ error: invalid method reference\n            .filter(Problem::isGreaterThan10)\n\
    \                    ^\n  cannot find symbol\n    symbol:   method isGreaterThan10()\n\
    \    location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int counter = 0;\n        for (int num : nums) {\n        \
    \    if (num > 10 && (num / 10) % 2 != 0 && num % 2 != 0) {\n                counter++;\n\
    \            }\n        }\n        return counter;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvw9p3mo8.java:27)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  int firstDigit = Character.getNumericValue(Integer.toString(num).charAt(0));\n\
    \            int lastDigit = Character.getNumericValue(Integer.toString(num).charAt(Integer.toString(num).length()\
    \ - 1));\n            if (num > 10 && firstDigit % 2 != 0 && lastDigit % 2 !=\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && isOdd(n)).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqrtfl317.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(n -> n > 10 && isOdd(n)).count();\n                   \
    \                                      ^\n  symbol:   method isOdd(Integer)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n      return (int) nums.stream().filter(n -> {\n        if (n < 10)\
    \ {\n          return false;\n        }\n        String[] digits = String.valueOf(n).split(\"\
    \");\n        return digits[0].equals(\"1\") || digits[0].equals(\"3\") ||\n \
    \              digits[0].equals(\"5\") || digits[0].equals(\"7\") ||\n       \
    \        digits[0].equals(\"9\") &&\n               digits[digits.length - 1].equals(\"\
    1\") ||\n               digits[digits.length - 1].equals(\"3\") ||\n         \
    \      digits[digits.length - 1].equals(\"5\") ||\n               digits[digits.length\
    \ - 1].equals(\"7\") ||\n               digits[digits.length - 1].equals(\"9\"\
    );\n      }).count();\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx37vcmt0.java:33)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(i -> i > 10).filter(i ->\
    \ {\n            String s = i.toString();\n            return (s.charAt(0) - '0')\
    \ % 2 == 1 && (s.charAt(s.length() - 1) - '0') % 2 == 1;\n        }).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // your code here\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ju81i8j.java:21)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10 &&\n        \
    \                                       (x % 10) % 2 != 0 &&\n               \
    \                                (x / 10) % 2 != 0).count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoaze_mih.java:23)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                int first = nums.get(i)\
    \ / 10;\n                int last = nums.get(i) % 10;\n                if (first\
    \ % 2 != 0 && last % 2 != 0) {\n                    count++;\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2etotw81.java:31)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                int first = (int) (nums.get(i)\
    \ / Math.pow(10, (int) Math.log10(nums.get(i))));\n                int last =\
    \ nums.get(i) % 10;\n                if (first % 2 != 0 && last % 2 != 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011562
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int sum = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String str = Integer.toString(nums.get(i));\n\
    \                if (str.charAt(0) % 2 != 0 && str.charAt(str.length() - 1) %\
    \ 2 != 0) {\n                    sum++;\n                }\n            }\n  \
    \      }\n        return sum;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (nums.get(i) % 2\
    \ == 1) {\n                    if (nums.get(i) % 10 == 1 || nums.get(i) % 10 ==\
    \ 3 || nums.get(i) % 10 == 5 || nums.get(i) % 10 == 7 || nums.get(i) % 10 == 9)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk88rg4d3.java:31)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(i -> Math.abs(i) % 2 == 1\
    \ && i % 10 % 2 == 1 && i / 10 % 2 == 1).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfv3p0_jb.java:21)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int n : nums) {\n           \
    \ String s = String.valueOf(n);\n            if (s.length() > 1) {\n         \
    \       int i = Integer.parseInt(String.valueOf(s.charAt(0)));\n             \
    \   int j = Integer.parseInt(String.valueOf(s.charAt(s.length() - 1)));\n    \
    \            if (n > 10 && (i % 2 == 1 && j % 2 == 1)) {\n                   \
    \ result++;\n                }\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.specialFilter(tmpj1ci7gen.java:20)\n\tat Problem.main(tmpj1ci7gen.java:30)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> {\n            return\
    \ n > 10 && (n / 10) % 2 != 0 && n % 2 != 0;\n        }).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqzrfy0fc.java:23)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10 && hasOddFirstAndLastDigit(x)).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_w6_2apu.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(x -> x > 10 && hasOddFirstAndLastDigit(x)).count();\n \
    \                                                        ^\n  symbol:   method\
    \ hasOddFirstAndLastDigit(Integer)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(Problem::isSpecial).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpwtgiiddq.java:16: error: invalid method reference\n        return\
    \ (int) nums.stream().filter(Problem::isSpecial).count();\n                  \
    \                        ^\n  cannot find symbol\n    symbol:   method isSpecial(T)\n\
    \    location: class Problem\n  where T is a type-variable:\n    T extends Object\
    \ declared in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10)\n          \
    \                       .filter(n -> (n / 10) % 2 != 0)\n                    \
    \             .filter(n -> n % 2 != 0)\n                                 .count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkxqpbiar.java:24)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10).filter(x ->\
    \ x % 2 == 1).filter(x -> (x % 10) % 2 == 1).count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnuglwk01.java:21)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(number -> number > 10).filter(number\
    \ -> {\n            int numberCopy = number;\n            if (number < 0) numberCopy\
    \ = number * -1;\n            if (numberCopy % 10 % 2 == 0) return false;\n  \
    \          while (numberCopy > 10) numberCopy /= 10;\n            return numberCopy\
    \ % 2 == 1;\n        }).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvvzdrg_9.java:27)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int n = nums.get(i);\n            if (n > 10 && n%2 != 0 && n%10%2\
    \ != 0) {\n                int m = n;\n                while (m > 0) {\n     \
    \               m /= 10;\n                }\n                if (m%2 != 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       return count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6wxwc93t.java:33)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(num -> num > 10)\n            \
    \             .filter(num -> num % 2 == 1)\n                         .filter(num\
    \ -> num > 9)\n                         .filter(num -> {\n                   \
    \         int lastDigit = num % 10;\n                            int firstDigit\
    \ = 0;\n                            while (num != 0) {\n                     \
    \           firstDigit = num % 10;\n                                num /= 10;\n\
    \                            }\n                            return firstDigit\
    \ % 2 == 1;\n                         })\n                         .collect(Collectors.toList()).size();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int counter = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int num = nums.get(i);\n            int firstDigit = num\
    \ % 10;\n            int lastDigit = num / (int) Math.pow(10, Math.floor(Math.log10(num)));\n\
    \            if (num > 10 && firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \              counter++;\n            }\n        }\n        return counter;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.specialFilter(tmpy9kislbs.java:20)\n\tat Problem.main(tmpy9kislbs.java:28)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int n = nums.get(i);\n            if (10 < n && 0 != n % 2 &&\
    \ (n / 10) % 2 != 0) {\n                result++;\n            }\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_5s33q_9.java:28)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: Implement this\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1dkp8kf2.java:21)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // implement the function\n        return 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw1bnelo2.java:21)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: Your implementation here\n        int count = 0;\n\
    \        for (int num : nums) {\n            // Check if greater than 10\n   \
    \         if (num > 10) {\n                // Check if first digit is odd\n  \
    \              int firstDigit = num % 10;\n                if (firstDigit % 2\
    \ != 0) {\n                    // Check if last digit is odd\n               \
    \     int lastDigit = (int) (num / Math.pow(10, Math.floor(Math.log10(num))));\n\
    \                    if (lastDigit % 2 != 0) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> {\n            String\
    \ xStr = x.toString();\n            int firstDigit = Integer.parseInt(xStr.substring(0,\
    \ 1));\n            int lastDigit = Integer.parseInt(xStr.substring(xStr.length()\
    \ - 1));\n            return x > 10 && (firstDigit == 1 || firstDigit == 3 ||\
    \ firstDigit == 5 || firstDigit == 7 || firstDigit == 9) &&\n                \
    \    (lastDigit == 1 || lastDigit == 3 || lastDigit == 5 || lastDigit == 7 ||\
    \ lastDigit == 9);\n        }).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$specialFilter$0(tmpkls439td.java:18)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.specialFilter(tmpkls439td.java:22)\n\tat Problem.main(tmpkls439td.java:25)\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String strNum = String.valueOf(nums.get(i));\n\
    \                if (strNum.length() > 1) {\n                    if (strNum.charAt(0)\
    \ % 2 != 0 && strNum.charAt(strNum.length() - 1) % 2 != 0) {\n               \
    \         count++;\n                    }\n                }\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011562
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String stringNum = nums.get(i).toString();\n\
    \                if (stringNum.charAt(0) % 2 != 0 && stringNum.charAt(stringNum.length()\
    \ - 1) % 2 != 0) {\n                    count++;\n                }\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int counter = 0;\n        int firstdigit = 0;\n        int\
    \ lastdigit = 0;\n        for (int num : nums) {\n            if (num > 10) {\n\
    \                firstdigit = num / 10;\n                lastdigit = num % 10;\n\
    \                if (firstdigit % 2 != 0 && lastdigit % 2 != 0) {\n          \
    \          counter++;\n                }\n            }\n        }\n        return\
    \ counter;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhjzz667.java:33)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  if (num > 10 && Math.abs(num) % 2 == 1) {\n                int i = num % 10;\n\
    \                if (i % 2 == 1) {\n                    count++;\n           \
    \     }\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd8_cbszb.java:30)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(x -> (x / 10) % 2 != 0 && x % 2\
    \ != 0).mapToInt(Integer::intValue).sum();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7ndrrdh.java:20)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num % 2 != 0 && num\
    \ > 10 && isNum(num)).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp1iivhe_.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(num -> num % 2 != 0 && num > 10 && isNum(num)).count();\n\
    \                                                                            \
    \ ^\n  symbol:   method isNum(Integer)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011563
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n      int result = 0;\n      for (int i = 0; i < nums.size(); i++)\
    \ {\n        if (nums.get(i) > 10) {\n          int firstDigit = nums.get(i) /\
    \ 10;\n          int lastDigit = nums.get(i) % 10;\n          if (firstDigit %\
    \ 2 != 0 && lastDigit % 2 != 0) {\n            result++;\n          }\n      \
    \  }\n      }\n      return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7uvbnf7.java:31)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  if (num > 10 && num % 2 == 1 && (num / 10) % 2 == 1)\n                count++;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn33jxuq3.java:26)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num > 10).filter(num\
    \ ->\n                Integer.toString(num).charAt(0) % 2 != 0 &&\n          \
    \      Integer.toString(num).charAt(Integer.toString(num).length() - 1) % 2 !=\
    \ 0\n        ).count();\n}\n    public static void main(String[] args) {\n   \
    \ assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            String num = Integer.toString(nums.get(i));\n            if (nums.get(i)\
    \ > 10 && isOdd(num.charAt(0)) && isOdd(num.charAt(num.length() - 1))) {\n   \
    \             count++;\n            }\n        }\n        return count;\n}\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp05tzhhfo.java:19: error: cannot find symbol\n            if (nums.get(i)\
    \ > 10 && isOdd(num.charAt(0)) && isOdd(num.charAt(num.length() - 1))) {\n   \
    \                                 ^\n  symbol:   method isOdd(char)\n  location:\
    \ class Problem\n/tmp/tmp05tzhhfo.java:19: error: cannot find symbol\n       \
    \     if (nums.get(i) > 10 && isOdd(num.charAt(0)) && isOdd(num.charAt(num.length()\
    \ - 1))) {\n                                                            ^\n  symbol:\
    \   method isOdd(char)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i : nums) {\n            if\
    \ (i > 10 && (i / 10) % 2 != 0 && i % 2 != 0) {\n                count++;\n  \
    \          }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu5cayqj5.java:27)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // implement specialFilter\n        int count = 0;\n      \
    \  for (int i = 0; i < nums.size(); i++) {\n            int num = nums.get(i);\n\
    \            if (num > 10) {\n                String str = String.valueOf(num);\n\
    \                String first = str.substring(0, 1);\n                String last\
    \ = str.substring(str.length() - 1);\n                if (Integer.parseInt(first)\
    \ % 2 != 0 && Integer.parseInt(last) % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(e -> e > 10 && e % 2 != 0 && e\
    \ / 10 % 2 != 0).collect(Collectors.toList()).size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3w039a33.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Write your code here\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhla2l7v.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Type your solution here\n        return 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvdn8wxjj.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        int size = nums.size();\n        for\
    \ (int i = 0; i < size; i++) {\n            if (nums.get(i) > 10) {\n        \
    \        if (nums.get(i) % 2 != 0) {\n                    if (nums.get(i) / 10\
    \ % 2 != 0) {\n                        count++;\n                    }\n     \
    \           }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuc8efg5v.java:32)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n    \t// code here\n    \treturn 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0c6lq26c.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Implement your code here\n        int count = 0;\n     \
    \   for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10)\
    \ {\n                String s = Integer.toString(nums.get(i));\n             \
    \   if (s.charAt(0) % 2 != 0 && s.charAt(s.length() - 1) % 2 != 0) {\n       \
    \             count++;\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        throw new UnsupportedOperationException(\"Please implement\
    \ this function\");\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement this function\n\tat Problem.specialFilter(tmp7nhe04up.java:16)\n\t\
    at Problem.main(tmp7nhe04up.java:19)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // your code here\n        return nums.stream().filter(i ->\
    \ i > 10).filter(i -> isFirstOdd(i) && isLastOdd(i)).toArray().length;\n}\n  \
    \  public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkio2x79.java:17: error: cannot find symbol\n        return nums.stream().filter(i\
    \ -> i > 10).filter(i -> isFirstOdd(i) && isLastOdd(i)).toArray().length;\n  \
    \                                                           ^\n  symbol:   method\
    \ isFirstOdd(Integer)\n  location: class Problem\n/tmp/tmpjkio2x79.java:17: error:\
    \ cannot find symbol\n        return nums.stream().filter(i -> i > 10).filter(i\
    \ -> isFirstOdd(i) && isLastOdd(i)).toArray().length;\n                      \
    \                                                        ^\n  symbol:   method\
    \ isLastOdd(Integer)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int numsGreaterThan10 = 0;\n        for (int num : nums) {\n\
    \            if (num > 10) {\n                if (firstIsOdd(num) && lastIsOdd(num))\
    \ {\n                    numsGreaterThan10++;\n                }\n           \
    \ }\n        }\n        return numsGreaterThan10;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppiclto67.java:19: error: cannot find symbol\n                if\
    \ (firstIsOdd(num) && lastIsOdd(num)) {\n                    ^\n  symbol:   method\
    \ firstIsOdd(int)\n  location: class Problem\n/tmp/tmppiclto67.java:19: error:\
    \ cannot find symbol\n                if (firstIsOdd(num) && lastIsOdd(num)) {\n\
    \                                       ^\n  symbol:   method lastIsOdd(int)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: implement\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpflyxas6v.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            String[] split = String.valueOf(nums.get(i)).split(\"\");\n \
    \           if (nums.get(i) > 10 && Integer.parseInt(split[0]) % 2 != 0 && Integer.parseInt(split[split.length\
    \ - 1]) % 2 != 0) {\n                count++;\n            }\n        }\n    \
    \    return count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(\n            x -> ((x > 10) &&\
    \ (x % 2 != 0) && \n                (x % 10 != 0) && (x / 10 % 2 != 0))\n    \
    \    ).toArray().length;\n}\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpry_5ruzg.java:24)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (10 < nums.get(i)) {\n                String numStr = nums.get(i).toString();\n\
    \                Integer firstDigit = Character.getNumericValue(numStr.charAt(0));\n\
    \                Integer lastDigit = Character.getNumericValue(numStr.charAt(numStr.length()\
    \ - 1));\n                if (0 == firstDigit % 2 && 0 == lastDigit % 2) {\n \
    \                   result++;\n                }\n            }\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9lv5gcyj.java:31)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        \n        int count = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                String[] myArray\
    \ = Integer.toString(nums.get(i)).split(\"\");\n                if (Arrays.asList(myArray).contains(\"\
    1\") || Arrays.asList(myArray).contains(\"3\") || Arrays.asList(myArray).contains(\"\
    5\") || Arrays.asList(myArray).contains(\"7\") || Arrays.asList(myArray).contains(\"\
    9\")) {\n                    count++;\n                }\n            }\n    \
    \    }\n        return count;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmpn4q7bx.java:30)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // WRITE YOUR CODE HERE\n        return -1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_24udmwe.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int c = 0;\n        for (int num : nums) {\n            if\
    \ (num > 10 && isOdd(num % 10) && isOdd(num / 100)) {\n                c++;\n\
    \            }\n        }\n        return c;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc196zt63.java:18: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(num % 10) && isOdd(num / 100)) {\n                           \
    \ ^\n  symbol:   method isOdd(int)\n  location: class Problem\n/tmp/tmpc196zt63.java:18:\
    \ error: cannot find symbol\n            if (num > 10 && isOdd(num % 10) && isOdd(num\
    \ / 100)) {\n                                               ^\n  symbol:   method\
    \ isOdd(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // return the number of elements in the array that are greater\
    \ than 10 and both \n        // first and last digits of a number are odd (1,\
    \ 3, 5, 7, 9).\n        return 1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpmke3a_.java:21)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1\
    \ && n % 10 == 1).count();\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6srefpi.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int n : nums) {\n            if\
    \ (n > 10 && isFirstAndLastDigitOdd(n)) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp40g7dyp8.java:18: error: cannot find symbol\n            if (n\
    \ > 10 && isFirstAndLastDigitOdd(n)) {\n                          ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(p -> p > 10 && isOdd(getFirstDigit(p))\
    \ && isOdd(getLastDigit(p))).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4qpaawfq.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(p -> p > 10 && isOdd(getFirstDigit(p)) && isOdd(getLastDigit(p))).count();\n\
    \                                                               ^\n  symbol: \
    \  method getFirstDigit(Integer)\n  location: class Problem\n/tmp/tmp4qpaawfq.java:16:\
    \ error: cannot find symbol\n        return (int) nums.stream().filter(p -> p\
    \ > 10 && isOdd(getFirstDigit(p)) && isOdd(getLastDigit(p))).count();\n      \
    \                                                                            \
    \        ^\n  symbol:   method getLastDigit(Integer)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Iterate over the array, filtering each element.\n      \
    \  int count = 0;\n        for (int num : nums) {\n            if (isSpecial(num))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpl5d4zw2x.java:19: error: cannot find symbol\n            if (isSpecial(num))\
    \ {\n                ^\n  symbol:   method isSpecial(int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // your code here\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ju81i8j.java:21)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(i -> i > 10).filter(i ->\
    \ {\n            String number = i.toString();\n            return Character.getNumericValue(number.charAt(0))\
    \ % 2 != 0 && Character.getNumericValue(number.charAt(number.length() - 1)) %\
    \ 2 != 0;\n        }).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // your code here...\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpx0obaj7z.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Write your code here\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqhla2l7v.java:21)\n"
  stdout: ''
  timestamp: 1660011564
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10).filter(x ->\
    \ {\n            int first = Integer.parseInt(String.valueOf(x).substring(0, 1));\n\
    \            int last = Integer.parseInt(String.valueOf(x).substring(String.valueOf(x).length()\
    \ - 1));\n            return (first % 2 != 0 && last % 2 != 0);\n        }).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // use stream() and filter() to obtain only the numbers that\
    \ satisfy the \n        // given condition (odd first and last digits, and greater\
    \ than 10)\n        // use collect() to obtain a List of the numbers that satisfy\
    \ the \n        // given condition, then use size() to obtain the size of the\
    \ List.\n        return nums.stream().filter(\n            e -> e > 10 && e %\
    \ 2 == 1 && e / 10 % 2 == 1\n        ).collect(Collectors.toList()).size();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeygkkol4.java:27)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // FIXME\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpusw_0ji1.java:21)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        throw new UnsupportedOperationException(\"Waiting to be implemented.\"\
    );\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Waiting\
    \ to be implemented.\n\tat Problem.specialFilter(tmppu8b22qu.java:16)\n\tat Problem.main(tmppu8b22qu.java:19)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Write your code here\n        return nums.stream().filter(x\
    \ -> x > 10 && \n                Character.getNumericValue(Integer.toString(x).charAt(0))\
    \ % 2 != 0 \n                && Character.getNumericValue(Integer.toString(x).charAt(Integer.toString(x).length()\
    \ - 1)) % 2 != 0).collect(Collectors.toList()).size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011566
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10 && x.toString().charAt(0)\
    \ % 2 != 0 && x.toString().charAt(x.toString().length() - 1) % 2 != 0).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter( n -> n > 10 && n % 2 ==\
    \ 1 && (n / 10) % 2 == 1 && n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10\
    \ == 7 || n % 10 == 9).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpad02cf8k.java:19)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> (n > 10) && (n % 2 !=\
    \ 0) && (n % 10 != 0)).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_5t8sbn.java:21)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> {\n            return\
    \ num > 10 && hasOddFirstAndLastDigits(num);\n        }).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpy7dt2k3e.java:17: error: cannot find symbol\n            return\
    \ num > 10 && hasOddFirstAndLastDigits(num);\n                               ^\n\
    \  symbol:   method hasOddFirstAndLastDigits(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // write your code here\n        return (int) nums.stream().filter(i\
    \ -> i > 10 && i % 2 != 0 && i % 10 != 0).count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprfwy78q_.java:22)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // YOUR CODE HERE\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg7hr42a.java:21)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10).filter(n ->\
    \ n % 2 == 1).filter(n -> {\n            int m = n % 10;\n            while (n\
    \ > 0) {\n                n /= 10;\n            }\n            return n % 2 ==\
    \ 1;\n        }).count();\n}\n    public static void main(String[] args) {\n \
    \   assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2pstbo6s.java:26)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(Problem::is_odd).filter(Problem::is_greater_than_10).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpj3gosj4d.java:16: error: invalid method reference\n        return\
    \ (int) nums.stream().filter(Problem::is_odd).filter(Problem::is_greater_than_10).count();\n\
    \                                          ^\n  cannot find symbol\n    symbol:\
    \   method is_odd(T)\n    location: class Problem\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n/tmp/tmpj3gosj4d.java:16:\
    \ error: invalid method reference\n        return (int) nums.stream().filter(Problem::is_odd).filter(Problem::is_greater_than_10).count();\n\
    \                                                                  ^\n  cannot\
    \ find symbol\n    symbol:   method is_greater_than_10()\n    location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1\
    \ && n % 10 == 1).count();\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6srefpi.java:20)\n"
  stdout: ''
  timestamp: 1660011565
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10).filter(x ->\
    \ (x/10)%2!=0 && x%2!=0).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp88w4aojy.java:21)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(e -> {\n            String\
    \ str = e.toString();\n            int x = Integer.parseInt(str.substring(0, 1));\n\
    \            int y = Integer.parseInt(str.substring(str.length() - 1));\n    \
    \        return e > 10 && (x % 2 == 1 || x % 2 == -1) && (y % 2 == 1 || y % 2\
    \ == -1);\n        }).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.lambda$specialFilter$0(tmpb5bgshdk.java:18)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)\n\
    \tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\
    \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\
    \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\
    \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:258)\n\
    \tat java.base/java.util.stream.ReduceOps$5.evaluateSequential(ReduceOps.java:248)\n\
    \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\
    \tat java.base/java.util.stream.ReferencePipeline.count(ReferencePipeline.java:709)\n\
    \tat Problem.specialFilter(tmpb5bgshdk.java:21)\n\tat Problem.main(tmpb5bgshdk.java:24)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        throw new RuntimeException(\"not yet implemented\");\n}\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: not yet implemented\n\
    \tat Problem.specialFilter(tmpd235bwjz.java:16)\n\tat Problem.main(tmpd235bwjz.java:19)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> {\n            int first\
    \ = Math.abs(x);\n            while (first > 10) first /= 10;\n            return\
    \ first % 2 == 1 && x % 2 == 1 && x > 10;\n        }).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprqa2j5lx.java:25)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num > 10 && getFirstDigit(num)\
    \ % 2 != 0 && getLastDigit(num) % 2 != 0).count();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmdzuem_z.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(num -> num > 10 && getFirstDigit(num) % 2 != 0 && getLastDigit(num)\
    \ % 2 != 0).count();\n                                                       \
    \      ^\n  symbol:   method getFirstDigit(Integer)\n  location: class Problem\n\
    /tmp/tmpmdzuem_z.java:16: error: cannot find symbol\n        return (int) nums.stream().filter(num\
    \ -> num > 10 && getFirstDigit(num) % 2 != 0 && getLastDigit(num) % 2 != 0).count();\n\
    \                                                                            \
    \                ^\n  symbol:   method getLastDigit(Integer)\n  location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (num > 10) {\n       \
    \         String strNum = Integer.toString(num);\n                String first\
    \ = strNum.substring(0, 1);\n                String last = strNum.substring(strNum.length()\
    \ - 1);\n                if ((Integer.parseInt(first) % 2 == 1) && (Integer.parseInt(last)\
    \ % 2 == 1)) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // write your code here\n        return -1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesqpwdfe.java:20)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(Problem::isGreaterThan10).filter(Problem::areBothOdd).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp2s1jrqdq.java:16: error: invalid method reference\n        return\
    \ (int) nums.stream().filter(Problem::isGreaterThan10).filter(Problem::areBothOdd).count();\n\
    \                                          ^\n  cannot find symbol\n    symbol:\
    \   method isGreaterThan10(T)\n    location: class Problem\n  where T is a type-variable:\n\
    \    T extends Object declared in interface Stream\n/tmp/tmp2s1jrqdq.java:16:\
    \ error: invalid method reference\n        return (int) nums.stream().filter(Problem::isGreaterThan10).filter(Problem::areBothOdd).count();\n\
    \                                                                           ^\n\
    \  cannot find symbol\n    symbol:   method areBothOdd()\n    location: class\
    \ Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n   \
    \     for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 10)\
    \ {\n                //checks if first digit is odd\n                if (((nums.get(i)/10)%2)\
    \ != 0) {\n                    //checks if last digit is odd\n               \
    \     if ((nums.get(i)%2) != 0) {\n                        result.add(nums.get(i));\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result.size();\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplqfm_f9g.java:33)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n      int count = 0;\n      for (int num : nums) {\n        if (num\
    \ > 10 && (num / 10) % 2 != 0 && num % 2 != 0) {\n          count++;\n       \
    \ }\n      }\n      return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbnur2qmm.java:27)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int i=0;\n        ArrayList<Integer> temp=new ArrayList<Integer>();\n\
    \        while(i<nums.size()){\n            if(Math.abs(nums.get(i))>10 &&\n \
    \           (nums.get(i)%10+nums.get(i)/10%10)%2==1) temp.add(nums.get(i));\n\
    \            i++;\n        }\n        return temp.size();\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1gd7u0kr.java:28)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // YOUR CODE HERE\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzg7hr42a.java:21)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                String x = Integer.toString(nums.get(i));\n\
    \                if (Character.getNumericValue(x.charAt(0)) % 2 != 0 && Character.getNumericValue(x.charAt(x.length()\
    \ - 1)) % 2 != 0) {\n                    count++;\n                }\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        throw new UnsupportedOperationException(\"Waiting to be implemented.\"\
    );\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Waiting\
    \ to be implemented.\n\tat Problem.specialFilter(tmppu8b22qu.java:16)\n\tat Problem.main(tmppu8b22qu.java:19)\n"
  stdout: ''
  timestamp: 1660011566
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num > 10)\n      \
    \      .filter(num -> {\n                int num2 = Math.abs(num);\n         \
    \       return (num2 % 10) % 2 == 1 && num2 / 10 % 2 == 1;\n            }).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgf7svqaw.java:25)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (nums.get(i) / 10\
    \ % 2 != 0) {\n                    if (nums.get(i) % 10 % 2 != 0) {\n        \
    \                count++;\n                    }\n                }\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxs42yibq.java:31)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfly5ug5l.java:21)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int n = 0;\n        for (int x : nums) {\n            String\
    \ s = x + \"\";\n            int l = s.length();\n            if (x > 10 && isOdd(s.charAt(0))\
    \ && isOdd(s.charAt(l - 1))) {\n                n++;\n            }\n        }\n\
    \        return n;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpqgnhyk2y.java:20: error: cannot find symbol\n            if (x\
    \ > 10 && isOdd(s.charAt(0)) && isOdd(s.charAt(l - 1))) {\n                  \
    \        ^\n  symbol:   method isOdd(char)\n  location: class Problem\n/tmp/tmpqgnhyk2y.java:20:\
    \ error: cannot find symbol\n            if (x > 10 && isOdd(s.charAt(0)) && isOdd(s.charAt(l\
    \ - 1))) {\n                                                ^\n  symbol:   method\
    \ isOdd(char)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int cnt = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int n = nums.get(i);\n            if (n > 10 && (n % 2 == 1)\
    \ && (n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9))\
    \ {\n                cnt++;\n            }\n        }\n        return cnt;\n}\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi8_j8fmj.java:28)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int n : nums) {\n            if\
    \ (n > 10 && n % 2 == 1 && (n % 10) % 2 == 1) {\n                count++;\n  \
    \          }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1_ktysr7.java:27)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Your code here\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0lsttpt6.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (nums.get(i) % 2\
    \ == 1) {\n                    count++;\n                }\n            }\n  \
    \      }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzf0z7m3x.java:29)\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(n -> n > 10 && Math.abs(n) % 10\
    \ % 2 == 1).collect(Collectors.toList()).size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjj5e1pul.java:21)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        int firstDigit = 0;\n        int lastDigit\
    \ = 0;\n        for (int num : nums) {\n            String numString = String.valueOf(num);\n\
    \            String firstDigitString = String.valueOf(numString.charAt(0));\n\
    \            String lastDigitString = String.valueOf(numString.charAt(numString.length()\
    \ - 1));\n            try {\n                firstDigit = Integer.parseInt(firstDigitString);\n\
    \                lastDigit = Integer.parseInt(lastDigitString);\n            }\
    \ catch (NumberFormatException e) {\n                continue;\n            }\n\
    \            if (num > 10 && firstDigit % 2 != 0 && lastDigit % 2 != 0) {\n  \
    \              count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int output = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (num > 10) {\n       \
    \         String str = String.valueOf(num);\n                if (str.length()\
    \ > 1) {\n                    int first = Integer.parseInt(str.substring(0, 1));\n\
    \                    int last = Integer.parseInt(str.substring(str.length() -\
    \ 1));\n                    if (first % 2 != 0 && last % 2 != 0) {\n         \
    \               output++;\n                    }\n                }\n        \
    \    }\n        }\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> isValid(x)).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpecwuinx_.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(x -> isValid(x)).count();\n                           \
    \                    ^\n  symbol:   method isValid(Integer)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011567
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int answer = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (num > 10) {\n       \
    \         int first = num % 10;\n                int last = num / 10;\n      \
    \          if (first % 2 != 0 && last % 2 != 0) {\n                    answer++;\n\
    \                }\n            }\n        }\n        return answer;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsm7xjia.java:32)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        if (nums == null) {\n            return\
    \ 0;\n        }\n        for (int i = 0; i < nums.size(); i++) {\n           \
    \ if (nums.get(i) > 10) {\n                int last = nums.get(i) % 10;\n    \
    \            int first = nums.get(i);\n                while (first >= 10) {\n\
    \                    first = first / 10;\n                }\n                if\
    \ (last % 2 != 0 && first % 2 != 0) {\n                    count++;\n        \
    \        }\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10).filter(x ->\
    \ (x % 10 + x / 10) % 2 == 1).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymff1sj6.java:21)\n"
  stdout: ''
  timestamp: 1660011568
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int numberOfOdd = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            int firstDigit = (int) (nums.get(i) / Math.pow(10, (int)\
    \ (Math.log10(nums.get(i)))));\n            int lastDigit = nums.get(i) % 10;\n\
    \            if (nums.get(i) > 10 && firstDigit % 2 != 0 && lastDigit % 2 != 0)\
    \ {\n                numberOfOdd++;\n            }\n        }\n        return\
    \ numberOfOdd;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011568
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> (x > 10 &&\n       \
    \                                         (x.toString().charAt(0) - '0') % 2 !=\
    \ 0 &&\n                                                (x.toString().charAt(x.toString().length()\
    \ - 1) - '0') % 2 != 0))\n                                                .count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(x -> x > 10)\n          \
    \                  .filter(x -> {\n                                String s =\
    \ x.toString();\n                                return s.charAt(0) % 2 != 0 &&\
    \ s.charAt(s.length() - 1) % 2 != 0;\n                            }).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> {\n            if\
    \ (num < 10) return false;\n            String s = String.valueOf(num);\n    \
    \        int length = s.length();\n            char f = s.charAt(0);\n       \
    \     char l = s.charAt(length - 1);\n            return (f == '1' || f == '3'\
    \ || f == '5' || f == '7' || f == '9')\n                    && (l == '1' || l\
    \ == '3' || l == '5' || l == '7' || l == '9');\n        }).count();\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: replace this with your implementation\n        return\
    \ nums.stream().filter(x -> x > 10 && isFirstAndLastDigitOdd(x)).collect(Collectors.toList()).size();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpd1ghtn3r.java:17: error: cannot find symbol\n        return nums.stream().filter(x\
    \ -> x > 10 && isFirstAndLastDigitOdd(x)).collect(Collectors.toList()).size();\n\
    \                                                   ^\n  symbol:   method isFirstAndLastDigitOdd(Integer)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(i -> i > 10).filter(i ->\
    \ isFirstAndLastDigitOdd(i)).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp924lgqs0.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(i -> i > 10).filter(i -> isFirstAndLastDigitOdd(i)).count();\n\
    \                                                                   ^\n  symbol:\
    \   method isFirstAndLastDigitOdd(Integer)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> {\n            String\
    \ s = String.valueOf(n);\n            return (n > 10 && Character.getNumericValue(s.charAt(0))\
    \ % 2 != 0 &&\n            Character.getNumericValue(s.charAt(s.length() - 1))\
    \ % 2 != 0);\n        }).count();\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(x -> x > 10 && x % 2 == 1 && x\
    \ % 10 % 2 == 1).collect(Collectors.toList()).size();\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4f5exjzz.java:21)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                int x = nums.get(i);\n\
    \                int first = x;\n                int last = x % 10;\n        \
    \        while (x > 0) {\n                    first = x % 10;\n              \
    \      x /= 10;\n                }\n                if (first % 2 != 0 && last\
    \ % 2 != 0) {\n                    count++;\n                }\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int cnt = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (num > 10) {\n       \
    \         int first = num / 10;\n                int last = num % 10;\n      \
    \          if (first % 2 != 0 && last % 2 != 0) {\n                    cnt++;\n\
    \                }\n            }\n        }\n        return cnt;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcskxr9w0.java:32)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: Implement this function\n        return 0;\n}\n  \
    \  public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq89rm4p4.java:21)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Write your code here.\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp09x9jln0.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  if (num > 10 && isOdd(firstDigit(num)) && isOdd(lastDigit(num))) {\n      \
    \          count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9px78bno.java:18: error: cannot find symbol\n            if (num\
    \ > 10 && isOdd(firstDigit(num)) && isOdd(lastDigit(num))) {\n               \
    \                   ^\n  symbol:   method firstDigit(int)\n  location: class Problem\n\
    /tmp/tmp9px78bno.java:18: error: cannot find symbol\n            if (num > 10\
    \ && isOdd(firstDigit(num)) && isOdd(lastDigit(num))) {\n                    \
    \                                        ^\n  symbol:   method lastDigit(int)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int num = 0;\n        for (int i : nums) {\n            if\
    \ (i >= 10 && i % 2 == 1 && i / 10 % 2 == 1) {\n                num++;\n     \
    \       }\n        }\n        return num;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnh7k0fbj.java:27)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            String number = String.valueOf(nums.get(i));\n            if\
    \ (nums.get(i) > 10 && number.length() > 1) {\n                int firstNumber\
    \ = Integer.parseInt(String.valueOf(number.charAt(0)));\n                int lastNumber\
    \ = Integer.parseInt(String.valueOf(number.charAt(number.length() - 1)));\n  \
    \              if (firstNumber % 2 != 0 && lastNumber % 2 != 0) {\n          \
    \          count++;\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  if (num > 10 && (num % 10) % 2 != 0 && num / 10 % 2 != 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbvzw5o3d.java:27)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return nums.stream().filter(num -> num > 10)\n            \
    \    .filter(num -> num > 10 && firstOdd(num) && lastOdd(num))\n             \
    \   .collect(Collectors.toList()).size();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjkclsbse.java:17: error: cannot find symbol\n                .filter(num\
    \ -> num > 10 && firstOdd(num) && lastOdd(num))\n                            \
    \               ^\n  symbol:   method firstOdd(Integer)\n  location: class Problem\n\
    /tmp/tmpjkclsbse.java:17: error: cannot find symbol\n                .filter(num\
    \ -> num > 10 && firstOdd(num) && lastOdd(num))\n                            \
    \                                ^\n  symbol:   method lastOdd(Integer)\n  location:\
    \ class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num > 10).filter(num\
    \ -> isFirstAndLastDigitOdd(num)).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp51n34wf9.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(num -> num > 10).filter(num -> isFirstAndLastDigitOdd(num)).count();\n\
    \                                                                         ^\n\
    \  symbol:   method isFirstAndLastDigitOdd(Integer)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Enter code here.\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps045bsid.java:21)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(i -> {\n            return\
    \ i > 10 \n                && i % 2 != 0 \n                && i % 10 % 2 != 0\
    \ \n                && (i - i % 10) / 10 % 2 != 0;\n        }).count();\n}\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppcp5okyn.java:26)\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int len = nums.size();\n        int count = 0;\n        for\
    \ (int i = 0; i < len; i++) {\n            if (checkConditions(nums.get(i))) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmppqmrkdn6.java:19: error: cannot find symbol\n            if (checkConditions(nums.get(i)))\
    \ {\n                ^\n  symbol:   method checkConditions(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011569
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Your Code Here\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo_hpllop.java:21)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // IMPLEMENT\n        return -1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvl4fx45_.java:20)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && n % 2 == 1\
    \ && n % 10 == 1 || n % 10 == 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9).count();\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1occq6r1.java:19)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        if (nums == null)\n            return 0;\n        int result\
    \ = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i)\
    \ > 10) {\n                String str = String.valueOf(nums.get(i));\n       \
    \         if (str.length() == 1) {\n                    if (str.charAt(0) % 2\
    \ != 0)\n                        result++;\n                } else {\n       \
    \             if (str.charAt(0) % 2 != 0 && str.charAt(str.length() - 1) % 2 !=\
    \ 0)\n                        result++;\n                }\n            }\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int curr = nums.get(i);\n            if (curr > 10) {\n     \
    \           String str = Integer.toString(curr);\n                int first =\
    \ Character.getNumericValue(str.charAt(0));\n                int last = Character.getNumericValue(str.charAt(str.length()\
    \ - 1));\n                if (first % 2 != 0 && last % 2 != 0) {\n           \
    \         count++;\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        \n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp72dqqmiu.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // WRITE YOUR CODE HERE\n        int count = 0;\n        for\
    \ (int n : nums) {\n            if (n > 10 && n % 2 == 1 && n / 10 % 2 == 1) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ly39_hj.java:28)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int cnt = 0;\n        for (int x : nums) {\n            if\
    \ (x < 0) {\n                x = -x;\n            }\n            if (x > 10) {\n\
    \                if (x % 2 == 1) {\n                    cnt++;\n             \
    \   }\n            }\n        }\n        return cnt;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8hu1uq_a.java:31)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            String number = String.valueOf(nums.get(i));\n            int\
    \ firstDigit = Integer.parseInt(String.valueOf(number.charAt(0)));\n         \
    \   int lastDigit = Integer.parseInt(String.valueOf(number.charAt(number.length()\
    \ - 1)));\n            if (nums.get(i) > 10 && (firstDigit % 2 != 0 && lastDigit\
    \ % 2 != 0)) {\n                count++;\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: For input\
    \ string: \"-\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\
    \tat java.base/java.lang.Integer.parseInt(Integer.java:658)\n\tat java.base/java.lang.Integer.parseInt(Integer.java:786)\n\
    \tat Problem.specialFilter(tmp9zowaack.java:19)\n\tat Problem.main(tmp9zowaack.java:28)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int n : nums) {\n           \
    \ // YOUR CODE HERE\n        }\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp72ayc2ig.java:24)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (isOdd(nums.get(i)))\
    \ {\n                    result++;\n                }\n            }\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyl6tuamf.java:19: error: cannot find symbol\n                if\
    \ (isOdd(nums.get(i))) {\n                    ^\n  symbol:   method isOdd(Integer)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int number : nums) {\n       \
    \     if (greaterThan10(number) && firstDigitIsOdd(number) && lastDigitIsOdd(number))\n\
    \                count++;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9tev4wwa.java:18: error: cannot find symbol\n            if (greaterThan10(number)\
    \ && firstDigitIsOdd(number) && lastDigitIsOdd(number))\n                ^\n \
    \ symbol:   method greaterThan10(int)\n  location: class Problem\n/tmp/tmp9tev4wwa.java:18:\
    \ error: cannot find symbol\n            if (greaterThan10(number) && firstDigitIsOdd(number)\
    \ && lastDigitIsOdd(number))\n                                         ^\n  symbol:\
    \   method firstDigitIsOdd(int)\n  location: class Problem\n/tmp/tmp9tev4wwa.java:18:\
    \ error: cannot find symbol\n            if (greaterThan10(number) && firstDigitIsOdd(number)\
    \ && lastDigitIsOdd(number))\n                                               \
    \                     ^\n  symbol:   method lastDigitIsOdd(int)\n  location: class\
    \ Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (nums.get(i) % 2\
    \ == 1) {\n                    if (nums.get(i) % 10 == 1 || nums.get(i) % 10 ==\
    \ 3 || nums.get(i) % 10 == 5 || nums.get(i) % 10 == 7 || nums.get(i) % 10 == 9)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk88rg4d3.java:31)\n"
  stdout: ''
  timestamp: 1660011562
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int counter = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                if (isOdd(nums.get(i))\
    \ &&\n                    isOdd(nums.get(i) / 10)) {\n                    counter++;\n\
    \                }\n            }\n        }\n        return counter;\n}\n   \
    \ public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpc87ye8kw.java:19: error: cannot find symbol\n                if\
    \ (isOdd(nums.get(i)) &&\n                    ^\n  symbol:   method isOdd(Integer)\n\
    \  location: class Problem\n/tmp/tmpc87ye8kw.java:20: error: cannot find symbol\n\
    \                    isOdd(nums.get(i) / 10)) {\n                    ^\n  symbol:\
    \   method isOdd(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (num > 10) {\n       \
    \         if (num % 2 == 1) {\n                    int d = 0;\n              \
    \      while (num > 10) {\n                        num /= 10;\n              \
    \          d++;\n                    }\n                    if (num % 2 == 1)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdi3bjmcp.java:37)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        long count = nums.stream()\n                .filter(e -> (e\
    \ > 10 && (e % 10 % 2 != 0) && e / 10 % 2 != 0))\n                .count();\n\
    \        return (int) count;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvrkz1ueq.java:24)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int n : nums) {\n            if\
    \ (n > 10 && n % 2 == 1 && n % 10 == 1) {\n                count++;\n        \
    \    }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjxo5as5.java:26)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                if (nums.get(i) / 10\
    \ % 2 != 0 && nums.get(i) % 10 % 2 != 0) {\n                    count++;\n   \
    \             }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmwe7hply.java:29)\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(number -> number > 10 &&\
    \ \n            isFirstAndLastDigitOdd(number)).count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5gob3kv5.java:17: error: cannot find symbol\n            isFirstAndLastDigitOdd(number)).count();\n\
    \            ^\n  symbol:   method isFirstAndLastDigitOdd(Integer)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int counter = 0;\n        for (int i = 0; i < nums.size();\
    \ i++) {\n            if (nums.get(i) > 10) {\n                String num = Integer.toString(nums.get(i));\n\
    \                if (num.length() == 1) {\n                    if (Integer.parseInt(num)\
    \ % 2 != 0) {\n                        counter++;\n                    }\n   \
    \             } else {\n                    if (Integer.parseInt(num.substring(0,\
    \ 1)) % 2 != 0) {\n                        if (Integer.parseInt(num.substring(num.length()\
    \ - 1)) % 2 != 0) {\n                            counter++;\n                \
    \        }\n                    }\n                }\n            }\n        }\n\
    \        return counter;\n}\n    public static void main(String[] args) {\n  \
    \  assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int num : nums) {\n         \
    \   if (num > 10 && num > 0) {\n                if (num % 10 % 2 != 0 && num /\
    \ 10 == 0) {\n                    result++;\n                }\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpey0idedu.java:28)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int num : nums) {\n          \
    \  if (num > 10 && hasFirstAndLastOddDigits(num)) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpi4c7a9dp.java:18: error: cannot find symbol\n            if (num\
    \ > 10 && hasFirstAndLastOddDigits(num)) {\n                            ^\n  symbol:\
    \   method hasFirstAndLastOddDigits(int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011570
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            if (nums.get(i) > 10) {\n                // needs to be bigger\
    \ than 10\n                int num = nums.get(i);\n                if (num % 2\
    \ == 1) {\n                    // needs to have odd first digit\n            \
    \        int lastDigit = num % 10;\n                    if (lastDigit % 2 == 1)\
    \ {\n                        // needs to have odd last digit\n               \
    \         result++;\n                    }\n                }\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpestxlynl.java:36)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // TODO: implement this function\n        int count = 0;\n\
    \        for (int number : nums) {\n            if (number > 10) {\n         \
    \       String num = String.valueOf(number);\n                int length = num.length();\n\
    \                char first = num.charAt(0);\n                char last = num.charAt(length\
    \ - 1);\n                int firstNum = Character.getNumericValue(first);\n  \
    \              int lastNum = Character.getNumericValue(last);\n              \
    \  if (firstNum % 2 != 0 && lastNum % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int result = 0;\n        for (int num : nums) {\n         \
    \   if (num > 10 && num % 2 == 1 && num / 10 % 2 == 1) {\n                result++;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsmrg56qi.java:27)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(num -> num > 10 && (num %\
    \ 10) % 2 != 0 && (num / 10) % 2 != 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplyvq08xk.java:21)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> n > 10 && firstDigit(n)\
    \ % 2 != 0 && lastDigit(n) % 2 != 0).count();\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4h1pnqvw.java:16: error: cannot find symbol\n        return (int)\
    \ nums.stream().filter(n -> n > 10 && firstDigit(n) % 2 != 0 && lastDigit(n) %\
    \ 2 != 0).count();\n                                                         ^\n\
    \  symbol:   method firstDigit(Integer)\n  location: class Problem\n/tmp/tmp4h1pnqvw.java:16:\
    \ error: cannot find symbol\n        return (int) nums.stream().filter(n -> n\
    \ > 10 && firstDigit(n) % 2 != 0 && lastDigit(n) % 2 != 0).count();\n        \
    \                                                                           ^\n\
    \  symbol:   method lastDigit(Integer)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            int num = nums.get(i);\n            if (Math.abs(num) > 10) {\n\
    \                int first = num % 10;\n                int last = num / 10;\n\
    \                if (first % 2 != 0 && last % 2 != 0) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_z3xn3zi.java:31)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Implement the function\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpkcr1_obn.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        for (int i = 0; i < nums.size(); i++)\
    \ {\n            String number = String.valueOf(nums.get(i));\n            int\
    \ firstDigit = Integer.parseInt(String.valueOf(number.charAt(0)));\n         \
    \   int lastDigit = Integer.parseInt(String.valueOf(number.charAt(number.length()\
    \ - 1)));\n            if (nums.get(i) > 10 && isOdd(firstDigit) && isOdd(lastDigit))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprc1ehrx3.java:21: error: cannot find symbol\n            if (nums.get(i)\
    \ > 10 && isOdd(firstDigit) && isOdd(lastDigit)) {\n                         \
    \           ^\n  symbol:   method isOdd(int)\n  location: class Problem\n/tmp/tmprc1ehrx3.java:21:\
    \ error: cannot find symbol\n            if (nums.get(i) > 10 && isOdd(firstDigit)\
    \ && isOdd(lastDigit)) {\n                                                   \
    \      ^\n  symbol:   method isOdd(int)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        int count = 0;\n        // your code goes here...\n       \
    \ return count;\n}\n    public static void main(String[] args) {\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)-2, (int)1, (int)-5)))) == (0));\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15, (int)-73,\
    \ (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpixvo1r4j.java:22)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return (int) nums.stream().filter(n -> (n > 10) && (n % 2 !=\
    \ 0) && ((n % 10) % 2 != 0) && ((n / 10) % 2 != 0)).count();\n}\n    public static\
    \ void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mlu27q5.java:21)\n"
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Your code here.\n}\n    public static void main(String[]\
    \ args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp7cmfzpes.java:17: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011571
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        return 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5, (int)-2,\
    \ (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgslv4rz2.java:20)\n"
  stdout: ''
  timestamp: 1660011561
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function that takes an array of numbers as input\
    \ and returns \n    // the number of elements in the array that are greater than\
    \ 10 and both \n    // first and last digits of a number are odd (1, 3, 5, 7,\
    \ 9).\n    // For example:\n    // specialFilter([15, -73, 14, -15]) => 1 \n \
    \   // specialFilter([33, -2, -3, 45, 21, 109]) => 2\n    public static int specialFilter(ArrayList<Integer>\
    \ nums) {\n        // Type your code here\n        return (int) nums.stream().filter(x\
    \ -> x > 10 &&\n                x % 2 == 1 && x / 10 % 2 == 1).count();\n}\n \
    \   public static void main(String[] args) {\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)-2, (int)1, (int)-5)))) == (0));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)15,\
    \ (int)-73, (int)14, (int)-15)))) == (1));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)33,\
    \ (int)-2, (int)-3, (int)45, (int)21, (int)109)))) == (2));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)43, (int)-12, (int)93, (int)125, (int)121,\
    \ (int)109)))) == (4));\n    assert(specialFilter((new ArrayList<Integer>(Arrays.asList((int)71,\
    \ (int)-2, (int)-33, (int)75, (int)21, (int)19)))) == (3));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (0));\n    assert(specialFilter((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf33xbi6j.java:23)\n"
  stdout: ''
  timestamp: 1660011571

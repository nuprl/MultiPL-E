completions:
- "        // TODO: You should implement this function.\n        int max = -1;\n \
  \       for (int i = x; i <= y; i++) {\n            if (i % 2 == 0 && i > max) {\n\
  \                max = i;\n            }\n        }\n        return max;"
- "        // Your code goes here!\n        // For example, you can do something like\
  \ this:\n        // return x*y;\n        return 0;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
  \ {\n            return x;\n        }\n        return chooseNum(x + 1, y);"
- "        // TODO: Implement solution\n        return -1;"
- "        int mid = x + ((y - x) / 2);\n        return mid % 2 == 0 ? mid : chooseNum(x,\
  \ y - 1);"
- "        // If x > y, then there is no even number in [x, y]\n        if (x > y)\
  \ {\n            return -1;\n        }\n        // If x is even, then x is the biggest\
  \ even number in [x, y]\n        if (x % 2 == 0) {\n            return x;\n    \
  \    }\n        // x is odd, so we need to check the next even number in [x, y]\n\
  \        return chooseNum(x + 1, y);"
- "        int min = Math.min(x, y);\n        int max = Math.max(x, y);\n        for\
  \ (int i = max; i >= min; i--) {\n            if (i % 2 == 0) {\n              \
  \  return i;\n            }\n        }\n        return -1;"
- "        // WRITE YOUR CODE HERE\n        int ans = 0;\n        if (x % 2 == 0)\
  \ {\n            ans = x;\n        } else {\n            ans = x + 1;\n        }\n\
  \        if (ans <= y) {\n            return ans;\n        } else {\n          \
  \  return -1;\n        }"
- "        // The number of even numbers in the range [x, y] inclusive is:\n     \
  \   // num_even = (y - x + 1)/2\n        // The biggest even number in the range\
  \ [x, y] inclusive is:\n        // num_biggest = x + 2*(num_even - 1)\n        //\
  \ Proof: Say we have x = 12, y = 14.\n        // The number of even numbers in [12,\
  \ 14] is 2.\n        // The biggest even number in [12, 14] is 12 + 2*(2 - 1) =\
  \ 14.\n        // Say we have x = 12, y = 15.\n        // The number of even numbers\
  \ in [12, 15] is 3.\n        // The biggest even number in [12, 15] is 12 + 2*(3\
  \ - 1) = 16.\n        // Say we have x = 12, y = 16.\n        // The number of even\
  \ numbers in [12, 16] is 4.\n        // The biggest even number in [12, 16] is 12\
  \ + 2*(4 - 1) = 18.\n        int num_even = (y - x + 1)/2;\n        int num_biggest\
  \ = x + 2*(num_even - 1);\n        if (num_even == 0) {\n            return -1;\n\
  \        } else {\n            return num_biggest;\n        }"
- "        // YOUR CODE GOES HERE\n        int maxEven=-1;\n        for(int i=x;i<=y;i++){\n\
  \            if(i%2==0){\n                maxEven=i;\n            }\n        }\n\
  \        return maxEven;"
- "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
  \            return x;\n        } else {\n            return x + 1;\n        }"
- "        if (x % 2 == 0 && y % 2 == 0) {\n            if (x > y) {\n           \
  \     return x;\n            } else {\n                return y;\n            }\n\
  \        } else if (x % 2 == 0 && y % 2 != 0) {\n            return x;\n       \
  \ } else if (x % 2 != 0 && y % 2 == 0) {\n            return y;\n        } else\
  \ {\n            return -1;\n        }"
- "        // Your solution goes here.\n        // Change the return value to the\
  \ correct value.\n        int z = -1;\n        for (int i = x; i <= y; i++) {\n\
  \            if (i % 2 == 0) {\n                z = i;\n            }\n        }\n\
  \        return z;"
- "        // YOUR CODE GOES HERE\n        int result = -1;\n        for (int i =\
  \ y; i >= x; i--) {\n            if (i % 2 == 0) {\n                result = i;\n\
  \                break;\n            }\n        }\n        return result;"
- "        int even = 0;\n        if(x % 2 == 0)\n            even = x;\n        else\n\
  \            even = x + 1;\n        for(int i = even; i <= y; i += 2) {\n      \
  \      if(i % 2 == 0)\n                return i;\n        }\n        return -1;"
- '        // Place your code here'
- "        if (x <= y) {\n            if (x % 2 == 0) {\n                return x;\n\
  \            } else {\n                return x + 1;\n            }\n        } else\
  \ {\n            return -1;\n        }"
- "        // I know that this is not the most optimal solution, but it will work\n\
  \        // for sure.\n        for (int i = y; i >= x; i--) {\n            if (i\
  \ % 2 == 0) {\n                return i;\n            }\n        }\n        return\
  \ -1;"
- "        // YOUR CODE GOES HERE\n        // Modify the code below to return the\
  \ correct result\n        if(x>y)\n            return -1;\n        for(int i=y;i>=x;i--)\n\
  \        {\n            if(i%2==0)\n                return i;\n        }\n     \
  \   return -1;"
- "        // -----------------------------------------------------------\n      \
  \  // This code stub correctly solves the problem described above.\n        // It\
  \ may be hard to understand why it works.  You should solve\n        // the problem\
  \ by yourself without looking at this code.\n        // -----------------------------------------------------------\n\
  \        int z = x % 2 == 0 ? x : x + 1;\n        for (; z <= y; z += 2) {\n   \
  \         if (z % 2 == 0) {\n                return z;\n            }\n        }\n\
  \        return -1;"
- "        // TODO: write your code here\n        if (x % 2 == 0) {\n            return\
  \ x;\n        }\n        if (x + 1 == y) {\n            return -1;\n        }\n\
  \        return chooseNum(x + 1, y);"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x + 1 <= y)\
  \ {\n            return x + 1;\n        } else {\n            return -1;\n     \
  \   }"
- "        if (x == y) {\n            if (x % 2 == 0) {\n                return x;\n\
  \            } else {\n                return -1;\n            }\n        }\n  \
  \      if (x > y) {\n            int t = x;\n            x = y;\n            y =\
  \ t;\n        }\n        if (x % 2 == 0) {\n            return y;\n        } else\
  \ {\n            return y - 1;\n        }"
- '        return IntStream.rangeClosed(x, y).filter(v -> v % 2 == 0).max().orElse(-1);'
- "        // Implement me\n        int n = (x+y)/2;\n        if(n%2==0)\n       \
  \     return n;\n        else if(x%2==0)\n            return x;\n        else if(y%2==0)\n\
  \            return y;\n        else\n            return -1;"
- "        int ret = -1;\n        if (x % 2 == 0) {\n            ret = x;\n      \
  \  } else {\n            x += 1;\n        }\n        for (int i = x; i <= y; i +=\
  \ 2) {\n            ret = i;\n        }\n        return ret;"
- '        return IntStream.rangeClosed(x, y).filter(n -> n % 2 == 0).max().orElse(-1);'
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- '        return -1;'
- "        // Write your code here\n        int ans = 0;\n        if (x % 2 == 0)\
  \ {\n            ans = x;\n        } else {\n            if (x + 1 > y) {\n    \
  \            ans = -1;\n            } else {\n                ans = x + 1;\n   \
  \         }\n        }\n        return ans;"
- '        // YOUR CODE HERE'
- "        int maxEven = Integer.MIN_VALUE;\n        if (x % 2 == 0) {\n         \
  \   maxEven = x;\n        }\n        if (y % 2 == 0) {\n            maxEven = y;\n\
  \        }\n        int distance = Math.abs(x - y);\n        if (distance == 1)\
  \ {\n            return -1;\n        }\n        int curr = x;\n        while (curr\
  \ < y) {\n            if (curr % 2 == 0) {\n                maxEven = curr;\n  \
  \          }\n            curr++;\n        }\n        return maxEven;"
- "        // YOUR CODE GOES HERE\n        int x2 = x;\n        int y2 = y;\n    \
  \    int max = 0;\n        if (x%2 == 0){\n            max = x;\n        }\n   \
  \     else{\n            x2 = x + 1;\n        }\n        if (y%2 == 0){\n      \
  \      max = y;\n        }\n        else{\n            y2 = y - 1;\n        }\n\
  \        if (y2 < x2){\n            return -1;\n        }\n        else{\n     \
  \       return max;\n        }"
- "        // replace with your code!\n        return -1;"
- "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
  \            return y;\n        } else {\n            return y - 1;\n        }"
- "        // (write your code here)\n        return Stream.iterate(x, i -> i < y,\
  \ i -> i + 1).filter(i -> i % 2 == 0).max(Integer::compare).orElse(-1);"
- "        // IMPLEMENT ME\n        if(x > y) return -1;\n        if(x % 2 == 0) return\
  \ x;\n        return chooseNum(x + 1, y);"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        int num = -1;\n        for (int i = y; i >= x; i--) {\n            if (i\
  \ % 2 == 0) {\n                num = i;\n                break;\n            }\n\
  \        }\n        return num;"
- "        // Your code goes here\n        int choose = -1;\n        for(int i = x;\
  \ i <= y; i++){\n            if(i % 2 == 0){\n                choose = i;\n    \
  \        }\n        }\n        return choose;"
- "        if (x < 0 || y < 0) {\n            throw new IllegalArgumentException(\"\
  Arguments must be positive\");\n        }\n        if (x > y) {\n            throw\
  \ new IllegalArgumentException(\"'x' must be less than or equal to 'y'\");\n   \
  \     }\n        if (x == y) {\n            return x % 2 == 0 ? x : -1;\n      \
  \  }\n        // x < y\n        if (x % 2 == 0) {\n            return x;\n     \
  \   }\n        // x < y and x is odd\n        return chooseNum(x + 1, y);"
- "        // TODO: Fill in the code here!\n        int result = -1;\n        for\
  \ (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n                result\
  \ = i;\n            }\n        }\n        return result;"
- "        if (x%2 != 0) {\n            x++;\n        }\n        if (y%2 != 0) {\n\
  \            y--;\n        }\n        if (x <= y) {\n            return y;\n   \
  \     }\n        return -1;"
- '        return -1;'
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x == y) {\n\
  \            return -1;\n        } else {\n            return chooseNum(x + 1, y);\n\
  \        }"
- "        int num = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                num = i;\n            }\n        }\n        return\
  \ num;"
- '        return -1;'
- "        if (x <= 0 || y <= 0) {\n            throw new IllegalArgumentException(\"\
  Both arguments must be positive numbers\");\n        }\n\n        if (x > y) {\n\
  \            throw new IllegalArgumentException(\"The first argument must be less\
  \ than or equal to the second argument\");\n        }\n\n        for (int i = y;\
  \ i >= x; i--) {\n            if (i % 2 == 0) {\n                return i;\n   \
  \         }\n        }\n\n        return -1;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
  \ {\n            return x;\n        }\n        return chooseNum(x + 1, y);"
- "        int max = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0 && i > max) {\n                max = i;\n            }\n        }\n \
  \       return max;"
- '        return -1;'
- "        if (x % 2 == 0 && y % 2 == 0) {\n            return y;\n        }\n   \
  \     if (x % 2 == 1 && y % 2 == 1) {\n            return -1;\n        }\n     \
  \   return y - 1;"
- "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
  \            return x;\n        } else {\n            return x + 1;\n        }"
- '        return -1;'
- "        // YOUR CODE HERE\n        // REPLACE THE CODE BELOW WITH YOUR IMPLEMENTATION\n\
  \        return -1;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
  \            return x;\n        } else {\n            return x + 1;\n        }"
- "        int max_even = -1;\n        for (int i = x; i <= y; i++) {\n          \
  \  if (i % 2 == 0) {\n                max_even = i;\n            }\n        }\n\
  \        return max_even;"
- "        int i = Math.max(x, y);\n        while (i >= x) {\n            if (i %\
  \ 2 == 0) {\n                return i;\n            }\n            i -= 1;\n   \
  \     }\n        return -1;"
- "        // Your implementation goes here\n        if (x % 2 == 0) {\n         \
  \   return x;\n        } else if (x + 1 < y) {\n            return x + 1;\n    \
  \    } else {\n            return -1;\n        }"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- '        return -1;'
- "        // TODO implement\n        return -1;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
  \ {\n            return x;\n        }\n        if (x + 1 <= y && x + 1 % 2 == 0)\
  \ {\n            return x + 1;\n        }\n        return -1;"
- "        if (x == y) {\n            if (x % 2 == 0) {\n                return x;\n\
  \            } else {\n                return -1;\n            }\n        }\n  \
  \      if (x % 2 == 0) {\n            return x;\n        } else {\n            return\
  \ chooseNum(x + 1, y);\n        }"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x + 1 <= y)\
  \ {\n            return x + 1;\n        } else {\n            return -1;\n     \
  \   }"
- "        if (x % 2 == 0 && y % 2 == 0)\n            return y;\n        else if (x\
  \ % 2 == 1 && y % 2 == 1)\n            return x % 2 == 1 ? x : -1;\n        else\n\
  \            return x % 2 == 1 ? x : y;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        int result = -1;\n        // int low = Math.min(x, y);\n        // int\
  \ high = Math.max(x, y);\n        // for (int i = low; i <= high; i++) {\n     \
  \   //     if (i % 2 == 0) {\n        //         result = i;\n        //     }\n\
  \        // }\n        for (int i = Math.min(x, y); i <= Math.max(x, y); i++) {\n\
  \            if (i % 2 == 0) {\n                result = i;\n            }\n   \
  \     }\n        return result;"
- "        // Implement your solution here!\n        int sum = 0;\n        if (x >\
  \ y){\n            sum = -1;\n        }\n        else if (x % 2 == 0 && y % 2 ==\
  \ 0){\n            sum = y;\n        }\n        else if (x % 2 == 0 && y % 2 !=\
  \ 0){\n            sum = y - 1;\n        }\n        else if (x % 2 != 0 && y % 2\
  \ == 0){\n            sum = y;\n        }\n        else if (x % 2 != 0 && y % 2\
  \ != 0){\n            sum = y - 1;\n        }\n        return sum;"
- "        if (x % 2 == 0)\n            return Math.max(x, y);\n        return Math.max(x\
  \ - 1, y);"
- "        // Fill your code here\n        return -1;"
- "        int r = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                r = i;\n            }\n        }\n        return\
  \ r;"
- "        int maxEven = -1;\n        for (int i = x; i <= y; i++) {\n           \
  \ if (i % 2 == 0) {\n                maxEven = i;\n            }\n        }\n  \
  \      return maxEven;"
- '        return -1;'
- "        int max = 0;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0 && i > max) {\n                max = i;\n            }\n        }\n \
  \       if (max == 0) return -1;\n        return max;"
- '        return -1;'
- "        if (x % 2 == 0) {\n            return x > y ? -1 : x;\n        } else {\n\
  \            return y % 2 == 0 ? y : -1;\n        }"
- "        int range = y - x + 1;\n        for (int i = 0; i < range; i++) {\n   \
  \         if ((x + i) % 2 == 0) {\n                return x + i;\n            }\n\
  \        }\n        return -1;"
- "        // throw new UnsupportedOperationException(\"You have to implement this.\"\
  );\n        if (x % 2 == 0) {\n            return x;\n        } else if (x % 2 ==\
  \ 1 && y > x) {\n            return y;\n        } else {\n            return -1;\n\
  \        }"
- "        int max = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0 && i > max) {\n                max = i;\n            }\n        }\n \
  \       return max;"
- '        throw new RuntimeException("Not implemented");'
- "        // Replace the line below with your solution.\n        return -1;"
- "        // WRITE YOUR CODE HERE\n        return -1;"
- "        // Your code goes here!\n\n        // You'll have to use a for loop to\
  \ see if any numbers in the range\n        // [x, y] are even. Return the biggest\
  \ even number in the range!\n\n        // Don't forget to return -1 if there are\
  \ no even numbers in the range\n        // [x, y].\n        \n        int result\
  \ = -1;\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0) {\n\
  \                result = i;\n            }\n        }\n        return result;"
- "        // put your solution here\n        return y/2;"
- "        int i = x;\n        while (i <= y) {\n            if (i % 2 == 0) {\n \
  \               return i;\n            }\n            i++;\n        }\n        return\
  \ -1;"
- "        if (x % 2 == 0)\n            return x > y ? -1 : x;\n        if (x + 1\
  \ == y)\n            return -1;\n        return x + 1;"
- "\t\tint num = -1;\n\t\tfor(int i = x; i <= y; i++) {\n\t\t\tif (i % 2 == 0) {\n\
  \t\t\t\tnum = i;\n\t\t\t}\n\t\t}\n\t\treturn num;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        // See if y is even; if so, return y\n        if (y % 2 == 0) {\n     \
  \       return y;\n        } else {\n            // See if y-1 is even; if so, return\
  \ y-1\n            if ((y-1) % 2 == 0) {\n                return y-1;\n        \
  \    } else {\n                // See if y-2 is even; if so, return y-2\n      \
  \          if ((y-2) % 2 == 0) {\n                    return y-2;\n            \
  \    } else {\n                    // See if y-3 is even; if so, return y-3\n  \
  \                  if ((y-3) % 2 == 0) {\n                        return y-3;\n\
  \                    } else {\n                        // See if y-4 is even; if\
  \ so, return y-4\n                        if ((y-4) % 2 == 0) {\n              \
  \              return y-4;\n                        } else {\n                 \
  \           // See if y-5 is even; if so, return y-5\n                         \
  \   if ((y-5) % 2 == 0) {\n                                return y-5;\n       \
  \                     } else {\n                                // See if y-6 is\
  \ even; if so, return y-6\n                                if ((y-6) % 2 == 0) {\n\
  \                                    return y-6;\n                             \
  \   } else {\n                                    // See if y-7 is even; if so,\
  \ return y-7\n                                    if ((y-7) % 2 == 0) {\n      \
  \                                  return y-7;\n                               \
  \     } else {\n                                        // See if y-8 is even; if\
  \ so, return y-8\n                                        if ((y-8) % 2 == 0) {\n\
  \                                            return y-8;\n                     \
  \                   } else {\n                                            // See\
  \ if y-9 is even; if so, return y-9\n                                          \
  \  if ((y-9) % 2 == 0) {\n                                                return\
  \ y-9;\n                                            } else {\n                 \
  \                               // See if y-10 is even; if so, return y-10\n   \
  \                                             if ((y-10) % 2 == 0) {\n         \
  \                                           return y-10;\n                     \
  \                           } else {\n                                "
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x % 2 == 0 && y % 2 == 0)\n            return y;\n        else if (x\
  \ % 2 == 1 && y % 2 == 1)\n            return -1;\n        else\n            return\
  \ y - 1;"
- '        return 0;'
- "        if (x % 2 == 0)\n            return x;\n        if (x + 1 > y)\n      \
  \      return -1;\n        return x + 1;"
- "        if (x > y) return -1;\n        if (x % 2 == 0) {\n            return x;\n\
  \        } else {\n            return x + 1;\n        }"
- "        int l = Math.min(x, y);\n        int h = Math.max(x, y);\n        int r\
  \ = -1;\n        while (l <= h) {\n            if (l % 2 == 0) {\n             \
  \   r = l;\n            }\n            l++;\n        }\n        return r;"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x + 1 <= y)\
  \ {\n            return x + 1;\n        } else {\n            return -1;\n     \
  \   }"
- '        return IntStream.rangeClosed(x, y).filter(i -> i % 2 == 0).max().orElse(-1);'
- "        // TODO: Complete this function\n        int num;\n        if (x%2 != 0){\n\
  \            x++;\n        }\n        num = x;\n        while (num <= y){\n    \
  \        if (num%2 != 0){\n                num += 2;\n            }\n          \
  \  else{\n                return num;\n            }\n        }\n        return\
  \ -1;"
- "        //Remove this comment and complete the body of this function\n        //You\
  \ have to use only these imports:\n        //java.util.Scanner\n        //java.lang.Integer\n\
  \        //java.lang.Math\n        Scanner in = new Scanner(System.in);\n      \
  \  int max = -1;\n        for(int i = x; i<=y; i++){\n            if(Math.abs(i%2)==0\
  \ && i>max){\n                max = i;\n            }\n        }\n        return\
  \ max;"
- "        if (x > y) return -1;\n        if (x%2 == 0) return x;\n        return\
  \ chooseNum(x+1, y);"
- '        return 0;'
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        // Make sure x is not bigger than y\n        if (x > y) {\n           \
  \ int t = x;\n            x = y;\n            y = t;\n        }\n        int i =\
  \ x;\n        while (i <= y) {\n            if (i % 2 == 0) {\n                return\
  \ i;\n            }\n            i++;\n        }\n        return -1;"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x + 1 <= y)\
  \ {\n            return x + 1;\n        } else {\n            return -1;\n     \
  \   }"
- "        int out = -1;\n        if (x < y && x % 2 == 0)\n            out = x;\n\
  \        else if (x < y && x % 2 != 0)\n            out = x + 1;\n        else if\
  \ (x > y && y % 2 == 0)\n            out = y;\n        else if (x > y && y % 2 !=\
  \ 0)\n            out = y + 1;\n        else if (x == y && x % 2 == 0)\n       \
  \     out = x;\n        return out;"
- "        // Write your code here\n        return 0;"
- '        return -1;'
- "        int max = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0 && i > max) {\n                max = i;\n            }\n        }\n \
  \       return max;"
- '        return IntStream.rangeClosed(x, y).filter(z -> z % 2 == 0).max().orElse(-1);'
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x % 2 == 0)\n            return x;\n        if (x + 1 == y)\n     \
  \       return -1;\n        return chooseNum(x + 1, y);"
- "        // TODO: implement the solution here\n        return 0;"
- "        if (x % 2 == 0) {\n            return y % 2 == 0 ? y : y - 1;\n       \
  \ } else {\n            return y % 2 == 0 ? y - 1 : y - 2;\n        }"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        // TODO implement this function\n        int res = -1;\n        for(int\
  \ i = x; i <= y; i++) {\n            if(i % 2 == 0) {\n                res = i;\n\
  \            }\n        }\n        return res;"
- '        return IntStream.rangeClosed(x, y).filter(i -> i % 2 == 0).max().orElse(-1);'
- "        // Your code goes here\n        List<Integer> l = new ArrayList<>();\n\
  \        for(int i = x; i<=y; i++){\n            if(i%2==0){\n                l.add(i);\n\
  \            }\n        }\n        if(l.size()==0){\n            return -1;\n  \
  \      }\n        return Collections.max(l);"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x > y) {\n            int t = x;\n            x = y;\n            y\
  \ = t;\n        }\n        if (x % 2 == 0) {\n            return x;\n        }\n\
  \        return chooseNum(x + 1, y);"
- "        int z = -1;\n        if (x > y) {\n            return z;\n        }\n \
  \       if (x % 2 == 0) {\n            z = x;\n        } else {\n            z =\
  \ x + 1;\n        }\n        return z;"
- "        int max = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0 && i > max) {\n                max = i;\n            }\n        }\n \
  \       return max;"
- "        int result = -1;\n        // FIXME: implement this function according to\
  \ the question.\n        if (x % 2 == 0) {\n            result = x;\n        } else\
  \ if (x + 1 <= y) {\n            result = x + 1;\n        }\n        return result;"
- "        // TODO: write your code here.\n        if (x % 2 == 0)\n            return\
  \ x;\n        if (x % 2 == 1 && x + 1 <= y)\n            return x + 1;\n       \
  \ return -1;"
- "        int min = Math.min(x, y);\n        int max = Math.max(x, y);\n        int\
  \ ret = -1;\n        for (int i = min; i <= max; i++) {\n            if (i % 2 ==\
  \ 0) {\n                ret = i;\n            }\n        }\n        return ret;"
- "        if (x <= y) {\n            if (x % 2 == 0) {\n                return x;\n\
  \            } else {\n                return chooseNum(x + 1, y);\n           \
  \ }\n        } else {\n            return -1;\n        }"
- "        if (x > y) return -1;\n        int result = x;\n        for (int i = x;\
  \ i <= y; i++) {\n            if (i % 2 == 0) {\n                result = i;\n \
  \           }\n        }\n        return result;"
- "        // TODO: Implement this function.\n        return 0;"
- "        // Write your solution here.\n        // Do not write input/output code.\n\
  \        int max = -1;\n        for(int i = x; i <= y; i++){\n            if(i %\
  \ 2 == 0){\n                max = i;\n            }\n        }\n        return max;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        // Your code here\n        return -1;"
- "\t\tint check = x;\n\t\tfor(int i = x; i <= y; i++) {\n\t\t\tif(i % 2 == 0) {\n\
  \t\t\t\tcheck = i;\n\t\t\t}\n\t\t}\n\t\treturn check;"
- "        // IMPLEMENT ME\n        if (x > y) {\n            return -1;\n       \
  \ }\n        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n   \
  \             return i;\n            }\n        }\n        return -1;"
- '        throw new UnsupportedOperationException("Not implemented yet.");'
- "        if (x <= y) {\n            if (x % 2 == 0)\n                return x;\n\
  \            else if (x + 1 <= y)\n                return x + 1;\n            else\n\
  \                return -1;\n        } else {\n            return -1;\n        }"
- "        int[] evens = IntStream.rangeClosed(x, y).filter(z -> z % 2 == 0).toArray();\n\
  \        return evens.length > 0 ? evens[evens.length - 1] : -1;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        // TODO: You code here.\n        for(int i = y; i >= x; i--){\n       \
  \     if(i % 2 == 0){\n                return i;\n            }\n        }\n   \
  \     return -1;"
- "        // Your code here!\n        if (x%2==0) {\n            return x;\n    \
  \    } else if (x%2!=0) {\n            return x+1;\n        } else {\n         \
  \   return -1;\n        }"
- "        // Write your code here.\n        return -1;"
- "        // TODO: implement this function\n        for(int i = y; i >= x; i--) {\n\
  \            if(i % 2 == 0) {\n                return i;\n            }\n      \
  \  }\n        return -1;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "\tif (x % 2 == 0 && y % 2 == 0) {\n\t    return y;\n\t} else if (x % 2 == 0 &&\
  \ y % 2 == 1) {\n\t    return y - 1;\n\t} else if (x % 2 == 1 && y % 2 == 0) {\n\
  \t    return x;\n\t} else {\n\t    return -1;\n\t}"
- "        if (x % 2 == 0 && y % 2 == 0) {\n            return y;\n        }\n   \
  \     if (x % 2 == 1 && y % 2 == 1) {\n            return -1;\n        }\n     \
  \   return y - 1;"
- '        throw new RuntimeException("Not yet implemented");'
- "        // This is an example for usage of assertions.\n        // For more information\
  \ about assertions, see:\n        // https://docs.oracle.com/javase/tutorial/essential/exceptions/assert.html\n\
  \        assert (x >= 0);\n        assert (y >= 0);\n        if (x > y) {\n    \
  \        return -1;\n        }\n        int result = y;\n        while (result %\
  \ 2 != 0 && result > x) {\n            result--;\n        }\n        if (result\
  \ % 2 != 0) {\n            return -1;\n        }\n        return result;"
- "        if (x <= 0 || y <= 0)\n            return -1;\n        return x % 2 ==\
  \ 0 ? x : x + 1;"
- "        if (x%2 == 0) return x;\n        else if (x+1 == y) return -1;\n      \
  \  else return chooseNum(x+1, y);"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x < 0 || y < 0)\n            throw new IllegalArgumentException(\"\
  x and y must be positive.\");\n        int sol = -1;\n        for (int i = x; i\
  \ <= y; i++) {\n            if (i % 2 == 0) {\n                sol = i;\n      \
  \      }\n        }\n        return sol;"
- "        // TODO: write your code here\n        return -1;"
- "        if (x > y) {\n            return -1;\n        }\n        return (x % 2\
  \ == 0 ? x : x + 1);"
- "        if (x % 2 == 0 && y % 2 == 0)\n            return y;\n        else if (x\
  \ % 2 == 0 && y % 2 != 0)\n            return y - 1;\n        else if (x % 2 !=\
  \ 0 && y % 2 == 0)\n            return x;\n        else\n            return x %\
  \ 2 == 0 ? x : -1;"
- "        // Your code here.\n        return -1;"
- "        // IMPLEMENT THIS FUNCTION!\n        return -1;"
- "        int res = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                res = i;\n            }\n        }\n        return\
  \ res;"
- "        // Change the next line to your code.\n        return -1;"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x == y) {\n\
  \            return -1;\n        } else {\n            return chooseNum(x + 1, y);\n\
  \        }"
- "        int ans = -1;\n        for (int i = x; i <= y; i++) {\n            if (i\
  \ % 2 == 0) {\n                ans = i;\n            }\n        }\n        return\
  \ ans;"
- "\t    for(int i = y; i >= x; i--) {\n\t        if(i % 2 == 0) return i;\n\t   \
  \ }\n\t    return -1;"
- "        // Your implementation goes here.\n        return -1;"
- "        if (x > y) {\n            return -1;\n        }\n        int max = -1;\n\
  \        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0 && i > max)\
  \ {\n                max = i;\n            }\n        }\n        return max;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
  \ {\n            return x;\n        }\n        else {\n            return x + 1;\n\
  \        }"
- "        int big = Math.max(x, y);\n        int small = Math.min(x, y);\n      \
  \  for (int i = big; i >= small; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x % 2 == 0 && y % 2 == 0) {\n            return y;\n        }\n   \
  \     if (x % 2 == 1 && y % 2 == 1) {\n            return -1;\n        }\n     \
  \   if (x % 2 == 0 && y % 2 == 1) {\n            return x;\n        }\n        if\
  \ (x % 2 == 1 && y % 2 == 0) {\n            return y - 1;\n        }\n        return\
  \ -1;"
- "        // YOu can change it to whatever you want.\n        // The following example\
  \ implementation just returns -1.\n        // try {\n        //     Thread.sleep(5000);\n\
  \        // } catch (Exception e) {\n        //     // \n        // }\n        int\
  \ result = -1;\n        for (int i = x; i <= y; i++) {\n            if (i % 2 ==\
  \ 0) {\n                result = i;\n            }\n        }\n        return result;"
- "        // Insert your code here.\n        if (x % 2 == 0 && y % 2 == 0)\n    \
  \    {\n            if (x > y)\n            {\n                return x;\n     \
  \       }\n            else\n            {\n                return y;\n        \
  \    }\n        }\n        else if (x % 2 == 0 && y % 2 != 0)\n        {\n     \
  \       return x;\n        }\n        else if (x % 2 != 0 && y % 2 == 0)\n     \
  \   {\n            return y;\n        }\n        else if (x > y)\n        {\n  \
  \          if (x-1 == y)\n            {\n                return -1;\n          \
  \  }\n            else\n            {\n                return x-1;\n           \
  \ }\n        }\n        else if (x < y)\n        {\n            if (y-1 == x)\n\
  \            {\n                return -1;\n            }\n            else\n  \
  \          {\n                return y-1;\n            }\n        }\n        else\
  \ if (x == y)\n        {\n            if (x % 2 == 0)\n            {\n         \
  \       return x;\n            }\n            else\n            {\n            \
  \    return -1;\n            }\n        }\n        return -1;"
- "        int maxEven = -1;\n        int minEven = -1;\n        int maxOdd = -1;\n\
  \        int minOdd = -1;\n        boolean evenFound = false;\n        boolean oddFound\
  \ = false;\n        for (int i = x; i <= y; i++) {\n            if (i % 2 == 0)\
  \ {\n                evenFound = true;\n                if (minEven == -1) {\n \
  \                   minEven = i;\n                }\n                maxEven = i;\n\
  \            } else {\n                oddFound = true;\n                if (minOdd\
  \ == -1) {\n                    minOdd = i;\n                }\n               \
  \ maxOdd = i;\n            }\n        }\n        if (minEven == -1) {\n        \
  \    return minOdd;\n        }\n        if (minOdd == -1) {\n            return\
  \ minEven;\n        }\n        return minEven < minOdd ? minEven : minOdd;"
- "        int res = -1;\n        for (int i = y; i >= x; i--) {\n            if (i\
  \ % 2 == 0) {\n                res = i;\n                break;\n            }\n\
  \        }\n        return res;"
- "        int counter = 0;\n        int evenX = x;\n        int evenY = y;\n    \
  \    while (evenX % 2 != 0) {\n            evenX++;\n        }\n        while (evenY\
  \ % 2 != 0) {\n            evenY--;\n        }\n        for (int i = evenX; i <=\
  \ evenY; i += 2) {\n            counter++;\n        }\n        if (counter == 0)\
  \ {\n            return -1;\n        }\n        return evenY;"
- "        //TODO\n        int result = -1;\n        for (int i = x; i <= y; i++)\
  \ {\n            if ((i % 2) == 0) {\n                result = i;\n            }\n\
  \        }\n        return result;"
- "        // TODO: Implement this function\n\n        int greatest = x;\n       \
  \ int greatestEven = -1;\n        while (greatest <= y) {\n            if (greatest\
  \ % 2 == 0) {\n                greatestEven = greatest;\n            }\n       \
  \     greatest += 1;\n        }\n        return greatestEven;"
- "        int xx = x;\n        int yy = y;\n        if (x > y) {\n            xx\
  \ = y;\n            yy = x;\n        }\n        for (int i = yy; i >= xx; i--) {\n\
  \            if (i % 2 == 0) {\n                return i;\n            }\n     \
  \   }\n        return -1;"
- "        // TODO: Your code here\n        return 0;"
- "        // Your code here\n        return 0;"
- "        if (x <= y) {\n            if (x % 2 == 0) {\n                return x;\n\
  \            } else {\n                return chooseNum(x + 1, y);\n           \
  \ }\n        } else {\n            return -1;\n        }"
- "        // TODO: implement this function\n        return -1;"
- "        // TODO: implement this function\n        // Assume that x <= y\n     \
  \   if (x % 2 == 0) {\n            return Math.max(x, y);\n        } else {\n  \
  \          return Math.max(x + 1, y);\n        }"
- "        int diff = y - x;\n        if (diff < 0) return -1;\n        int index\
  \ = diff % 2 == 0 ? diff : diff - 1;\n        int result = x + index;\n        return\
  \ result % 2 == 0 ? result : -1;"
- "        int largestEven = -1;\n        for (int i = x; i <= y; i++) {\n       \
  \     if (i % 2 == 0) {\n                largestEven = i;\n            }\n     \
  \   }\n        return largestEven;"
- "        if (x%2==0) {\n            return x;\n        } else if (x%2==1 && y%2==0)\
  \ {\n            return y;\n        } else {\n            return -1;\n        }"
- "        // TODO: implement this function\n        return -1;"
- "        // Fix the following code to return the correct number.\n        int z\
  \ = -1;\n        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n\
  \                z = i;\n                break;\n            }\n        }\n    \
  \    return z;"
- "        for (int i = y; i >= x; i--) {\n            if (i % 2 == 0) {\n       \
  \         return i;\n            }\n        }\n        return -1;"
- "        if (x > y) {\n            return -1;\n        }\n        if (x % 2 == 0)\
  \ {\n            return x;\n        }\n        return x + 1;"
- "        if (x % 2 == 0) {\n            return x;\n        } else if (x + 1 <= y)\
  \ {\n            return x + 1;\n        } else {\n            return -1;\n     \
  \   }"
- "        if (x%2==0)\n            return x;\n        else if (x+1==y)\n        \
  \    return -1;\n        else\n            return chooseNum(x+1, y);"
- "        int xmod = x % 2;\n        int ymod = y % 2;\n        if (xmod == 0) {\n\
  \            if (ymod == 0) {\n                return y;\n            } else {\n\
  \                return y - 1;\n            }\n        } else {\n            if\
  \ (ymod == 0) {\n                return y - 2;\n            } else {\n         \
  \       return y - 3;\n            }\n        }"
- "        //YOUR CODE GOES HERE\n        int e = x % 2 == 0 ? x : x + 1;\n      \
  \  if (e <= y) {\n            return e;\n        }\n        return -1;"
- '        return Stream.iterate(x, a -> a + 1).limit(y - x + 1).filter(a -> a % 2
  == 0).max(Integer::compare).orElse(-1);'
- "        // if x < 0\n        if (x < 0) {\n            // if y < 0\n          \
  \  if (y < 0) {\n                // if x > y\n                if (x > y) {\n   \
  \                 // if x is even\n                    if (x % 2 == 0) {\n     \
  \                   // return x\n                        return x;\n           \
  \         }\n                    // else if y is even\n                    else\
  \ if (y % 2 == 0) {\n                        // return y\n                     \
  \   return y;\n                    }\n                    // else\n            \
  \        else {\n                        // return -1\n                        return\
  \ -1;\n                    }\n                }\n                // else if x <\
  \ y\n                else if (x < y) {\n                    // if y is even\n  \
  \                  if (y % 2 == 0) {\n                        // return y\n    \
  \                    return y;\n                    }\n                    // else\
  \ if x is even\n                    else if (x % 2 == 0) {\n                   \
  \     // return x\n                        return x;\n                    }\n  \
  \                  // else\n                    else {\n                       \
  \ // return -1\n                        return -1;\n                    }\n    \
  \            }\n                // else x == y\n                else {\n       \
  \             // if x and y are even\n                    if (x % 2 == 0 && y %\
  \ 2 == 0) {\n                        // return x\n                        return\
  \ x;\n                    }\n                    // else\n                    else\
  \ {\n                        // return -1\n                        return -1;\n\
  \                    }\n                }\n            }\n            // else y\
  \ >= 0\n            else {\n                // if x > y\n                if (x >\
  \ y) {\n                    // if x is even\n                    if (x % 2 == 0)\
  \ {\n                        // return x\n                        return x;\n  \
  \                  }\n                    // else if y is even\n               \
  \     else if (y % 2 == 0) {\n                        // return y\n            \
  \            return y;\n                    }\n                    // else\n   \
  \                 else {\n                        // return -1\n               \
  \         return -1;\n                    }\n                }\n               \
  \ // else if x < y\n                else if (x < y) {\n                    // if\
  \ y is even\n                    if (y % 2 == 0) {\n                        // return\
  \ y\n                        return y;\n                    }\n                \
  \    // else if x is even\n                    else if (x % 2 == 0) {\n"
- "        // TODO: Write your code here.\n        int max = 0;\n        for(int i\
  \ = x; i <= y; i++) {\n            if(i % 2 == 0) {\n                max = i;\n\
  \            }\n        }\n        if(max != 0) {\n            return max;\n   \
  \     }\n        return -1;"
- "        for (int n = y; n >= x; n--) {\n            if (n % 2 == 0) {\n       \
  \         return n;\n            }\n        }\n        return -1;"
- "        if (x > y) {\n            return -1;\n        } else if (x % 2 == 0) {\n\
  \            return x;\n        } else {\n            return chooseNum(x + 1, y);\n\
  \        }"
- "        // your code here\n        return 42;"
- '        return 2 * ((y / 2) - ((x - 1) / 2));'
- "        // use if statement\n        // int big = 0;\n        // if (x > y) {\n\
  \        //     big = x;\n        // } else {\n        //     big = y;\n       \
  \ // }\n        // for (int i = big; i >= x; i--) {\n        //     if (i % 2 ==\
  \ 0) {\n        //         return i;\n        //     }\n        // }\n        //\
  \ return -1;\n        // use for loop\n        for (int i = Math.max(x, y); i >=\
  \ x; i--) {\n            if (i % 2 == 0) {\n                return i;\n        \
  \    }\n        }\n        return -1;"
- "        // Write your code here!\n        return -1;"
language: java
name: HumanEval_102_choose_num
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // This function takes two positive numbers x and y and returns\
  \ the\n    // biggest even integer number that is in the range [x, y] inclusive.\
  \ If \n    // there's no such number, then the function should return -1.\n    //\
  \ For example:\n    // choose_num(12, 15) = 14\n    // choose_num(13, 12) = -1\n\
  \    public static int chooseNum(int x, int y) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(chooseNum((12),\
  \ (15)) == (14));\n    assert(chooseNum((13), (12)) == (-1));\n    assert(chooseNum((33),\
  \ (12354)) == (12354));\n    assert(chooseNum((5234), (5233)) == (-1));\n    assert(chooseNum((6),\
  \ (29)) == (28));\n    assert(chooseNum((27), (10)) == (-1));\n    assert(chooseNum((7),\
  \ (7)) == (-1));\n    assert(chooseNum((546), (546)) == (546));\n    }\n\n}\n"

name: HumanEval_22_filter_integers
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Filter given list of any python values only for integers\n\
  \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
  \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
  \ values) {\n"
tests: "    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
  \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
  \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
  \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
  \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
  \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
  \ (long)3l, (long)3l)))));\n    }\n\n}\n"
completions: ["        ArrayList<Long> res = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  res.add((Long) value);\n            }\n        }\n        return res;", '        return
    (ArrayList<Long>) values.stream().filter(v -> v instanceof Long).collect(Collectors.toList());',
  "        // insert code here\n        return new ArrayList<Long>();", "        //\
    \ YOUR CODE GOES HERE\n        return new ArrayList<Long>();", "        ArrayList<Long>\
    \ ints = new ArrayList<Long>();\n        for (Object v : values) {\n         \
    \   if (v instanceof Long) {\n                ints.add((Long) v);\n          \
    \  }\n        }\n        return ints;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Long)\n\
    \                res.add((Long) value);\n        }\n        return res;", "  \
    \      ArrayList<Long> res = new ArrayList<>();\n        for (Object val : values)\
    \ {\n            if (val instanceof Long) {\n                res.add((Long) val);\n\
    \            }\n        }\n        return res;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        for (Object value : values) {\n            if\
    \ (value instanceof Integer) {\n                result.add((Integer) value);\n\
    \            }\n        }\n        return result;", "        ArrayList<Long> integers\
    \ = new ArrayList<>();\n        // YOUR CODE HERE\n        return integers;",
  "        ArrayList<Long> result = new ArrayList<>();\n        for (Object value\
    \ : values) {\n            if (value instanceof Long) {\n                result.add((Long)\
    \ value);\n            }\n        }\n        return result;", "        // TODO:\
    \ Write your code here\n        ArrayList<Long> res = new ArrayList<>();\n   \
    \     for(Object obj : values) {\n            if(obj instanceof Long)\n      \
    \          res.add((Long)obj);\n        }\n        return res;", '        return
    values.stream().filter(value -> value instanceof Long).map(value -> (Long) value).collect(Collectors.toCollection(ArrayList::new));',
  "        ArrayList<Long> out = new ArrayList<>();\n        for (Object value : values)\
    \ {\n            if (value instanceof Long) {\n                out.add((Long)\
    \ value);\n            }\n        }\n        return out;", '        return null;',
  "        ArrayList<Long> ret = new ArrayList<>();\n        for (Object o : values)\
    \ {\n            if (o instanceof Long) {\n                ret.add((Long) o);\n\
    \            }\n        }\n        return ret;", "        ArrayList<Long> result\
    \ = new ArrayList<>();\n        // Add your code here\n        return result;",
  "        ArrayList<Long> arrL = new ArrayList<Long>();\n        for (Object o :\
    \ values) {\n            if (o instanceof Long) {\n                arrL.add((Long)\
    \ o);\n            }\n        }\n        return arrL;", "        ArrayList<Long>\
    \ nums = new ArrayList<>();\n        values.forEach(x -> {\n            if (x\
    \ instanceof Integer) {\n                nums.add((Integer) x);\n            }\n\
    \        });\n        return nums;", "        ArrayList<Long> res = new ArrayList<>();\n\
    \        for (Object value : values) {\n            if (value instanceof Integer)\
    \ {\n                res.add((long) value);\n            }\n        }\n      \
    \  return res;", "        ArrayList<Long> result = new ArrayList<>();\n      \
    \  for (Object value : values) {\n            if (value instanceof Integer) {\n\
    \                result.add((Long) value);\n            }\n        }\n       \
    \ return result;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_46_fib4
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int fib[] = new int[n+1];\n\
    \        fib[0] = 0;\n        fib[1] = 0;\n        fib[2] = 2;\n        fib[3]\
    \ = 0;\n        for(int i = 4; i <= n; i++) {\n            fib[i] = fib[i-1] +\
    \ fib[i-2] + fib[i-3] + fib[i-4];\n        }\n        return fib[n];\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc5ab6nte.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 0) return -1;\n\
    \        if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n ==\
    \ 2) return 2;\n        if (n == 3) return 0;\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 3; i <\
    \ n; i++) {\n            int temp = a + b + c + d;\n            a = b;\n     \
    \       b = c;\n            c = d;\n            d = temp;\n        }\n       \
    \ return a + b + c + d;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprg5tcumy.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        int m = n;\n       \
    \ if (n < 4) {\n            return n == 2 ? 2 : 0;\n        }\n        while (m\
    \ > 3) {\n            d = a + b + c;\n            a = b;\n            b = c;\n\
    \            c = d;\n            m--;\n        }\n        return d;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppubwrvpr.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 4; i <=\
    \ n; i++) {\n            int tmp = a;\n            a = b;\n            b = c;\n\
    \            c = d;\n            d = tmp + b + c + d;\n        }\n        return\
    \ d;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp34q7nrfu.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6vb5ra7x.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 0) throw new\
    \ IllegalArgumentException(\"n must be non-negative\");\n        if (n < 4) return\
    \ n;\n        int result = 0;\n        int[] prev = new int[]{0,0,2,0};\n    \
    \    for (int i = 4; i <= n; i++) {\n            result = prev[0] + prev[1] +\
    \ prev[2] + prev[3];\n            prev[0] = prev[1];\n            prev[1] = prev[2];\n\
    \            prev[2] = prev[3];\n            prev[3] = result;\n        }\n  \
    \      return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw0xbfpya.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Implement this\
    \ function.\n        if (n == 0 || n == 1) {\n            return 0;\n        }\
    \ else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n  \
    \          return 0;\n        } else {\n            int a = 0;\n            int\
    \ b = 0;\n            int c = 2;\n            int d = 0;\n            int e =\
    \ 0;\n            for (int i = 4; i <= n; i++) {\n                e = a + b +\
    \ c + d;\n                a = b;\n                b = c;\n                c =\
    \ d;\n                d = e;\n            }\n            return e;\n        }\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2p6_gb2g.java:45: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // f0 = 0\n        //\
    \ f1 = 0\n        // f2 = 2\n        // f3 = 0\n        // f4 = f0 + f1 + f2 +\
    \ f3\n        // f5 = f1 + f2 + f3 + f4\n        // f6 = f2 + f3 + f4 + f5\n \
    \       // f7 = f3 + f4 + f5 + f6\n        // f8 = f4 + f5 + f6 + f7\n       \
    \ // f9 = f5 + f6 + f7 + f8\n        // f10 = f6 + f7 + f8 + f9\n        // f11\
    \ = f7 + f8 + f9 + f10\n        // f12 = f8 + f9 + f10 + f11\n        // f13 =\
    \ f9 + f10 + f11 + f12\n        // f14 = f10 + f11 + f12 + f13\n        // f15\
    \ = f11 + f12 + f13 + f14\n        // f16 = f12 + f13 + f14 + f15\n        //\
    \ ...\n        // fk = f(k-4) + f(k-3) + f(k-2) + f(k-1)\n        int a = 0;\n\
    \        int b = 0;\n        int c = 2;\n        int d = 0;\n        int fk =\
    \ 0;\n        if (n == 0) {\n            return a;\n        } else if (n == 1)\
    \ {\n            return b;\n        } else if (n == 2) {\n            return c;\n\
    \        } else if (n == 3) {\n            return d;\n        } else {\n     \
    \       for (int i = 0; i < n - 3; i++) {\n                fk = a + b + c + d;\n\
    \                a = b;\n                b = c;\n                c = d;\n    \
    \            d = fk;\n            }\n            return fk;\n        }\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbnj32jpg.java:65: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp74i4mm_.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Write your code\
    \ here\n        if (n == 0) {\n            return 0;\n        }\n        int a\
    \ = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n        int\
    \ e = 0;\n        for (int i = 4; i <= n; i++) {\n            e = a + b + c +\
    \ d;\n            a = b;\n            b = c;\n            c = d;\n           \
    \ d = e;\n        }\n        return e;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp20m177op.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 3) {\n     \
    \       return n == 2 ? 2 : 0;\n        }\n        int[][] A = {{1, 1, 1, 1},\
    \ {1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}};\n        int[][] B = {{0}, {0}, {2},\
    \ {0}};\n        int[][] C = {\n            {1, 0, 0, 0},\n            {0, 1,\
    \ 0, 0},\n            {0, 0, 1, 0},\n            {0, 0, 0, 1}\n        };\n  \
    \      for (int i = 1; i < n - 3; i++) {\n            B = multiplyMatrices(A,\
    \ B);\n            C = multiplyMatrices(A, C);\n        }\n        return B[0][0];\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjgycnko.java:35: error: cannot find symbol\n            B = multiplyMatrices(A,\
    \ B);\n                ^\n  symbol:   method multiplyMatrices(int[][],int[][])\n\
    \  location: class Problem\n/tmp/tmphjgycnko.java:36: error: cannot find symbol\n\
    \            C = multiplyMatrices(A, C);\n                ^\n  symbol:   method\
    \ multiplyMatrices(int[][],int[][])\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn5rckpxi.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9cycr780.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // A: B: C: D: E: F:\n\
    \        // A: 0, B: 0, C: 2, D: 0, F: 4\n        // A: B: C: D: E: F:\n     \
    \   // A: B: 0, C: 2, D: 0, F: 4\n        // A: B: C: D: E: F:\n        // A:\
    \ B: C: 2, D: 0, F: 4\n        // A: B: C: D: E: F:\n        // A: B: C: D: 0,\
    \ F: 4\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: 4\n        //\
    \ A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n\
    \        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B:\
    \ C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n  \
    \      // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C:\
    \ D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n     \
    \   // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D:\
    \ E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        //\
    \ A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n\
    \        // A: B: C: D: E: F:\n        // A: B: C: D: E: F:\n       \nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0mc7mwqw.java:60)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] fibs = new int[n\
    \ + 1];\n        fibs[0] = 0;\n        fibs[1] = 0;\n        fibs[2] = 2;\n  \
    \      fibs[3] = 0;\n        for (int i = 4; i <= n; i++) {\n            fibs[i]\
    \ = fibs[i - 1] + fibs[i - 2] + fibs[i - 3] + fibs[i - 4];\n        }\n      \
    \  return fibs[n];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprfflr_p6.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Your code here!\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5utreld6.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 0) {\n     \
    \       return 0;\n        }\n        int [] arr = new int [n+1];\n        arr[0]\
    \ = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3] = 0;\n      \
    \  for (int i = 4; i <= n; i++) {\n            arr[i] = arr[i-1] + arr[i-2] +\
    \ arr[i-3] + arr[i-4];\n        }\n        return arr[n];\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5_r3fh2c.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 4) return n *\
    \ 2;\n        int a = 0, b = 0, c = 2, d = 0;\n        for (int i = 4; i <= n;\
    \ i++) {\n            d = a + b + c;\n            a = b;\n            b = c;\n\
    \            c = d;\n        }\n        return d;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt6dsxgme.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        } else if (n == 1) {\n            return 0;\n     \
    \   } else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n\
    \            return 0;\n        } else {\n            return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n        }\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg42z8p9f.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        } else if (n == 1) {\n            return 0;\n     \
    \   } else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n\
    \            return 0;\n        } else {\n            return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n        }\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp06gf_4_.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 2) return n*2;\n\
    \        int a = 2, b = 0, c = 0, d = 0, e = 2;\n        for (int i = 3; i <=\
    \ n; i++) {\n            c = a + b + c + d;\n            d = e;\n            e\
    \ = c;\n            a = b;\n            b = c;\n        }\n        return c;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8rq76qra.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptudk1wes.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 3) {\n     \
    \       return n == 0 ? 0 : 2;\n        }\n        int first = 0;\n        int\
    \ second = 0;\n        int third = 2;\n        int fourth = 2;\n        int ans\
    \ = 0;\n        for (int i = 3; i < n; i++) {\n            ans = first + second\
    \ + third + fourth;\n            first = second;\n            second = third;\n\
    \            third = fourth;\n            fourth = ans;\n        }\n        return\
    \ ans;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2m6dtd0p.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu8blmexb.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int v1 = 0;\n       \
    \ int v2 = 0;\n        int v3 = 2;\n        int v4 = 0;\n        int v = 0;\n\
    \        int i = 4;\n        if (n < 3) {\n            return 2*n;\n        }\n\
    \        while (i <= n) {\n            v = v1 + v2 + v3 + v4;\n            v1\
    \ = v2;\n            v2 = v3;\n            v3 = v4;\n            v4 = v;\n   \
    \         i++;\n        }\n        return v;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjmz8amsf.java:41: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // REPLACE THIS CODE\
    \ WITH YOUR IMPLEMENTATION\n        return 0;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbr2x882u.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Your code here.\n\
    \        return -1;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb5n8dxz2.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprt_diu9p.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 0) {\n      \
    \      throw new IllegalArgumentException(\"Fib4 only takes non-negative integers\"\
    );\n        }\n        int[] seq = new int[n+1];\n        seq[0] = 0;\n      \
    \  seq[1] = 0;\n        seq[2] = 2;\n        seq[3] = 0;\n        for (int i =\
    \ 4; i <= n; i++) {\n            seq[i] = seq[i-1] + seq[i-2] + seq[i-3] + seq[i-4];\n\
    \        }\n        return seq[n];\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp53dbiz_e.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkurr1ia7.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] arr = new int[n+1];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for(int i = 4; i < n+1; i++) {\n            arr[i] = arr[i-1]\
    \ + arr[i-2] + arr[i-3] + arr[i-4];\n        }\n        return arr[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnjmvd227.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        assert(n >= 0);\n   \
    \     if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n == 2)\
    \ return 2;\n        if (n == 3) return 0;\n        int a = 0;\n        int b\
    \ = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 4; i <= n;\
    \ i++) {\n            int newVal = a + b + c + d;\n            a = b;\n      \
    \      b = c;\n            c = d;\n            d = newVal;\n        }\n      \
    \  return a + b + c + d;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk1362tes.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int temp[] = new int[4];\n        temp[0] = 0;\n     \
    \   temp[1] = 0;\n        temp[2] = 2;\n        temp[3] = 0;\n        for (int\
    \ i = 4; i <= n; i++) {\n            int sum = 0;\n            for (int j = 0;\
    \ j < 4; j++) {\n                sum += temp[j];\n            }\n            for\
    \ (int j = 0; j < 3; j++) {\n                temp[j] = temp[j+1];\n          \
    \  }\n            temp[3] = sum;\n        }\n        return temp[3];\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgoszoywv.java:43: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptw7v5jim.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        } else if (n == 1) {\n            return 0;\n     \
    \   } else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n\
    \            return 0;\n        } else {\n            int a = 0;\n           \
    \ int b = 0;\n            int c = 2;\n            int d = 0;\n            for\
    \ (int i = 4; i <= n; i++) {\n                int e = a + b + c + d;\n       \
    \         a = b;\n                b = c;\n                c = d;\n           \
    \     d = e;\n            }\n            return a + b + c + d;\n        }\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6k2sd7j4.java:45: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 3) {\n     \
    \       return Math.abs(n - 2);\n        }\n        int[] fib = new int[n];\n\
    \        fib[0] = 0;\n        fib[1] = 0;\n        fib[2] = 2;\n        fib[3]\
    \ = 0;\n        for (int i = 4; i < n; i++) {\n            fib[i] = fib[i - 1]\
    \ + fib[i - 2] + fib[i - 3] + fib[i - 4];\n        }\n        return fib[n - 1];\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsx1xnqp4.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int f_one = 0;\n    \
    \    int f_two = 0;\n        int f_three = 2;\n        int f_four = 0;\n     \
    \   if (n == 0) return f_one;\n        if (n == 1) return f_two;\n        if (n\
    \ == 2) return f_three;\n        if (n == 3) return f_four;\n        for (int\
    \ i = 4; i <= n; i++) {\n            int temp = f_one + f_two + f_three + f_four;\n\
    \            f_one = f_two;\n            f_two = f_three;\n            f_three\
    \ = f_four;\n            f_four = temp;\n        }\n        return f_four;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg2udltgf.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp22n4w84p.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // >>> Your code here.\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprvd986a6.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe7lq1g2f.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Not implemented\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfjzszg36.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new UnsupportedOperationException(\"\
    delete this line\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkbjnvb9z.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpblont8lw.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 4) {\n      \
    \      if (n == 0) {\n                return 0;\n            } else if (n == 1)\
    \ {\n                return 0;\n            } else if (n == 2) {\n           \
    \     return 2;\n            } else if (n == 3) {\n                return 0;\n\
    \            }\n        }\n        int i = 0;\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        while (i < n - 3) {\n\
    \            int temp = d;\n            d = c + b + a + d;\n            a = b;\n\
    \            b = c;\n            c = temp;\n            i++;\n        }\n    \
    \    return d;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphcl8yzmf.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n == 0) {\n    \
    \        return a;\n        }\n        if (n == 1) {\n            return b;\n\
    \        }\n        if (n == 2) {\n            return c;\n        }\n        if\
    \ (n == 3) {\n            return d;\n        }\n        for (int i = 4; i <= n;\
    \ i++) {\n            int e = a + b + c + d;\n            a = b;\n           \
    \ b = c;\n            c = d;\n            d = e;\n        }\n        return d;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vc11tp2.java:47: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n == 0) {\n    \
    \        return a;\n        }\n        if (n == 1) {\n            return b;\n\
    \        }\n        if (n == 2) {\n            return c;\n        }\n        if\
    \ (n == 3) {\n            return d;\n        }\n        int i = 4;\n        while\
    \ (i <= n) {\n            int temp = a + b + c + d;\n            a = b;\n    \
    \        b = c;\n            c = d;\n            d = temp;\n            i += 1;\n\
    \        }\n        return d;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_kilxmf9.java:49: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 4) {\n      \
    \      return n*n - n/2;\n        }\n        int n1 = 0;\n        int n2 = 0;\n\
    \        int n3 = 2;\n        int n4 = 0;\n        int result = 0;\n        for\
    \ (int i = 4; i <= n; i++) {\n            result = n1 + n2 + n3 + n4;\n      \
    \      n1 = n2;\n            n2 = n3;\n            n3 = n4;\n            n4 =\
    \ result;\n        }\n        return result;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphtcovy33.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int f0 = 0;\n       \
    \ int f1 = 0;\n        int f2 = 2;\n        int f3 = 0;\n        int fn = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            fn = f3 + f2 + f1 + f0;\n\
    \            f0 = f1;\n            f1 = f2;\n            f2 = f3;\n          \
    \  f3 = fn;\n        }\n        return fn;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_eaxj5n.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 0) return 0;\n\
    \        int a = 0, b = 0, c = 2, d = 0;\n        for (int i = 3; i <= n; i++)\
    \ {\n            d = a + b + c;\n            a = b;\n            b = c;\n    \
    \        c = d;\n        }\n        return d;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjw5wcc9j.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Your code here.\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7hbqb7zm.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 3) {\n      \
    \      return n * 2;\n        }\n        int n4 = 0;\n        int n3 = 0;\n  \
    \      int n2 = 2;\n        int n1 = 0;\n        int n0 = 0;\n        for (int\
    \ i = 3; i <= n; i++) {\n            n0 = n1 + n2 + n3 + n4;\n            n4 =\
    \ n3;\n            n3 = n2;\n            n2 = n1;\n            n1 = n0;\n    \
    \    }\n        return n0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpho1j6m8x.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo4uvwnf8.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] cache = new int[4];\n\
    \        for (int i = 0; i < 4; i++) {\n            cache[i] = 0;\n        }\n\
    \        for (int i = 2; i <= n; i++) {\n            int next = 0;\n         \
    \   for (int j = 0; j < 4; j++) {\n                next += cache[j];\n       \
    \     }\n            for (int j = 0; j < 3; j++) {\n                cache[j] =\
    \ cache[j+1];\n            }\n            cache[3] = next;\n        }\n      \
    \  return cache[3];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplyro66zb.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int[] fib = new int[n+1];\n\
    \        fib[0] = 0;\n        fib[1] = 0;\n        fib[2] = 2;\n        fib[3]\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            fib[i] = fib[i-1]\
    \ + fib[i-2] + fib[i-3] + fib[i-4];\n        }\n        return fib[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppcgf97bl.java:44: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] last4 = new int[4];\n\
    \        last4[0] = 0;\n        last4[1] = 0;\n        last4[2] = 2;\n       \
    \ last4[3] = 0;\n        if (n <= 3) {\n            return last4[n];\n       \
    \ }\n        for (int i = 4; i <= n; i++) {\n            int temp = last4[0] +\
    \ last4[1] + last4[2] + last4[3];\n            last4[0] = last4[1];\n        \
    \    last4[1] = last4[2];\n            last4[2] = last4[3];\n            last4[3]\
    \ = temp;\n        }\n        return last4[3];\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_zixx48b.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpti4zkriv.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // PUT YOUR CODE HERE\n\
    \        int[] array = new int[4];\n        int temp = 0;\n        array[0] =\
    \ 0;\n        array[1] = 0;\n        array[2] = 2;\n        array[3] = 0;\n  \
    \      for(int i = 4; i <= n; i++){\n          temp = array[0] + array[1] + array[2]\
    \ + array[3];\n          array[0] = array[1];\n          array[1] = array[2];\n\
    \          array[2] = array[3];\n          array[3] = temp;\n        }\n     \
    \   return array[3];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp10940bo1.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int fib4n_3 = 0;\n   \
    \     int fib4n_2 = 2;\n        int fib4n_1 = 0;\n        int fib4n = 0;\n   \
    \     for (int i = 4; i <= n; i++) {\n            fib4n = fib4n_1 + fib4n_2 +\
    \ fib4n_3 + 0;\n            fib4n_3 = fib4n_2;\n            fib4n_2 = fib4n_1;\n\
    \            fib4n_1 = fib4n;\n        }\n        return fib4n;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc_2i8o2z.java:46: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n < 4) {\n     \
    \       return 0;\n        }\n        for (int i = 4; i <= n; i++) {\n       \
    \     int temp = a + b + c + d;\n            a = b;\n            b = c;\n    \
    \        c = d;\n            d = temp;\n        }\n        return d;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7y2fxyo3.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n == 0) return a;\n\
    \        if (n == 1) return b;\n        if (n == 2) return c;\n        for (int\
    \ i = 3; i <= n; i++) {\n            d = a + b + c;\n            a = b;\n    \
    \        b = c;\n            c = d;\n        }\n        return d;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn1dh9xlk.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Type your code here.\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7i2ksggg.java:27)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] array = new int[4];\n\
    \        array[0] = 0;\n        array[1] = 0;\n        array[2] = 2;\n       \
    \ array[3] = 0;\n        for (int i = 4; i <= n; i++) {\n            int sum =\
    \ 0;\n            for (int j = 0; j < 4; j++) {\n                sum += array[j];\n\
    \            }\n            for (int j = 0; j < 3; j++) {\n                array[j]\
    \ = array[j+1];\n            }\n            array[3] = sum;\n        }\n     \
    \   return array[3];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpseyxertx.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 1) {\n     \
    \       return 0;\n        }\n        if (n == 2) {\n            return 2;\n \
    \       }\n        if (n == 3) {\n            return 0;\n        }\n        int\
    \ a = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n       \
    \ for (int i = 3; i < n; i++) {\n            int t = a + b + c + d;\n        \
    \    a = b;\n            b = c;\n            c = d;\n            d = t;\n    \
    \    }\n        return a + b + c + d;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp1ynyvkb.java:44: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] arr = new int[n+1];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for(int i = 4; i < n+1; i++) {\n            arr[i] = arr[i-1]\
    \ + arr[i-2] + arr[i-3] + arr[i-4];\n        }\n        return arr[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp48ln20ml.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaqq1ohkl.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int fib0 = 0;\n      \
    \  int fib1 = 0;\n        int fib2 = 2;\n        int fib3 = 0;\n        int fib\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            fib = fib0 + fib1\
    \ + fib2 + fib3;\n            fib0 = fib1;\n            fib1 = fib2;\n       \
    \     fib2 = fib3;\n            fib3 = fib;\n        }\n        return fib;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp143srri9.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] values = new int[n\
    \ + 1];\n        values[0] = 0;\n        values[1] = 0;\n        values[2] = 2;\n\
    \        values[3] = 0;\n        for (int i = 4; i <= n; i++) {\n            values[i]\
    \ = values[i - 1] + values[i - 2] + values[i - 3] + values[i - 4];\n        }\n\
    \        return values[n];\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbyviuqn.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int res = 0;\n      \
    \  return res;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0rj192pg.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ybk81o8.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp32aafvoq.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Not implemented\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd7741pp7.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        int temp = 0;\n    \
    \    if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n == 2)\
    \ return 2;\n        if (n == 3) return 0;\n        for (int i = 0; i < n - 3;\
    \ i++) {\n            temp = d;\n            d = a + b + c + d;\n            a\
    \ = b;\n            b = c;\n            c = temp;\n        }\n        return d;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6vkwp1bv.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Implement me!\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt_krp082.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int n1 = 0;\n        int\
    \ n2 = 0;\n        int n3 = 2;\n        int n4 = 0;\n        int curr = 0;\n \
    \       for (int i = 4; i <= n; i++) {\n            curr = n1 + n2 + n3 + n4;\n\
    \            n1 = n2;\n            n2 = n3;\n            n3 = n4;\n          \
    \  n4 = curr;\n        }\n        return curr;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc3w51swr.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int f1 = 0;\n       \
    \ int f2 = 0;\n        int f3 = 2;\n        int f4 = 0;\n        int f5 = 4;\n\
    \        if (n == 0) return f1;\n        if (n == 1) return f2;\n        if (n\
    \ == 2) return f3;\n        if (n == 3) return f4;\n        if (n == 4) return\
    \ f5;\n        for (int i = 4; i < n; i++) {\n            int temp = f1 + f2 +\
    \ f3 + f4;\n            f1 = f2;\n            f2 = f3;\n            f3 = f4;\n\
    \            f4 = temp;\n        }\n        return f1 + f2 + f3 + f4;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjrj_3qqg.java:41: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] dp = new int[n+1];\n\
    \        dp[0] = 0;\n        dp[1] = 0;\n        dp[2] = 2;\n        dp[3] = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            dp[i] = dp[i-1] + dp[i-2]\
    \ + dp[i-3] + dp[i-4];\n        }\n        return dp[n];\nreturn 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq266iwu4.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Not implemented.\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf5o1xdrx.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjrkzxh_.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        assert n >= 0;\n    \
    \    int n1 = 0;\n        int n2 = 0;\n        int n3 = 2;\n        int n4 = 0;\n\
    \        int n5 = 0;\n        for (int i = 3; i <= n; i++) {\n            n5 =\
    \ n1 + n2 + n3 + n4;\n            n1 = n2;\n            n2 = n3;\n           \
    \ n3 = n4;\n            n4 = n5;\n        }\n        return n5;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplzh2sou2.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        int e = 0;\n       \
    \ int i = 4;\n        while (i <= n) {\n            e = a + b + c + d;\n     \
    \       a = b;\n            b = c;\n            c = d;\n            d = e;\n \
    \           i += 1;\n        }\n        return e;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpahvw9kqg.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO:\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphr833x6i.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 3; i <=\
    \ n; i++) {\n            int curr = a + b + c + d;\n            a = b;\n     \
    \       b = c;\n            c = d;\n            d = curr;\n        }\n       \
    \ return d;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj0re9adk.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int n1 = 0;\n        int n2 = 0;\n        int n3 = 2;\n\
    \        int n4 = 0;\n        int current = 0;\n        for (int i = 4; i <= n;\
    \ i++) {\n            current = n1 + n2 + n3 + n4;\n            n1 = n2;\n   \
    \         n2 = n3;\n            n3 = n4;\n            n4 = current;\n        }\n\
    \        return current;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7tfcuh1n.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n == 0) return a;\n\
    \        if (n == 1) return b;\n        if (n == 2) return c;\n        if (n ==\
    \ 3) return d;\n        while (n > 3) {\n            int tmp = d;\n          \
    \  d = c;\n            c = b;\n            b = a;\n            a = tmp;\n    \
    \        d = d + c + b + a;\n            n--;\n        }\n        return d;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_u7lz8fw.java:41: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int n_4 = 0;\n        int n_3 = 0;\n        int n_2 =\
    \ 2;\n        int n_1 = 0;\n        int nth = 0;\n        for (int i = 4; i <=\
    \ n; i++) {\n            nth = n_4 + n_3 + n_2 + n_1;\n            n_4 = n_3;\n\
    \            n_3 = n_2;\n            n_2 = n_1;\n            n_1 = nth;\n    \
    \    }\n        return nth;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj8vjbm8a.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsjwkmi2k.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // fill me in\n     \
    \   return -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpks2zmp8l.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx9pc6agp.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // fill me in\n     \
    \   return 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0rp7mg6l.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Hint: the key thing\
    \ to realize is that the n-th Fib4 number is the sum of the last n - 3 Fib4 numbers.\n\
    \        // Hint: use some form of a \"sliding window\" to keep track of the last\
    \ n - 3 Fib4 numbers\n        // Hint: think about a circular buffer as a way\
    \ to implement the sliding window\n        // Hint: a circular buffer is better\
    \ than a Queue because you don't need any dequeue() operations\n        // Hint:\
    \ use a circular buffer of size 3\n        // Hint: the buffer should store the\
    \ indices of the Fib4 numbers, not the Fib4 numbers themselves\n        // Hint:\
    \ what are the initial values of the circular buffer?\n        // Hint: you can\
    \ use the same circular buffer to keep track of the last n - 3 Fib4 numbers and\
    \ to keep track of the last n - 3 Fib4 indices\n        int[] buffer = new int[3];\n\
    \        buffer[0] = 0;\n        buffer[1] = 1;\n        buffer[2] = 2;\n    \
    \    int r = n - 3;\n        while (r >= 0) {\n            int sum = 0;\n    \
    \        for (int i = 0; i < buffer.length; i++) {\n                sum += buffer[i];\n\
    \            }\n            for (int i = 0; i < buffer.length - 1; i++) {\n  \
    \              buffer[i] = buffer[i + 1];\n            }\n            buffer[buffer.length\
    \ - 1] = sum;\n            r--;\n        }\n        return buffer[2];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9yxyymk1.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Use Java 8 streams\
    \ to efficiently compute the n-th element of the fib4 number sequence.  Do not\
    \ use recursion.\n        int a = 0;\n        int b = 0;\n        int c = 2;\n\
    \        int d = 0;\n        if (n == 0){\n            return a;\n        }\n\
    \        if (n == 1){\n            return b;\n        }\n        if (n == 2){\n\
    \            return c;\n        }\n        if (n == 3){\n            return d;\n\
    \        }\n        for (int i = 3; i < n; i++){\n            int temp = a;\n\
    \            a = b;\n            b = c;\n            c = d;\n            d = temp\
    \ + b + c + d;\n        }\n        return d;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxtbn0m6e.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // replace this with\
    \ your implementation\n        int[] f = new int[n + 1];\n        int result =\
    \ 0;\n        if (n == 0) {\n            result = 0;\n        } else if (n ==\
    \ 1) {\n            result = 0;\n        } else if (n == 2) {\n            result\
    \ = 2;\n        } else if (n == 3) {\n            result = 0;\n        } else\
    \ {\n            f[0] = 0;\n            f[1] = 0;\n            f[2] = 2;\n   \
    \         f[3] = 0;\n            for (int i = 4; i <= n; i++) {\n            \
    \    f[i] = f[i - 1] + f[i - 2] + f[i - 3] + f[i - 4];\n            }\n      \
    \      result = f[n];\n        }\n        return result;\nreturn 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwcnzv_t5.java:45: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        //TODO: write code here.\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplollt4ws.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        assert n >= 0;\n    \
    \    if (n <= 3) return n;\n        int a = 0, b = 0, c = 2, d = 0;\n        for\
    \ (int i = 4; i <= n; i++) {\n            d = a + b + c;\n            a = b;\n\
    \            b = c;\n            c = d;\n        }\n        return d;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvtdt259s.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int F0 = 0;\n       \
    \ int F1 = 0;\n        int F2 = 2;\n        int F3 = 0;\n        int Fn = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            Fn = F0 + F1 + F2 + F3;\n\
    \            F0 = F1;\n            F1 = F2;\n            F2 = F3;\n          \
    \  F3 = Fn;\n        }\n        return Fn;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgckssw7n.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int f1 = 0;\n       \
    \ int f2 = 0;\n        int f3 = 2;\n        int f4 = 0;\n        int f = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            f = f1 + f2 + f3 + f4;\n\
    \            f1 = f2;\n            f2 = f3;\n            f3 = f4;\n          \
    \  f4 = f;\n        }\n        return f;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxdeds8mu.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Please implement the fib4() method\");\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxno9m40z.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        int[] ans = new int[n + 1];\n        ans[0]\
    \ = 0;\n        ans[1] = 0;\n        ans[2] = 2;\n        ans[3] = 0;\n      \
    \  for (int i = 4; i <= n; i++) {\n            ans[i] = ans[i - 1] + ans[i - 2]\
    \ + ans[i - 3] + ans[i - 4];\n        }\n        return ans[n];\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprn_hlg41.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Implement this placeholder.\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsrif21xz.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // we can compute the\
    \ fib4 sequence in O(n) by using dynamic programming and storing the results of\n\
    \        // the subproblems. This makes the recurrence relation of fib4 trivial\
    \ to compute.\n        // Note: in practice, fib4(48) overflows a 32-bit integer.\
    \ \n        if (n == 0) {\n            return 0;\n        }\n        if (n ==\
    \ 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return\
    \ 2;\n        }\n        if (n == 3) {\n            return 0;\n        }\n   \
    \     int[] fib = new int[n+1];\n        fib[0] = 0;\n        fib[1] = 0;\n  \
    \      fib[2] = 2;\n        fib[3] = 0;\n        for (int i = 4; i <= n; i++)\
    \ {\n            fib[i] = fib[i-1] + fib[i-2] + fib[i-3] + fib[i-4];\n       \
    \ }\n        return fib[n];\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyd55gaup.java:47: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO\n        throw\
    \ new RuntimeException(\"not implemented\");\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpozmuae0l.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 4; i <=\
    \ n; i++) {\n            int temp = a + b + c + d;\n            a = b;\n     \
    \       b = c;\n            c = d;\n            d = temp;\n        }\n       \
    \ return a + b + c + d;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuv5h3_fr.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Not implemented\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj5mxfy7k.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Type your solution\
    \ here\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpipswlcth.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpphabur7w.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n      int a = 0;\n      int b\
    \ = 0;\n      int c = 2;\n      int d = 0;\n      if (n == 0) return a;\n    \
    \  if (n == 1) return b;\n      if (n == 2) return c;\n      if (n == 3) return\
    \ d;\n      for (int i = 4; i <= n; i++) {\n        int sum = a + b + c + d;\n\
    \        a = b;\n        b = c;\n        c = d;\n        d = sum;\n      }\n \
    \     return d;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptbumwmkn.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        int e = 0;\n       \
    \ if (n == 0) return a;\n        if (n == 1) return b;\n        if (n == 2) return\
    \ c;\n        if (n == 3) return d;\n        for (int i = 4; i <= n; i++) {\n\
    \            e = a + b + c + d;\n            a = b;\n            b = c;\n    \
    \        c = d;\n            d = e;\n        }\n        return e;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphwyf85bx.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] f = new int[n+1];\n\
    \        f[0] = 0;\n        f[1] = 0;\n        f[2] = 2;\n        f[3] = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            f[i] = f[i-1] + f[i-2] +\
    \ f[i-3] + f[i-4];\n        }\n        return f[n];\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxoc8zjxg.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return n;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp64gt58v3.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int fib4 = 0;\n     \
    \   return fib4;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprs1aen57.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Here's a hint!\n \
    \       // return 1;\n        int fib4[] = new int[n + 1];\n        fib4[0] =\
    \ 0;\n        fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n     \
    \   for (int i = 4; i <= n; i++) {\n            fib4[i] = fib4[i - 1] + fib4[i\
    \ - 2] + fib4[i - 3] + fib4[i - 4];\n        }\n        return fib4[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_wmqo2ty.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3w89_s5u.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int a = 0, b = 0, c = 2, d = 0;\n        for (int i =\
    \ 4; i <= n; i++) {\n            int f = a + b + c + d;\n            a = b;\n\
    \            b = c;\n            c = d;\n            d = f;\n        }\n     \
    \   return a + b + c + d;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg6w7asy6.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv5_6se8h.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Slight optimization:\
    \ the fib4 values are periodic (mod 16) so we only need to track the last 4.\n\
    \        int x4 = 0;\n        int x3 = 0;\n        int x2 = 2;\n        int x1\
    \ = 0;\n        int x0 = 0;\n        for (int i = 3; i <= n; i++) {\n        \
    \    x0 = x1 + x2 + x3 + x4;\n            x4 = x3;\n            x3 = x2;\n   \
    \         x2 = x1;\n            x1 = x0;\n        }\n        return x0;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzhwpo3ao.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int last3 = 0;\n    \
    \    int last2 = 0;\n        int last1 = 2;\n        int current = 0;\n      \
    \  for (int i = 3; i <= n; i++) {\n            current = last1 + last2 + last3;\n\
    \            last3 = last2;\n            last2 = last1;\n            last1 = current;\n\
    \        }\n        return current;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgz2jv8le.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdkms6us0.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8w1hfbj5.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        /* TODO */\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp29kkc49d.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Fill out the rest\
    \ of this function.\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpflp273jr.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int result = 0;\n   \
    \     return result;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4mbbk_3t.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Fill this in.\n\
    \        return -1;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1pcgybn1.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Need to implement this\");\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2iwlw6u.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] cache = new int[n+1];\n\
    \        Arrays.fill(cache, -1);\n        cache[0] = 0;\n        cache[1] = 0;\n\
    \        cache[2] = 2;\n        cache[3] = 0;\n        for (int i = 4; i <= n;\
    \ i++) {\n            cache[i] = cache[i-1] + cache[i-2] + cache[i-3] + cache[i-4];\n\
    \        }\n        return cache[n];\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpybijjzhs.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int prev0 = 0;\n    \
    \    int prev1 = 0;\n        int prev2 = 2;\n        int prev3 = 0;\n        int\
    \ c = 0;\n        if (n == 0) {\n            return 0;\n        }\n        if\
    \ (n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n      \
    \      return 2;\n        }\n        if (n == 3) {\n            return 0;\n  \
    \      }\n        for (int i = 4; i <= n; i++) {\n            c = prev0 + prev1\
    \ + prev2 + prev3;\n            prev0 = prev1;\n            prev1 = prev2;\n \
    \           prev2 = prev3;\n            prev3 = c;\n        }\n        return\
    \ c;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp13xj4s6v.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 0) {\n      \
    \      throw new IllegalArgumentException(\"n can't be negative\");\n        }\n\
    \        int a = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n\
    \        if (n == 0) {\n            return a;\n        }\n        if (n == 1)\
    \ {\n            return b;\n        }\n        if (n == 2) {\n            return\
    \ c;\n        }\n        if (n == 3) {\n            return d;\n        }\n   \
    \     int p = 0;\n        int q = 0;\n        int r = 0;\n        int s = 0;\n\
    \        int t = 0;\n        int u = 0;\n        for (int i = 0; i < n - 3; i++)\
    \ {\n            t = a + b + c + d;\n            u = b;\n            b = c;\n\
    \            c = d;\n            d = t;\n        }\n        return d;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbdiu8yii.java:56: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int[] acc = new int[4];\n\
    \        acc[0] = 0;\n        acc[1] = 0;\n        acc[2] = 2;\n        acc[3]\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            int total = 0;\n \
    \           for (int j = 0; j < 4; j++) {\n                total += acc[j];\n\
    \            }\n            acc[i % 4] = total;\n        }\n        return acc[n\
    \ % 4];\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpekm29x2y.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk0e4ms3r.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int a = 0;\n        int b = 0;\n        int c = 2;\n \
    \       int d = 0;\n        for (int i = 4; i <= n; i++) {\n            int temp\
    \ = a + b + c + d;\n            a = b;\n            b = c;\n            c = d;\n\
    \            d = temp;\n        }\n        return a + b + c + d;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcnc9q6sm.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 2) return 0;\n\
    \        if (n == 2) return 2;\n        int a = 0, b = 0, c = 2, d = 0;\n    \
    \    for (int i = 3; i <= n; i++) {\n            d = a + b + c;\n            a\
    \ = b;\n            b = c;\n            c = d;\n        }\n        return d;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpefbhpg5x.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] arr = new int[n+1];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for(int i = 4; i < n+1; i++) {\n            arr[i] = arr[i-1]\
    \ + arr[i-2] + arr[i-3] + arr[i-4];\n        }\n        return arr[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpep44cjqd.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 4) {\n      \
    \      return fib4_naive(n);\n        }\n        int[] f = new int[n+1];\n   \
    \     f[0] = 0;\n        f[1] = 0;\n        f[2] = 2;\n        f[3] = 0;\n   \
    \     for (int i = 4; i <= n; i++) {\n            f[i] = f[i-1] + f[i-2] + f[i-3]\
    \ + f[i-4];\n        }\n        return f[n];\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7r8mp5zu.java:24: error: cannot find symbol\n            return\
    \ fib4_naive(n);\n                   ^\n  symbol:   method fib4_naive(int)\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 3; i <=\
    \ n; i++) {\n            int sum = a + b + c + d;\n            a = b;\n      \
    \      b = c;\n            c = d;\n            d = sum;\n        }\n        return\
    \ d;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpubk9s1_5.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Implement this\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzlykd5h7.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int curr = 0;\n     \
    \   int prev = 0;\n        int prevPrev = 0;\n        int prevPrevPrev = 0;\n\
    \        int prevPrevPrevPrev = 0;\n        if (n == 0) {\n            return\
    \ 0;\n        }\n        if (n == 1) {\n            return 0;\n        }\n   \
    \     if (n == 2) {\n            return 2;\n        }\n        if (n == 3) {\n\
    \            return 0;\n        }\n        for (int i = 0; i < n; i++) {\n   \
    \         curr = prev + prevPrev + prevPrevPrev + prevPrevPrevPrev;\n        \
    \    prevPrevPrevPrev = prevPrevPrev;\n            prevPrevPrev = prevPrev;\n\
    \            prevPrev = prev;\n            prev = curr;\n        }\n        return\
    \ curr;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc9myeuo9.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // This is a pretty simple\
    \ method.  All we have to do is initialize an array of length five and initialize\
    \ it to {0, 0, 2, 0, 1}.\n        // Then we can advance it by one each time,\
    \ essentially simulating the recursion.\n        // To do this, let's use the\
    \ rotate method in Python or the rotate method in Java (Arrays.rotate).\n    \
    \    //\n        // Here's a sample implementation in Python.\n        // def\
    \ fib4(n):\n        //   a = [0, 0, 2, 0, 1]\n        //   for i in range(n-4):\n\
    \        //       a.append(sum(a))\n        //       a.pop(0)\n        //   return\
    \ a[-1]\n        //\n        // To do this in Java, we would do something like\
    \ the following.\n        // public static int fib4(int n) {\n        //   int[]\
    \ a = {0, 0, 2, 0, 1};\n        //   for (int i = 0; i < n-4; i++) {\n       \
    \ //       a[5] = a[0] + a[1] + a[2] + a[3];\n        //       Arrays.rotate(a,\
    \ -1);\n        //   }\n        //   return a[5];\n        // }\n        //\n\
    \        // Note that we used a[5] to refer to the index after a.  This is because\
    \ we're rotating by -1, which means that the value of the 0th\n        // index\
    \ will be moved to the 5th index.\n        //\n        // One thing to note about\
    \ the algorithm is that we are only storing the five most recent Fib4 numbers.\
    \  This means that we are only\n        // using O(1) memory.\n        //\n  \
    \      // Now, let's think about the runtime.  The only part of our algorithm\
    \ that runs for a variable number of times is the for loop.\n        // To analyze\
    \ this, we need to look at the number of times the loop runs and the number of\
    \ times each line runs.\n        // First of all, the loop is run n-4 times. \
    \ We can say that n-4 >= n-5, so if n >= 5, n-4 > n-5, so the loop\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1an2a79x.java:57)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] numbers = new int[5];\n\
    \        numbers[0] = 0;\n        numbers[1] = 0;\n        numbers[2] = 2;\n \
    \       numbers[3] = 0;\n        numbers[4] = 0;\n        for (int i = 4; i <\
    \ n; i++) {\n            numbers[0] = numbers[1];\n            numbers[1] = numbers[2];\n\
    \            numbers[2] = numbers[3];\n            numbers[3] = numbers[4];\n\
    \            numbers[4] = numbers[0] + numbers[1] + numbers[2] + numbers[3];\n\
    \        }\n        return numbers[4];\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9gkjfhe3.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] sol = new int[n+1];\n\
    \        for (int i = 0; i < n; i++) {\n            if (i == 0) {\n          \
    \      sol[i] = 0;\n            } else if (i == 1) {\n                sol[i] =\
    \ 0;\n            } else if (i == 2) {\n                sol[i] = 2;\n        \
    \    } else if (i == 3) {\n                sol[i] = 0;\n            } else {\n\
    \                sol[i] = sol[i-1] + sol[i-2] + sol[i-3] + sol[i-4];\n       \
    \     }\n        }\n        return sol[n-1];\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt1_dr_7_.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptat16t3s.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO: Implement me\n\
    \        int[] f = new int[n + 1];\n        f[0] = 0;\n        f[1] = 0;\n   \
    \     f[2] = 2;\n        f[3] = 0;\n        for (int i = 4; i <= n; i++) {\n \
    \           f[i] = f[i - 1] + f[i - 2] + f[i - 3] + f[i - 4];\n        }\n   \
    \     return f[n];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9g4k8fid.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int[] ans = new int[n];\n\
    \        ans[0] = 0;\n        ans[1] = 0;\n        ans[2] = 2;\n        ans[3]\
    \ = 0;\n        for (int i = 4; i < n; i++) {\n            ans[i] = ans[i-1] +\
    \ ans[i-2] + ans[i-3] + ans[i-4];\n        }\n        return ans[n-1];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpadz2thcv.java:44: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int num1 = 0;\n     \
    \   int num2 = 0;\n        int num3 = 2;\n        int num4 = 0;\n        int num5\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            num5 = num1 + num2\
    \ + num3 + num4;\n            num1 = num2;\n            num2 = num3;\n       \
    \     num3 = num4;\n            num4 = num5;\n        }\n        return num5;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph7ol4hgp.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnr51ri2d.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] arr = new int[4];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            int[] temp = arr.clone();\n\
    \            arr[0] = temp[1];\n            arr[1] = temp[2];\n            arr[2]\
    \ = temp[3];\n            arr[3] = temp[0] + temp[1] + temp[2] + temp[3];\n  \
    \      }\n        return arr[3];\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ns6kl05.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a=0,b=0,c=2,d=0;\n\
    \        for(int i=4;i<=n;i++){\n            d=a+b+c;\n            a=b;\n    \
    \        b=c;\n            c=d;\n        }\n        return d;\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd2jp92mm.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 3) return n;\n\
    \        int[] fib = new int[n+1];\n        fib[0] = 0;\n        fib[1] = 0;\n\
    \        fib[2] = 2;\n        fib[3] = 0;\n        for (int i = 4; i <= n; i++)\
    \ {\n            fib[i] = fib[i-1] + fib[i-2] + fib[i-3] + fib[i-4];\n       \
    \ }\n        return fib[n];\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7a2qhlej.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        if (n == 0) return a;\n\
    \        if (n == 1) return b;\n        if (n == 2) return c;\n        if (n ==\
    \ 3) return d;\n        for (int i = 4; i <= n; i++) {\n            int f = a\
    \ + b + c + d;\n            a = b;\n            b = c;\n            c = d;\n \
    \           d = f;\n        }\n        return d;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8k3c96x9.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        assert n >= 0;\n    \
    \    if (n <= 3) {\n            return n * 2;\n        }\n        int a = 0;\n\
    \        int b = 0;\n        int c = 2;\n        int d = 0;\n        int result\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            result = a + b + c\
    \ + d;\n            a = b;\n            b = c;\n            c = d;\n         \
    \   d = result;\n        }\n        return result;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgkwsth2r.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] fibs = new int[n\
    \ + 1];\n        fibs[0] = 0;\n        fibs[1] = 0;\n        fibs[2] = 2;\n  \
    \      fibs[3] = 0;\n        for (int i = 4; i <= n; i++) {\n            fibs[i]\
    \ = fibs[i - 1] + fibs[i - 2] + fibs[i - 3] + fibs[i - 4];\n        }\n      \
    \  return fibs[n];\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8mhnz2cu.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        } else if (n == 1) {\n            return 0;\n     \
    \   } else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n\
    \            return 0;\n        } else {\n            int[] f = new int[n+1];\n\
    \            f[0] = 0;\n            f[1] = 0;\n            f[2] = 2;\n       \
    \     f[3] = 0;\n            for (int i = 4; i <= n; i++) {\n                f[i]\
    \ = f[i-1] + f[i-2] + f[i-3] + f[i-4];\n            }\n            return f[n];\n\
    \        }\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpto0g1jp7.java:42: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // TODO\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuaf5dsbk.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return (int) fib4Rec(n,\
    \ new HashMap<Integer, Long>());\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2qxzp98t.java:23: error: cannot find symbol\n        return (int)\
    \ fib4Rec(n, new HashMap<Integer, Long>());\n                     ^\n  symbol:\
    \   method fib4Rec(int,HashMap<Integer,Long>)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // @TODO: Generate code\
    \ here.\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp690g1cou.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Fill in the missing\
    \ code.\n        // return 0;\n        if (n == 0) {\n            return 0;\n\
    \        }\n        if (n == 1) {\n            return 0;\n        }\n        if\
    \ (n == 2) {\n            return 2;\n        }\n        if (n == 3) {\n      \
    \      return 0;\n        }\n        int a = 0;\n        int b = 0;\n        int\
    \ c = 2;\n        int d = 0;\n        int curr = 0;\n        for (int i = 4; i\
    \ <= n; i++) {\n            curr = a + b + c + d;\n            a = b;\n      \
    \      b = c;\n            c = d;\n            d = curr;\n        }\n        return\
    \ curr;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpirxe_k0p.java:50: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 4; i <=\
    \ n; i++) {\n            d = a + b + c;\n            a = b;\n            b = c;\n\
    \            c = d;\n        }\n        return d;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyfsjkxl2.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] seq = new int[n+1];\n\
    \        seq[0] = 0;\n        seq[1] = 0;\n        seq[2] = 2;\n        seq[3]\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            seq[i] = seq[i-1]\
    \ + seq[i-2] + seq[i-3] + seq[i-4];\n        }\n        return seq[n];\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpozqkjx_2.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int F0 = 0;\n       \
    \ int F1 = 0;\n        int F2 = 2;\n        int F3 = 0;\n        int F4 = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            F4 = F0 + F1 + F2 + F3;\n\
    \            F0 = F1;\n            F1 = F2;\n            F2 = F3;\n          \
    \  F3 = F4;\n        }\n        return F4;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5sh8swoa.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int a = 0;\n        int\
    \ b = 0;\n        int c = 2;\n        int d = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            d = a + b + c;\n            a = b;\n            b = c;\n\
    \            c = d;\n        }\n        return d;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplrkc1y74.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] fibs = new int[5];\n\
    \        fibs[0] = 0;\n        fibs[1] = 0;\n        fibs[2] = 2;\n        fibs[3]\
    \ = 0;\n        fibs[4] = 1;\n        if (n < 5) {\n            return fibs[n];\n\
    \        }\n        int fib1 = 0;\n        int fib2 = 0;\n        int fib3 = 2;\n\
    \        int fib4 = 0;\n        int fib5 = 1;\n        int nextFib = 0;\n    \
    \    for (int i = 5; i <= n; i++) {\n            nextFib = fib1 + fib2 + fib3\
    \ + fib4 + fib5;\n            fib1 = fib2;\n            fib2 = fib3;\n       \
    \     fib3 = fib4;\n            fib4 = fib5;\n            fib5 = nextFib;\n  \
    \      }\n        return nextFib;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp56c16q8l.java:47: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // REPLACE THIS LINE\
    \ WITH YOUR CODE\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7tzx1_ok.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        assert n >= 0;\n    \
    \    if (n == 0) return 0;\n        if (n == 1) return 0;\n        if (n == 2)\
    \ return 2;\n        if (n == 3) return 0;\n        int[] dp = new int[n+1];\n\
    \        dp[0] = 0;\n        dp[1] = 0;\n        dp[2] = 2;\n        dp[3] = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            dp[i] = dp[i-1] + dp[i-2]\
    \ + dp[i-3] + dp[i-4];\n        }\n        return dp[n];\nreturn 0;\n    }\n \
    \   public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6gz5ltqq.java:37: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    not implemented\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6r_i5m2k.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 4) {\n      \
    \      if (n == 0) return 0;\n            if (n == 1) return 0;\n            if\
    \ (n == 2) return 2;\n            if (n == 3) return 0;\n        }\n        int\
    \ a = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n       \
    \ int i = 4;\n        while (i <= n) {\n            int temp = d;\n          \
    \  d = a + b + c + d;\n            a = b;\n            b = c;\n            c =\
    \ temp;\n            i++;\n        }\n        return d;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n \
    \   assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzpjg13lq.java:43: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbacz18lz.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int prev1 = 2;\n        int prev2 = 0;\n        int prev3\
    \ = 0;\n        int prev4 = 0;\n        int curr = 0;\n        for (int i = 4;\
    \ i <= n; i++) {\n            curr = prev1 + prev2 + prev3 + prev4;\n        \
    \    prev4 = prev3;\n            prev3 = prev2;\n            prev2 = prev1;\n\
    \            prev1 = curr;\n        }\n        return curr;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmh1j1oae.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmzm2yhn6.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n <= 3) {\n     \
    \       return n * 2;\n        }\n        else {\n            int a = 2;\n   \
    \         int b = 0;\n            int c = 0;\n            int d = 2;\n       \
    \     for (int i = 4; i <= n; i++) {\n                a = b + c + d;\n       \
    \         b = c;\n                c = d;\n                d = a;\n           \
    \ }\n            return a;\n        }\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) ==\
    \ (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm5nevv6s.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 0) {\n      \
    \      throw new IllegalArgumentException(\"fib4 is undefined for negative n\"\
    );\n        }\n        if (n == 0) {\n            return 0;\n        }\n     \
    \   if (n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n \
    \           return 2;\n        }\n        if (n == 3) {\n            return 0;\n\
    \        }\n        int[] memo = new int[n+1];\n        memo[0] = 0;\n       \
    \ memo[1] = 0;\n        memo[2] = 2;\n        memo[3] = 0;\n        for (int i\
    \ = 4; i <= n; i++) {\n            memo[i] = memo[i-1] + memo[i-2] + memo[i-3]\
    \ + memo[i-4];\n        }\n        return memo[n];\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxhmnwxp0.java:47: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Hint:  this is a very\
    \ similar problem to the Fibbonacci problem.  What are the differences?\n    \
    \    return 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaajk1s2a.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3xq300e6.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptk1m_0_r.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    implement me!\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfu0pah9b.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Implement here\n \
    \       int a = 0;\n        int b = 0;\n        int c = 2;\n        int d = 0;\n\
    \        if (n == 0) return a;\n        if (n == 1) return b;\n        if (n ==\
    \ 2) return c;\n        if (n == 3) return d;\n        for (int i = 4; i <= n;\
    \ i++) {\n            int temp = a + b + c + d;\n            a = b;\n        \
    \    b = c;\n            c = d;\n            d = temp;\n        }\n        return\
    \ d;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcsmd6vqu.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // Fill in the blank(s)\
    \ to complete the function\n        return 0;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpid256ldo.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // write your solution\
    \ here\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt97lbodt.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        /* IMPLEMENT ME */\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_fei6ai.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int first = 0;\n    \
    \    int second = 0;\n        int third = 2;\n        int fourth = 0;\n      \
    \  int result = 0;\n        if (n == 0) {\n            return 0;\n        }\n\
    \        if (n == 1) {\n            return 0;\n        }\n        if (n == 2)\
    \ {\n            return 2;\n        }\n        if (n == 3) {\n            return\
    \ 0;\n        }\n        for (int i = 0; i < n - 3; i++) {\n            result\
    \ = first + second + third + fourth;\n            first = second;\n          \
    \  second = third;\n            third = fourth;\n            fourth = result;\n\
    \        }\n        return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpztv_ody0.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // ...\n        int fib4_prev3\
    \ = 0;\n        int fib4_prev2 = 0;\n        int fib4_prev1 = 2;\n        int\
    \ fib4_prev0 = 0;\n        int nth_fib4 = 0;\n        if (n == 0) {\n        \
    \    return fib4_prev3;\n        } else if (n == 1) {\n            return fib4_prev2;\n\
    \        } else if (n == 2) {\n            return fib4_prev1;\n        } else\
    \ if (n == 3) {\n            return fib4_prev0;\n        }\n        for (int i\
    \ = 4; i <= n; i++) {\n            nth_fib4 = fib4_prev3 + fib4_prev2 + fib4_prev1\
    \ + fib4_prev0;\n            fib4_prev3 = fib4_prev2;\n            fib4_prev2\
    \ = fib4_prev1;\n            fib4_prev1 = fib4_prev0;\n            fib4_prev0\
    \ = nth_fib4;\n        }\n        return nth_fib4;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnxl6k57z.java:46: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new NotImplementedException();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdiw2whi0.java:23: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int[] fib4 = new int[n + 1];\n        fib4[0] = 0;\n \
    \       fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n        for\
    \ (int i = 4; i <= n; i++) {\n            fib4[i] = fib4[i - 1] + fib4[i - 2]\
    \ + fib4[i - 3] + fib4[i - 4];\n        }\n        return fib4[n];\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpumrvwfyj.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        } else if (n == 1) {\n            return 0;\n     \
    \   } else if (n == 2) {\n            return 2;\n        } else if (n == 3) {\n\
    \            return 0;\n        }\n        // you can use a matrix exponentiation\
    \ algorithm here.\n        // some hints:\n        //    0 0 2 0\n        // \
    \   1 0 0 0\n        //    0 1 0 0\n        //    0 0 0 1\n        // is a matrix\
    \ that, when multiplied by its own vector, yields the vector fib4(n-1), fib4(n-2),\
    \ fib4(n-3), fib4(n-4).\n        // To get fib4(n), you can multiply the vector\
    \ 1,0,0,0 by that matrix^(n-1).\n        return 0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6piu2bas.java:41: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3lid87to.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    not implemented yet\");\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n   \
    \ assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn4260zu8.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_0ounnwn.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n < 3) return n *\
    \ 2;\n        int a = 0, b = 0, c = 2, d = 0;\n        while (n > 3) {\n     \
    \       d = a + b + c;\n            a = b;\n            b = c;\n            c\
    \ = d;\n            n--;\n        }\n        return d;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n  \
    \  assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptgyau5g8.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp28m1m3ve.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        //your code here\n  \
    \      return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzh5t8z6g.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        throw new RuntimeException(\"\
    Not implemented.\");\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv5e73x4z.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int[] arr = new int[n+1];\n\
    \        arr[0] = 0;\n        arr[1] = 0;\n        arr[2] = 2;\n        arr[3]\
    \ = 0;\n        for(int i = 4; i <= n; i++) {\n            arr[i] = arr[i-1] +\
    \ arr[i-2] + arr[i-3] + arr[i-4];\n        }\n        return arr[n];\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpva9_oljl.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) return 0;\n\
    \        if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        int prevprevprevprev = 0;\n        int prevprevprev =\
    \ 0;\n        int prevprev = 2;\n        int prev = 0;\n        int curr = 0;\n\
    \        for (int i = 4; i <= n; i++) {\n            curr = prevprevprevprev +\
    \ prevprevprev + prevprev + prev;\n            prevprevprevprev = prevprevprev;\n\
    \            prevprevprev = prevprev;\n            prevprev = prev;\n        \
    \    prev = curr;\n        }\n        return curr;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplucidtmi.java:40: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int n1 = 0;\n       \
    \ int n2 = 0;\n        int n3 = 2;\n        int n4 = 0;\n        int n5 = 0;\n\
    \        for (int i = 0; i < n - 2; i++) {\n            n5 = n1 + n2 + n3 + n4;\n\
    \            n1 = n2;\n            n2 = n3;\n            n3 = n4;\n          \
    \  n4 = n5;\n        }\n        return n5;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(fib4((5)) == (4));\n    assert(fib4((8))\
    \ == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12)) == (386));\n\
    \    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqa5do6yk.java:36: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        if (n == 0) {\n     \
    \       return 0;\n        }\n        if (n == 1) {\n            return 0;\n \
    \       }\n        if (n == 2) {\n            return 2;\n        }\n        if\
    \ (n == 3) {\n            return 0;\n        }\n        int res = 2;\n       \
    \ int fib1 = 0;\n        int fib2 = 0;\n        int fib3 = 2;\n        int fib4\
    \ = 0;\n        for (int i = 4; i <= n; i++) {\n            res = fib1 + fib2\
    \ + fib3 + fib4;\n            fib1 = fib2;\n            fib2 = fib3;\n       \
    \     fib3 = fib4;\n            fib4 = res;\n        }\n        return res;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmnk7irsp.java:48: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // BEGIN SOLUTION\n \
    \       int[] seq = new int[4];\n        int sum = 0;\n        for (int i = 1;\
    \ i <= n; i++) {\n            if (i <= 4) {\n                seq[i-1] = i == 3\
    \ ? 2 : 0;\n            } else {\n                sum = seq[0] + seq[1] + seq[2]\
    \ + seq[3];\n                seq[0] = seq[1];\n                seq[1] = seq[2];\n\
    \                seq[2] = seq[3];\n                seq[3] = sum;\n           \
    \ }\n        }\n        return seq[3];\n        // END SOLUTION\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph87mjjvt.java:39: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return -1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmlt31ked.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        int f[] = new int[n +\
    \ 1];\n        int i;\n        f[0] = 0;\n        f[1] = 0;\n        f[2] = 2;\n\
    \        f[3] = 0;\n        for (i = 4; i <= n; i++)\n            f[i] = f[i -\
    \ 1] + f[i - 2] + f[i - 3] + f[i - 4];\n        return f[n];\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(fib4((5)) == (4));\n\
    \    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n    assert(fib4((12))\
    \ == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoyexl875.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 1;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpusjwlpm6.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(fib4((5)) ==\
    \ (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n  \
    \  assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6p0tuvjt.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // insert code here\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpozjc_9wk.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        // your code goes here\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(fib4((5)) == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10))\
    \ == (104));\n    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf0716te3.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // The Fib4 number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n    // fib4(0) -> 0\n    //\
    \ fib4(1) -> 0\n    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently\
    \ compute the n-th element of the fib4 number sequence.  Do not use recursion.\n\
    \    // >>> fib4(5)\n    // 4\n    // >>> fib4(6)\n    // 8\n    // >>> fib4(7)\n\
    \    // 14\n    public static int fib4(int n) {\n        return n < 2 ? 0 : n\
    \ == 2 ? 2 : n == 3 ? 0 : fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(fib4((5))\
    \ == (4));\n    assert(fib4((8)) == (28));\n    assert(fib4((10)) == (104));\n\
    \    assert(fib4((12)) == (386));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbin8ew75.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError

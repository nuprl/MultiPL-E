language: java
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // For example, gcd(6, 10) = 2, gcd(28, 14) = 14, gcd(7, 7) = 7\n   \
    \     if (a < b) {\n            return greatestCommonDivisor(b, a);\n        }\n\
    \        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int divisor = a < b ? a : b;\n        while (divisor > 0) {\n       \
    \     if (a % divisor == 0 && b % divisor == 0) {\n                return divisor;\n\
    \            }\n            divisor--;\n        }\n        return 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int big = Math.max(a, b);\n        int small = Math.min(a, b);\n    \
    \    int r = big;\n        while (small != 0) {\n            r = big % small;\n\
    \            big = small;\n            small = r;\n        }\n        return big;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // int gcd = 1;\n        // for (int i = 2; i <= Math.min(a, b); i++)\
    \ {\n        //     if (a % i == 0 && b % i == 0) {\n        //         gcd =\
    \ i;\n        //     }\n        // }\n        // return gcd;\n        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0 || b == 0) {\n            return a + b;\n        }\n     \
    \   int aAbs = Math.abs(a);\n        int bAbs = Math.abs(b);\n        while (aAbs\
    \ > 0 && bAbs > 0) {\n            if (aAbs > bAbs) {\n                aAbs %=\
    \ bAbs;\n            } else {\n                bAbs %= aAbs;\n            }\n\
    \        }\n        return aAbs + bAbs;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        int c = a % b;\n        return\
    \ greatestCommonDivisor(b, c);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n      \
    \  int remainder = max % min;\n        int result = 0;\n        if (remainder\
    \ == 0) {\n            result = min;\n        } else {\n            result = greatestCommonDivisor(min,\
    \ remainder);\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) {\n            return b;\n        } else {\n        \
    \    return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return new BigInteger(String.valueOf(a)).gcd(new BigInteger(String.valueOf(b))).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int tmp = a;\n            a = b;\n        \
    \    b = tmp;\n        }\n        while (b != 0) {\n            int tmp = a %\
    \ b;\n            a = b;\n            b = tmp;\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int t = b;\n            b = a % b;\n  \
    \          a = t;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
    \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 ==\
    \ 0 && b % 2 == 0) return 2 * greatestCommonDivisor(a / 2, b / 2);\n        if\
    \ (a % 2 == 0) return greatestCommonDivisor(a / 2, b);\n        if (b % 2 == 0)\
    \ return greatestCommonDivisor(a, b / 2);\n        if (a > b) return greatestCommonDivisor((a\
    \ - b) / 2, b);\n        return greatestCommonDivisor((b - a) / 2, a);\n}\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcagl5lu.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return b == 0 ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int i = 0;\n        List<Integer> a_divisors = new ArrayList<Integer>();\n\
    \        List<Integer> b_divisors = new ArrayList<Integer>();\n        for (i\
    \ = 1; i <= a; i++) {\n            if (a % i == 0) {\n                a_divisors.add(i);\n\
    \            }\n        }\n        for (i = 1; i <= b; i++) {\n            if\
    \ (b % i == 0) {\n                b_divisors.add(i);\n            }\n        }\n\
    \        Collections.sort(a_divisors);\n        Collections.sort(b_divisors);\n\
    \        int b_count = b_divisors.size() - 1;\n        for (i = a_divisors.size()\
    \ - 1; i >= 0; i--) {\n            if (b_divisors.get(b_count) == a_divisors.get(i))\
    \ {\n                return a_divisors.get(i);\n            }\n            if\
    \ (b_divisors.get(b_count) < a_divisors.get(i)) {\n                b_count--;\n\
    \                i++;\n            }\n        }\n        return -1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1j_hbyu0.java:43)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return a + b;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Euclid's algorithm\n        int a_prime = Math.max(a, b);\n      \
    \  int b_prime = Math.min(a, b);\n        while (b_prime != 0) {\n           \
    \ int temp = b_prime;\n            b_prime = a_prime % b_prime;\n            a_prime\
    \ = temp;\n        }\n        return a_prime;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
    \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 ==\
    \ 0 && b % 2 == 0) return 2 * greatestCommonDivisor(a/2, b/2);\n        if (a\
    \ % 2 == 0) return greatestCommonDivisor(a/2, b);\n        if (b % 2 == 0) return\
    \ greatestCommonDivisor(a, b/2);\n        if (a > b) return greatestCommonDivisor((a-b)/2,\
    \ b);\n        return greatestCommonDivisor((b-a)/2, a);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int divisor = Math.min(a, b);\n        while (divisor > 0) {\n      \
    \      if (a % divisor == 0 && b % divisor == 0) {\n                return divisor;\n\
    \            }\n            divisor--;\n        }\n        return 1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n      \
    \  int gcd = 1;\n        for (int i = 2; i <= min; i++) {\n            if (max\
    \ % i == 0 && min % i == 0) {\n                gcd = i;\n            }\n     \
    \   }\n        return gcd;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // WRITE YOUR CODE HERE\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp6qlqqrtr.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 1;\n        for (int i = 2; i <= a && i <= b; i++) {\n      \
    \      if (a % i == 0 && b % i == 0) {\n                d = i;\n            }\n\
    \        }\n        return d;\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            return greatestCommonDivisor(b, a);\n     \
    \   }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyr4mpxgf.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        //\n        return 1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpes796ivx.java:20)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) {\n            return b;\n        } else {\n        \
    \    return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int greatest_common_divisor = 1;\n        int x = a < b ? a : b;\n  \
    \      for (int i = 1; i <= x; i++) {\n            if (a % i == 0 && b % i ==\
    \ 0) {\n                greatest_common_divisor = i;\n            }\n        }\n\
    \        return greatest_common_divisor;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) {\n            return b;\n        } else {\n        \
    \    return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5i4ka122.java:18)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO: your code here.\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk4tly4yu.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
    \ b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n \
    \       return greatestCommonDivisor(a, b - a);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // a, b's greatest common divisor = (b, a%b)'s greatest common divisor\n\
    \        // (a, 0)'s greatest common divisor = a\n        if (b == 0) return a;\n\
    \        return greatestCommonDivisor(b, a%b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new RuntimeException(\"Not Implemented\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.greatestCommonDivisor(tmpk9dv1esj.java:15)\n\tat Problem.main(tmpk9dv1esj.java:18)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a == 0 ? b : greatestCommonDivisor(b % a, a);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a == 0 ? b : greatestCommonDivisor(b % a, a);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int t = a;\n            a = b;\n          \
    \  b = t;\n        }\n        if (b == 0) {\n            return a;\n        }\n\
    \        if (a % b == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_duqdh0h.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int t = a;\n            a = b;\n          \
    \  b = t;\n        }\n        int r = a % b;\n        if (r == 0) {\n        \
    \    return b;\n        } else {\n            return greatestCommonDivisor(b,\
    \ r);\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      return (b == 0) ? a : greatestCommonDivisor(b, a % b);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) {\n            return b;\n        } else {\n        \
    \    return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n\
    \            b = tmp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Your code here\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp13ivwtm8.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a > b) {\n            int t = a;\n            a = b;\n          \
    \  b = t;\n        }\n        while (b % a != 0) {\n            int t = b % a;\n\
    \            b = a;\n            a = t;\n        }\n        return a;\n}\n   \
    \ public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO: Write code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzbi3e4gg.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return -1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2d7sj1y2.java:18)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int t;\n        while (b != 0) {\n            t = b;\n            b =\
    \ a % b;\n            a = t;\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n\
    \            b = tmp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // >>> YOUR CODE HERE <<<\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk66fu4p6.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int temp = a;\n            a = b;\n       \
    \     b = temp;\n        }\n        if (a % b == 0) {\n            return b;\n\
    \        }\n        else {\n            return greatestCommonDivisor(b, a % b);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        for (int i = 1; i <= Math.min(a, b); i++) {\n \
    \           if (a % i == 0 && b % i == 0) {\n                gcd = i;\n      \
    \      }\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
    \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 ==\
    \ 0 && b % 2 == 0) return 2 * greatestCommonDivisor(a / 2, b / 2);\n        if\
    \ (a % 2 == 0) return greatestCommonDivisor(a / 2, b);\n        if (b % 2 == 0)\
    \ return greatestCommonDivisor(a, b / 2);\n        if (a > b) return greatestCommonDivisor((a\
    \ - b) / 2, b);\n        return greatestCommonDivisor((b - a) / 2, a);\n}\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = 0;\n        while (b > 0) {\n            result = b;\n \
    \           b = a % b;\n            a = result;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 1;\n        for (int i = 2; i <= Math.min(a, b); i++) {\n   \
    \         if (a % i == 0 && b % i == 0) {\n                d = i;\n          \
    \  }\n        }\n        return d;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // <<< Please implement your own greatestCommonDivisor function >>>\n\
    \        return -1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8e_3y60t.java:19)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (b == 0) ? a : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return gcd(a, b);\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_f6jgtgw.java:15: error: cannot find symbol\n        return gcd(a,\
    \ b);\n               ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) return greatestCommonDivisor(b, a);\n        if (b == 0) return\
    \ a;\n        return greatestCommonDivisor(b, a % b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return gcd(a, b);\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_f6jgtgw.java:15: error: cannot find symbol\n        return gcd(a,\
    \ b);\n               ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int result = 1;\n        // YOUR CODE HERE\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg0k0qg2v.java:21)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int r = a % b;\n            a = b;\n  \
    \          b = r;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        int gcd\
    \ = 0;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /= 2;\n    \
    \        b /= 2;\n            gcd++;\n        }\n        while (a != b) {\n  \
    \          if (a % 2 == 0) a /= 2;\n            else if (b % 2 == 0) b /= 2;\n\
    \            else if (a > b) a = (a - b) / 2;\n            else b = (b - a) /\
    \ 2;\n        }\n        return a * (int) Math.pow(2, gcd);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = b;\n        while (a % b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return c;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        int c = a % b;\n        return\
    \ greatestCommonDivisor(b, c);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new RuntimeException(\"Not Implemented.\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented.\n\
    \tat Problem.greatestCommonDivisor(tmp1ok02nri.java:15)\n\tat Problem.main(tmp1ok02nri.java:18)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (a % b == 0) ? b : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        if (a >= b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            return greatestCommonDivisor(b, a);\n     \
    \   }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int small = a;\n        int big = b;\n        if (b < a) {\n        \
    \    small = b;\n            big = a;\n        }\n        if (big % small == 0)\
    \ {\n            return small;\n        }\n        for (int i = 2; i <= small;\
    \ i++) {\n            if (small % i == 0 && big % i == 0) {\n                return\
    \ i;\n            }\n        }\n        return 1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpks3tzs1n.java:35)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Replace pass below with your solution\n        return 1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponljik5a.java:20)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        int\
    \ e = 0;\n        while (c > 0) {\n            if (d % c == 0) {\n           \
    \     e = c;\n                break;\n            }\n            c--;\n      \
    \  }\n        return e;\n}\n    public static void main(String[] args) {\n   \
    \ assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc5g2pb0g.java:31)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new UnsupportedOperationException(\"Not implemented yet.\");\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet.\n\tat Problem.greatestCommonDivisor(tmpnoj7f0rf.java:15)\n\t\
    at Problem.main(tmpnoj7f0rf.java:18)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int low = Math.min(a, b);\n        int high = Math.max(a, b);\n     \
    \   int num;\n        int gcd = 1;\n        for (int i = 2; i <= low; i++) {\n\
    \            num = i;\n            if (high % num == 0 && low % num == 0) {\n\
    \                gcd = num;\n            }\n        }\n        return gcd;\n}\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return a + b;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0 || b == 0) {\n            return 0;\n        }\n\n       \
    \ if (a < 0) {\n            a = -a;\n        }\n\n        if (b < 0) {\n     \
    \       b = -b;\n        }\n\n        while (a != b) {\n            if (a > b)\
    \ {\n                a = a - b;\n            } else {\n                b = b -\
    \ a;\n            }\n        }\n\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int t = b;\n            b = a % b;\n  \
    \          a = t;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = 0;\n        while (b != 0) {\n            c = a % b;\n      \
    \      a = b;\n            b = c;\n        }\n        return a;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            return greatestCommonDivisor(b, a);\n     \
    \   }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a > b)\n            return greatestCommonDivisor(b, a);\n       \
    \ if (a == 0)\n            return b;\n        return greatestCommonDivisor(b %\
    \ a, a);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a==0? b:greatestCommonDivisor(b%a, a);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      if (b == 0) {\n        return a;\n      } else {\n        return greatestCommonDivisor(b,\
    \ a % b);\n      }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a > b) {\n            return greatestCommonDivisor(b, a);\n     \
    \   } else if (a == 0) {\n            return b;\n        } else {\n          \
    \  return greatestCommonDivisor(b % a, a);\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
    \ b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n \
    \       return greatestCommonDivisor(a, b - a);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n\
    \            b = tmp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return a + b;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return greatestCommonDivisor(Math.max(a, b), Math.min(a, b));\n}\n  \
    \  public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.Math.min(Math.java:1649)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\
    \tat Problem.greatestCommonDivisor(tmpt0kdne15.java:15)\n\tat Problem.greate"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int divisor = 1;\n        for (int i = 2; i <= Math.min(a, b); i++) {\n\
    \            if (a % i == 0 && b % i == 0) {\n                divisor = i;\n \
    \           }\n        }\n        return divisor;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return new BigInteger(Integer.toString(a)).gcd(new BigInteger(Integer.toString(b))).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n      \
    \  int remainder = max % min;\n        if (remainder == 0) return min;\n     \
    \   else return greatestCommonDivisor(min, remainder);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      return -1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpantwhsd6.java:18)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int t;\n        if (a < b) {\n            t = a;\n            a = b;\n\
    \            b = t;\n        }\n        while (a % b != 0) {\n            t =\
    \ a % b;\n            a = b;\n            b = t;\n        }\n        return b;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // write your code here\n        return 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnkn5jn2_.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return a + b;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // your code here\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26i847a_.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int c = a % b;\n            a = b;\n  \
    \          b = c;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      while (b != 0) {\n        int t = b;\n        b = a % b;\n        a = t;\n\
    \      }\n      return a;\n}\n    public static void main(String[] args) {\n \
    \   assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a > b) {\n            int tmp = a;\n            a = b;\n        \
    \    b = tmp;\n        }\n        while (a != 0) {\n            int tmp = a;\n\
    \            a = b % a;\n            b = tmp;\n        }\n        return b;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcagl5lu.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return gcd(a, b);\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_f6jgtgw.java:15: error: cannot find symbol\n        return gcd(a,\
    \ b);\n               ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        while (b !=\
    \ 0) {\n            if (a > b) {\n                a = a - b;\n            } else\
    \ {\n                b = b - a;\n            }\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Your code here\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpft8oer1j.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // YOUR CODE HERE\n        return 1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa3_g6yuq.java:20)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            a = a + b;\n            b = a - b;\n      \
    \      a = a - b;\n        }\n        while (b != 0) {\n            int c = a\
    \ % b;\n            a = b;\n            b = c;\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        if\
    \ (c == 0) {\n            return d;\n        }\n        return greatestCommonDivisor(c,\
    \ d % c);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a < b ? greatestCommonDivisor(b, a) : b == 0 ? a : greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // \u8AB2\u984C: greatestCommonDivisor \u3092\u9069\u5207\u306B\u5B9F\
    \u88C5\u3057\u3066\u304F\u3060\u3055\u3044\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyspgus8q.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO: Write your code here\n        int max = Math.max(a, b);\n  \
    \      int min = Math.min(a, b);\n        int remainder = max % min;\n       \
    \ while (remainder != 0) {\n            max = min;\n            min = remainder;\n\
    \            remainder = max % min;\n        }\n        return min;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return gcd(a, b);\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_f6jgtgw.java:15: error: cannot find symbol\n        return gcd(a,\
    \ b);\n               ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int dev = 0;\n        if (a < b) {\n            int c = a;\n        \
    \    a = b;\n            b = c;\n        }\n        for (int i = 1; i <= b; i++)\
    \ {\n            if (a % i == 0 && b % i == 0) {\n                dev = i;\n \
    \           }\n        }\n        return dev;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
    \ % a, a);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) return b;\n        if (b == 0) return a;\n        int r =\
    \ a % b;\n        return greatestCommonDivisor(b, r);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // >>> WRITE YOUR CODE HERE <<<\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp892zdto8.java:19)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            return greatestCommonDivisor(b, a);\n     \
    \   }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkcagl5lu.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int divisor = 1;\n        for (int i = 1; i <= a && i <= b; i++) {\n\
    \            if (a % i == 0 && b % i == 0) {\n                divisor = i;\n \
    \           }\n        }\n        return divisor;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) return b;\n        return greatestCommonDivisor(b, a\
    \ % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_duqdh0h.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new UnsupportedOperationException(\"TODO - implement\");\n}\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: TODO\
    \ - implement\n\tat Problem.greatestCommonDivisor(tmp5661si7_.java:15)\n\tat Problem.main(tmp5661si7_.java:18)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // your code here\n        return 42;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6tl_5egh.java:19)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n\
    \            b = tmp;\n        }\n        return a;\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_duqdh0h.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int r = a % b;\n        if (r == 0) {\n            return b;\n      \
    \  } else {\n            return greatestCommonDivisor(b, r);\n        }\n}\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int l = Math.min(a, b);\n        int g = Math.max(a, b);\n        if\
    \ (g % l == 0) {\n            return l;\n        }\n        return greatestCommonDivisor(l,\
    \ g % l);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        for (int i = 1; i <= a && i <= b; i++) {\n    \
    \        if (a % i == 0 && b % i == 0) {\n                gcd = i;\n         \
    \   }\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (b != 0) {\n            int t = b;\n            b = a % b;\n  \
    \          a = t;\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        } else if (b == 0) {\n\
    \            return a;\n        } else {\n            return greatestCommonDivisor(b,\
    \ a % b);\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // We just need to implement\n        // >>> a % b\n        // >>> b\
    \ % a\n        // untill b == 0\n        // then the greatest common divisor is\
    \ a\n        while (b != 0) {\n            int temp = a % b;\n            a =\
    \ b;\n            b = temp;\n        }\n        return a;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return -1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2d7sj1y2.java:18)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_duqdh0h.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return a < b ? greatestCommonDivisor(b, a) : a % b == 0 ? b : greatestCommonDivisor(b,\
    \ a % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return new BigInteger(Integer.toString(a)).gcd(new BigInteger(Integer.toString(b))).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) return b;\n        return greatestCommonDivisor(b, a\
    \ % b);\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int tmp = a;\n            a = b;\n        \
    \    b = tmp;\n        }\n        if (b == 0) {\n            return a;\n     \
    \   }\n        return greatestCommonDivisor(b, a % b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new RuntimeException(\"Implement me!\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Implement me!\n\
    \tat Problem.greatestCommonDivisor(tmprc898okn.java:15)\n\tat Problem.main(tmprc898okn.java:18)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Your code here\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbb0i_n42.java:19)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = -1;\n\n        // TODO: Add code here to calculate gcd of a\
    \ and b\n        \n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpslnwibtg.java:22)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        if (b == 0)\
    \ {\n            return a;\n        }\n        if (a > b) {\n            return\
    \ greatestCommonDivisor(a % b, b);\n        } else {\n            return greatestCommonDivisor(a,\
    \ b % a);\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return gcd(a, b);\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp_f6jgtgw.java:15: error: cannot find symbol\n        return gcd(a,\
    \ b);\n               ^\n  symbol:   method gcd(int,int)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        int start = Math.min(a, b);\n        int end =\
    \ Math.max(a, b);\n        while (start > 1) {\n            if (end % start ==\
    \ 0) {\n                gcd = start;\n                break;\n            }\n\
    \            start -= 1;\n        }\n        return gcd;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfgjmdvy4.java:31)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a <= 0 || b <= 0)\n            throw new IllegalArgumentException(\"\
    Arguments must be positive\");\n        if (a == b)\n            return a;\n \
    \       if (a > b)\n            return greatestCommonDivisor(a - b, b);\n    \
    \    else\n            return greatestCommonDivisor(a, b - a);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new UnsupportedOperationException(\"Please implement me!\");\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Please\
    \ implement me!\n\tat Problem.greatestCommonDivisor(tmpbbzo1vse.java:15)\n\tat\
    \ Problem.main(tmpbbzo1vse.java:18)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return Math.max(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = 0;\n        int d = 0;\n        int gcd = 0;\n        if (a >\
    \ b) {\n            c = a;\n            d = b;\n        } else {\n           \
    \ c = b;\n            d = a;\n        }\n        while (true) {\n            gcd\
    \ = c % d;\n            if (gcd == 0) {\n                break;\n            }\n\
    \            c = d;\n            d = gcd;\n        }\n        return d;\n}\n \
    \   public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return (b == 0) ? a : greatestCommonDivisor(b, a % b);\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \      // ...\n      return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmgcnnb3i.java:19)\n"
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        while (a != 0 && b != 0) {\n            if (a > b) {\n              \
    \  a = a % b;\n            } else {\n                b = b % a;\n            }\n\
    \        }\n        return Math.max(a, b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO: implement this function\n        int gcd = 1;\n        for (int\
    \ i = 1; i <= a && i <= b; i++) {\n            if (a % i == 0 && b % i == 0) {\n\
    \                gcd = i;\n            }\n        }\n        return gcd;\n}\n\
    \    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 1;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_duqdh0h.java:19)\n"
  stdout: ''
  timestamp: 1660011065
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO implement\n}\n    public static void main(String[] args) {\n\
    \    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8yqq0gax.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int d = 0;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a\
    \ /= 2;\n            b /= 2;\n            d++;\n        }\n        while (a !=\
    \ b) {\n            if (a % 2 == 0) {\n                a /= 2;\n            }\
    \ else if (b % 2 == 0) {\n                b /= 2;\n            } else if (a >\
    \ b) {\n                a = (a - b) / 2;\n            } else {\n             \
    \   b = (b - a) / 2;\n            }\n        }\n        return a * (1 << d);\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) return greatestCommonDivisor(b, a);\n        return a % b\
    \ == 0 ? b : greatestCommonDivisor(b, a % b);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        for (int i = 2; i <= a && i <= b; i++) {\n    \
    \        if (a % i == 0 && b % i == 0) {\n                gcd = i;\n         \
    \   }\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a % b == 0) {\n            return b;\n        } else {\n        \
    \    return greatestCommonDivisor(b, a % b);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0 || b == 0) {\n            return 0;\n        }\n        if\
    \ (a < 0) {\n            a = -a;\n        }\n        if (b < 0) {\n          \
    \  b = -b;\n        }\n        while (a != b) {\n            if (a > b) {\n  \
    \              a = a - b;\n            } else {\n                b = b - a;\n\
    \            }\n        }\n        return a;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // your code here\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26i847a_.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // Write your code here\n        // To print results to the standard\
    \ output you can use System.out.println()\n        // Example: System.out.println(\"\
    Hello world!\");\n        int c = 0;\n        int d = 0;\n        if (a < b) {\n\
    \            c = a;\n            d = b;\n        } else {\n            c = b;\n\
    \            d = a;\n        }\n        for (int i = c; i > 0; i--) {\n      \
    \      if (c % i == 0 && d % i == 0) {\n                return i;\n          \
    \  }\n        }\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) return greatestCommonDivisor(b, a);\n        if (b == 0) return\
    \ a;\n        return greatestCommonDivisor(b, a % b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int large = Math.max(a, b);\n        int small = Math.min(a, b);\n  \
    \      if (large % small == 0) {\n            return small;\n        }\n     \
    \   return greatestCommonDivisor(small, large % small);\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        } else if (b == 0) {\n\
    \            return a;\n        } else {\n            return greatestCommonDivisor(b,\
    \ a % b);\n        }\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        // TODO: write your code here\n\n        return -1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf8de46do.java:20)\n"
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        return\
    \ (c == 0) ? d : greatestCommonDivisor(c, d % c);\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        throw new RuntimeException(\"Not implemented yet\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\
    \ yet\n\tat Problem.greatestCommonDivisor(tmp_tgxo5n8.java:15)\n\tat Problem.main(tmp_tgxo5n8.java:18)\n"
  stdout: ''
  timestamp: 1660011070
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int tmp = a;\n            a = b;\n        \
    \    b = tmp;\n        }\n        if (b == 0) {\n            return a;\n     \
    \   }\n        return greatestCommonDivisor(b, a % b);\n}\n    public static void\
    \ main(String[] args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n\
    \    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a == 0) {\n            return b;\n        }\n        while (b !=\
    \ 0) {\n            if (a > b) {\n                a = a - b;\n            } else\
    \ {\n                b = b - a;\n            }\n        }\n        return a;\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();\n\
    }\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        int gcd = 1;\n        for (int d = 1; d <= Math.min(a, b); d++) {\n \
    \           if (a % d == 0 && b % d == 0) {\n                gcd = d;\n      \
    \      }\n        }\n        return gcd;\n}\n    public static void main(String[]\
    \ args) {\n    assert(greatestCommonDivisor((3), (7)) == (1));\n    assert(greatestCommonDivisor((10),\
    \ (15)) == (5));\n    assert(greatestCommonDivisor((49), (14)) == (7));\n    assert(greatestCommonDivisor((144),\
    \ (60)) == (12));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        return 0;\n}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
    \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5b2x2p11.java:18)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
    \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n\
    \        if (a < b) {\n            int x = a;\n            a = b;\n          \
    \  b = x;\n        }\n        while (b != 0) {\n            int x = a % b;\n \
    \           a = b;\n            b = x;\n        }\n        return a;\n}\n    public\
    \ static void main(String[] args) {\n    assert(greatestCommonDivisor((3), (7))\
    \ == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
    \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011070

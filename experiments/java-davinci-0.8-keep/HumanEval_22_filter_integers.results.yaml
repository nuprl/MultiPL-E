name: HumanEval_22_filter_integers
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  res.add((Long) value);\n            }\n        }\n        return res;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcayk7u3r.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        return (ArrayList<Long>) values.stream().filter(v -> v instanceof\
    \ Long).collect(Collectors.toList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5vhg2ms5.java:15: error: incompatible types: List<Object> cannot\
    \ be converted to ArrayList<Long>\n        return (ArrayList<Long>) values.stream().filter(v\
    \ -> v instanceof Long).collect(Collectors.toList());\n                      \
    \                                                                 ^\n/tmp/tmp5vhg2ms5.java:19:\
    \ error: cannot find symbol\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \                                                                            \
    \                 ^\n  symbol:   method of()\n  location: interface Map\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        // insert code here\n        return new ArrayList<Long>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9hn25m1s.java:20: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        // YOUR CODE GOES HERE\n        return new ArrayList<Long>();\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj8s_jrl0.java:20: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> ints = new ArrayList<Long>();\n        for\
    \ (Object v : values) {\n            if (v instanceof Long) {\n              \
    \  ints.add((Long) v);\n            }\n        }\n        return ints;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd2wysghb.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long)\n                res.add((Long)\
    \ value);\n        }\n        return res;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpubcmmpn1.java:24: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (Object\
    \ val : values) {\n            if (val instanceof Long) {\n                res.add((Long)\
    \ val);\n            }\n        }\n        return res;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcirlx87j.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Integer) {\n   \
    \             result.add((Integer) value);\n            }\n        }\n       \
    \ return result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmz9jr9tg.java:18: error: no suitable method found for add(Integer)\n\
    \                result.add((Integer) value);\n                      ^\n    method\
    \ Collection.add(Long) is not applicable\n      (argument mismatch; Integer cannot\
    \ be converted to Long)\n    method List.add(Long) is not applicable\n      (argument\
    \ mismatch; Integer cannot be converted to Long)\n    method AbstractCollection.add(Long)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Long)\n    method AbstractList.add(Long) is not applicable\n      (argument\
    \ mismatch; Integer cannot be converted to Long)\n    method ArrayList.add(Long)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Long)\n/tmp/tmpmz9jr9tg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> integers = new ArrayList<>();\n        //\
    \ YOUR CODE HERE\n        return integers;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe6varbr9.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Long) {\n      \
    \          result.add((Long) value);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpji4bl9pg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        // TODO: Write your code here\n        ArrayList<Long> res\
    \ = new ArrayList<>();\n        for(Object obj : values) {\n            if(obj\
    \ instanceof Long)\n                res.add((Long)obj);\n        }\n        return\
    \ res;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi4ryolx9.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        return values.stream().filter(value -> value instanceof Long).map(value\
    \ -> (Long) value).collect(Collectors.toCollection(ArrayList::new));\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyk5k5vqg.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> out = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Long) {\n              \
    \  out.add((Long) value);\n            }\n        }\n        return out;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7hmgxren.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        return null;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgudt643v.java:19: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> ret = new ArrayList<>();\n        for (Object\
    \ o : values) {\n            if (o instanceof Long) {\n                ret.add((Long)\
    \ o);\n            }\n        }\n        return ret;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpghgw2h3g.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> result = new ArrayList<>();\n        // Add\
    \ your code here\n        return result;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6vb64mv.java:21: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> arrL = new ArrayList<Long>();\n        for\
    \ (Object o : values) {\n            if (o instanceof Long) {\n              \
    \  arrL.add((Long) o);\n            }\n        }\n        return arrL;\n    }\n\
    \    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnynfvzc8.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> nums = new ArrayList<>();\n        values.forEach(x\
    \ -> {\n            if (x instanceof Integer) {\n                nums.add((Integer)\
    \ x);\n            }\n        });\n        return nums;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList()))).equals((new\
    \ ArrayList<Long>(Arrays.asList()))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l,\
    \ new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()), 23.2f,\
    \ 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l, (long)9l)))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l, \"c\", 3l,\
    \ 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l, (long)3l,\
    \ (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2mgz7un7.java:18: error: no suitable method found for add(Integer)\n\
    \                nums.add((Integer) x);\n                    ^\n    method Collection.add(Long)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Long)\n    method List.add(Long) is not applicable\n      (argument mismatch;\
    \ Integer cannot be converted to Long)\n    method AbstractCollection.add(Long)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Long)\n    method AbstractList.add(Long) is not applicable\n      (argument\
    \ mismatch; Integer cannot be converted to Long)\n    method ArrayList.add(Long)\
    \ is not applicable\n      (argument mismatch; Integer cannot be converted to\
    \ Long)\n/tmp/tmp2mgz7un7.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> res = new ArrayList<>();\n        for (Object\
    \ value : values) {\n            if (value instanceof Integer) {\n           \
    \     res.add((long) value);\n            }\n        }\n        return res;\n\
    \    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_j2ghxg.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter given list of any python values only for integers\n\
    \    // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
    \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static ArrayList<Long> filterIntegers(ArrayList<Object>\
    \ values) {\n        ArrayList<Long> result = new ArrayList<>();\n        for\
    \ (Object value : values) {\n            if (value instanceof Integer) {\n   \
    \             result.add((Long) value);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void main(String[] args) {\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList()))).equals((new ArrayList<Long>(Arrays.asList()))));\n\
    \    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()),\
    \ new ArrayList<Long>(Arrays.asList()), 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n    assert(filterIntegers((new ArrayList<Object>(Arrays.asList(3l,\
    \ \"c\", 3l, 3l, \"a\", \"b\")))).equals((new ArrayList<Long>(Arrays.asList((long)3l,\
    \ (long)3l, (long)3l)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0m9c__pd.java:25: error: cannot find symbol\n    assert(filterIntegers((new\
    \ ArrayList<Object>(Arrays.asList(4l, new HashMap<Long,Long>(Map.of()), new ArrayList<Long>(Arrays.asList()),\
    \ 23.2f, 9l, \"adasd\")))).equals((new ArrayList<Long>(Arrays.asList((long)4l,\
    \ (long)9l)))));\n                                                           \
    \                                  ^\n  symbol:   method of()\n  location: interface\
    \ Map\n1 error\n"
  exit_code: 1
  status: SyntaxError

language: java
name: HumanEval_76_is_simple_power
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 0) {\n            return false;\n\
    \        }\n        double baseLog = Math.log(x) / Math.log(n);\n        return\
    \ baseLog == (int) baseLog;\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjlm3mjjv.java:35)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Your code here\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0o2e_8y9.java:24)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x < n) {\n            return false;\n        }\n        if (x % n !=\
    \ 0) {\n            return false;\n        }\n        return isSimplePower(x /\
    \ n, n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int a = (int)Math.log(x)/(int)Math.log(n);\n\
    \        System.out.println(a);\n        int b = (int)Math.pow(n, a);\n      \
    \  System.out.println(b);\n        if (b == x) {\n            return true;\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmp0ttl2_cj.java:20)\n\tat Problem.main(tmp0ttl2_cj.java:30)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double temp = (Math.log(x) / Math.log(n));\n\
    \        return (temp - (int) temp) == 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwfsilla8.java:32)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Your code here\n        if (Math.pow(n,\
    \ Math.round(Math.log(x) / Math.log(n))) == x) {\n            return true;\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi3vn9hdj.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1 && x != 1) {\n           \
    \ return false;\n        }\n        if (x == 1) {\n            return true;\n\
    \        }\n        for (int i = 0; i < x; i++) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n        }\n       \
    \ return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 0; i < x; i++) {\n     \
    \       if (Math.pow(n, i) == x)\n                return true;\n        }\n  \
    \      return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (Math.log(x) / Math.log(n)) %\
    \ 1 == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvjohvk4.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 0) return false;\n        return\
    \ Math.pow(n, (int) (Math.log(x) / Math.log(n))) == x;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == 1 || n % x == 0 && isSimplePower(x,\
    \ n / x);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdonos117.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int log = (int)Math.log(x) / (int)Math.log(n);\n\
    \        return (Math.pow(n, log) == x);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmp_g_0decc.java:20)\n\tat Problem.main(tmp_g_0decc.java:24)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1 && x != 1) {\n           \
    \ return false;\n        }\n        double p = Math.log(x) / Math.log(n);\n  \
    \      int p1 = (int) p;\n        if (p1 == p) {\n            return true;\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuzopajsm.java:39)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n <= 0) {\n            return false;\n\
    \        }\n\n        while (x % n == 0) {\n            x /= n;\n        }\n\n\
    \        return x == 1;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660015916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean result = false;\n        double\
    \ i = 1;\n        while(i < Math.pow(x, 1.0/n)) {\n            if(Math.pow(n,\
    \ i) == x) {\n                result = true;\n                break;\n       \
    \     }\n            i++;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3v8_kun_.java:32)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      double temp = Math.log(x) / Math.log(n);\n\
    \      if(Math.ceil(temp) == Math.floor(temp)) {\n        return true;\n     \
    \ }\n      return false;\n}\n    public static void main(String[] args) {\n  \
    \  assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk9cc3hjm.java:35)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // write your code here\n        return\
    \ Math.log(x) / Math.log(n) % 1 == 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbdsv1_jn.java:32)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here.\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: '/tmp/tmpczfi778i.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double y = n;\n        return Math.pow(y,\
    \ Math.round(Math.log(x) / Math.log(y))) == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == Math.pow(n, Math.floor(Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphdgl8tqt.java:31)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) return x == 1;\n        int\
    \ power = (int) Math.log(x) / (int) Math.log(n);\n        return Math.pow(n, power)\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmppgce4_ry.java:21)\n\tat Problem.main(tmppgce4_ry.java:25)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // wtite your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpya0xuw4m.java:24)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int log = (int) (Math.log(x) / Math.log(n));\n\
    \        return Math.pow(n, log) == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x <= 0 || n <= 0) {\n           \
    \ return false;\n        }\n        double res = Math.log(x) / Math.log(n);\n\
    \        return Math.abs(res - Math.floor(res)) < 1e-10;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpinew6531.java:35)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      return Math.log(x) / Math.log(n) % 1 ==\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajeuplrs.java:31)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        return (double)x == Math.pow(n, Math.floor(Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean res = false;\n        int x1\
    \ = (int) (Math.log(x) / Math.log(n));\n        if ((int) Math.pow(n, x1) == x)\
    \ {\n            res = true;\n        }\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 0; i < x; i++) {\n     \
    \       if (Math.pow(n, i) == x) {\n                return true;\n           \
    \ }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return result == (int) result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnp7nr5d.java:32)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean result = false;\n        double\
    \ sqrtValue = Math.sqrt(x);\n        if (sqrtValue == Math.floor(sqrtValue)) {\n\
    \            result = sqrtValue % n == 0;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpstydecrp.java:37)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int result = 1;\n        for (int i =\
    \ 0; i < x; i++) {\n            result *= n;\n            if (result == x) {\n\
    \                return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1w3qahv9.java:39)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        int pow = 1;\n        for (int i = 0; i < Integer.MAX_VALUE;\
    \ i++) {\n            if (pow == x) {\n                return true;\n        \
    \    }\n            if (pow > x) {\n                return false;\n          \
    \  }\n            pow *= n;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double root = Math.pow(x, (1.0 / n));\n\
    \        double rounded = Math.round(root);\n        int a = (int) rounded;\n\
    \        double result = Math.pow(a, n);\n        if (result == x) {\n       \
    \     return true;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwc017xie.java:33)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n <= 0) {\n            return false;\n\
    \        }\n        if (x == 1) {\n            return true;\n        }\n     \
    \   for (int i = 2; i <= Math.sqrt(x); i++) {\n            if (Math.pow(n, i)\
    \ == x) {\n                return true;\n            }\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == n * n;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu3qyh2lx.java:23)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int)Math.log(x)/(int)Math.log(n))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmppfl38ap_.java:20)\n\tat Problem.main(tmppfl38ap_.java:23)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // ...\n        return Math.pow(n, (int)\
    \ (Math.log(x) / Math.log(n))) == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 0) {\n            return false;\n\
    \        }\n        if (x == 1) {\n            return true;\n        }\n     \
    \   if (n == 0) {\n            return true;\n        }\n        if (n == 1) {\n\
    \            return false;\n        }\n        int pow = x;\n        while (pow\
    \ % n == 0) {\n            pow /= n;\n        }\n        return pow == 1;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        return (int)Math.round(Math.pow(x, 1.0 / n)) == Math.pow(x,\
    \ 1.0 / n);\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv5t4od2z.java:29)\n"
  stdout: ''
  timestamp: 1660015914
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == (int) Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        if (x\
    \ == 1) {\n            return true;\n        }\n        if (n == 1) {\n      \
    \      return x == 1;\n        }\n        if (x < n) {\n            return false;\n\
    \        }\n        int current = n;\n        while (current <= x) {\n       \
    \     if (current == x) {\n                return true;\n            }\n     \
    \       current *= n;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double epsilon = .00000001;\n       \
    \ return Math.abs(Math.log(x) / Math.log(n) - (int) Math.log(x) / Math.log(n))\
    \ < epsilon;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpekbdffsn.java:24)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return result == (int) result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnp7nr5d.java:32)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int i = 0;\n        while (x > 0) {\n\
    \            if (x % n == 0) {\n                x /= n;\n            } else {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1sxaey1.java:31)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        double pow = Math.log(x) / Math.log(n);\n        if (pow <\
    \ 1) {\n            return false;\n        }\n        return (pow == (int) pow);\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        try {\n            return n == Math.pow(x,\
    \ (int) (Math.log(x) / Math.log(n)));\n        } catch (Exception e) {\n     \
    \       return false;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphvrn3ddx.java:27)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        try {\n            return Math.pow(n,\
    \ Math.round(Math.log(x) / Math.log(n))) == x;\n        } catch (Exception e)\
    \ {\n            return false;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      System.out.println(Math.log(x) / Math.log(n));\n\
    \      return new BigDecimal(Math.log(x) / Math.log(n)).stripTrailingZeros().scale()\
    \ <= 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NumberFormatException: Infinite\
    \ or NaN\n\tat java.base/java.math.BigDecimal.<init>(BigDecimal.java:981)\n\t\
    at java.base/java.math.BigDecimal.<init>(BigDecimal.java:960)\n\tat Problem.isSimplePower(tmp7165ez04.java:21)\n\
    \tat Problem.main(tmp7165ez04.java:32)\n"
  stdout: '4.0

    4.281953251437325

    2.0

    2.0

    2.0

    4.584962500721157

    3.5

    1.3868528072345416

    NaN

    '
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean result = false;\n        int\
    \ power = 0;\n        while (Math.pow(n, power) <= x) {\n            if (Math.pow(n,\
    \ power) == x) {\n                result = true;\n                break;\n   \
    \         }\n            power++;\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code here\n        if (Math.pow(n,\
    \ x) == x) {\n            return true;\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps6ga6rz4.java:27)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int i = 1;\n        int result = 1;\n\
    \        while (true) {\n            if (result == x) {\n                return\
    \ true;\n            }\n            if (result > x) {\n                return\
    \ false;\n            }\n            result = n * result;\n            i++;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    int result = 1;\n        while (result < x) {\n            result *= n;\n\
    \        }\n        return result == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // write your code here\n        return\
    \ (Math.log(x) / Math.log(n)) % 1 == 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwnjh971x.java:32)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double c = Math.log(x) / Math.log(n);\n\
    \        return Math.floor(c) == c;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rcneg8w.java:32)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return new BigInteger(x + \"\").modPow(new\
    \ BigInteger(n + \"\"), new BigInteger(x + \"\")).intValue() == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4kux3qq.java:23)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double res = Math.log(x) / Math.log(n);\n\
    \        return res == (int) res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuf59_bc8.java:32)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (Math.log(x) / Math.log(n)) %\
    \ 1 == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvjohvk4.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) {\n            return true;\n\
    \        }\n        for (int i = 0; i < x; i++) {\n            if (Math.pow(n,\
    \ i) == x) {\n                return true;\n            }\n        }\n       \
    \ return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.sqrt(x) == n || Math.cbrt(x)\
    \ == n || x == n;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz93bgq3k.java:23)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) return false;\n        double\
    \ integer = Math.floor(Math.log(x) / Math.log(n));\n        if (x == Math.pow(n,\
    \ integer)) {\n            return true;\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq_lpjgo.java:36)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double toCheck = Math.log(x) / Math.log(n);\n\
    \        int i = (int) toCheck;\n        if (Math.pow(n, i) == x)\n          \
    \  return true;\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015915
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Your code here\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0o2e_8y9.java:24)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int y = (int) Math.log(x) / (int) Math.log(n);\n\
    \        return x == Math.pow(n, y);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmpb5xv5pec.java:20)\n\tat Problem.main(tmpb5xv5pec.java:24)\n"
  stdout: ''
  timestamp: 1660015915
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 0) {\n            return true;\n\
    \        } else if (x == 1) {\n            return true;\n        } else if (n\
    \ == 0) {\n            return false;\n        } else if (n == 1) {\n         \
    \   return true;\n        }\n        if (x % n == 0) {\n            return isSimplePower(x\
    \ / n, n);\n        } else {\n            return false;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015916
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double guess = Math.pow(x, 1 / n);\n\
    \        return guess == (int) guess;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpprlv3auv.java:25)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean b = false;\n        for (int\
    \ i = 1; i < Integer.MAX_VALUE; i++) {\n            if (Math.pow(n, i) == x) {\n\
    \                b = true;\n                break;\n            }\n        }\n\
    \        return b;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 0) return false;\n        if\
    \ (x == 1) return true;\n        int root = (int)Math.round(Math.pow(x, 1.0/n));\n\
    \        return Math.pow(root, n) == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp14w47nij.java:29)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) return false;\n        if\
    \ (x == 1) return true;\n        double exp = Math.log(x) / Math.log(n);\n   \
    \     return Math.abs(exp - Math.round(exp)) < 1e-4;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwbmqygc5.java:34)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, Math.log(x) / Math.log(n))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ypqrnhg.java:29)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 0; i < x; i++) {\n     \
    \       if (Math.pow(n, i) == x) {\n                return true;\n           \
    \ }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int maxExponent = (int)Math.log(x) /\
    \ (int)Math.log(n);\n        return Math.pow(n, maxExponent) == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmp9eho_s4r.java:20)\n\tat Problem.main(tmp9eho_s4r.java:24)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return new BigInteger(x + \"\").modPow(new\
    \ BigInteger(1 + \"\"), new BigInteger(n + \"\")).equals(new BigInteger(0 + \"\
    \"));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpac1059u_.java:28)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double power = Math.log(x) / Math.log(n);\n\
    \        return (power == (int) power);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigwnu2_l.java:32)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1 && n == 1) return true;\n\
    \        return (Math.log(x) / Math.log(n)) % 1 == 0;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int l = 1;\n        while (l <= x) l\
    \ *= n;\n        return l == x;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpemb_3uzw.java:25)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x < n) {\n            return false;\n\
    \        }\n        double m = Math.log(x) / Math.log(n);\n        int k = (int)\
    \ Math.floor(m);\n        return k == m;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdkizu1_1.java:36)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == 1 || (x % n == 0 && isSimplePower(x\
    \ / n, n));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 1; i < x; i++) {\n     \
    \       if (Math.pow(n, i) == x) {\n                return true;\n           \
    \ }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2gei6qnm.java:36)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // returns true if x is a simple power\
    \ of n and false in other cases\n        return x == Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015917
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x < 1 || n < 1) return false;\n \
    \       int rem = x;\n        while (rem > 1) {\n            if (rem % n != 0)\
    \ return false;\n            rem /= n;\n        }\n        return true;\n}\n \
    \   public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean result = false;\n        double\
    \ y = Math.log(x) / Math.log(n);\n        int k = (int) y;\n        System.out.println(y);\n\
    \        if (y == k)\n            result = true;\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6rqjpxdv.java:37)\n"
  stdout: '4.0

    4.281953251437325

    2.0

    2.0

    2.0

    4.584962500721157

    3.5

    1.3868528072345416

    NaN

    '
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int tmp = n;\n        while (tmp < x)\
    \ {\n            tmp *= n;\n        }\n        return tmp == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps1bls20c.java:36)\n"
  stdout: ''
  timestamp: 1660015917
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      double power = Math.log(x) / Math.log(n);\n\
    \      return Math.round(power) == power;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf5_ity8r.java:32)\n"
  stdout: ''
  timestamp: 1660015918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (Math.log(x) / Math.log(n)) %\
    \ 1 == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvjohvk4.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        //your code here\n        return Math.pow(n,\
    \ (int) (Math.log(x) / Math.log(n))) == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int sqr = n;\n        while (sqr < x)\
    \ sqr *= n;\n        return sqr == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl_wzxw56.java:34)\n"
  stdout: ''
  timestamp: 1660015918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code here\n        if (x == 1\
    \ && n == 1) {\n            return true;\n        }\n        else if (x == 1 &&\
    \ n != 1) {\n            return false;\n        }\n        else if (n == 1) {\n\
    \            return false;\n        }\n        else {\n            if (x % n ==\
    \ 0) {\n                while (x > 1) {\n                    if (x % n != 0) {\n\
    \                        return false;\n                    }\n              \
    \      x /= n;\n                }\n                return true;\n            }\n\
    \            else {\n                return false;\n            }\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1kqwac_6.java:55)\n"
  stdout: ''
  timestamp: 1660015918
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        while (n > 1) {\n            if (x %\
    \ n != 0) return false;\n            x /= n;\n        }\n        return x == n;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplh7_2qzd.java:27)\n"
  stdout: ''
  timestamp: 1660015918
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n)));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015918
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 0; i < x; i++) {\n     \
    \       if (Math.pow(n, i) == x) {\n                return true;\n           \
    \ }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x==1) return true;\n        int root\
    \ = (int)Math.pow(x, 1.0/n);\n        return (int)Math.pow(root, n) == x;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigdejmf7.java:28)\n"
  stdout: ''
  timestamp: 1660015919
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int y = (int) Math.floor(Math.log(x)\
    \ / Math.log(n));\n        return Math.pow(n, y) == x;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015919
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x > 0 && Math.pow(n,(int)(Math.log(x)/Math.log(n)))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x < n) {\n            return false;\n\
    \        }\n        double root = Math.log(x) / Math.log(n);\n        return root\
    \ == (int) root;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbednaape.java:35)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (x > 0 && x == Math.pow(n, (int)\
    \ Math.log(x) / Math.log(n)));\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyqjdhv_u.java:23)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // int i = 1;\n        // double c =\
    \ Math.pow(n, i);\n        // while (c <= x) {\n        //     if (c == x) {\n\
    \        //         return true;\n        //     }\n        //     i++;\n    \
    \    //     c = Math.pow(n, i);\n        // }\n        // return false;\n    \
    \    return Math.log(x) / Math.log(n) % 1 == 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdsj66qjt.java:41)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 1; i <= Math.pow(x, 0.5);\
    \ i++) {\n            if (x == Math.pow(n, i)) {\n                return true;\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntz4utc8.java:37)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int pow = 1;\n        while (pow <= x)\
    \ {\n            if (x == pow) {\n                return true;\n            }\n\
    \            pow *= n;\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: '/tmp/tmpgfarndz6.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // write your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0ioq3x0.java:24)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int result = 1;\n        int i = 1;\n\
    \        while (result < x) {\n            result = (int) Math.pow(n, i);\n  \
    \          i++;\n        }\n        return result == x;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return new BigInteger(Integer.toString(x)).pow(1).equals(new\
    \ BigInteger(Integer.toString(n)));\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn0946xn_.java:23)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        for\
    \ (int i = 2; i <= x; i++) {\n            if (x % Math.pow(n, i) == 0) {\n   \
    \             return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjd0at_1.java:34)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        double\
    \ logx = Math.log(x) / Math.log(n);\n        return logx % 1 == 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code here\n        if (x == 0)\
    \ return true;\n        if (n == 0) return false;\n        if (x == 1) return\
    \ true;\n        if (n == 1) return false;\n        if (n == x) return true;\n\
    \        if (n > x) return false;\n        int index = 1;\n        int result\
    \ = n;\n        while (result < x) {\n            result *= n;\n            index++;\n\
    \        }\n        return result == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x < n) return false;\n        if\
    \ (x < 0 || n < 0) return false;\n        if (x == n) return true;\n        if\
    \ (n == 1) return false;\n        if (x == 1) return true;\n        int c = x/n;\n\
    \        while (c > n) {\n            c = c/n;\n        }\n        if (c == n)\
    \ return true;\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhu0l2b1.java:42)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        BigInteger xr = BigInteger.valueOf(x);\n\
    \        BigInteger nr = BigInteger.valueOf(n);\n        double d = Math.log(xr.doubleValue())\
    \ / Math.log(nr.doubleValue());\n        int d1 = (int) d;\n        return Math.abs(d\
    \ - d1) < 1e-6;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyhflxavw.java:35)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double power = Math.log(x) / Math.log(n);\n\
    \        return Math.pow(n, Math.round(power)) == x;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) return false;\n        for\
    \ (int i = 0; i < x; i++) {\n            if (Math.pow(n, i) == x) return true;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyxt8wrlu.java:35)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int test = 1;\n        for (int i = 0;\
    \ test <= x; i++) {\n            test = n * n;\n            if (test == x) {\n\
    \                return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) return false;\n        int\
    \ root = (int) Math.round(Math.pow(x, 1.0 / n));\n        System.out.println(root);\n\
    \        return root == Math.pow(n, (int) (Math.log(x) / Math.log(n)));\n}\n \
    \   public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_1yhu5n9.java:26)\n"
  stdout: '4

    '
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Your code goes here.\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_dkg5y1.java:24)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int a = 1; a < 1000000; a++) {\n\
    \            if (Math.pow(n, a) == x)\n                return true;\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1tkoutob.java:36)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) {\n            return true;\n\
    \        }\n        if (n == 1) {\n            return false;\n        }\n    \
    \    if (x == n) {\n            return true;\n        }\n        int pow = n;\n\
    \        while (true) {\n            if (pow == x) {\n                return true;\n\
    \            }\n            if (pow > x) {\n                return false;\n  \
    \          }\n            pow *= n;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double result = Math.log(x) / Math.log(n);\n\
    \        return (result - (int) result) == 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppf3ftr87.java:32)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // TODO\n        return false;\n}\n \
    \   public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2ijday0.java:24)\n"
  stdout: ''
  timestamp: 1660015921
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        boolean is = false;\n\
    \        if (x == n) return true;\n        while (x > 1) {\n            if (x\
    \ % n != 0) return false;\n            x /= n;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) {\n            return x ==\
    \ 1;\n        }\n        if (x < n) {\n            return false;\n        }\n\
    \        double log = log(x, n);\n        return log == (int) log;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "/tmp/tmp95ai4he7.java:26: error: cannot find symbol\n        double log\
    \ = log(x, n);\n                     ^\n  symbol:   method log(int,int)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660015921
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int n2 = n;\n        for (; n2 < x; n2\
    \ *= n)\n            ;\n        return n2 == x;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt71oy2v0.java:35)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return ((int)Math.log(x) / (int)Math.log(n))\
    \ == ((double)Math.log(x) / (double)Math.log(n));\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmpr_zo6qts.java:20)\n\tat Problem.main(tmpr_zo6qts.java:23)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        else\
    \ if (x == n) return true;\n        else if (x < n) return false;\n        else\
    \ {\n            if (x % n == 0) return isSimplePower(x / n, n);\n           \
    \ else return false;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        for (int i = 1; i <= x; i++) {\n    \
    \        double y = Math.pow(n, i);\n            if (y == x) {\n             \
    \   return true;\n            }\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ohv2p6n.java:38)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        if\
    \ (n == 1) return false;\n        if (x < n) return false;\n        if (x % n\
    \ != 0) return false;\n        return isSimplePower(x / n, n);\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code here\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoprwjqwt.java:24)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n      if (n == 0) return false;\n      if (x\
    \ == 0) return true;\n      if (x == 1) return true;\n      if (n == 1) return\
    \ false;\n      double d = Math.log(x) / Math.log(n);\n      if (d == Math.round(d))\
    \ return true;\n      return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (Math.log(x) / Math.log(n)) %\
    \ 1 == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgvjohvk4.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int root = (int) Math.round(Math.pow(x,\
    \ 1.0 / n));\n        return root == Math.pow(n, (int) (Math.log(x) / Math.log(n)));\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmvtvehw.java:24)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        if (x\
    \ == 1) {\n            return true;\n        } else if (x < 0 || n < 0) {\n  \
    \          return false;\n        } else {\n            double log = Math.log(x)\
    \ / Math.log(n);\n            return log == (int) log;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.log(x) / Math.log(n) % 1\
    \ == 0;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb3f_9v7h.java:31)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplhubs0gn.java:26)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x<=0 || n<=0) {\n            return\
    \ false;\n        }\n        if (x==1) {\n            return true;\n        }\n\
    \        if (x==n) {\n            return true;\n        }\n        if (x==n*n)\
    \ {\n            return true;\n        }\n        double result = Math.log(x)/Math.log(n);\n\
    \        return Math.floor(result)==result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == n && x % n == 0;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0uei8fqk.java:23)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1 && n == 1) return true;\n\
    \        if (x == 1) return false;\n        if (n == 1) return false;\n      \
    \  if (x == n) return true;\n        if (x % n != 0) return false;\n        int\
    \ result = n;\n        while (result < x) {\n            result *= n;\n      \
    \  }\n        return result == x;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z6nm055.java:41)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double p = Math.log(x) / Math.log(n);\n\
    \        return p == (int) p;\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6axah_6l.java:32)\n"
  stdout: ''
  timestamp: 1660015922
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int res = 0;\n        for (int i = 1;\
    \ res < x; i++) {\n            res = (int) Math.pow(n, i);\n            if (res\
    \ == x)\n                return true;\n        }\n        return false;\n}\n \
    \   public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvfm4peve.java:38)\n"
  stdout: ''
  timestamp: 1660015923
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double d = Math.log(x) / Math.log(n);\n\
    \        return Math.round(d) == d;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy_jmbt7_.java:32)\n"
  stdout: ''
  timestamp: 1660015923
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Solution 1\n        // double y =\
    \ Math.log(x) / Math.log(n);\n        // return Math.floor(y) == y;\n\n      \
    \  // Solution 2\n        return x > 0 && Math.pow(n, (int) (Math.log(x) / Math.log(n)))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double n1 = Math.log(x) / Math.log(n);\n\
    \        int n2 = (int)n1;\n        if (n1==n2) return true;\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2hrgsbu2.java:34)\n"
  stdout: ''
  timestamp: 1660015923
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (x == Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))));\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return n == 1 ? x == 1 : x == Math.pow(n,\
    \ (int) (Math.log(x) / Math.log(n)));\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int) (Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // write your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr0ioq3x0.java:24)\n"
  stdout: ''
  timestamp: 1660015920
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double y = Math.log(x) / Math.log(n);\n\
    \        return Math.abs(y - Math.floor(y)) < Math.pow(10, -10);\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzdj45xri.java:32)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return x == n || (int) Math.log(x) /\
    \ (int) Math.log(n) == Math.log(x) / Math.log(n);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmpgb1j2xdw.java:20)\n\tat Problem.main(tmpgb1j2xdw.java:23)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int pow = 0;\n        int exp = n;\n\
    \        while (true) {\n            if (exp == x) {\n                return true;\n\
    \            }\n            if (exp > x) {\n                return false;\n  \
    \          }\n            pow++;\n            exp = n;\n            exp = (int)\
    \ Math.pow(exp, pow);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcl81y0t9.java:44)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean isPower = false;\n        int\
    \ base = n;\n        if (x == 1) {\n            return true;\n        }\n    \
    \    for (int i = 1; i < x; i++) {\n            n = n * base;\n            if\
    \ (n == x) {\n                isPower = true;\n                break;\n      \
    \      }\n        }\n        return isPower;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean found = false;\n        int fx\
    \ = x;\n        while (x % n == 0) {\n            x /= n;\n        }\n       \
    \ return x == 1;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660015929
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int nn = n;\n        for (int i = 1;\
    \ nn <= x; i++) {\n            if (nn == x) return true;\n            nn *= n;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjds9noy9.java:37)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (n == 1) {\n            return x ==\
    \ 1;\n        }\n        if (x <= 1) {\n            return false;\n        }\n\
    \        int pow = (int) (Math.log(x) / Math.log(n));\n        return Math.pow(n,\
    \ pow) == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpim_lsqlr.java:39)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double d = Math.log(x) / Math.log(n);\n\
    \        return Math.floor(d) == d;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnlfupjmz.java:32)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return (int)Math.pow(n, (int)(Math.log(x)/Math.log(n)))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // IntStream.range(1,Math.sqrt(x)).filter(i->Math.pow(n,i)==x).count()==1\n\
    \        return Math.pow(n, (int) (Math.log(x) / Math.log(n))) == x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x < n) return false;\n        int\
    \ result = n;\n        while (result < x) {\n            result *= n;\n      \
    \  }\n        return result == x;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5uwyhwd3.java:37)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int powerOfN = n;\n        while (powerOfN\
    \ < x) {\n            powerOfN *= n;\n        }\n        return powerOfN == x;\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbw8c_pw3.java:36)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        try {\n            double y = Math.log(x)\
    \ / Math.log(n);\n            int z = (int) y;\n            if (Math.pow(n, z)\
    \ == x)\n                return true;\n            else\n                return\
    \ false;\n        } catch (Exception e) {\n            return false;\n       \
    \ }\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        try {\n            int k = (int) Math.round(Math.log(x)\
    \ / Math.log(n));\n            return (Math.pow(n, k) == x);\n        } catch\
    \ (Exception e) {\n            return false;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015924
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, Math.round(Math.log(x)\
    \ / Math.log(n))) == x;\n}\n    public static void main(String[] args) {\n   \
    \ assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1 && n == 1) return true;\n\
    \        if (x == 1 && n != 1) return false;\n        if (x < 1 || n < 1) return\
    \ false;\n        int a = (int) Math.log(x) / (int) Math.log(n);\n        return\
    \ (Math.pow(n, a) == x);\n}\n    public static void main(String[] args) {\n  \
    \  assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmppdxq42cy.java:23)\n\tat Problem.main(tmppdxq42cy.java:27)\n"
  stdout: ''
  timestamp: 1660015924
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double n_d = Math.log(x) / Math.log(n);\n\
    \        return n_d == (int) n_d;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5jokkg9f.java:32)\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.pow(n, (int)Math.log(x)/(int)Math.log(n))\
    \ == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n\
    \tat Problem.isSimplePower(tmppfl38ap_.java:20)\n\tat Problem.main(tmppfl38ap_.java:23)\n"
  stdout: ''
  timestamp: 1660015913
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        //n**int=x, x**(1/n)=y, x==y**n\n   \
    \     //if x==y**n and y is integer => y=int**(1/n)\n        double y = Math.pow(x,\
    \ 1.0/n);\n        return (y%1 == 0);\n}\n    public static void main(String[]\
    \ args) {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz_uukw9r.java:29)\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        double log = Math.log(x) / Math.log(n);\n\
    \        return log % 1 == 0;\n}\n    public static void main(String[] args) {\n\
    \    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6eyi4p5c.java:32)\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code\n        // x == Math.pow(n,(int)Math.log(x)/Math.log(n))\n\
    \        return x == Math.pow(n,(int)Math.log(x)/Math.log(n));\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7nwokcta.java:25)\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        int\
    \ result = (int) Math.pow(n, Math.round(Math.log(x) / Math.log(n)));\n       \
    \ return result == x;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi353w2ri.java:24)\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x == 1) return true;\n        int\
    \ i = 2;\n        while (Math.pow(n, i) <= x) {\n            if (Math.pow(n, i)\
    \ == x) return true;\n            i++;\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // TODO\n        return false;\n}\n \
    \   public static void main(String[] args) {\n    assert(isSimplePower((16), (2))\
    \ == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc2ijday0.java:24)\n"
  stdout: ''
  timestamp: 1660015921
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // Write your code here\n        BigInteger\
    \ result = BigInteger.valueOf(n);\n        while(true) {\n            if(result.equals(BigInteger.valueOf(x)))\
    \ {\n                return true;\n            }\n            if(result.multiply(BigInteger.valueOf(n)).compareTo(BigInteger.valueOf(x))\
    \ == 1) {\n                return false;\n            }\n            result =\
    \ result.multiply(BigInteger.valueOf(n));\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno7cskop.java:42)\n"
  stdout: ''
  timestamp: 1660015926
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        int num = n;\n        int pow = 1;\n\
    \        while (pow <= x) {\n            if (Math.pow(num, pow) == x) {\n    \
    \            return true;\n            }\n            num = n;\n            pow++;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isSimplePower((16), (2)) == (true));\n    assert(isSimplePower((143214),\
    \ (16)) == (false));\n    assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9),\
    \ (3)) == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp867_o8pl.java:41)\n"
  stdout: ''
  timestamp: 1660015926
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        try {\n            int m = (int) Math.log(x)\
    \ / (int) Math.log(n);\n            return Math.pow(n, m) == x;\n        } catch\
    \ (Exception e) {\n            return false;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz39xadeo.java:28)\n"
  stdout: ''
  timestamp: 1660015926
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        if (x<0 || n<0) return false;\n     \
    \   if (x==1) return true;\n        double current = n;\n        while (current<x)\
    \ {\n            current*=n;\n        }\n        return current==x;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015926
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        // your code here\n}\n    public static\
    \ void main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n\
    \    assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: '/tmp/tmp9hlwhkac.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        boolean res = false;\n        if (n ==\
    \ 0) {\n            res = false;\n        } else if (n == 1) {\n            res\
    \ = false;\n        } else if (n == 2) {\n            res = true;\n        } else\
    \ if (n == 3) {\n            res = true;\n        } else if (n == 4) {\n     \
    \       res = true;\n        } else if (n == 5) {\n            res = true;\n \
    \       } else if (n == 6) {\n            res = true;\n        } else if (n ==\
    \ 7) {\n            res = true;\n        } else if (n == 8) {\n            res\
    \ = true;\n        } else if (n == 9) {\n            res = true;\n        } else\
    \ if (n == 10) {\n            res = true;\n        } else if (n == 11) {\n   \
    \         res = true;\n        } else if (n == 12) {\n            res = true;\n\
    \        } else if (n == 13) {\n            res = true;\n        } else if (n\
    \ == 14) {\n            res = true;\n        } else if (n == 15) {\n         \
    \   res = true;\n        } else if (n == 16) {\n            res = true;\n    \
    \    } else if (n == 17) {\n            res = true;\n        } else if (n == 18)\
    \ {\n            res = true;\n        } else if (n == 19) {\n            res =\
    \ true;\n        } else if (n == 20) {\n            res = true;\n        } else\
    \ if (n == 21) {\n            res = true;\n        } else if (n == 22) {\n   \
    \         res = true;\n        } else if (n == 23) {\n            res = true;\n\
    \        } else if (n == 24) {\n            res = true;\n        } else if (n\
    \ == 25) {\n            res = true;\n        } else if (n == 26) {\n         \
    \   res = true;\n        } else if (n == 27) {\n            res = true;\n    \
    \    } else if (n == 28) {\n            res = true;\n        } else if (n == 29)\
    \ {\n            res\n}\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpxpz33rm7.java:80: error: not a statement\n            res\n   \
    \         ^\n/tmp/tmpxpz33rm7.java:80: error: ';' expected\n            res\n\
    \               ^\n/tmp/tmpxpz33rm7.java:82: error: illegal start of expression\n\
    \    public static void main(String[] args) {\n    ^\n3 errors\n"
  stdout: ''
  timestamp: 1660015925
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isSimplePower((16), (2)) == (true));\n   \
    \ assert(isSimplePower((143214), (16)) == (false));\n    assert(isSimplePower((4),\
    \ (2)) == (true));\n    assert(isSimplePower((9), (3)) == (true));\n    assert(isSimplePower((16),\
    \ (4)) == (true));\n    assert(isSimplePower((24), (2)) == (false));\n    assert(isSimplePower((128),\
    \ (4)) == (false));\n    assert(isSimplePower((12), (6)) == (false));\n    assert(isSimplePower((1),\
    \ (1)) == (true));\n    assert(isSimplePower((1), (12)) == (true));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejby8z51.java:23)\n"
  stdout: ''
  timestamp: 1660015911
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Your task is to write a function that returns true if\
    \ a number x is a simple\n    // power of n and false in other cases.\n    //\
    \ x is a simple power of n if n**int=x\n    // For example:\n    // is_simple_power(1,\
    \ 4) => true\n    // is_simple_power(2, 2) => true\n    // is_simple_power(8,\
    \ 2) => true\n    // is_simple_power(3, 2) => false\n    // is_simple_power(3,\
    \ 1) => false\n    // is_simple_power(5, 3) => false\n    public static boolean\
    \ isSimplePower(int x, int n) {\n        return Math.sqrt(x) == Math.round(Math.sqrt(x));\n\
    }\n    public static void main(String[] args) {\n    assert(isSimplePower((16),\
    \ (2)) == (true));\n    assert(isSimplePower((143214), (16)) == (false));\n  \
    \  assert(isSimplePower((4), (2)) == (true));\n    assert(isSimplePower((9), (3))\
    \ == (true));\n    assert(isSimplePower((16), (4)) == (true));\n    assert(isSimplePower((24),\
    \ (2)) == (false));\n    assert(isSimplePower((128), (4)) == (false));\n    assert(isSimplePower((12),\
    \ (6)) == (false));\n    assert(isSimplePower((1), (1)) == (true));\n    assert(isSimplePower((1),\
    \ (12)) == (true));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015925

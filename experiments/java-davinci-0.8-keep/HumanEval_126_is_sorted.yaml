name: HumanEval_126_is_sorted
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a list of numbers, return whether or not they are\
  \ sorted\n    // in ascending order. If list has more than 1 duplicate of the same\n\
  \    // number, return False. Assume no negative numbers and only integers.\n  \
  \  // Examples\n    // is_sorted([5]) \u279E True\n    // is_sorted([1, 2, 3, 4,\
  \ 5]) \u279E True\n    // is_sorted([1, 3, 2, 4, 5]) \u279E False\n    // is_sorted([1,\
  \ 2, 3, 4, 5, 6]) \u279E True\n    // is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279E True\n\
  \    // is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279E False\n    // is_sorted([1, 2, 2,\
  \ 3, 3, 4]) \u279E True\n    // is_sorted([1, 2, 2, 2, 3, 4]) \u279E False\n   \
  \ public static boolean isSorted(ArrayList<Integer> lst) {\n"
tests: "return true;\n    }\n    public static void main(String[] args) {\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList((int)5)))) == (true));\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5)))) ==\
  \ (true));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
  \ (int)2, (int)4, (int)5)))) == (false));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)3, (int)4, (int)5, (int)6)))) == (true));\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4, (int)5, (int)6,\
  \ (int)7)))) == (true));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)3, (int)2, (int)4, (int)5, (int)6, (int)7)))) == (false));\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList()))) == (true));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1))))\
  \ == (true));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)2, (int)1)))) == (false));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)2, (int)2, (int)3, (int)4)))) == (false));\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)3, (int)3, (int)4))))\
  \ == (false));\n    assert(isSorted((new ArrayList<Integer>(Arrays.asList((int)1,\
  \ (int)2, (int)2, (int)3, (int)3, (int)4)))) == (true));\n    assert(isSorted((new\
  \ ArrayList<Integer>(Arrays.asList((int)1, (int)2, (int)3, (int)4)))) == (true));\n\
  \    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

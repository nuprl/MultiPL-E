name: HumanEval_29_filter_by_prefix
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Filter an input list of strings only for ones that start\
  \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
  \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
  \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings, String\
  \ prefix) {\n"
tests: "return new ArrayList<String>(Arrays.asList());\n    }\n    public static void\
  \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
  \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
  \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"xxy\"\
  , (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\")).equals((new\
  \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\", (String)\"\
  xxx\")))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

name: HumanEval_108_count_nums
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm0u0fjo5.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4mkhpdzn.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj11fgna3.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Replace the next line with your implementation\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphkx0u113.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x -> sumDigits(x) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1ggqcj0.java:17: error: cannot find symbol\n        return (int)arr.stream().filter(x\
    \ -> sumDigits(x) > 0).count();\n                                            \
    \ ^\n  symbol:   method sumDigits(Integer)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphx2o8jfa.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (getSumOfDigits(arr.get(i))\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2_lnfyh4.java:19: error: cannot find symbol\n            if (getSumOfDigits(arr.get(i))\
    \ > 0) {\n                ^\n  symbol:   method getSumOfDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk8fz2ltx.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ number = arr.get(i);\n            int digitSum = 0;\n            if (number\
    \ < 0) {\n                digitSum += number * -1 % 10;\n                number\
    \ = number * -1 / 10;\n            }\n            while (number > 0) {\n     \
    \           digitSum += number % 10;\n                number /= 10;\n        \
    \    }\n            if (digitSum > 0) {\n                count++;\n          \
    \  }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd13dhof5.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5f5a08nz.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcdqlfizl.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> signedDigitsSum(x) > 0).count();\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe3v88_yk.java:17: error: cannot find symbol\n        return (int)\
    \ arr.stream().filter(x -> signedDigitsSum(x) > 0).count();\n                \
    \                              ^\n  symbol:   method signedDigitsSum(Integer)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2p5xjcna.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            int sum = 0;\n            if (num < 0) {\n      \
    \          sum += -1;\n                num = -num;\n            }\n          \
    \  while (num > 0) {\n                sum += num % 10;\n                num /=\
    \ 10;\n            }\n            if (sum > 0) {\n                ct++;\n    \
    \        }\n        }\n        return ct;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_bqty9s.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4i1581lb.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmv2ya_6w.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ throw new NotImplementedException();\n        return (int) arr.stream().filter(x\
    \ -> x >= 0 && x % 10 != 0 || x < 0 && x % 10 != 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpivpebbne.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        for (int elem : arr) {\n            if (elem > 0) {\n \
    \               int sum = 0;\n                int num = elem;\n              \
    \  while (num > 0) {\n                    sum += num % 10;\n                 \
    \   num /= 10;\n                }\n                if (sum > 0) {\n          \
    \          result++;\n                }\n            } else {\n              \
    \  int sum = 0;\n                int num = elem;\n                while (num <\
    \ 0) {\n                    sum += num % 10;\n                    num /= 10;\n\
    \                }\n                if (sum < 0) {\n                    result++;\n\
    \                }\n            }\n        }\n        return result;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu687b9qr.java:42: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ write code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp285i7n9k.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x -> {\n            int temp = x;\n            if (temp\
    \ < 0) temp = -temp;\n            int sum = 0;\n            while (temp > 0) {\n\
    \                sum += temp % 10;\n                temp /= 10;\n            }\n\
    \            return sum > 0;\n        }).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqrhdopw8.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ res = 0;\n        for (int num : arr) {\n            res += (num == 0) ? 0 :\
    \ (int) (Math.log10(Math.abs(num)) + 1);\n        }\n        return res;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8smz24xv.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ your code here\n        return -1;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphxnsxi4_.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int num : arr) {\n            if (digitSum(num) > 0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppgn8ttby.java:19: error: cannot find symbol\n            if (digitSum(num)\
    \ > 0) {\n                ^\n  symbol:   method digitSum(int)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(n -> n > 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv7bfu4cj.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(n -> Arrays.stream(Integer.toString(n).split(\"\"\
    )).mapToInt(Integer::parseInt).sum() > 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppq6duk50.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Put your code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphga7od0t.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Please remove this line and implement the\
    \ method.\");\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps5uxp75o.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i : arr) {\n            if (sumDigits(i) > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0n873_b4.java:19: error: cannot find symbol\n            if (sumDigits(i)\
    \ > 0) {\n                ^\n  symbol:   method sumDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> x > 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl6ntbbnc.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ans = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            int sign = num < 0 ? -1 : 1;\n            num = Math.abs(num);\n\
    \            while (num > 0) {\n                ans += sign * (num % 10);\n  \
    \              num /= 10;\n            }\n        }\n        return ans;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwgxdki4.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        for (int num : arr) {\n            String str = String.valueOf(num);\n\
    \            if (str.charAt(0) == '-') {\n                str = str.substring(1);\n\
    \            }\n            int sum = 0;\n            for (int i = 0; i < str.length();\
    \ i++) {\n                sum += Integer.parseInt(str.substring(i, i + 1));\n\
    \            }\n            if (sum > 0) {\n                result++;\n      \
    \      }\n        }\n        return result;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr965hycz.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ret = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int sum\
    \ = 0;\n            int n = arr.get(i);\n            if (n < 0) {\n          \
    \      sum += Math.abs(n);\n            }\n            while (n != 0) {\n    \
    \            sum += Math.abs(n % 10);\n                n /= 10;\n            }\n\
    \            if (sum > 0) {\n                ret++;\n            }\n        }\n\
    \        return ret;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5bt7dory.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ number = arr.get(i);\n            int sum = 0;\n            while (number !=\
    \ 0) {\n                int rem = number % 10;\n                sum += rem;\n\
    \                number = number / 10;\n            }\n            if (sum > 0)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiqujlztz.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x -> {\n                if (x == 0) {\n           \
    \         return false;\n                }\n                x = Math.abs(x);\n\
    \                int sum = 0;\n                while (x > 0) {\n             \
    \       sum += x % 10;\n                    x /= 10;\n                }\n    \
    \            return sum > 0;\n            }).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps633034f.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ sum=0;\n        for(int i:arr){\n            sum+=(i<0?i*-1:i);\n        }\n\
    \        if(sum>0)return arr.size();\n        return 0;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwq95f8qc.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ your code here\n        return arr.stream().filter(x ->  x > 0 || (x < 0 &&\
    \ -x % 10 != x)).collect(Collectors.toList()).size();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps9ou0sbs.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjzf7jcyf.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeuuvvot7.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ans = 0;\n        for (int e : arr) {\n            boolean greater = false;\n\
    \            if (e < 0) {\n                e = -e;\n                greater =\
    \ true;\n            }\n            int sum = 0;\n            while (e > 0) {\n\
    \                sum += e % 10;\n                e /= 10;\n            }\n   \
    \         if (greater) sum = -sum;\n            if (sum > 0) ans++;\n        }\n\
    \        return ans;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkr2af0et.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ ADD YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqna1hon5.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(n -> n > 0 ? n % 9 > 0 : n % 9 < 0).count();\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq8jy4szc.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            String\
    \ s = Integer.toString(arr.get(i));\n            int sum = 0;\n            for\
    \ (int j = 0; j < s.length(); j++) {\n                sum += Character.getNumericValue(s.charAt(j));\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp58owul98.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            if (sumDigits(num) > 0) {\n                result++;\n\
    \            }\n        }\n        return result;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpat4yxxdd.java:20: error: cannot find symbol\n            if (sumDigits(num)\
    \ > 0) {\n                ^\n  symbol:   method sumDigits(int)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> String.valueOf(x).chars().map(x1 -> x1 - '0').sum()\
    \ > 0).collect(Collectors.toList()).size();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdc_fazhd.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> IntStream.of(x.toString().chars().map(Character::getNumericValue).toArray()).sum()\
    \ > 0).count();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp94x9ajyc.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5ao0nu7g.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            if (num < 0) {\n                count += 1;\n\
    \            } else {\n                if (num % 10 != 0) {\n                \
    \    count += 1;\n                }\n            }\n        }\n        return\
    \ count;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0)))) == (0));\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)2,\
    \ (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)6, (int)9, (int)-6, (int)0, (int)1, (int)5)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)100, (int)98, (int)-7, (int)1,\
    \ (int)-1)))) == (4));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)12,\
    \ (int)23, (int)34, (int)-45, (int)-56, (int)0)))) == (5));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)1)))) == (1));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9tv0_kc2.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwdalb3az.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Fill in the body of this function.\n        return 0;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4yd83l0c.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ n = arr.get(i);\n            int sum = 0;\n            if (n < 0) {\n      \
    \          sum += n % 10;\n                n /= 10;\n            }\n         \
    \   while (n > 0) {\n                sum += n % 10;\n                n /= 10;\n\
    \            }\n            if (sum > 0) {\n                count++;\n       \
    \     }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsgyb8v5i.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (sumDigits(arr.get(i))\
    \ > 0) {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp036fyq9n.java:19: error: cannot find symbol\n            if (sumDigits(arr.get(i))\
    \ > 0) {\n                ^\n  symbol:   method sumDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1rlce5zu.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ n = arr.get(i);\n            if (n < 0) {\n                n = -n;\n       \
    \     }\n            while (n > 0) {\n                count += n % 10;\n     \
    \           n /= 10;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppp6u9u2n.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Problem#countNums has not been implemented\"\
    );\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq2871n9k.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int x : arr) {\n            int sum = 0;\n        \
    \    int currentX = x;\n            while (x != 0) {\n                int n =\
    \ Math.abs(x % 10);\n                sum += n;\n                x /= 10;\n   \
    \         }\n            if (sum > 0) {\n                count++;\n          \
    \  }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vb5lv57.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ sum = 0;\n            int number = arr.get(i);\n            if (number < 0)\
    \ number = number * -1;\n            while (number > 0) {\n                sum\
    \ += number % 10;\n                number = number / 10;\n            }\n    \
    \        if (sum > 0) count++;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplo35m73v.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int e : arr) {\n            int a = 0;\n            if\
    \ (e < 0) {\n                a = e % 10;\n                e = -e;\n          \
    \  }\n            for (; e > 0; e /= 10) {\n                a += e % 10;\n   \
    \         }\n            if (a > 0) {\n                n++;\n            }\n \
    \       }\n        return n;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt7u3ka59.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ TODO: implement!\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8f3kmz5l.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> x.toString().chars().map(y -> y - '0').sum() > 0).collect(Collectors.toList()).size();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp13d99_s7.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Replace this with your code!\n        return 0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu046oj86.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpguloloif.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Please implement this function.\");\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd3i_sbcp.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ res = 0;\n        for (int i : arr) {\n            res += i > 0 ? i : -i;\n\
    \        }\n        return res;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf73pxlqg.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb7hsegqm.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpka2trgt2.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(i -> i != 0).filter(i -> {\n            if (i < 0)\
    \ i = -i;\n            int sum = 0;\n            while (i > 0) {\n           \
    \     sum += i % 10;\n                i /= 10;\n            }\n            return\
    \ sum > 0;\n        }).count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb0_8y_ij.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        if\
    \ (arr.size() == 0) return 0;\n        int counter = 0;\n        for (int i =\
    \ 0; i < arr.size(); i++) {\n            if (sumDigits(arr.get(i)) > 0) {\n  \
    \              counter++;\n            }\n        }\n        return counter;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptudt1__c.java:20: error: cannot find symbol\n            if (sumDigits(arr.get(i))\
    \ > 0) {\n                ^\n  symbol:   method sumDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk7jo9ado.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Type your answer here\n        int num = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            if (arr.get(i) < 0) {\n                if (arr.get(i) %\
    \ 10 == -1)\n                    num++;\n            } else {\n              \
    \  if (arr.get(i) > 0)\n                    num++;\n            }\n        }\n\
    \        return num;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp642hk3jz.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int x : arr) {\n            int n = Math.abs(x);\n\
    \            int sum = 0;\n            while (n > 0) {\n                sum +=\
    \ n % 10;\n                n /= 10;\n            }\n            if (sum > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpom2hnkwk.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplkh6_oq2.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new RuntimeException(\"not implemented\");\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb7w3nplx.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ out0 = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int element\
    \ = arr.get(i);\n            int s = sumDigits(element);\n            if (s >\
    \ 0)\n                out0++;\n        }\n        return out0;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcuu03fwq.java:20: error: cannot find symbol\n            int s\
    \ = sumDigits(element);\n                    ^\n  symbol:   method sumDigits(int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdkujo4pe.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu9vcsrjt.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sum = 0;\n            int x = arr.get(i);\n        \
    \    if (x < 0) {\n                x = x * -1;\n            }\n            while\
    \ (x > 0) {\n                sum += x % 10;\n                x = x / 10;\n   \
    \         }\n            if (sum > 0) {\n                count++;\n          \
    \  }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi3ncunkb.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x -> x > 0 ? x % 10 > 0 : x % 10 < 0).count();\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn9upjlrm.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd6imy1tc.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ sum = 0;\n            if (arr.get(i) < 0) {\n                sum += arr.get(i);\n\
    \            } else {\n                int j = arr.get(i);\n                while\
    \ (j > 0) {\n                    sum += j % 10;\n                    j /= 10;\n\
    \                }\n            }\n            if (sum > 0) {\n              \
    \  count++;\n            }\n        }\n        return count;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf9lyhnxp.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n      int count\
    \ = 0;\n      for (int i = 0; i < arr.size(); i++) {\n        int digitsSum =\
    \ 0;\n        int num = arr.get(i);\n        if (num < 0) {\n          num = num\
    \ * -1;\n        }\n        while (num > 0) {\n          digitsSum += num % 10;\n\
    \          num = num / 10;\n        }\n        if (digitsSum > 0) {\n        \
    \  count++;\n        }\n      }\n      return count;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcvhqb9_5.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ return the number of elements with sum of digits > 0.\n        int result =\
    \ 0;\n        for (int x : arr) {\n            int a = x;\n            int sum\
    \ = 0;\n            if (a < 0) {\n                a = -a;\n                sum\
    \ = -1;\n            }\n            while (a > 0) {\n                sum += a\
    \ % 10;\n                a /= 10;\n            }\n            if (sum > 0) {\n\
    \                result++;\n            }\n        }\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2gde7rxn.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1fela4pb.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Write your code here\n        int count = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int num = arr.get(i);\n            int tmp = num;\n    \
    \        int sum = 0;\n            if (num < 0) {\n                num = -num;\n\
    \            }\n            while (num > 0) {\n                sum += num % 10;\n\
    \                num /= 10;\n            }\n            if (tmp < 0) {\n     \
    \           sum += tmp % 10;\n            }\n            if (sum > 0) {\n    \
    \            count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps8vgx8x8.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Not supported yet.\");\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5rko479e.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ your solution here\n        return -1;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwkx73dmc.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp83oak2y8.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ REPLACE THIS CODE WITH YOUR SOLUTION\n        return -1;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm_g7nsoq.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiirqrcb_.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7jx5el_k.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb0o6neef.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here.\n        throw new UnsupportedOperationException(\"Not implemented\
    \ yet.\");\nreturn 0;\n    }\n    public static void main(String[] args) {\n \
    \   assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n   \
    \ assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3gp1ehhc.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> Integer.toString(x).chars().map(y -> Math.abs(y - '0')).sum()\
    \ > 0).toArray().length;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8qrfn997.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyox6r9q6.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Do not edit arr.\n        return arr.stream().filter(e -> e % 10 > 0).reduce(0,\
    \ (sum, i) -> ++sum);\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6raxjr54.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ sum = 0;\n            int curr = arr.get(i);\n            if (curr < 0) {\n\
    \                curr = curr * -1;\n            }\n            while (curr > 0)\
    \ {\n                sum += curr % 10;\n                curr = curr / 10;\n  \
    \          }\n            if (sum > 0) {\n                count++;\n         \
    \   }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptkxmcgzv.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int x : arr) {\n            if (x != 0) {\n           \
    \     int s = x < 0 ? -x : x;\n                while (s > 0) {\n             \
    \       n += s % 10;\n                    s /= 10;\n                }\n      \
    \      }\n        }\n        return n;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0yhmgxbi.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int value\
    \ = arr.get(i);\n            if (value < 0) {\n                value = value *\
    \ -1;\n            }\n            sum += getDigitSum(value);\n        }\n    \
    \    return sum;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd7mauj84.java:23: error: cannot find symbol\n            sum +=\
    \ getDigitSum(value);\n                   ^\n  symbol:   method getDigitSum(int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(a -> a > -1).map(a -> a.toString().chars().map(b ->\
    \ b - '0').sum()).filter(b -> b > 0).count();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpat87d3kt.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //HACK:\n\
    \        return (int)arr.stream().filter(e -> e > 0).count();\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdt8iqyi5.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(i -> i % 9 != 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmy0b7mz4.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> (x<0 ? -x : x)>9 ? (x<0 ? -x : x)%10+countNums(new\
    \ ArrayList<Integer>(Arrays.asList((x<0 ? -x : x)/10))) : (x<0 ? -x : x)>0).reduce(0,\
    \ (a, b) -> a+b);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa4g2w5z4.java:17: error: incompatible types: bad return type in\
    \ lambda expression\n        return arr.stream().filter(x -> (x<0 ? -x : x)>9\
    \ ? (x<0 ? -x : x)%10+countNums(new ArrayList<Integer>(Arrays.asList((x<0 ? -x\
    \ : x)/10))) : (x<0 ? -x : x)>0).reduce(0, (a, b) -> a+b);\n                 \
    \                                        ^\n    INT#1 cannot be converted to boolean\n\
    \  where INT#1,INT#2 are intersection types:\n    INT#1 extends Object,Serializable,Comparable<?\
    \ extends INT#2>\n    INT#2 extends Object,Serializable,Comparable<?>\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x -> digitsSum(x) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmportpwdch.java:17: error: cannot find symbol\n        return (int)arr.stream().filter(x\
    \ -> digitsSum(x) > 0).count();\n                                            \
    \ ^\n  symbol:   method digitsSum(Integer)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ c = 0;\n        for (int i: arr) {\n            if (Utils.sumDigits(i) > 0)\
    \ {\n                c++;\n            }\n        }\n        return c;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfoqy_xa0.java:19: error: cannot find symbol\n            if (Utils.sumDigits(i)\
    \ > 0) {\n                ^\n  symbol:   variable Utils\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(i -> {\n            int sum = 0;\n            if (i\
    \ < 0) {\n                sum += Math.abs(i) % 10;\n                i = -i / 10;\n\
    \            }\n            while (i > 0) {\n                sum += i % 10;\n\
    \                i /= 10;\n            }\n            return sum > 0;\n      \
    \  }).count();\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6v3lsk3g.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Not yet implemented\");\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2e6prawg.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> {\n            int sum = 0;\n            while (x !=\
    \ 0) {\n                sum += x % 10;\n                x /= 10;\n           \
    \ }\n            return sum > 0;\n        }).collect(Collectors.toList()).size();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp54uqa2j6.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int i : arr) {\n            if (i < 0) i = -i;\n      \
    \      int sum = 0;\n            while (i > 0) {\n                sum += i % 10;\n\
    \                i /= 10;\n            }\n            if (sum > 0) {\n       \
    \         n++;\n            }\n        }\n        return n;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwqins4__.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> x < 0 ?\n                Arrays.stream((\"\"\
    \ + x).replace(\"-\", \"\").split(\"\")).mapToInt(Integer::parseInt).sum() > 0\
    \ :\n                Arrays.stream((\"\" + x).split(\"\")).mapToInt(Integer::parseInt).sum()\
    \ > 0).count();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9iwvn6l8.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(i -> Math.abs(i) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3a73w1zt.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\n\
    \        return 0;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp86hzjp1j.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppkbx7_ts.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Fill this in.\n        return -1;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjnaz6l59.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9a82eiv2.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6f_eyf4r.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ res = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            if (num < 0) {\n                num = -num;\n   \
    \         }\n            int sum = 0;\n            while (num > 0) {\n       \
    \         sum += num % 10;\n                num /= 10;\n            }\n      \
    \      if (sum > 0) {\n                res++;\n            }\n        }\n    \
    \    return res;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6wpw5zay.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptjh7qpts.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ total = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ n = arr.get(i);\n            if (n < 0) n = -n;\n            int sum = 0;\n\
    \            while (n > 0) {\n                sum += n % 10;\n               \
    \ n /= 10;\n            }\n            if (sum > 0) total++;\n        }\n    \
    \    return total;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4tn888uu.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().map(x -> x < 0 ? x * -1 : x).mapToInt(Integer::sumDigits).map(x\
    \ -> x > 0 ? 1 : 0).sum();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw8y1dk40.java:17: error: invalid method reference\n        return\
    \ arr.stream().map(x -> x < 0 ? x * -1 : x).mapToInt(Integer::sumDigits).map(x\
    \ -> x > 0 ? 1 : 0).sum();\n                                                 \
    \                 ^\n  cannot find symbol\n    symbol:   method sumDigits()\n\
    \    location: class Integer\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(x ->\n            Arrays.stream(String.valueOf(x).split(\"\
    \")).mapToInt(Integer::parseInt).sum() > 0\n        ).count();\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpowozzrd4.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(a -> a != 0).filter(a -> abs(a) % 9 == 0).count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp41kogbpy.java:17: error: cannot find symbol\n        return (int)\
    \ arr.stream().filter(a -> a != 0).filter(a -> abs(a) % 9 == 0).count();\n   \
    \                                                               ^\n  symbol: \
    \  method abs(Integer)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8lbqtlxu.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp14til57h.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        if\
    \ (arr.size() == 0) {\n            return 0;\n        }\n        else {\n    \
    \        return 0;\n        }\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvbr5k7gd.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(n -> sumDigits(n) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4n1l_eu1.java:17: error: cannot find symbol\n        return (int)\
    \ arr.stream().filter(n -> sumDigits(n) > 0).count();\n                      \
    \                        ^\n  symbol:   method sumDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new NotImplementedException();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2yk08ifg.java:17: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            if (num < 0) {\n                num = num * -1;\n\
    \            }\n            int sum = 0;\n            while (num > 0) {\n    \
    \            sum += num % 10;\n                num = num / 10;\n            }\n\
    \            if (sum > 0) {\n                count++;\n            }\n       \
    \ }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyx_pl5rk.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int x : arr) {\n            if (x < 0) x = -x;\n      \
    \      int sum = 0;\n            while (x > 0) {\n                sum += x % 10;\n\
    \                x /= 10;\n            }\n            if (sum > 0) n++;\n    \
    \    }\n        return n;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp75en7khk.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8nl9p_jk.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ total = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ signedDigits = arr.get(i);\n            int digits = 0;\n            while (signedDigits\
    \ != 0) {\n                digits += signedDigits % 10;\n                signedDigits\
    \ /= 10;\n            }\n            if (digits > 0) total++;\n        }\n   \
    \     return total;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph6uip55g.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplcp45wpn.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int x : arr) {\n            int sign = x >= 0 ? 1 :\
    \ -1;\n            x = Math.abs(x);\n            int sum = 0;\n            while\
    \ (x > 0) {\n                sum += x % 10;\n                x /= 10;\n      \
    \      }\n            if (sign * sum > 0) {\n                count++;\n      \
    \      }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuet3y5mo.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ nums = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i)\
    \ > 0) {\n                nums++;\n            } else if (arr.get(i) < 0) {\n\
    \                int num = arr.get(i);\n                while (num != 0) {\n \
    \                   nums++;\n                    num /= 10;\n                }\n\
    \            }\n        }\n        return nums;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc1ryxrm2.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(n -> n != 0).map(Math::abs).mapToInt(i -> i % 10 +\
    \ i / 10 % 10 + i / 100).filter(n -> n > 0).count();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7c2mumti.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkajejacg.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here.\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph9vsj4yf.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ element = arr.get(i);\n            int sumOfDigits = 0;\n            while (element\
    \ != 0) {\n                int digit = element % 10;\n                element\
    \ = element / 10;\n                sumOfDigits += digit;\n            }\n    \
    \        if (sumOfDigits > 0) {\n                count++;\n            }\n   \
    \     }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpigj4rq43.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(x -> x != 0).map(x -> x > 0 ? x : x * -1).\n           \
    \ mapToInt(x -> {\n                String xs = String.valueOf(x);\n          \
    \      return xs.chars().map(y -> y - '0').sum();\n            }).filter(x ->\
    \ x > 0).count();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvdjrst6y.java:21: error: incompatible types: possible lossy conversion\
    \ from long to int\n            }).filter(x -> x > 0).count();\n             \
    \                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ cnt = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int x\
    \ = arr.get(i);\n            int sum = 0;\n            while (x != 0) {\n    \
    \            sum += Math.abs(x % 10);\n                x /= 10;\n            }\n\
    \            if (sum > 0) {\n                cnt++;\n            }\n        }\n\
    \        return cnt;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp93t371k1.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ IntStream.range(0, arr.size())\n                        .filter(i -> {\n   \
    \                         int v = arr.get(i);\n                            int\
    \ sum = Math.abs(v);\n                            while (sum > 0) {\n        \
    \                        sum -= sum % 10;\n                                sum\
    \ /= 10;\n                            }\n                            return v\
    \ > 0 || sum != 0;\n                        })\n                        .count();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpykc2wj5j.java:27: error: incompatible types: possible lossy conversion\
    \ from long to int\n                        .count();\n                      \
    \        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i : arr) {\n            if (digitsSum(i) > 0) {\n\
    \                count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfj8znqfu.java:19: error: cannot find symbol\n            if (digitsSum(i)\
    \ > 0) {\n                ^\n  symbol:   method digitsSum(int)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ TODO: Write your code here!\n        return 0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy7idj4mq.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ acc = 0;\n        for (int num : arr) {\n            boolean cond = true;\n\
    \            int digit = num < 0 ? num : Math.abs(num);\n            while (digit\
    \ > 0) {\n                acc += digit % 10;\n                digit /= 10;\n \
    \           }\n        }\n        return acc;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3qrlm70o.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            count\
    \ += sumOfDigits(arr.get(i));\n        }\n        return count;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp22k0fs16.java:19: error: cannot find symbol\n            count\
    \ += sumOfDigits(arr.get(i));\n                     ^\n  symbol:   method sumOfDigits(Integer)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_u0lesl_.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ YOUR CODE HERE\n        int count = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sum = 0;\n            int num = arr.get(i);\n      \
    \      while (num != 0) {\n                int d = num % 10;\n               \
    \ sum += d;\n                num /= 10;\n            }\n            if (sum >\
    \ 0) {\n                count++;\n            }\n        }\n        return count;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6m4fw5ud.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int sum\
    \ = 0;\n            int num = arr.get(i);\n            if (num < 0) {\n      \
    \          sum += num;\n            }\n            while (num != 0) {\n      \
    \          sum += num % 10;\n                num /= 10;\n            }\n     \
    \       if (sum > 0) {\n                n++;\n            }\n        }\n     \
    \   return n;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdlfw5qi8.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ TODO: Implement me!\n        return 0;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp70n8am25.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ res = 0;\n        for (int elem : arr) {\n            int sum = 0;\n       \
    \     if (elem < 0) elem *= -1;\n            while (elem > 0) {\n            \
    \    sum += elem % 10;\n                elem /= 10;\n            }\n         \
    \   if (sum > 0) res++;\n        }\n        return res;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8sfsl_8b.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        // YOUR CODE HERE\n        return result;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6jd_t_ct.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(a -> sumDigits(a) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp70ric9y0.java:17: error: cannot find symbol\n        return (int)arr.stream().filter(a\
    \ -> sumDigits(a) > 0).count();\n                                            \
    \ ^\n  symbol:   method sumDigits(Integer)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Problem is not implemented yet\");\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkv2sei_i.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            int sum = 0;\n            while (num != 0) {\n\
    \                int curr = num % 10;\n                sum += curr;\n        \
    \        num /= 10;\n            }\n            if (sum > 0) {\n             \
    \   count++;\n            }\n        }\n        return count;\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcrd_p4k5.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int a : arr) {\n            int sum = 0;\n        \
    \    a = Math.abs(a);\n            while (a > 0) {\n                sum += a %\
    \ 10;\n                a /= 10;\n            }\n            if (sum > 0) {\n \
    \               count++;\n            }\n        }\n        return count;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpekz6anyd.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp271qffjw.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppu04ij4v.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9p0wqr09.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ out0 = 0;\n        for (int i0 = 0; (i0 < (arr.size())); i0++) {\n         \
    \   int x = (arr.get(i0));\n            if ((((x % 2) == 0) || ((x % 10) == 0)))\
    \ {\n                out0 = (out0 + 1);\n            } else {\n              \
    \  {\n                    // foreach\n                    for (int i1 = 0; (i1\
    \ < (arr.size())); i1++) {\n                        if (((((arr.get(i1)) % 2)\
    \ == 0) || (((arr.get(i1)) % 10) == 0))) {\n                            out0 =\
    \ (out0 + 1);\n                        }\n                    }\n            \
    \    }\n            }\n        }\n        return out0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3rolh4hu.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> x % 10 != 0).count();\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprxn6ng03.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ sum = 0;\n            int n = arr.get(i);\n            while (n != 0) {\n  \
    \              sum += Math.abs(n % 10);\n                n /= 10;\n          \
    \  }\n            if (sum > 0) {\n                count++;\n            }\n  \
    \      }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfs__lvag.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(val -> sum(digits(Math.abs(val))) > 0).collect(Collectors.toList()).size();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps2hx0b_t.java:17: error: cannot find symbol\n        return arr.stream().filter(val\
    \ -> sum(digits(Math.abs(val))) > 0).collect(Collectors.toList()).size();\n  \
    \                                            ^\n  symbol:   method digits(int)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ write your code here\n        return 0;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp45oy4f_v.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        int count = 0;\n        for (int i : arr) {\n      \
    \      if (i > 0) {\n                count += sumOfDigits(i);\n            } else\
    \ {\n                count += sumOfDigits(i * -1);\n            }\n        }\n\
    \        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppqev5voo.java:21: error: cannot find symbol\n                count\
    \ += sumOfDigits(i);\n                         ^\n  symbol:   method sumOfDigits(int)\n\
    \  location: class Problem\n/tmp/tmppqev5voo.java:23: error: cannot find symbol\n\
    \                count += sumOfDigits(i * -1);\n                         ^\n \
    \ symbol:   method sumOfDigits(int)\n  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ans = 0;\n        for (int num : arr) {\n            if (sumOfDigits(num) >\
    \ 0) {\n                ans++;\n            }\n        }\n        return ans;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpji7wf60v.java:19: error: cannot find symbol\n            if (sumOfDigits(num)\
    \ > 0) {\n                ^\n  symbol:   method sumOfDigits(int)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ TODO: implement me\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_mtjad5.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptoi4ykf9.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcfg7ftoy.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ s = 0;\n        for (int i : arr) {\n            if (i > 0) {\n            \
    \    int sum = 0;\n                int n = i;\n                while (n > 0) {\n\
    \                    sum += n % 10;\n                    n /= 10;\n          \
    \      }\n                if (sum > 0) {\n                    s++;\n         \
    \       }\n            } else {\n                int sum = 0;\n              \
    \  int n = i;\n                while (n < 0) {\n                    sum += n %\
    \ 10;\n                    n /= 10;\n                }\n                if (sum\
    \ < 0) {\n                    s++;\n                }\n            }\n       \
    \ }\n        return s;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvzbvo850.java:42: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ temp = arr.get(i);\n            if (temp < 0) {\n                temp = temp\
    \ * -1;\n            }\n            int tempResult = 0;\n            while (temp\
    \ > 0) {\n                tempResult += temp % 10;\n                temp = temp\
    \ / 10;\n            }\n            if (tempResult > 0) {\n                result++;\n\
    \            }\n        }\n        return result;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpey7d2nzh.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ n = 0;\n        for (int num : arr) {\n            int sum = 0;\n          \
    \  while (num != 0) {\n                int digit = num % 10;\n               \
    \ if (digit < 0) digit = -digit;\n                sum += digit;\n            \
    \    num /= 10;\n            }\n            if (sum > 0) {\n                n++;\n\
    \            }\n        }\n        return n;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptzet7bjc.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"Not yet implemented\");\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa7jjmoeu.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ nums = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int num\
    \ = arr.get(i);\n            if (num < 0) {\n                num = num * -1;\n\
    \            }\n            int sum = 0;\n            while (num > 0) {\n    \
    \            sum += num % 10;\n                num = num / 10;\n            }\n\
    \            if (sum > 0) {\n                nums += 1;\n            }\n     \
    \   }\n        return nums;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyyst54us.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ return arr.stream().filter(x -> x > 0).count();\n        return (int)arr.stream().filter(x\
    \ -> {\n            int sum = 0;\n            boolean neg = x < 0;\n         \
    \   if (neg) x = -x;\n            while (x > 0) {\n                sum += x %\
    \ 10;\n                x /= 10;\n            }\n            return sum > 0;\n\
    \        }).count();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5hela84.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ result = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            int sum = 0;\n            boolean negative =\
    \ false;\n            if (num < 0) {\n                negative = true;\n     \
    \           num = num * -1;\n            }\n            while (num > 0) {\n  \
    \              sum += num % 10;\n                num = num / 10;\n           \
    \ }\n            if (negative) {\n                sum *= -1;\n            }\n\
    \            if (sum > 0) {\n                result++;\n            }\n      \
    \  }\n        return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp42eidx01.java:38: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc59vjpk1.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int)arr.stream().filter(i -> sumDigits(i) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjt7ottge.java:17: error: cannot find symbol\n        return (int)arr.stream().filter(i\
    \ -> sumDigits(i) > 0).count();\n                                            \
    \ ^\n  symbol:   method sumDigits(Integer)\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ num = arr.get(i);\n            int signedSum = 0;\n            while (num !=\
    \ 0) {\n                signedSum += num % 10;\n                num /= 10;\n \
    \           }\n            if (signedSum > 0) {\n                count++;\n  \
    \          }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp__mt6vzs.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ YOUR CODE HERE\n        return -1;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj2olg9y8.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ your code goes here\n        int count = 0;\n        for (int i = 0; i < arr.size();\
    \ i++) {\n            int sum = Math.abs(arr.get(i))%10;\n            while (Math.abs(arr.get(i))/10\
    \ > 0) {\n                arr.set(i, Math.abs(arr.get(i))/10);\n             \
    \   sum += Math.abs(arr.get(i))%10;\n            }\n            if (sum != 0)\
    \ count++;\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpav12rkd4.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Write your code here\n        // To print results to the standard output you\
    \ can use System.out.println()\n        // Example: System.out.println(\"Hello\
    \ world!\");\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) == (0));\n  \
    \  assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2, (int)0))))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdoj66cr4.java:25)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ cnt = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int x\
    \ = arr.get(i);\n            if (x < 0) {\n                x = -x;\n         \
    \   }\n            int s = 0;\n            while (x > 0) {\n                s\
    \ += x % 10;\n                x /= 10;\n            }\n            if (s > 0)\
    \ {\n                cnt++;\n            }\n        }\n        return cnt;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzy3x_irw.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        int sum = 0;\n        for (int i = 0; i < arr.size(); i++)\
    \ {\n            int x = arr.get(i);\n            while (x != 0) {\n         \
    \       sum += x % 10;\n                x /= 10;\n            }\n            if\
    \ (sum > 0) {\n                count++;\n            }\n            sum = 0;\n\
    \        }\n        return count;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprdrjs83d.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(i -> {\n            int sum = 0;\n            while\
    \ (i != 0) {\n                sum += Math.abs(i % 10);\n                i /= 10;\n\
    \            }\n            return sum > 0;\n        }).count();\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7khjz9gp.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ ans = 0;\n        for (int i : arr) {\n            if (i != 0) {\n         \
    \       int sum = 0;\n                if (i < 0) {\n                    sum +=\
    \ -1;\n                    i = -i;\n                }\n                while (i\
    \ > 0) {\n                    sum += i % 10;\n                    i /= 10;\n \
    \               }\n                if (sum > 0) ans++;\n            }\n      \
    \  }\n        return ans;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptr50nf3s.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6mo34yzj.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        int count = 0;\n        for (int i=0; i<arr.size();\
    \ i++) {\n            int sum = 0;\n            if (arr.get(i) < 0) {\n      \
    \          sum += Math.abs(arr.get(i)) % 10;\n                arr.set(i, arr.get(i)\
    \ / 10);\n            }\n            while (arr.get(i) > 0) {\n              \
    \  sum += arr.get(i) % 10;\n                arr.set(i, arr.get(i) / 10);\n   \
    \         }\n            if (sum > 0) {\n                count++;\n          \
    \  }\n        }\n        return count;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9_mzheln.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ total = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            int\
    \ sum = 0;\n            int num = arr.get(i);\n            if (num < 0) {\n  \
    \              sum += Math.abs(num % 10);\n                num = Math.abs(num\
    \ / 10);\n            }\n            while (num > 0) {\n                sum +=\
    \ num % 10;\n                num /= 10;\n            }\n            if (sum >\
    \ 0) {\n                total++;\n            }\n        }\n        return total;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9evchr2u.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your code here\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnq29hb4v.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //TODO:\
    \ Implement me!\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_kvqrky1.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_4mqbry.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(i -> i != 0 && Integer.toString(i).chars().map(j ->\
    \ j - '0').sum() > 0).count();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList()))) ==\
    \ (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1, (int)-2,\
    \ (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ocb_fbw.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ Your Code Here!\n        int count = 0;\n        for (int i=0; i<arr.size();\
    \ i++) {\n            String s = String.valueOf(arr.get(i));\n            if (s.length()\
    \ == 1) {\n                count += 1;\n            } else {\n               \
    \ if (s.charAt(0) == '-') {\n                    if (sumOfDigits(s.substring(1))\
    \ > 0) {\n                        count += 1;\n                    }\n       \
    \         } else {\n                    if (sumOfDigits(s) > 0) {\n          \
    \              count += 1;\n                    }\n                }\n       \
    \     }\n        }\n        return count;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4jnclwxj.java:25: error: cannot find symbol\n                 \
    \   if (sumOfDigits(s.substring(1)) > 0) {\n                        ^\n  symbol:\
    \   method sumOfDigits(String)\n  location: class Problem\n/tmp/tmp4jnclwxj.java:29:\
    \ error: cannot find symbol\n                    if (sumOfDigits(s) > 0) {\n \
    \                       ^\n  symbol:   method sumOfDigits(String)\n  location:\
    \ class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ (int) arr.stream().filter(x -> sumDigits(x) > 0).count();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0rpov56o.java:17: error: cannot find symbol\n        return (int)\
    \ arr.stream().filter(x -> sumDigits(x) > 0).count();\n                      \
    \                        ^\n  symbol:   method sumDigits(Integer)\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd8tf97d9.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpixb1vnk5.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ arr.stream().filter(n -> sum(n) > 0).collect(Collectors.toList()).size();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxpa9o8bc.java:17: error: cannot find symbol\n        return arr.stream().filter(n\
    \ -> sum(n) > 0).collect(Collectors.toList()).size();\n                      \
    \                  ^\n  symbol:   method sum(Integer)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2a7wge00.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwo_ozt93.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        //\
    \ YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2or6i5bm.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        throw\
    \ new UnsupportedOperationException(\"To be implemented.\");\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(countNums((new ArrayList<Integer>(Arrays.asList())))\
    \ == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp17kddjct.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Write a function count_nums which takes an array of integers\
    \ and returns\n    // the number of elements which has a sum of digits > 0.\n\
    \    // If a number is negative, then its first signed digit will be negative:\n\
    \    // e.g. -123 has signed digits -1, 2, and 3.\n    // >>> count_nums([]) ==\
    \ 0\n    // >>> count_nums([-1, 11, -11]) == 1\n    // >>> count_nums([1, 1, 2])\
    \ == 3\n    public static int countNums(ArrayList<Integer> arr) {\n        int\
    \ count = 0;\n        for (int item : arr) {\n            String s = item + \"\
    \";\n            if (s.startsWith(\"-\"))\n                s = s.substring(1);\n\
    \            int sum = 0;\n            for (int i = 0; i < s.length(); i++) {\n\
    \                sum += s.charAt(i) - '0';\n            }\n            if (sum\
    \ > 0)\n                count++;\n        }\n        return count;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList()))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)-1,\
    \ (int)-2, (int)0)))) == (0));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)2, (int)-2, (int)3, (int)4, (int)5)))) == (6));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)6, (int)9, (int)-6, (int)0, (int)1,\
    \ (int)5)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)100, (int)98, (int)-7, (int)1, (int)-1)))) == (4));\n    assert(countNums((new\
    \ ArrayList<Integer>(Arrays.asList((int)12, (int)23, (int)34, (int)-45, (int)-56,\
    \ (int)0)))) == (5));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)1)))) == (1));\n    assert(countNums((new ArrayList<Integer>(Arrays.asList((int)1))))\
    \ == (1));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_gkohhdv.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError

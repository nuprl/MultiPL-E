language: java
name: HumanEval_31_is_prime
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (int i = 3; i\
    \ <= Math.sqrt(n); i+=2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return IntStream.rangeClosed(2, (int) Math.sqrt(n)).allMatch(i ->\
    \ n % i != 0);\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq89q7q43.java:34)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        else if (n < 4) return true;\n\
    \        else if (n % 2 == 0) return false;\n        for (int i = 3; i * i <=\
    \ n; i += 2) {\n            if (n % i == 0) return false;\n        }\n       \
    \ return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        int sqrt\
    \ = (int) Math.sqrt(n);\n        for (int i = 2; i <= sqrt; i++) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n %\
    \ 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        int sqrt\
    \ = (int) Math.sqrt(n);\n        for (int i = 2; i <= sqrt; i++) {\n         \
    \   if (n % i == 0) {\n                return false;\n            }\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        boolean isPrime = true;\n        if (n <= 1) {\n            isPrime\
    \ = false;\n        } else {\n            for (int i = 2; i < n; i++) {\n    \
    \            if (n % i == 0) {\n                    isPrime = false;\n       \
    \             break;\n                }\n            }\n        }\n        return\
    \ isPrime;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        if (n % 3 == 0) {\n            return\
    \ false;\n        }\n        for (int i = 3; i <= Math.sqrt(n); i++) {\n     \
    \       if (n % i == 0) {\n                return false;\n            }\n    \
    \    }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n % 2 == 0) return false;\n        for (int i = 3; i < n; i+=2) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        // The\
    \ number n is prime if it is not divisible by any number less than n.\n      \
    \  for (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n       \
    \         return false;\n            }\n        }\n        return true;\n}\n \
    \   public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        int i\
    \ = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n        \
    \        return false;\n            }\n            i++;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int m = n / 2;\n        for (int i = 2; i <= m; i++) {\n        \
    \    if (n % i == 0) {\n                return false;\n            }\n       \
    \ }\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnvgw01fd.java:40)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return IntStream.rangeClosed(2, (int) Math.sqrt(n)).noneMatch(x ->\
    \ n % x == 0);\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf3ypfa2c.java:34)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        boolean prime = true;\n        for (int i = 2; i < n; i++) {\n  \
    \          if (n % i == 0) {\n                prime = false;\n               \
    \ break;\n            }\n        }\n        return prime;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuuxao3gw.java:41)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bizc7ia.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n < 2 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i * i <= n; i += 2)\n            if (n % i ==\
    \ 0) return false;\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 3) {\n            return n > 1;\n        }\n        if (n\
    \ % 2 == 0 || n % 3 == 0) {\n            return false;\n        }\n        for\
    \ (int i = 5; i * i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2)\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7iueq9rq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        }\n        for (int\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpeozde0xj.java:42)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int max = (int) Math.sqrt(n);\n        for (int i = 2; i <= max;\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii4lbm1b.java:38)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Your code here\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr7ucvfy3.java:30)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bizc7ia.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i = 2;\n        while (i <= Math.sqrt(n)) {\n            if (n\
    \ % i == 0) {\n                return false;\n            }\n            i +=\
    \ 1;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyy_w_w28.java:41)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fpit0ux.java:39)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        if (n == 2) return true;\n    \
    \    if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i += 2)\n\
    \            if (n % i == 0) return false;\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n == 1 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i <= Math.sqrt(n); i+=2) {\n            if (n\
    \ % i == 0) {\n                return false;\n            }\n        }\n     \
    \   return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wgtgbj5.java:29)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Your code here...\n        for (int i = 2; i < n; i++) {\n   \
    \         if (n % i == 0) {\n                return false;\n            }\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8z6eswqy.java:40)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bizc7ia.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     int i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n   \
    \             return false;\n            }\n            i++;\n        }\n    \
    \    return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        int k = (int) Math.sqrt(n);\n\
    \        for (int i = 2; i <= k; i++) {\n            if (n % i == 0) return false;\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n ==\
    \ 2) {\n            return true;\n        } else if (n % 2 == 0) {\n         \
    \   return false;\n        } else {\n            for (int i = 3; i * i <= n; i\
    \ += 2) {\n                if (n % i == 0) {\n                    return false;\n\
    \                }\n            }\n            return true;\n        }\n}\n  \
    \  public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wgtgbj5.java:29)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i = 2;\n        if (n == 2) {\n            return true;\n   \
    \     }\n        if (n % 2 == 0) {\n            return false;\n        }\n   \
    \     for (i = 3; i < n; i++) {\n            if (n % i == 0) {\n             \
    \   return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpob8smb35.java:46)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        int upperLimit = (int) Math.sqrt(n);\n\
    \        for (int i = 2; i <= upperLimit; i++) {\n            if (n % i == 0)\
    \ return false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        // The code below uses the fact that\
    \ there are no prime numbers\n        // greater than 2 that are even.\n     \
    \   for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n   \
    \             return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7iueq9rq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        int s = (int) Math.sqrt(n);\n\
    \        for (int i = 2; i <= s; i++) {\n            if (n % i == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n         \
    \       return false;\n            }\n        }\n        return true;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // your code here\n        if (n==1) return false;\n        else\
    \ if (n<4) return true;\n        else if (n%2==0) return false;\n        else\
    \ if (n<9) return true;\n        else if (n%3==0) return false;\n        else\
    \ {\n            int r = (int)Math.floor(Math.sqrt(n));\n            int f = 5;\n\
    \            while (f<=r) {\n                if (n%f==0) return false;\n     \
    \           if (n%(f+2)==0) return false;\n                f=f+6;\n          \
    \  }\n            return true;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        else if (n == 2) return true;\n\
    \        else if (n % 2 == 0) return false;\n        else {\n            int sqrt\
    \ = (int) Math.sqrt(n);\n            for (int i = 3; i <= sqrt; i += 2) {\n  \
    \              if (n % i == 0) return false;\n            }\n            return\
    \ true;\n        }\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i = 1;\n        if (n < 0) {\n            return false;\n   \
    \     }\n        if (n < 2) {\n            return false;\n        }\n        if\
    \ (n == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n\
    \            return false;\n        }\n        while (i < n) {\n            i\
    \ += 2;\n            if (n % i == 0) {\n                return false;\n      \
    \      }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbs8_cml.java:48)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 1) return false;\n        if (n == 1) return false;\n   \
    \     if (n == 2) return true;\n        if (n == 3) return true;\n        if (n\
    \ == 5) return true;\n        for (int i = 2; i < Math.sqrt(n) + 1; i++) {\n \
    \           if (n % i == 0) return false;\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n          \
    \      return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return (n == 2 || n == 3 || n == 5 || n == 7 || n == 11 || n == 13\
    \ || n == 17 || n == 19 || n == 23 || n == 29 || n == 31 || n == 37 || n == 41\
    \ || n == 43 || n == 47 || n == 53 || n == 59 || n == 61 || n == 67 || n == 71\
    \ || n == 73 || n == 79 || n == 83 || n == 89 || n == 97 || n == 101 || n == 103\
    \ || n == 107 || n == 109 || n == 113 || n == 127 || n == 131 || n == 137 || n\
    \ == 139 || n == 149 || n == 151 || n == 157 || n == 163 || n == 167 || n == 173\
    \ || n == 179 || n == 181 || n == 191 || n == 193 || n == 197 || n == 199 || n\
    \ == 211 || n == 223 || n == 227 || n == 229 || n == 233 || n == 239 || n == 241\
    \ || n == 251 || n == 257 || n == 263 || n == 269 || n == 271 || n == 277 || n\
    \ == 281 || n == 283 || n == 293 || n == 307 || n == 311 || n == 313 || n == 317\
    \ || n == 331 || n == 337 || n == 347 || n == 349 || n == 353 || n == 359 || n\
    \ == 367 || n == 373 || n == 379 || n == 383 || n == 389 || n == 397 || n == 401\
    \ || n == 409 || n == 419 || n == 421 || n == 431 || n == 433 || n == 439 || n\
    \ == 443 || n == 449 || n == 457 || n == 461 || n == 463 || n == 467 || n == 479\
    \ || n == 487 || n == 491 || n == 499 || n == 503 || n == 509 || n == 521 || n\
    \ == 523 || n == 541 || n == 547 || n == 557 || n == 563 || n == 569 || n == 571\
    \ || n == 577 || n == 587 || n == 593 || n == 599 || n == 601 || n == 607 || n\
    \ == 613 || n == 617 || n == 619 || n == 631 || n == 641 || n == 643 || n == 647\
    \ || n == 653 ||\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpjnk0l7lw.java:26: error: illegal start of expression

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wgtgbj5.java:29)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n % 2 == 0) return false;\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n ==\
    \ 2) {\n            return true;\n        } else if (n % 2 == 0) {\n         \
    \   return false;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n <=\
    \ 3) {\n            return true;\n        } else if (n % 2 == 0 || n % 3 == 0)\
    \ {\n            return false;\n        }\n\n        int i = 5;\n        while\
    \ (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n        \
    \        return false;\n            }\n            i += 6;\n        }\n      \
    \  return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        //####################################################################\n\
    \        //# Fill in your code here\n        //####################################################################\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp8soil1nd.java:28: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        } else if (n < 2\
    \ || n % 2 == 0) {\n            return false;\n        }\n        for (int i =\
    \ 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: implement this function\n        if (n <= 1) {\n       \
    \     return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i = i + 6) {\n            if (n\
    \ % i == 0 || n % (i + 2) == 0) {\n                return false;\n           \
    \ }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Write your code here.\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) {\n                return false;\n     \
    \       }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptsnc4f_a.java:40)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        int\
    \ sqrt = (int) Math.sqrt(n);\n        for (int i = 2; i <= sqrt; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wgtgbj5.java:29)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: Complete this function.\n        if (n <= 1) {\n       \
    \     return false;\n        }\n        if (n <= 3) {\n            return true;\n\
    \        }\n        if (n % 2 == 0 || n % 3 == 0) {\n            return false;\n\
    \        }\n        for (int i = 5; i * i <= n; i = i + 6) {\n            if (n\
    \ % i == 0 || n % (i + 2) == 0) {\n                return false;\n           \
    \ }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int max = (int) Math.floor(Math.sqrt(n));\n        boolean isPrime\
    \ = n > 1;\n        for (int i = 2; i <= max; i++) {\n            if (n % i ==\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n        }\n        return isPrime;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // return the primality of n.\n        return java.math.BigInteger.valueOf(n).isProbablePrime(7);\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // HINT:\n        // 1. Is it a special case?\n        // 2. What\
    \ about divisibility by 2?\n        // 3. What about divisibility by 3?\n    \
    \    // 4. What about divisibility by 5?\n        // 5. Is there a faster approach\
    \ than brute force?\n        if (n == 2) {\n            return true;\n       \
    \ }\n        if (n < 2 || n % 2 == 0) {\n            return false;\n        }\n\
    \        for (int i = 3; i < Math.sqrt(n) + 1; i += 2) {\n            if (n %\
    \ i == 0) {\n                return false;\n            }\n        }\n       \
    \ return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i;\n        for (i = 2; i < n; i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfmksydkn.java:40)\n"
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        int\
    \ squareRoot = (int) Math.sqrt(n);\n        for (int i = 2; i <= squareRoot; i++)\
    \ {\n            if (n % i == 0) {\n                return false;\n          \
    \  }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7iueq9rq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n %\
    \ 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        else if (n <= 1 || n % 2 == 0)\
    \ return false;\n        else {\n            // Let's actually implement the trial\
    \ division algorithm.\n            // https://en.wikipedia.org/wiki/Trial_division\n\
    \            // https://en.wikipedia.org/wiki/Primality_test\n            int\
    \ i = 3;\n            while (i <= Math.sqrt(n)) {\n                if (n % i ==\
    \ 0) return false;\n                i += 2;\n            }\n            return\
    \ true;\n        }\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        else if (n == 2) return true;\n\
    \        else if (n % 2 == 0) return false;\n        int sqrt = (int) Math.sqrt(n);\n\
    \        for (int i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) return\
    \ false;\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n == 1 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i\
    \ == 0) return false;\n        }\n        return true;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n==2 || n==3) {\n            return true;\n        }\n      \
    \  else if (n%2==0 || n<2) {\n            return false;\n        }\n        else\
    \ {\n            for (int i=3; i*i<=n; i+=2) {\n                if (n%i==0) {\n\
    \                    return false;\n                }\n            }\n       \
    \     return true;\n        }\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6)\n            if (n % i == 0 || n % (i + 2) == 0)\n         \
    \       return false;\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bizc7ia.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7iueq9rq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n % 2 == 0) return false;\n        int m = (int)Math.sqrt(n);\n    \
    \    for (int i = 3; i <= m; i += 2) {\n            if (n % i == 0) {\n      \
    \          return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n < 2 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i <= Math.sqrt(n); i += 2) {\n            if\
    \ (n % i == 0) {\n                return false;\n            }\n        }\n  \
    \      return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        } else if (n % 2\
    \ == 0) {\n            return false;\n        }\n        for (int i = 3; i < Math.sqrt(n);\
    \ i+=2) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmputdqziy2.java:44)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n\tboolean answer = true;\n\tint i = 2;\n\twhile (i < n && answer) {\n\t \
    \   if (n % i == 0) {\n\t\tanswer = false;\n\t    }\n\t    i++;\n\t}\n\treturn\
    \ answer;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptjl3z6fi.java:42)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Hint: This is a very common question, please do an internet search\n\
    \        // before asking the mentor.\n        // Your code here!\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6sp1xa6w.java:31)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n      if (n == 2) {\n        return true;\n      }\n      if (n < 2 || n\
    \ % 2 == 0) {\n        return false;\n      }\n      int sqrt = (int) Math.sqrt(n);\n\
    \      for (int i = 3; i <= sqrt; i += 2) {\n        if (n % i == 0) {\n     \
    \     return false;\n        }\n      }\n      return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < Math.sqrt(n) + 1; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int x = 2; x < n; x++) {\n            if (n % x == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph1sty0g2.java:39)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i = 2;\n        while (i * i <= n) {\n            if (n % i ==\
    \ 0) {\n                return false;\n            }\n            i += 1;\n  \
    \      }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp43v23s65.java:41)\n"
  stdout: ''
  timestamp: 1660010818
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0)\n    \
    \            return false;\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgyo_7ddl.java:38)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n <=\
    \ 3) {\n            return true;\n        } else if (n % 2 == 0 || n % 3 == 0)\
    \ {\n            return false;\n        }\n        int i = 5;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n           \
    \     return false;\n            }\n            i += 6;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n <=\
    \ 3) {\n            return true;\n        } else if (n % 2 == 0 || n % 3 == 0)\
    \ {\n            return false;\n        }\n        int i = 5;\n        while (i\
    \ * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n           \
    \     return false;\n            }\n            i += 6;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        int\
    \ sqrt = (int) Math.sqrt(n);\n        for (int i = 2; i <= sqrt; i++) {\n    \
    \        if (n % i == 0) {\n                return false;\n            }\n   \
    \     }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n      int x = 2;\n      while (x <= Math.sqrt(n)) {\n        if (n % x ==\
    \ 0) {\n          return false;\n        }\n        x += 1;\n      }\n      return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprf_hn1jg.java:41)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        int\
    \ i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n           \
    \     return false;\n            }\n            i++;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        int i = 5;\n      \
    \  while (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0) return\
    \ false;\n            i += 6;\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        else\
    \ if (n <= 3) {\n            return true;\n        }\n        else if (n % 2 ==\
    \ 0 || n % 3 == 0) {\n            return false;\n        }\n        int i = 5;\n\
    \        while (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0)\
    \ {\n                return false;\n            }\n            i += 6;\n     \
    \   }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Check edge cases.\n        if (n <= 1) return false;\n       \
    \ if (n <= 3) return true;\n        // It will be faster to skip over all even\
    \ numbers.\n        for (int i = 2; i < n; i += 2) {\n            if (n % i ==\
    \ 0) return false;\n        }\n        return true;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq6ep6m5q.java:45)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n % 2 == 0) return false;\n\
    \        int factor = 3;\n        while (factor <= Math.sqrt(n)) {\n         \
    \   if (n % factor == 0) return false;\n            factor += 2;\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ya_p6kb.java:41)\n"
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7fpit0ux.java:39)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ <= 3) {\n            return true;\n        }\n        int[] primes = {2, 3,\
    \ 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
    \ 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163,\
    \ 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\
    \ 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349,\
    \ 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443,\
    \ 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\
    \ 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647,\
    \ 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757,\
    \ 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\
    \ 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983,\
    \ 991, 997};\n        for (int prime : primes) {\n            if (n == prime)\
    \ {\n                return true;\n            }\n            if (n % prime ==\
    \ 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n\tif (n <= 1) {\n\t    return false;\n\t} else if (n <= 3) {\n\t    return\
    \ true;\n\t} else if (n % 2 == 0 || n % 3 == 0) {\n\t    return false;\n\t}\n\t\
    int i = 5;\n\twhile (i * i <= n) {\n\t    if (n % i == 0 || n % (i + 2) == 0)\
    \ {\n\t\treturn false;\n\t    }\n\t    i += 6;\n\t}\n\treturn true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n      if (n < 2) return false;\n      if (n == 2) return true;\n      if\
    \ (n % 2 == 0) return false;\n      for (int i = 3; i * i <= n; i += 2)\n    \
    \      if (n % i == 0) return false;\n      return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // If n is less than 1, then we can't say it's a prime\n        if\
    \ (n < 1) {\n            return false;\n        }\n        // If n is 2 or 3,\
    \ then it's prime\n        if (n == 2 || n == 3) {\n            return true;\n\
    \        }\n        // If n is divisible by 2, then it's not prime\n        if\
    \ (n % 2 == 0) {\n            return false;\n        }\n        // If n is divisible\
    \ by 3, then it's not prime\n        if (n % 3 == 0) {\n            return false;\n\
    \        }\n        // Loop from 5 to the square root of n, and if we find\n \
    \       // that n is divisible by i, then it's not prime\n        for (int i =\
    \ 5; i <= Math.sqrt(n); i += 6) {\n            if (n % i == 0 || n % (i + 2) ==\
    \ 0) {\n                return false;\n            }\n        }\n        // Otherwise,\
    \ it's prime\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp93bsnjnh.java:58)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        int i\
    \ = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n        \
    \        return false;\n            }\n            i += 1;\n        }\n      \
    \  return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n == 3) return true;\n        if (n % 2 == 0) return false;\n      \
    \  if (n % 3 == 0) return false;\n        int i = 5;\n        int w = 2;\n   \
    \     while (i * i <= n) {\n            if (n % i == 0) return false;\n      \
    \      i += w;\n            w = 6 - w;\n        }\n        return true;\n}\n \
    \   public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        int sqrt = (int) Math.sqrt(n);\n\
    \        for (int i = 2; i <= sqrt; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        int m = (int) Math.sqrt(n);\n   \
    \     for (int i = 3; i <= m; i += 2) {\n            if (n % i == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        int m = (int) Math.sqrt(n);\n   \
    \     for (int i = 3; i <= m; i += 2) {\n            if (n % i == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // BEGIN_CODE\n        if (n <= 1) return false;\n        if (n ==\
    \ 2) return true;\n        if (n % 2 == 0) return false;\n        for (int i =\
    \ 3; i < n; i += 2) {\n            if (n % i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n        // END_CODE\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return true;\n}\n    public static void main(String[] args) {\n \
    \   assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7iueq9rq.java:28)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        int\
    \ max = (int) Math.sqrt(n);\n        for (int i = 2; i <= max; i++) {\n      \
    \      if (n % i == 0) {\n                return false;\n            }\n     \
    \   }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        boolean prime = true;\n        if (n == 1) {\n            prime =\
    \ false;\n        }\n        for (int i = 2; i < n; i++) {\n            if (n\
    \ % i == 0) {\n                prime = false;\n            }\n        }\n    \
    \    return prime;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // YOUR CODE HERE\n        if (n <= 1) {\n            return false;\n\
    \        } else if (n == 2) {\n            return true;\n        } else if (n\
    \ % 2 == 0) {\n            return false;\n        } else {\n            int limit\
    \ = (int) Math.sqrt(n);\n            for (int i = 3; i <= limit; i += 2) {\n \
    \               if (n % i == 0) {\n                    return false;\n       \
    \         }\n            }\n            return true;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // If a number is less than 2, it's not prime, so return false\n\
    \        if (n < 2) {\n            return false;\n        }\n        // We only\
    \ need to check up to the square root of the number for factors\n        for (int\
    \ i = 2; i <= Math.sqrt(n); i++) {\n            // If n is divisible by i, it\
    \ has a factor other than 1 and itself,\n            // so it is not prime, so\
    \ return false\n            if (n % i == 0) {\n                return false;\n\
    \            }\n        }\n        // If we didn't find any factors, the number\
    \ is prime, so return true\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        } else if (n ==\
    \ 1 || n % 2 == 0) {\n            return false;\n        }\n        for (int i\
    \ = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        int sqrt = (int) Math.sqrt(n);\n\
    \        for (int i = 3; i <= sqrt; i += 2) {\n            if (n % i == 0) {\n\
    \                return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_wgtgbj5.java:29)\n"
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int count = 0;\n        for (int i = 2; i < n; i++) {\n         \
    \   if (n % i == 0) {\n                count++;\n            }\n        }\n  \
    \      if (count == 0) {\n            return true;\n        } else {\n       \
    \     return false;\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdnwxrg1o.java:44)\n"
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ <= 3) {\n            return true;\n        }\n        if (n % 2 == 0 || n %\
    \ 3 == 0) {\n            return false;\n        }\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // You do not need to modify this method.\n        if (n <= 1) {\n\
    \            return false;\n        }\n        int i = 2;\n        while (i*i\
    \ <= n) {\n            if (n % i == 0) {\n                return false;\n    \
    \        }\n            i = i + 1;\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i <= Math.sqrt(n);\
    \ i += 2) {\n            if (n % i == 0) {\n                return false;\n  \
    \          }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        } else if (n ==\
    \ 2) {\n            return true;\n        } else if (n % 2 == 0) {\n         \
    \   return false;\n        } else {\n            int sqrt = (int) Math.sqrt(n);\n\
    \            for (int i = 3; i <= sqrt; i += 2) {\n                if (n % i ==\
    \ 0) {\n                    return false;\n                }\n            }\n\
    \            return true;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        if (n == 2) return true;\n    \
    \    if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i += 2)\n\
    \            if (n % i == 0) return false;\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: YOUR CODE HERE\n        for (int i = 2; i < n; i++) {\n\
    \            if (n % i == 0) {\n                return false;\n            }\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkbbjnxyi.java:40)\n"
  stdout: ''
  timestamp: 1660010821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int start = 2;\n        int end = (int) Math.sqrt(n);\n        for\
    \ (int i = start; i <= end; i++) {\n            if (n % i == 0) {\n          \
    \      return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8o8vrk4a.java:41)\n"
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        for (int i = 2; i <= Math.sqrt(n);\
    \ i++) {\n            if (n % i == 0) return false;\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ % 2 == 0) {\n            return false;\n        }\n        for (int i = 3; i\
    \ * i <= n; i += 2) {\n            if (n % i == 0) {\n                return false;\n\
    \            }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp45nvvhdv.java:45)\n"
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        int\
    \ i = 2;\n        while (i * i <= n) {\n            if (n % i == 0) {\n      \
    \          return false;\n            }\n            i += 1;\n        }\n    \
    \    return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Eliminate all even numbers greater than 2\n        if (n % 2 ==\
    \ 0 && n > 2) {\n            return false;\n        }\n        for (int i = 3;\
    \ i <= (int) Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n        \
    \        return false;\n            }\n        }\n        return true;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5psw4m2l.java:43)\n"
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Your code here\n        if (n==1) {\n            return false;\n\
    \        }\n        else if (n==2) {\n            return true;\n        }\n  \
    \      else {\n            for (int i=2; i<=Math.sqrt(n); i++) {\n           \
    \     if (n%i==0) {\n                    return false;\n                }\n  \
    \          }\n            return true;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n\t\tif (n == 1) {\n\t\t\treturn false;\n\t\t}\n\t\tint m = (int) Math.sqrt(n);\n\
    \t\tfor (int i = 2; i <= m; i++) {\n\t\t\tif (n % i == 0) {\n\t\t\t\treturn false;\n\
    \t\t\t}\n\t\t}\n\t\treturn true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n      if (n <= 1) return false;\n      if (n <= 3) return true;\n      if\
    \ (n % 2 == 0 || n % 3 == 0) return false;\n      for (int i = 5; i * i <= n;\
    \ i += 6)\n          if (n % i == 0 || n % (i + 2) == 0)\n              return\
    \ false;\n      return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n  \
    \              return false;\n            }\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7hk5n_tw.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        if (n == 2) return true;\n   \
    \     if (n == 3) return true;\n        if (n % 2 == 0) return false;\n      \
    \  if (n % 3 == 0) return false;\n        int sqrtN = (int) Math.sqrt(n) + 1;\n\
    \        for (int i = 6; i <= sqrtN; i += 6) {\n            if (n % (i - 1) ==\
    \ 0) return false;\n            if (n % (i + 1) == 0) return false;\n        }\n\
    \        return true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int counter = 0;\n        for (int i = 1; i <= n; i++) {\n      \
    \      if (n % i == 0)\n                counter++;\n        }\n        if (counter\
    \ == 2)\n            return true;\n        else\n            return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        if (n % 2 == 0) {\n  \
    \          return false;\n        }\n        for (int i = 3; i * i <= n; i +=\
    \ 2) {\n            if (n % i == 0) {\n                return false;\n       \
    \     }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: implement me\n        boolean prime = true;\n        if\
    \ (n<=1) {\n            prime = false;\n        } else {\n            for (int\
    \ i=2; i<n; i++) {\n                if (n%i == 0) {\n                    prime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \     }\n        return prime;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        else if (n <= 3) return true;\n\
    \        else if (n % 2 == 0 || n % 3 == 0) return false;\n        int i = 5;\n\
    \        while (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0)\
    \ return false;\n            i += 6;\n        }\n        return true;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        for (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i\
    \ == 0) {\n                return false;\n            }\n        }\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6bizc7ia.java:39)\n"
  stdout: ''
  timestamp: 1660010815
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        boolean ans = true;\n        for (int i = 2; i <= Math.sqrt(n); i++)\
    \ {\n            if (n % i == 0)\n                ans = false;\n        }\n  \
    \      return n == 1 ? false : ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) {\n            return true;\n        }\n        if (n\
    \ == 1 || n % 2 == 0) {\n            return false;\n        }\n        for (int\
    \ i = 3; i <= Math.sqrt(n); i += 2) {\n            if (n % i == 0) {\n       \
    \         return false;\n            }\n        }\n        return true;\n}\n \
    \   public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        return n > 1 && IntStream.range(2, n).noneMatch(i -> n % i == 0);\n\
    }\n    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        int i, m = 0, flag = 0;\n        m = n / 2;\n        if (n == 0 ||\
    \ n == 1) {\n            return false;\n        } else {\n            for (i =\
    \ 2; i <= m; i++) {\n                if (n % i == 0) {\n                    return\
    \ false;\n                }\n            }\n            return true;\n       \
    \ }\n}\n    public static void main(String[] args) {\n    assert(isPrime((6))\
    \ == (false));\n    assert(isPrime((101)) == (true));\n    assert(isPrime((11))\
    \ == (true));\n    assert(isPrime((13441)) == (true));\n    assert(isPrime((61))\
    \ == (true));\n    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) ==\
    \ (false));\n    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) ==\
    \ (true));\n    assert(isPrime((17)) == (true));\n    assert(isPrime((85)) ==\
    \ (false));\n    assert(isPrime((77)) == (false));\n    assert(isPrime((255379))\
    \ == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 2) return true;\n        if (n == 1 || n % 2 == 0) return\
    \ false;\n        for (int i = 3; i * i <= n; i += 2)\n            if (n % i ==\
    \ 0) return false;\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) return false;\n        if (n == 2) return true;\n    \
    \    if (n % 2 == 0) return false;\n        for (int i = 3; i * i <= n; i += 2)\n\
    \            if (n % i == 0) return false;\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010816
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: implement this method\n        boolean isPrime = true;\n\
    \        for (int i = 2; i < n; i++) {\n            if (n % i == 0) {\n      \
    \          isPrime = false;\n                break;\n            }\n        }\n\
    \        return isPrime;\n}\n    public static void main(String[] args) {\n  \
    \  assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe_3bt5w_.java:42)\n"
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        if (n\
    \ == 2) {\n            return true;\n        }\n        for (int i = 2; i < n;\
    \ i++) {\n            if (n % i == 0) {\n                return false;\n     \
    \       }\n        }\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        } else if (n ==\
    \ 2) {\n            return true;\n        } else if (n % 2 == 0) {\n         \
    \   return false;\n        }\n        int count = 0;\n        for (int i = 1;\
    \ i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n                count++;\n\
    \            }\n        }\n        return count == 1;\n}\n    public static void\
    \ main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010821
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n < 2) {\n            return false;\n        }\n        for (int\
    \ i = 2; i <= n / 2; i++) {\n            if (n % i == 0) {\n                return\
    \ false;\n            }\n        }\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101))\
    \ == (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010818
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO: Write this method.  Keep in mind there is a much easier\n\
    \        // way of accomplishing this using the BigInteger class.\n        if\
    \ (n <= 1) {\n            return false;\n        }\n        if (n <= 3) {\n  \
    \          return true;\n        }\n        if (n % 2 == 0 || n % 3 == 0) {\n\
    \            return false;\n        }\n        for (int i = 5; i * i <= n; i =\
    \ i + 6) {\n            if (n % i == 0 || n % (i + 2) == 0) {\n              \
    \  return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // Write your code here.\n        if (n == 2) return true;\n    \
    \    if (n == 3) return true;\n        if (n % 2 == 0) return false;\n       \
    \ if (n % 3 == 0) return false;\n        int i = 5;\n        int w = 2;\n    \
    \    while (i * i <= n) {\n            if (n % i == 0) return false;\n       \
    \     i += w;\n            w = 6 - w;\n        }\n        return true;\n}\n  \
    \  public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph6lq22k1.java:46)\n"
  stdout: ''
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        else\
    \ if (n <= 3) {\n            return true;\n        }\n        else if (n % 2 ==\
    \ 0 || n % 3 == 0) {\n            return false;\n        }\n        int i = 5;\n\
    \        while (i * i <= n) {\n            if (n % i == 0 || n % (i + 2) == 0)\
    \ {\n                return false;\n            }\n            i += 6;\n     \
    \   }\n        return true;\n}\n    public static void main(String[] args) {\n\
    \    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010819
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) return false;\n        int i = 2;\n        while (i <\
    \ n && n % i != 0) {\n            i++;\n        }\n        return i == n;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i * i <= n; i++) {\n            if (n % i == 0) {\n            \
    \    return false;\n            }\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010817
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) {\n            return false;\n        }\n        int\
    \ count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (n % i ==\
    \ 0) {\n                count++;\n            }\n        }\n        if (count\
    \ == 2) {\n            return true;\n        }\n        return false;\n}\n   \
    \ public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010822
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // if(n==1)return false;\n        for(int i=2;i<n;i++){\n       \
    \     if(n%i==0)return false;\n        }\n        return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptnr9636b.java:38)\n"
  stdout: ''
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n      if (n == 1) return false;\n      if (n == 2) return true;\n      if\
    \ (n % 2 == 0) return false;\n      for (int i = 3; i * i <= n; i += 2) {\n  \
    \      if (n % i == 0) return false;\n      }\n      return true;\n}\n    public\
    \ static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n  \
    \  assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n <= 1) return false;\n        if (n <= 3) return true;\n   \
    \     if (n % 2 == 0 || n % 3 == 0) return false;\n        for (int i = 5; i *\
    \ i <= n; i += 6) {\n            if (n % i == 0 || n % (i + 2) == 0) return false;\n\
    \        }\n        return true;\n}\n    public static void main(String[] args)\
    \ {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) == (true));\n\
    \    assert(isPrime((11)) == (true));\n    assert(isPrime((13441)) == (true));\n\
    \    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) == (false));\n\
    \    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) == (true));\n \
    \   assert(isPrime((11)) == (true));\n    assert(isPrime((17)) == (true));\n \
    \   assert(isPrime((85)) == (false));\n    assert(isPrime((77)) == (false));\n\
    \    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010820
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        // TODO\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(isPrime((6)) == (false));\n    assert(isPrime((101)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((13441))\
    \ == (true));\n    assert(isPrime((61)) == (true));\n    assert(isPrime((4)) ==\
    \ (false));\n    assert(isPrime((1)) == (false));\n    assert(isPrime((5)) ==\
    \ (true));\n    assert(isPrime((11)) == (true));\n    assert(isPrime((17)) ==\
    \ (true));\n    assert(isPrime((85)) == (false));\n    assert(isPrime((77)) ==\
    \ (false));\n    assert(isPrime((255379)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9v7coela.java:30)\n"
  stdout: ''
  timestamp: 1660010822
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return true if a given number is prime, and false otherwise.\n\
    \    // >>> is_prime(6)\n    // False\n    // >>> is_prime(101)\n    // True\n\
    \    // >>> is_prime(11)\n    // True\n    // >>> is_prime(13441)\n    // True\n\
    \    // >>> is_prime(61)\n    // True\n    // >>> is_prime(4)\n    // False\n\
    \    // >>> is_prime(1)\n    // False\n    public static boolean isPrime(int n)\
    \ {\n        if (n == 1) {\n            return false;\n        }\n        for\
    \ (int i = 2; i <= Math.sqrt(n); i++) {\n            if (n % i == 0) {\n     \
    \           return false;\n            }\n        }\n        return true;\n}\n\
    \    public static void main(String[] args) {\n    assert(isPrime((6)) == (false));\n\
    \    assert(isPrime((101)) == (true));\n    assert(isPrime((11)) == (true));\n\
    \    assert(isPrime((13441)) == (true));\n    assert(isPrime((61)) == (true));\n\
    \    assert(isPrime((4)) == (false));\n    assert(isPrime((1)) == (false));\n\
    \    assert(isPrime((5)) == (true));\n    assert(isPrime((11)) == (true));\n \
    \   assert(isPrime((17)) == (true));\n    assert(isPrime((85)) == (false));\n\
    \    assert(isPrime((77)) == (false));\n    assert(isPrime((255379)) == (false));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010822

name: HumanEval_121_solution
language: java
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given a non-empty list of integers, return the sum of all\
  \ of the odd elements that are in even positions.\n    // Examples\n    // solution([5,\
  \ 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    // solution([30,\
  \ 13, 24, 321]) ==>0\n    public static int solution(ArrayList<Integer> lst) {\n"
tests: "return 0;\n    }\n    public static void main(String[] args) {\n    assert(solution((new\
  \ ArrayList<Integer>(Arrays.asList((int)5, (int)8, (int)7, (int)1)))) == (12));\n\
  \    assert(solution((new ArrayList<Integer>(Arrays.asList((int)3, (int)3, (int)3,\
  \ (int)3, (int)3)))) == (9));\n    assert(solution((new ArrayList<Integer>(Arrays.asList((int)30,\
  \ (int)13, (int)24, (int)321)))) == (0));\n    assert(solution((new ArrayList<Integer>(Arrays.asList((int)5,\
  \ (int)9)))) == (5));\n    assert(solution((new ArrayList<Integer>(Arrays.asList((int)2,\
  \ (int)4, (int)8)))) == (0));\n    assert(solution((new ArrayList<Integer>(Arrays.asList((int)30,\
  \ (int)13, (int)23, (int)32)))) == (23));\n    assert(solution((new ArrayList<Integer>(Arrays.asList((int)3,\
  \ (int)13, (int)2, (int)9)))) == (3));\n    }\n\n}\n"
completions: []
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- "    }\n}"
- "\n    }\n"

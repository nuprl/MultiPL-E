language: java
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (set.contains(-l.get(i))) {\n                return true;\n  \
    \          }\n            set.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26jdsb63.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) {\n            return false;\n        }\n        Collections.sort(l);\n\
    \        int i = 0;\n        int j = l.size() - 1;\n        while (i != j) {\n\
    \            int sum = l.get(i) + l.get(j);\n            if (sum < 0) {\n    \
    \            i++;\n            } else if (sum > 0) {\n                j--;\n \
    \           } else {\n                return true;\n            }\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        ArrayList<Pair<Integer,\
    \ Integer>> list = new ArrayList<Pair<Integer, Integer>>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++)\
    \ {\n                if (l.get(i) + l.get(j) == 0) {\n                    Pair<Integer,\
    \ Integer> p = new Pair<Integer, Integer>(l.get(i), l.get(j));\n             \
    \       list.add(p);\n                }\n            }\n        }\n        if\
    \ (list.size() == 0) {\n            return false;\n        }\n        return true;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NoClassDefFoundError: org/javatuples/Pair\n\
    \tat Problem.pairsSumToZero(tmp76lw93g5.java:27)\n\tat Problem.main(tmp76lw93g5.java:41)\n\
    Caused by: java.lang.ClassNotFoundException: org.javatuples.Pair\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)\n\
    \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)\n\
    \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520)\n\t... 2\
    \ more\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ s = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (s.contains(-l.get(i))) {\n                return true;\n    \
    \        }\n            s.add(l.get(i));\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ e.g. l = [1, 2, 3, 7], c = new ArrayList<Integer>()\n        // for (i in [0,\
    \ 1, 2, 3])\n        //   a = l[i]\n        //   for (j in [0, 1, 2, 3])\n   \
    \     //     b = l[j]\n        //     if (a+b == 0)\n        //       return True\n\
    \        // return False\n        // e.g. l = [2, 4, -5, 3, 5, 7], c = new ArrayList<Integer>()\n\
    \        // for (i in [0, 1, 2, 3, 4, 5])\n        //   a = l[i]\n        // \
    \  for (j in [0, 1, 2, 3, 4, 5])\n        //     b = l[j]\n        //     if (a+b\
    \ == 0)\n        //       return True\n        // return False\n        // e.g.\
    \ l = [1], c = new ArrayList<Integer>()\n        // for (i in [0])\n        //\
    \   a = l[i]\n        //   for (j in [0])\n        //     b = l[j]\n        //\
    \     if (a+b == 0)\n        //       return True\n        // return False\n \
    \       ArrayList<Integer> c = new ArrayList<Integer>();\n        int a = 0;\n\
    \        int b = 0;\n        boolean found = false;\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            a = l.get(i);\n            for (int j = 0; j\
    \ < l.size(); j++) {\n                b = l.get(j);\n                if (a + b\
    \ == 0) {\n                    found = true;\n                }\n            }\n\
    \        }\n        return found;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpttjgak5y.java:63)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean[]\
    \ seen = new boolean[1000000];\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int val = l.get(i);\n            if (seen[val+500000]) {\n      \
    \          return true;\n            }\n            seen[val+500000] = true;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpldiok1_i.java:35)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ TODO\n        // Complete the function.\n        if (l.size() == 1) {\n    \
    \        return false;\n        }\n        else {\n            int a = l.get(0);\n\
    \            l.remove(0);\n            boolean a2 = l.contains(-a);\n        \
    \    if (a2) {\n                return true;\n            }\n            else\
    \ {\n                return pairsSumToZero(l);\n            }\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfa58rbol.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //TODO:\
    \ implement this method\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1uh6cjot.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Write the code for this function here.\n        // If you have any questions,\
    \ feel free to email mike@cs61as.org.\n        if (l.size() == 0) {\n        \
    \    return false;\n        }\n        ArrayList<Integer> t = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (t.contains(i * -1)) {\n          \
    \      return true;\n            }\n            else {\n                t.add(i);\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++){\n            for (int j = i+1; j < l.size();\
    \ j++){\n                if (l.get(i) + l.get(j) == 0){\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2w8nun4.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++){\n\
    \            if (set.contains(-l.get(i))){\n                return true;\n   \
    \         }\n            set.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ BEGIN SOLUTION\n        boolean sol = false;\n        for (int i = 0; i < l.size();\
    \ i++){\n            for (int j = i + 1; j < l.size(); j++){\n               \
    \ sol = sol || (l.get(i) + l.get(j) == 0);\n            }\n        }\n       \
    \ return sol;\n        // END SOLUTION\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ seenNumbers = new HashSet<Integer>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            int n = l.get(i);\n            if (seenNumbers.contains(-n))\
    \ {\n                return true;\n            }\n            seenNumbers.add(n);\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() <= 1) {\n            return false;\n        }\n        Collections.sort(l);\n\
    \        int left = 0;\n        int right = l.size() - 1;\n        while (left\
    \ < right) {\n            int sum = l.get(left) + l.get(right);\n            if\
    \ (sum == 0) {\n                return true;\n            } else if (sum < 0)\
    \ {\n                left++;\n            } else {\n                right--;\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() == 0) return false;\n        Set<Integer> s = new HashSet<Integer>();\n\
    \        for (int x : l) {\n            if (s.contains(-x)) return true;\n   \
    \         s.add(x);\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ a = false;\n        for (int i = 0; i < l.size(); i++) {\n            for (int\
    \ j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) ==\
    \ 0) {\n                    a = true;\n                }\n            }\n    \
    \    }\n        return a;\n}\n    public static void main(String[] args) {\n \
    \   assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ ADD CODE HERE\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2j1cfepn.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gclvksc.java:26)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        for (int i = 0; i < l.size(); i++) {\n            for\
    \ (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0)\n                    return true;\n            }\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        boolean found = false;\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            if (s.contains(-l.get(i))) {\n    \
    \            found = true;\n                break;\n            }\n          \
    \  s.add(l.get(i));\n        }\n        return found;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Not implemented\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.pairsSumToZero(tmpzipmk8qp.java:23)\n\tat Problem.main(tmpzipmk8qp.java:26)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0)\n                    return\
    \ true;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ i = 0;\n        int j = 0;\n        boolean res = false;\n        for (i = 0;\
    \ i < l.size(); i++) {\n            for (j = i + 1; j < l.size(); j++) {\n   \
    \             if (l.get(i) + l.get(j) == 0) {\n                    res = true;\n\
    \                }\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Fill in your code below here ...\n        return true;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa1bbxnw1.java:27)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Not implemented.\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented.\n\
    \tat Problem.pairsSumToZero(tmp3yyj52s8.java:23)\n\tat Problem.main(tmp3yyj52s8.java:26)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        // use any() and all()\n        ArrayList<Integer> negatives\
    \ = new ArrayList<Integer>();\n        int sum = 0;\n        for (int i = 0; i\
    \ < l.size(); i++) {\n            if (l.get(i) < 0) {\n                negatives.add(l.get(i));\n\
    \            }\n            else {\n                sum += l.get(i);\n       \
    \     }\n        }\n        if (negatives.size() >= 2) {\n            return all(negatives,\
    \ (x) -> (sum + x) == 0);\n        }\n        else {\n            return false;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpihbi32ge.java:36: error: cannot find symbol\n            return\
    \ all(negatives, (x) -> (sum + x) == 0);\n                   ^\n  symbol:   method\
    \ all(ArrayList<Integer>,(x)->(sum + x) == 0)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code goes here\n        if (l.size() < 2) {\n            return false;\n\
    \        }\n        Set<Integer> set = new HashSet<>();\n        for (int i :\
    \ l) {\n            set.add(i);\n        }\n        for (int i : l) {\n      \
    \      if (set.contains(-i)) {\n                return true;\n            }\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjr0zbre9.java:39)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        Set<Integer> st = new HashSet<Integer>();\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            if (st.contains(-l.get(i))) {\n\
    \                return true;\n            }\n            st.add(l.get(i));\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Solution Here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmponegh31b.java:30)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your Code Here\n        HashSet<Integer> seen = new HashSet<Integer>();\n  \
    \      for (int x : l) {\n            if (seen.contains(-x)) {\n             \
    \   return true;\n            }\n            seen.add(x);\n        }\n       \
    \ return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        if (l.size() == 0) return false;\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int x : l) {\n            if (set.contains(-x))\
    \ return true;\n            set.add(x);\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        for (int num : l) {\n            if (set.contains(-num))\
    \ {\n                return true;\n            }\n            set.add(num);\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ set = new HashSet<>();\n        for (int i : l) {\n            if (set.contains(-i))\
    \ {\n                return true;\n            }\n            set.add(i);\n  \
    \      }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here!\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynxdgf8d.java:30)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int elem = l.get(i);\n            if (s.contains(-elem)) {\n    \
    \            return true;\n            }\n            s.add(elem);\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() <= 1) {\n            return false;\n        }\n        HashSet<Integer>\
    \ complementSet = new HashSet<Integer>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            int complement = -l.get(i);\n            if (complementSet.contains(complement))\
    \ {\n                return true;\n            }\n            complementSet.add(l.get(i));\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ bol = false;\n        for (int i = 0; i < l.size(); i++) {\n            for\
    \ (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    bol = true;\n                }\n            }\n\
    \        }\n        return bol;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int x = l.get(i);\n            int y = -x;\n            if (set.contains(y))\
    \ {\n                return true;\n            }\n            set.add(x);\n  \
    \      }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ result = false;\n        for (int i=0; i<l.size(); i++) {\n            for (int\
    \ j=i+1; j<l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n\
    \                    result = true;\n                }\n            }\n      \
    \  }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ use brute force\n        // loop through all possible pairs, check if the sum\
    \ is zero\n        int n = l.size();\n        for (int i = 0; i < n; i++) {\n\
    \            for (int j = i + 1; j < n; j++) {\n                if (l.get(i) +\
    \ l.get(j) == 0) {\n                    return true;\n                }\n    \
    \        }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) {\n            return false;\n        }\n        l.sort(null);\n\
    \        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i) ==\
    \ 0) {\n                continue;\n            }\n            for (int j = i +\
    \ 1; j < l.size(); j++) {\n                if (l.get(j) == 0) {\n            \
    \        continue;\n                }\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        // hint: use a hash set\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphx5g9dml.java:31)\n"
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ remove duplicates, then sort\n        HashSet<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> newL = new ArrayList<Integer>(s);\n        Collections.sort(newL);\n\
    \        // no solution if list has fewer than 2 elements\n        if (newL.size()\
    \ < 2) {\n            return false;\n        }\n        // we want to use two\
    \ indices, i and j, that start at opposite ends of the list\n        // we want\
    \ to move i forward (up) and j backward (down) to meet in the middle\n       \
    \ // at a pair (i, j) such that i + j = 0\n        int i = 0;\n        int j =\
    \ newL.size() - 1;\n        // if i ever meets or crosses j, then the list does\
    \ not have a pair that sums to zero\n        while (i < j) {\n            int\
    \ sum = newL.get(i) + newL.get(j);\n            if (sum == 0) {\n            \
    \    return true;\n            } else if (sum < 0) {\n                i++;\n \
    \           } else {\n                j--;\n            }\n        }\n       \
    \ return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n      return\
    \ l.stream().anyMatch(i -> l.stream().anyMatch(j -> i + j == 0 && i != j));\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int i = 0;\n        int j = l.size() - 1;\n        while (i < j) {\n\
    \            if (l.get(i) + l.get(j) == 0) {\n                return true;\n \
    \           } else if (l.get(i) + l.get(j) < 0) {\n                i++;\n    \
    \        } else {\n                j--;\n            }\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        int first = 0;\n        int last = l.size() - 1;\n        while (first\
    \ < last) {\n            int sum = l.get(first) + l.get(last);\n            if\
    \ (sum == 0) {\n                return true;\n            } else if (sum < 0)\
    \ {\n                first += 1;\n            } else {\n                last -=\
    \ 1;\n            }\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n\t\tHashMap<Integer,\
    \ Integer> map = new HashMap<Integer, Integer>();\n\t\tfor (int i = 0; i < l.size();\
    \ i++) {\n\t\t\tint val = l.get(i);\n\t\t\tif (map.containsKey(val)) {\n\t\t\t\
    \tif (val == 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t\
    }\n\t\t\tif (map.containsKey(-val)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tmap.put(val,\
    \ 1);\n\t\t}\n\t\treturn false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code here.\n        HashSet<Integer> mySet = new HashSet<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (mySet.contains(l.get(i)))\
    \ {\n                return true;\n            }\n            else {\n       \
    \         mySet.add(-l.get(i));\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (set.contains(-l.get(i))) {\n                return true;\n  \
    \          }\n            set.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        for (int i : l) {\n            if (s.contains(-i))\
    \ {\n                return true;\n            }\n            s.add(i);\n    \
    \    }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ unique_l = new ArrayList<Integer>();\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (!unique_l.contains(l.get(i))) {\n                unique_l.add(l.get(i));\n\
    \            }\n        }\n        for (int i = 0; i < unique_l.size(); i++) {\n\
    \            if (unique_l.contains(-unique_l.get(i))) {\n                return\
    \ true;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpesqdggbu.java:37)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ IMPLEMENT ME\n        for (int i = 0; i < l.size(); i++) {\n            for\
    \ (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new java.lang.UnsupportedOperationException(\"pairsSumToZero not implemented\
    \ yet.\");\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: pairsSumToZero\
    \ not implemented yet.\n\tat Problem.pairsSumToZero(tmp0rguneq4.java:23)\n\tat\
    \ Problem.main(tmp0rguneq4.java:26)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfa58rbol.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ fill this in\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2om4v8yb.java:30)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int num = l.get(i);\n            if (set.contains(-num)) {\n    \
    \            return true;\n            }\n            set.add(num);\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ STUDENT CODE GOES HERE\n}\n    public static void main(String[] args) {\n  \
    \  assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp5npzxdjs.java:24: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int a : l) {\n            for (int b : l) {\n                if (a == b) {\n\
    \                    continue;\n                }\n                if (a + b ==\
    \ 0) {\n                    return true;\n                }\n            }\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ fill in this function\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyid8qnky.java:30)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Enter your code here.\n}\n    public static void main(String[] args) {\n   \
    \ assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpdhpsy17r.java:24: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpl8ivizqf.java:24: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011520
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        HashSet<Integer> set = new HashSet<Integer>();\n   \
    \     for (int i = 0; i < l.size(); i++) {\n            int x = l.get(i);\n  \
    \          if (set.contains(-x)) {\n                return true;\n           \
    \ }\n            set.add(x);\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ l.size() <= 0;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7wih22w7.java:29)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your Code here\n        throw new RuntimeException(\"Not Implemented.\");\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented.\n\
    \tat Problem.pairsSumToZero(tmpvcegp4mv.java:24)\n\tat Problem.main(tmpvcegp4mv.java:27)\n"
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Fill in the body of this function.\n        // If you change the arguments to\
    \ this function, you must change\n        // the function signature as well.\n\
    \        //\n        // You can use all your favorite Java libraries.\n      \
    \  //\n        // You cannot use any static variables.\n        //\n        //\
    \ You cannot use any loops, but you can use any Java\n        // library functions\
    \ that return a boolean.\n\n        ArrayList<Integer> positive = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> negative = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            if (l.get(i) > 0) {\n        \
    \        positive.add(l.get(i));\n            } else {\n                negative.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(positive);\n        Collections.sort(negative);\n\
    \        for (int i = 0; i < positive.size(); i++) {\n            int x = positive.get(i);\n\
    \            if (x > 0) {\n                int y = -x;\n                if (Collections.binarySearch(negative,\
    \ y) >= 0) {\n                    return true;\n                }\n          \
    \  }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011521
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (set.contains(-l.get(i))) {\n                return true;\n  \
    \          }\n            set.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011520
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"implement this!\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: implement this!\n\
    \tat Problem.pairsSumToZero(tmp1uwinyid.java:23)\n\tat Problem.main(tmp1uwinyid.java:26)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        for (int x : l) {\n            if (s.contains(-x))\
    \ {\n                return true;\n            }\n            s.add(x);\n    \
    \    }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ len = l.size();\n        if (len < 2) {\n            return false;\n       \
    \ }\n        else {\n            for (int i = 0; i < len; i++) {\n           \
    \     for (int j = i + 1; j < len; j++) {\n                    if (l.get(i) +\
    \ l.get(j) == 0) {\n                        return true;\n                   \
    \ }\n                }\n            }\n            return false;\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Not yet implemented\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not yet implemented\n\
    \tat Problem.pairsSumToZero(tmp4kawgzuk.java:23)\n\tat Problem.main(tmp4kawgzuk.java:26)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"Problem not yet implemented\");\n}\n   \
    \ public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not yet implemented\n\tat Problem.pairsSumToZero(tmpvdssc5qh.java:23)\n\tat\
    \ Problem.main(tmpvdssc5qh.java:26)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ set = new HashSet<Integer>();\n        for (int n : l) {\n            if (set.contains(-n))\
    \ {\n                return true;\n            }\n            set.add(n);\n  \
    \      }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        HashSet<Integer> nums = new HashSet<Integer>();\n  \
    \      for (int i : l) {\n            if (nums.contains(-i)) {\n             \
    \   return true;\n            }\n            nums.add(i);\n        }\n       \
    \ return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        if (l.size() <= 1) {\n            return false;\n  \
    \      }\n        for (int i = 0; i < l.size(); i++) {\n            for (int j\
    \ = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int min = l.get(0);\n        int max = l.get(l.size() - 1);\n       \
    \ int i = 0;\n        int j = l.size() - 1;\n        while (i < j) {\n       \
    \     int sum = l.get(i) + l.get(j);\n            if (sum == 0) {\n          \
    \      return true;\n            } else if (sum < 0) {\n                i++;\n\
    \            } else {\n                j--;\n            }\n        }\n      \
    \  return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ result = false;\n        int i = 0;\n        while (i < l.size()) {\n      \
    \      int j = i + 1;\n            while (j < l.size()) {\n                if\
    \ (l.get(i) + l.get(j) == 0) {\n                    result = true;\n         \
    \       }\n                j = j + 1;\n            }\n            i = i + 1;\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ n = l.size();\n        if (n == 1) {\n            return false;\n        }\n\
    \        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < n; i++)\
    \ {\n            int x = l.get(i);\n            if (set.contains(-x)) {\n    \
    \            return true;\n            }\n            set.add(x);\n        }\n\
    \        return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ count = 0;\n        if (l.size() == 1) {\n            return false;\n      \
    \  }\n        for (int i = 0; i < l.size(); i++) {\n            for (int j = i\
    \ + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n\
    \                    count++;\n                }\n            }\n        }\n \
    \       if (count >= 1) {\n            return true;\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0)\n                    return\
    \ true;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ flag = false;\n        for (int i = 0; i < l.size(); i++) {\n            for\
    \ (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    flag = true;\n                }\n            }\n\
    \        }\n        return flag;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ We want to iterate over all pairs of elements in l.\n        // We can do this\
    \ by iterating over the first element, and then iterating\n        // over the\
    \ second element.\n        // We don't want to count the same pair twice, so we\
    \ check to make sure\n        // that i < j.\n        for (int i = 0; i < l.size();\
    \ i++) {\n            for (int j = i + 1; j < l.size(); j++) {\n             \
    \   // Check if this pair sums to zero.\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gclvksc.java:26)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ l.stream().filter(x -> l.contains(-x)).distinct().count() > 1;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ throw new RuntimeException(\"Not yet implemented.\");\n        // error handling\n\
    \        if (l.size() < 2) {\n            return false;\n        }\n\n       \
    \ Collections.sort(l);\n        int start = 0;\n        int end = l.size() - 1;\n\
    \        while (start < end) {\n            int sum = l.get(start) + l.get(end);\n\
    \            if (sum == 0) {\n                return true;\n            } else\
    \ if (sum < 0) {\n                start++;\n            } else {\n           \
    \     end--;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ fill in the code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdan03gfe.java:30)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ TODO: IMPLEMENT ME\n        if (l.size() <= 1) return false;\n        Set<Integer>\
    \ set = new HashSet<>();\n        for (int i = 0; i < l.size(); i++) {\n     \
    \       if (set.contains(-l.get(i))) {\n                return true;\n       \
    \     }\n            set.add(l.get(i));\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"pairsSumToZero\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: pairsSumToZero\n\
    \tat Problem.pairsSumToZero(tmp7vjbba_1.java:23)\n\tat Problem.main(tmp7vjbba_1.java:26)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        l.sort(null);\n\
    \        if (l.size()<2) return false;\n        int i = 0;\n        int j = l.size()-1;\n\
    \        while (i<j) {\n            int sum = l.get(i)+l.get(j);\n           \
    \ if (sum==0) return true;\n            if (sum<0) i+=1;\n            else j-=1;\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ sum = 0;\n        for (int i = 0; i < l.size(); i++) {\n            for (int\
    \ j = i + 1; j < l.size(); j++) {\n                sum = l.get(i) + l.get(j);\n\
    \                if (sum == 0) {\n                    return true;\n         \
    \       }\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            set.add(l.get(i));\n        }\n        for (int i = 0; i < l.size();\
    \ i++) {\n            if (set.contains(-l.get(i))) {\n                return true;\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo9oom3il.java:35)\n"
  stdout: ''
  timestamp: 1660011522
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"Problem not solved\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not solved\n\tat Problem.pairsSumToZero(tmpyt7rdkb7.java:23)\n\tat Problem.main(tmpyt7rdkb7.java:26)\n"
  stdout: ''
  timestamp: 1660011523
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2w8nun4.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) return false;\n        int i = 0;\n        while (i < l.size())\
    \ {\n            if (l.subList(i + 1, l.size()).contains(-l.get(i))) return true;\n\
    \            i++;\n        }\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ ht = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (ht.contains(-l.get(i))) {\n                return true;\n   \
    \         }\n            ht.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int e : l) {\n            if (set.contains(-e))\
    \ return true;\n            set.add(e);\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011523
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ STUDENT FILLS IN CODE HERE.\n        Set<Integer> set = new HashSet<Integer>();\n\
    \        boolean flag = false;\n        for (int i=0; i<l.size(); i++) {\n   \
    \         if (set.contains(l.get(i))) {\n                flag = true;\n      \
    \          break;\n            }\n            set.add(-l.get(i));\n        }\n\
    \        return flag;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ loop through l\n        for (int i = 0; i < l.size(); i++) {\n            //\
    \ i = index of element we are looking at\n            // num = the value of the\
    \ element we are looking at\n            int num = l.get(i);\n            // check\
    \ if -num is in the list\n            if (l.contains(-num)) {\n              \
    \  // if it is, check to make sure they are not the same\n                if (num\
    \ != -num) {\n                    // if they are not the same, return True\n \
    \                   return true;\n                }\n            }\n        }\n\
    \        // if it goes through the entire list and doesn't find anything,\n  \
    \      // return False\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ flag = false;\n        int j = l.size() - 1;\n        for (int i = 0; i < l.size();\
    \ i++) {\n            for (; j > i; j--) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    flag = true;\n                    break;\n    \
    \            }\n            }\n        }\n        return flag;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb52a710o.java:39)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Implement me!\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Implement me!\n\
    \tat Problem.pairsSumToZero(tmp9kpqb14f.java:23)\n\tat Problem.main(tmp9kpqb14f.java:26)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ seen = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (seen.contains(-l.get(i))) {\n                return true;\n \
    \           }\n            seen.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        boolean\
    \ result = false;\n        int i;\n        if (l.size() == 0 || l.size() == 1)\
    \ {\n            result = false;\n        } else {\n            int n = l.size();\n\
    \            int j;\n            for (i = 0; i < n; i++) {\n                for\
    \ (j = i + 1; j < n; j++) {\n                    if (l.get(i) + l.get(j) == 0)\
    \ {\n                        result = true;\n                        break;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ find_pair_summing_to_zero should return True if l contains a pair of\n     \
    \   // distinct elements that sum to zero, and False otherwise.  If l has\n  \
    \      // fewer than two elements, there are no pairs that sum to zero.\n    \
    \    //\n        // You should use the pairsSumToK algorithm (which is a fast\
    \ way to\n        // solve this problem).\n        //\n        // When your algorithm\
    \ finishes, you should return True if there are\n        // two elements that\
    \ sum to zero.  Otherwise, you should return False.\n        // return true if\
    \ there exists a pair of elements that sum to zero.\n        // return false otherwise.\n\
    \        ArrayList<Integer> negated = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            negated.add(-l.get(i));\n        }\n\
    \        ArrayList<Integer> combined = new ArrayList<Integer>();\n        combined.addAll(l);\n\
    \        combined.addAll(negated);\n        return pairsSumToK(combined, 0);\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp4j4xjesb.java:41: error: cannot find symbol\n        return pairsSumToK(combined,\
    \ 0);\n               ^\n  symbol:   method pairsSumToK(ArrayList<Integer>,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        for (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1;\
    \ j < l.size(); j++) {\n                if (l.get(i) + l.get(j) == 0) {\n    \
    \                return true;\n                }\n            }\n        }\n \
    \       return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n      HashSet<Integer>\
    \ s = new HashSet<Integer>();\n      for (int i: l) {\n        if (s.contains(-i))\
    \ {\n          return true;\n        }\n        s.add(i);\n      }\n      return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ \n        // \n        // REPLACE THE BODY OF THIS METHOD WITH YOUR OWN IMPLEMENTATION\n\
    \        // \n        // \n        HashSet<Integer> arraySet = new HashSet<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (arraySet.contains(l.get(i))\
    \ || arraySet.contains(-l.get(i))) {\n                return true;\n         \
    \   }\n            arraySet.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpotkeef8x.java:39)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gclvksc.java:26)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2w8nun4.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Set<Integer>\
    \ set = new HashSet<>();\n        for (int i : l) {\n            if (set.contains(-i))\
    \ {\n                return true;\n            }\n            set.add(i);\n  \
    \      }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() == 0) {\n            return false;\n        }\n        for (int i\
    \ = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size(); j++)\
    \ {\n                if (l.get(i) + l.get(j) == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ perform a full search across the list\n        // on each iteration, perform\
    \ another iteration to see if you find\n        // a number to sum to zero\n \
    \       // return True if you do, and False otherwise\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            for (int j = 0; j < l.size(); j++) {\n   \
    \             if (i != j && l.get(i) + l.get(j) == 0) {\n                    return\
    \ true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() == 0) {\n            return false;\n        }\n        for (int i\
    \ = 0; i < l.size(); i += 1) {\n            for (int j = i + 1; j < l.size();\
    \ j += 1) {\n                if (l.get(i) + l.get(j) == 0) {\n               \
    \     return true;\n                }\n            }\n        }\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //throw\
    \ new UnsupportedOperationException(\"Delete this line and implement your code\
    \ here!\");\n        int[] a = new int[l.size()];\n        HashMap<Integer, Integer>\
    \ hash = new HashMap<Integer, Integer>();\n        for(int i = 0; i < l.size();\
    \ i++) {\n            a[i] = l.get(i);\n            if(hash.containsKey(a[i]))\
    \ {\n                hash.put(a[i], hash.get(a[i]) + 1);\n            }\n    \
    \        else {\n                hash.put(a[i], 1);\n            }\n        }\n\
    \        for(int i = 0; i < l.size(); i++) {\n            if(hash.containsKey(-a[i]))\
    \ {\n                if(hash.get(-a[i]) > 1) {\n                    return true;\n\
    \                }\n                else if(a[i] == 0) {\n                   \
    \ return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgbpijknx.java:48)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Fill this in.\n        Set<Integer> set = new HashSet<Integer>();\n        for\
    \ (int i: l) {\n            if (set.contains(-i)) {\n                return true;\n\
    \            }\n            set.add(i);\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n      return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9p52cv9j.java:29)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"Remove this line and implement your solution\"\
    );\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Remove\
    \ this line and implement your solution\n\tat Problem.pairsSumToZero(tmpf4y6ch3_.java:23)\n\
    \tat Problem.main(tmpf4y6ch3_.java:26)\n"
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        Collections.sort(l);\n        int start = 0;\n     \
    \   int end = l.size() - 1;\n        while (start < end) {\n            int total\
    \ = l.get(start) + l.get(end);\n            if (total == 0) {\n              \
    \  return true;\n            } else if (total < 0) {\n                start++;\n\
    \            } else {\n                end--;\n            }\n        }\n    \
    \    return false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        if (l.size()<2) {\n            return false;\n     \
    \   }\n        HashSet<Integer> set = new HashSet<Integer>();\n        for (int\
    \ i=0; i<l.size(); i++) {\n            if (set.contains(-l.get(i))) {\n      \
    \          return true;\n            }\n            set.add(l.get(i));\n     \
    \   }\n        return false;\n}\n    public static void main(String[] args) {\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        int\
    \ flag = 0;\n        int flag1 = 0;\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            for (int j = 0; j < l.size(); j++) {\n                if (i !=\
    \ j) {\n                    if (l.get(i) + l.get(j) == 0) {\n                \
    \        flag = 1;\n                        break;\n                    }\n  \
    \              }\n            }\n        }\n        if (flag == 1) {\n       \
    \     return true;\n        } else {\n            return false;\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011524
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int n : l) {\n            if (set.contains(-n))\
    \ return true;\n            set.add(n);\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code here\n        HashSet<Integer> set = new HashSet<Integer>();\n   \
    \     for (int i = 0; i < l.size(); i++) {\n            int val = l.get(i);\n\
    \            if (set.contains(-val)) {\n                return true;\n       \
    \     }\n            set.add(val);\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Write your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4043dlx1.java:30)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n      throw\
    \ new UnsupportedOperationException(\"Replace this line with your solution!\"\
    );\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Replace\
    \ this line with your solution!\n\tat Problem.pairsSumToZero(tmpltbsg46q.java:23)\n\
    \tat Problem.main(tmpltbsg46q.java:26)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ fill in code\n        for (int i = 0; i < l.size(); i++) {\n            for\
    \ (int j = i + 1; j < l.size(); j++) {\n                if (l.get(i) + l.get(j)\
    \ == 0) {\n                    return true;\n                }\n            }\n\
    \        }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        boolean check=false;\n        for(int i=0;i<l.size();i++){\n\
    \            for(int j=i+1;j<l.size();j++){\n                if(l.get(i)+l.get(j)==0){\n\
    \                    check=true;\n                }\n            }\n        }\n\
    \        return check;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int x = l.get(i);\n            if (set.contains(-x)) return true;\n\
    \            set.add(x);\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here!\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynxdgf8d.java:30)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ m = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++){\n\
    \            m.add(l.get(i));\n        }\n        m.sort(null);\n        for (int\
    \ i = 0; i < m.size(); i++){\n            if (Collections.binarySearch(m, -m.get(i))\
    \ >= 0 && Collections.binarySearch(m, -m.get(i)) != i){\n                return\
    \ true;\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ t = new HashSet<Integer>();\n        for (int i=0; i<l.size(); i++) {\n    \
    \        if (t.contains(-l.get(i))) {\n                return true;\n        \
    \    }\n            t.add(l.get(i));\n        }\n        return false;\n}\n  \
    \  public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int head = 0;\n        int tail = l.size() - 1;\n        while (head\
    \ < tail) {\n            int sum = l.get(head) + l.get(tail);\n            if\
    \ (sum == 0) {\n                return true;\n            } else if (sum < 0)\
    \ {\n                head++;\n            } else {\n                tail--;\n\
    \            }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ fill in this body.\n        return true;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnqyiksi6.java:27)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp2w8nun4.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ YOUR CODE HERE\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp26jdsb63.java:30)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gclvksc.java:26)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() <= 1) return false;\n        HashSet<Integer> seen = new HashSet<Integer>();\n\
    \        for (int i : l) {\n            if (seen.contains(-i)) return true;\n\
    \            seen.add(i);\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ true;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0gclvksc.java:26)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n\tHashSet<Integer>\
    \ set = new HashSet<Integer>();\n\tfor (int i: l) {\n\t    if (set.contains(-i))\
    \ return true;\n\t    set.add(i);\n\t}\n\treturn false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //enter\
    \ your code here\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc84v0g99.java:30)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Your code here.\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpv8h6zw5f.java:24: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ we keep track of the elements in the list using a HashSet\n        HashSet<Integer>\
    \ h = new HashSet<Integer>();\n        // for each element in the list\n     \
    \   for (int e : l) {\n            // if we have previously seen the element that\
    \ makes\n            // a sum of zero with e then we return True\n           \
    \ if (h.contains(-e)) {\n                return true;\n            }\n       \
    \     // otherwise, we add e to the HashSet\n            h.add(e);\n        }\n\
    \        // if we finished the loop, then there is no pair that\n        // sums\
    \ to zero, so we return False\n        return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        return\
    \ false;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpec5dr2tb.java:29)\n"
  stdout: ''
  timestamp: 1660011517
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your solution here\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpy5ggl55f.java:24: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i=0; i<l.size(); i++) {\n            for (int j=i+1; j<l.size(); j++) {\n\
    \                if (l.get(i) + l.get(j) == 0) {\n                    return true;\n\
    \                }\n            }\n        }\n        return false;\n}\n    public\
    \ static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ Fill in the code here.\n        ArrayList<Integer> diff = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            for (int j : l) {\n                if\
    \ (i + j == 0) {\n                    return true;\n                }\n      \
    \      }\n        }\n        return false;\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcp70pew6.java:35)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here!\n        // you can add any extra functions you want here\n\
    \        if (l.size() == 0) {\n            return false;\n        }\n        HashSet<Integer>\
    \ nums = new HashSet<Integer>();\n        for (int num : l) {\n            if\
    \ (nums.contains(-num)) {\n                return true;\n            }\n     \
    \       nums.add(num);\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Not implemented\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.pairsSumToZero(tmpzipmk8qp.java:23)\n\tat Problem.main(tmpzipmk8qp.java:26)\n"
  stdout: ''
  timestamp: 1660011519
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"Problem.pairsSumToZero not implemented\"\
    );\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem.pairsSumToZero\
    \ not implemented\n\tat Problem.pairsSumToZero(tmpsyrguhq1.java:23)\n\tat Problem.main(tmpsyrguhq1.java:26)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) {\n            return false;\n        }\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        int sum = 0;\n        boolean result =\
    \ false;\n        for (int i = 0; i < l.size(); i++) {\n            sum = l.get(i);\n\
    \            if (s.contains(sum)) {\n                result = true;\n        \
    \        break;\n            }\n            s.add(sum);\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsjv06bq7.java:41)\n"
  stdout: ''
  timestamp: 1660011525
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ seen = new HashSet<Integer>();\n        for (int x : l) {\n            if (seen.contains(-x))\
    \ {\n                return true;\n            }\n            seen.add(x);\n \
    \       }\n        return false;\n}\n    public static void main(String[] args)\
    \ {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ your code here\n        if (l.size() == 0) {\n            return false;\n  \
    \      }\n        HashSet<Integer> set = new HashSet<Integer>();\n        for\
    \ (int num : l) {\n            if (set.contains(-num)) {\n                return\
    \ true;\n            }\n            set.add(num);\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) {\n            return false;\n        }\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (s.contains(-l.get(i))) {\n                return true;\n    \
    \        }\n            s.add(l.get(i));\n        }\n        return false;\n}\n\
    \    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\
    \ since we need to look for two numbers that sum to zero, \n        // we need\
    \ to traverse the list to compare each two elements.\n        // we also need\
    \ to keep track of the second number we found\n        // to avoid counting the\
    \ same pair twice (e.g. (-3, 3)).\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            for (int j = i + 1; j < l.size(); j++) {\n                if\
    \ (l.get(i) + l.get(j) == 0) {\n                    return true;\n           \
    \     }\n            }\n        }\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() <= 1) {\n            return false;\n        }\n        l.sort(null);\n\
    \        for (int i = 0; i < l.size() - 1; i++) {\n            if (l.get(i).equals(l.get(i\
    \ + 1))) {\n                if (l.get(i) == 0) {\n                    return true;\n\
    \                }\n                else {\n                    i++;\n       \
    \         }\n            }\n            else if (l.get(i) + l.get(i + 1) == 0)\
    \ {\n                return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwi1fklh_.java:46)\n"
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n\t// Write\
    \ your code here.\n\t// note: you are not allowed to use any built-in function\
    \ of the\n\t//       standard Java library.\n\t//\n\t// note: be careful not to\
    \ compare the same element with itself\n\t//       or you will encounter False\
    \ positives.\n\t//\n\t// note: you don't have to check for empty lists or lists\
    \ of length 1.\n\t//\n\t// note: if you create a new list or array, be sure to\
    \ remove it before\n\t//       submitting.\n\t//\n\t// note: you are not allowed\
    \ to add new variables to this function.\n\t//\t  If you think you need to add\
    \ a new variable, it is a sign\n\t//\t  that you are not following the problem\
    \ specification correctly.\n\t//\n\t// note: you don't have to use the same algorithm\
    \ as we did in class,\n\t//\t  but your algorithm cannot have a worse time complexity.\n\
    \t//\n\t// note: you can define additional functions if you think it is\n\t//\t\
    \  necessary.\n\t//\n\t// example: you can use the function signature\n\t//\t\t\
    int foo(int x)\n\t//\t  to define a function called \"foo\" that takes an integer\n\
    \t//\t  as an input and returns an integer as an output.\n\t//\n\t// example:\
    \ you can use the function signature\n\t//\t\tvoid bar(String s)\n\t//\t  to define\
    \ a function called \"bar\" that takes a string\n\t//\t  as an input and doesn't\
    \ return anything.\n\t//\t  (You don't have to use this function if you don't\
    \ need it.)\n\tif (l.size() < 2) {\n\t    return false;\n\t}\n\tHashSet<Integer>\
    \ set = new HashSet<Integer>();\n\tfor (int i : l) {\n\t    if (set.contains(-i))\
    \ {\n\t\treturn true;\n\t    }\n\t    set.add(i);\n\t}\n\treturn false;\n}\n \
    \   public static void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        if\
    \ (l.size() < 2) {\n            return false;\n        }\n        HashSet<Integer>\
    \ seen = new HashSet<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (seen.contains(-l.get(i))) {\n                return true;\n \
    \           }\n            seen.add(l.get(i));\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n\t// Your code\
    \ here\n\treturn false;\n}\n    public static void main(String[] args) {\n   \
    \ assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc7jhsh4_.java:30)\n"
  stdout: ''
  timestamp: 1660011526
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"NOT IMPLEMENTED YET\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: NOT IMPLEMENTED\
    \ YET\n\tat Problem.pairsSumToZero(tmpc5zgy_cf.java:23)\n\tat Problem.main(tmpc5zgy_cf.java:26)\n"
  stdout: ''
  timestamp: 1660011526
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        for\
    \ (int i = 0; i < l.size(); i++) {\n            for (int j = i + 1; j < l.size();\
    \ j++) {\n                if (l.get(i) + l.get(j) == 0) {\n                  \
    \  return true;\n                }\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011517
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n      for (int\
    \ i = 0; i < l.size(); i++) {\n        for (int j = i + 1; j < l.size(); j++)\
    \ {\n          if (l.get(i) + l.get(j) == 0) {\n            return true;\n   \
    \       }\n        }\n      }\n      return false;\n}\n    public static void\
    \ main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011526
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i : l) {\n            set.add(i);\n\
    \        }\n        for (int i : l) {\n            if (set.contains(-i)) {\n \
    \               return true;\n            }\n        }\n        return false;\n\
    }\n    public static void main(String[] args) {\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)3, (int)5, (int)0)))) == (false));\n\
    \    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1, (int)3,\
    \ (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy6dz5pde.java:35)\n"
  stdout: ''
  timestamp: 1660011526
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n\
    \    // it returns True if there are two distinct elements in the list that\n\
    \    // sum to zero, and False otherwise.\n    // >>> pairs_sum_to_zero([1, 3,\
    \ 5, 0])\n    // False\n    // >>> pairs_sum_to_zero([1, 3, -2, 1])\n    // False\n\
    \    // >>> pairs_sum_to_zero([1, 2, 3, 7])\n    // False\n    // >>> pairs_sum_to_zero([2,\
    \ 4, -5, 3, 5, 7])\n    // True\n    // >>> pairs_sum_to_zero([1])\n    // False\n\
    \    public static boolean pairsSumToZero(ArrayList<Integer> l) {\n        //\n\
    \        // YOUR CODE HERE\n        //\n        return false;\n}\n    public static\
    \ void main(String[] args) {\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)5, (int)0)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)3, (int)-2, (int)1)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)2, (int)3, (int)7)))) == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)4, (int)-5, (int)3, (int)5, (int)7)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)1)))) == (false));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)3, (int)2, (int)30))))\
    \ == (true));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)3, (int)2, (int)31)))) == (true));\n    assert(pairsSumToZero((new\
    \ ArrayList<Integer>(Arrays.asList((int)-3, (int)9, (int)-1, (int)4, (int)2, (int)30))))\
    \ == (false));\n    assert(pairsSumToZero((new ArrayList<Integer>(Arrays.asList((int)-3,\
    \ (int)9, (int)-1, (int)4, (int)2, (int)31)))) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvk3mujfo.java:32)\n"
  stdout: ''
  timestamp: 1660011526

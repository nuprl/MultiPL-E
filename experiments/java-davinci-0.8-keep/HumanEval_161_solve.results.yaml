language: java
name: HumanEval_161_solve
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isAlphabetic(s.charAt(i))) {\n                sb.append(Character.isUpperCase(s.charAt(i))\
    \ ? Character.toLowerCase(s.charAt(i)) : Character.toUpperCase(s.charAt(i)));\n\
    \            } else {\n                sb.append(s.charAt(i));\n            }\n\
    \        }\n        return sb.length() > 0 ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2ke8wi9n.java:31)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuffer\
    \ sb = new StringBuffer();\n        if (s.equals(s.toUpperCase())) return s;\n\
    \        if (s.equals(s.toLowerCase())) return s;\n        if (s.equals(s.toUpperCase()))\
    \ return s;\n        for (int i = 0; i < s.length(); i++) {\n            sb.append(Character.isLowerCase(s.charAt(i))\
    \ ? \n                        Character.toUpperCase(s.charAt(i)) : \n        \
    \                Character.toLowerCase(s.charAt(i)));\n        }\n        return\
    \ sb.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptqi8fa6j.java:32)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (isNumeric(s))\n\
    \            return new StringBuilder(s).reverse().toString();\n        else {\n\
    \            char[] chars = s.toCharArray();\n            for (int i = 0; i <\
    \ chars.length; i++) {\n                if (Character.isLetter(chars[i])) {\n\
    \                    chars[i] = Character.isUpperCase(chars[i]) ? Character.toLowerCase(chars[i])\
    \ : Character.toUpperCase(chars[i]);\n                }\n            }\n     \
    \       return new String(chars);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpyxj2ve44.java:19: error: cannot find symbol\n        if (isNumeric(s))\n\
    \            ^\n  symbol:   method isNumeric(String)\n  location: class Problem\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ s.chars().mapToObj(c -> c == '$' ? \"$$\" : (char)c).collect(Collectors.joining(\"\
    \"));\n}\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5zu7a9m7.java:19: error: no suitable method found for collect(Collector<CharSequence,CAP#1,String>)\n\
    \        return s.chars().mapToObj(c -> c == '$' ? \"$$\" : (char)c).collect(Collectors.joining(\"\
    \"));\n                                                                 ^\n  \
    \  method Stream.<R#1>collect(Supplier<R#1>,BiConsumer<R#1,? super INT#1>,BiConsumer<R#1,R#1>)\
    \ is not applicable\n      (cannot infer type-variable(s) R#1\n        (actual\
    \ and formal argument lists differ in length))\n    method Stream.<R#2,A>collect(Collector<?\
    \ super INT#1,A,R#2>) is not applicable\n      (cannot infer type-variable(s)\
    \ R#2,A\n        (argument mismatch; Collector<CharSequence,CAP#2,String> cannot\
    \ be converted to Collector<? super INT#1,A,R#2>))\n  where R#1,T,R#2,A are type-variables:\n\
    \    R#1 extends Object declared in method <R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super T>,BiConsumer<R#1,R#1>)\n    T extends Object declared in interface Stream\n\
    \    R#2 extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \    A extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \  where CAP#1,CAP#2 are fresh type-variables:\n    CAP#1 extends Object from\
    \ capture of ?\n    CAP#2 extends Object from capture of ?\n  where INT#1,INT#2\
    \ are intersection types:\n    INT#1 extends Object,Serializable,Comparable<?\
    \ extends INT#2>,Constable\n    INT#2 extends Object,Serializable,Comparable<?>,Constable\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().allMatch(ch\
    \ -> !Character.isLetter(ch)))\n            return new StringBuilder(s).reverse().toString();\n\
    \        return s.chars().mapToObj(i -> (char)i)\n            .map(ch -> {\n \
    \               if (Character.isLetter(ch))\n                    return Character.isUpperCase(ch)\
    \ ? Character.toLowerCase(ch) : Character.toUpperCase(ch);\n                return\
    \ ch;\n            })\n            .map(ch -> String.valueOf(ch))\n          \
    \  .collect(Collectors.joining());\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n      char[] arr\
    \ = s.toCharArray();\n      boolean letterPresent = false;\n      for (int i =\
    \ 0; i < arr.length; i++) {\n        if(Character.isLetter(arr[i])) {\n      \
    \    letterPresent = true;\n          if(Character.isUpperCase(arr[i])) {\n  \
    \          arr[i] = Character.toLowerCase(arr[i]);\n          } else {\n     \
    \       arr[i] = Character.toUpperCase(arr[i]);\n          }\n        }\n    \
    \  }\n      String str = String.valueOf(arr);\n      if(!letterPresent) {\n  \
    \      StringBuilder sb = new StringBuilder(str);\n        return sb.reverse().toString();\n\
    \      }\n      return str;\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetters = false;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n    \
    \        if (Character.isLetter(c)) {\n                hasLetters = true;\n  \
    \              if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (!hasLetters) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        String regex = \"[a-zA-Z]\";\n        Pattern\
    \ p = Pattern.compile(regex);\n        if (s.equals(\"\")) return \"\";\n    \
    \    boolean hasLetters = false;\n        int i = 0;\n        while (!hasLetters\
    \ && i < s.length()) {\n            hasLetters = p.matcher(s.substring(i, i +\
    \ 1)).matches();\n            i++;\n        }\n        if (!hasLetters) return\
    \ new StringBuilder(s).reverse().toString();\n        for (char c : s.toCharArray())\
    \ {\n            if (p.matcher(c + \"\").matches()) {\n                if (Character.isUpperCase(c))\
    \ sb.append(Character.toLowerCase(c));\n                else sb.append(Character.toUpperCase(c));\n\
    \            } else sb.append(c);\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpp9_265yq.java:21: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(regex);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpp9_265yq.java:21: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(regex);\n                    ^\n  symbol:   variable\
    \ Pattern\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // edge\
    \ cases\n        if (s.equals(\"\")) {\n            return \"\";\n        }\n\n\
    \        // solution\n        StringBuilder sb = new StringBuilder();\n      \
    \  boolean containsLetters = false;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (Character.isLetter(s.charAt(i))) {\n                containsLetters\
    \ = true;\n                if (Character.isUpperCase(s.charAt(i))) {\n       \
    \             sb.append(Character.toLowerCase(s.charAt(i)));\n               \
    \ } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (!containsLetters) {\n            return\
    \ sb.reverse().toString();\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isAlphabetic(c)) {\n                hasLetter = true;\n    \
    \            if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return hasLetter ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ Stream.of(s.split(\"\"))\n            .map(x -> Character.isLetter(x.charAt(0))\
    \ ? \n                Character.isUpperCase(x.charAt(0)) ? \n                \
    \    x.toLowerCase() : x.toUpperCase() : x)\n            .collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkrv1ehbv.java:27)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ hasletter = false;\n        char[] sarr = s.toCharArray();\n        for (int\
    \ i = 0; i < sarr.length; i++) {\n            if (Character.isLetter(sarr[i]))\
    \ {\n                hasletter = true;\n                if (Character.isUpperCase(sarr[i]))\
    \ {\n                    sarr[i] = Character.toLowerCase(sarr[i]);\n         \
    \       } else {\n                    sarr[i] = Character.toUpperCase(sarr[i]);\n\
    \                }\n            }\n        }\n        if (!hasletter) {\n    \
    \        return new StringBuilder(s).reverse().toString();\n        }\n      \
    \  return new String(sarr);\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ result = \"\";\n        String letters = \"abcdefghijklmnopqrstuvwxyz\";\n \
    \       String caps = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            char c = s.charAt(i);\n            if (letters.indexOf(c)\
    \ >= 0) {\n                result += Character.toUpperCase(c);\n            }\
    \ else if (caps.indexOf(c) >= 0) {\n                result += Character.toLowerCase(c);\n\
    \            } else {\n                result += c;\n            }\n        }\n\
    \        return s.length() == result.length() ? new StringBuilder(result).reverse().toString()\
    \ : result;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptpwel3jj.java:35)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < n; i++) {\n            char c = s.charAt(i);\n            if\
    \ (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwlwu2nh0.java:33)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (Character.isLetter(chars[i])) {\n                chars[i] = Character.isUpperCase(chars[i])\
    \ ? Character.toLowerCase(chars[i]) : Character.toUpperCase(chars[i]);\n     \
    \       }\n        }\n        return new String(chars);\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp01q_nbds.java:29)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // if\
    \ (s.matches(\"[a-zA-Z]+\"))\n        //     return new StringBuilder(s).reverse().toString();\n\
    \        // return new StringBuilder(s).reverse().toString().toUpperCase();\n\
    \        if (s.matches(\"[a-zA-Z]+\")){\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int i = 0; i < s.length(); i++) {\n                if (Character.isLowerCase(s.charAt(i)))\n\
    \                    sb.append(Character.toUpperCase(s.charAt(i)));\n        \
    \        else if (Character.isUpperCase(s.charAt(i)))\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n\
    \            }\n            return sb.toString();\n        }\n        return new\
    \ StringBuilder(s).reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpigngqp40.java:38)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here.\n        return \"\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5e5ocwmt.java:23)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [a-zA-Z]+\")) {\n            StringBuilder sb = new StringBuilder();\n       \
    \     for (int i = 0; i < s.length(); i++) {\n                if (Character.isUpperCase(s.charAt(i)))\n\
    \                    sb.append(Character.toLowerCase(s.charAt(i)));\n        \
    \        else\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \            }\n            return sb.toString();\n        }\n        return new\
    \ StringBuilder(s).reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpoljtj3go.java:35)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ answer = new StringBuilder(s);\n        boolean hasLetters = false;\n      \
    \  for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetters = true;\n\
    \                if (Character.isUpperCase(c)) {\n                    answer.setCharAt(i,\
    \ Character.toLowerCase(c));\n                } else {\n                    answer.setCharAt(i,\
    \ Character.toUpperCase(c));\n                }\n            }\n        }\n  \
    \      if (!hasLetters) {\n            return answer.reverse().toString();\n \
    \       }\n        return answer.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // write\
    \ your code here\n        return s;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkmn3o3au.java:23)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            sb.append(Character.isLetter(c)\
    \ ? \n                      Character.isUpperCase(c) ? \n                    \
    \  Character.toLowerCase(c) : \n                      Character.toUpperCase(c)\
    \ : \n                      c);\n        }\n        return new String(sb.reverse());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuvkauaqe.java:31)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // TODO:\
    \ add your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp2ha340qr.java:23)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ result = \"\";\n        boolean isLetter = false;\n        //\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                result += Character.toLowerCase(s.charAt(i));\n         \
    \       isLetter = true;\n            } else {\n                result += s.charAt(i);\n\
    \            }\n        }\n        if (isLetter) {\n            return result.toUpperCase();\n\
    \        } else {\n            return new StringBuilder(result).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpildzrp2h.java:37)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ res = \"\";\n        // Write your code here!\n        // Return the result.\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpls6myp6z.java:25)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ == 0) return s;\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ isLetter = false;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    if (Character.isLetter(s.charAt(i))) {\n                sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                isLetter = true;\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (!isLetter) return sb.reverse().toString();\n\
    \        return sb.toString();\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf03ejpiu.java:34)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isAlphabetic(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1u43o90j.java:36)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Your\
    \ code goes here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp09orizko.java:23)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ tmp = \"\";\n        for (int i = 0; i < s.length(); i++) {\n            char\
    \ c = s.charAt(i);\n            if (Character.isLetter(c)) {\n               \
    \ if (Character.isUpperCase(c)) {\n                    tmp += Character.toLowerCase(c);\n\
    \                } else {\n                    tmp += Character.toUpperCase(c);\n\
    \                }\n            } else {\n                tmp += c;\n        \
    \    }\n        }\n        return tmp.isEmpty() ? new StringBuilder(s).reverse().toString()\
    \ : tmp;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr2vfc96u.java:36)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean isEmpty = true;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n                isEmpty\
    \ = false;\n            } else {\n                sb.append(c);\n            }\n\
    \        }\n        if (isEmpty) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        if (sb.length() > 0) {\n            return sb.toString();\n\
    \        } else {\n            return sb.reverse().toString();\n        }\n}\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi_vqfx1h.java:40)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().anyMatch(Character::isLetter))\
    \ {\n            StringBuilder sb = new StringBuilder();\n            for (int\
    \ i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n     \
    \           if (Character.isLetter(c))\n                    sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n                else\n\
    \                    sb.append(c);\n            }\n            return sb.toString();\n\
    \        }\n        else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // if\
    \ there are no letters, reverse the string\n        if (!s.matches(\".*[a-zA-Z].*\"\
    )) {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    \        return s.chars()\n            .mapToObj(i -> {\n                char\
    \ c = (char) i;\n                if (Character.isLowerCase(c)) {\n           \
    \         return Character.toUpperCase(c);\n                } else if (Character.isUpperCase(c))\
    \ {\n                    return Character.toLowerCase(c);\n                }\n\
    \                return c;\n            })\n            .map(String::valueOf)\n\
    \            .collect(Collectors.joining());\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ r = s.replaceAll(\"[a-z]\", \"\").length() == s.length() ? new StringBuilder(s).reverse().toString()\
    \ : \"\";\n        return r.isEmpty() ? s.codePoints().mapToObj(i -> i > 96 &&\
    \ i < 123 ? (char)i - 32 : i > 64 && i < 91 ? (char)i + 32 : (char)i).collect(StringBuilder::new,\
    \ StringBuilder::appendCodePoint, StringBuilder::append).toString() : r;\n}\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().noneMatch(c\
    \ -> Character.isLetter(c))) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            return s.chars().mapToObj(c -> Character.isLetter(c)\
    \ ? (char)c ^ 32 : (char)c).map(String::valueOf).collect(Collectors.joining());\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvv3_aul.java:26)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ ret = \"\";\n        String input = s;\n        String output = \"\";\n    \
    \    boolean containsNoLetters = true;\n        for (int i = 0; i < input.length();\
    \ i++) {\n            if (Character.isLetter(input.charAt(i))) {\n           \
    \     containsNoLetters = false;\n                if (Character.isUpperCase(input.charAt(i)))\
    \ {\n                    ret += Character.toLowerCase(input.charAt(i));\n    \
    \            } else {\n                    ret += Character.toUpperCase(input.charAt(i));\n\
    \                }\n            } else {\n                ret += input.charAt(i);\n\
    \            }\n        }\n        if (containsNoLetters) {\n            output\
    \ = new StringBuilder(ret).reverse().toString();\n        } else {\n         \
    \   output = ret;\n        }\n        return output;\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [^a-zA-Z]\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        char[] arr = s.toCharArray();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            char c = arr[i];\n            if (Character.isLetter(c))\
    \ {\n                arr[i] = Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c);\n            }\n        }\n        return new String(arr);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgabie7xc.java:33)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetters = false;\n        for (int i = 0; i < n; i++) {\n            char\
    \ c = s.charAt(i);\n            if (Character.isLetter(c)) {\n               \
    \ hasLetters = true;\n                if (Character.isUpperCase(c)) {\n      \
    \              sb.append(Character.toLowerCase(c));\n                } else {\n\
    \                    sb.append(Character.toUpperCase(c));\n                }\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if (!hasLetters) {\n            return sb.reverse().toString();\n   \
    \     }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.equals(\"\
    \")) return \"\";\n        String final_result = \"\";\n        for (int i = 0;\
    \ i < s.length(); i++) {\n            StringBuilder sb = new StringBuilder();\n\
    \            String result = \"\";\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                result = Character.toString(s.charAt(i));\n             \
    \   sb.append(result);\n                sb.reverse();\n                result\
    \ = sb.toString();\n                final_result += result;\n            } else\
    \ {\n                result = Character.toString(s.charAt(i));\n             \
    \   final_result += result;\n            }\n        }\n        return final_result;\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpff8vg1_l.java:38)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ res = \"\";\n        if(s.matches(\"[a-zA-Z]+\")){\n            for(int i =\
    \ 0; i < s.length(); i++){\n                char c = s.charAt(i);\n          \
    \      if(Character.isLowerCase(c)){\n                    res += Character.toUpperCase(c);\n\
    \                }else{\n                    res += Character.toLowerCase(c);\n\
    \                }\n            }\n        }else{\n            for(int i = s.length()\
    \ - 1; i >= 0; i--){\n                res += s.charAt(i);\n            }\n   \
    \     }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp829vl8iy.java:40)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        String s_ = s.toLowerCase();\n        String\
    \ alpha = \"abcdefghijklmnopqrstuvwxyz\";\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (alpha.contains(s_.substring(i, i + 1))) {\n        \
    \        sb.append(s.substring(i, i + 1).toUpperCase());\n            } else {\n\
    \                sb.append(s.substring(i, i + 1).toLowerCase());\n           \
    \ }\n        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv9mtm8z8.java:32)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[a-zA-Z]+$\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            return s.chars()\n                    .mapToObj(i\
    \ -> {\n                        if (Character.isLetter(i)) {\n               \
    \             return Character.isUpperCase(i) ? Character.toLowerCase(i) : Character.toUpperCase(i);\n\
    \                        } else {\n                            return (char) i;\n\
    \                        }\n                    })\n                    .map(String::valueOf)\n\
    \                    .collect(Collectors.joining());\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzpir_34.java:35)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean containsLetters = false;\n      \
    \  for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                containsLetters = true;\n\
    \                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return containsLetters ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        String ns = \"\";\n        boolean hasLetters\
    \ = false;\n        for (int i = 0; i < s.length(); i++) {\n            char c\
    \ = s.charAt(i);\n            if (Character.isLetter(c)) {\n                hasLetters\
    \ = true;\n                c = Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c);\n            }\n            sb.append(c);\n    \
    \    }\n        ns = sb.toString();\n        if (!hasLetters) ns = new StringBuilder(ns).reverse().toString();\n\
    \        return ns;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ onlyLetters = true;\n        char[] ch = s.toCharArray();\n        for (int\
    \ i = 0; i < ch.length; i++) {\n            if (Character.isLetter(ch[i])) {\n\
    \                if (Character.isUpperCase(ch[i])) {\n                    ch[i]\
    \ = Character.toLowerCase(ch[i]);\n                } else {\n                \
    \    ch[i] = Character.toUpperCase(ch[i]);\n                }\n            } else\
    \ {\n                onlyLetters = false;\n            }\n        }\n        if\
    \ (onlyLetters) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        return new String(ch);\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphjyff6w2.java:38)\n"
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ hasLetter = false;\n        for (int i = 0; i < n; i++) {\n            char\
    \ c = s.charAt(i);\n            if (Character.isLetter(c)) {\n               \
    \ sb.append(Character.toUpperCase(c) == c ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \                hasLetter = true;\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (!hasLetter) {\n            sb.reverse();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011016
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().anyMatch(Character::isLetter))\
    \ {\n            StringBuilder sb = new StringBuilder();\n            for (int\
    \ i = 0; i < s.length(); i++) {\n                if (Character.isLetter(s.charAt(i)))\
    \ {\n                    if (Character.isUpperCase(s.charAt(i)))\n           \
    \             sb.append(Character.toLowerCase(s.charAt(i)));\n               \
    \     else\n                        sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                } else {\n                    sb.append(s.charAt(i));\n     \
    \           }\n            }\n            return sb.toString();\n        } else\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().anyMatch(Character::isLetter))\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\
    \ else {\n            return s.chars().map(c -> Character.isLowerCase(c) ? Character.toUpperCase(c)\
    \ : Character.toLowerCase(c)).collect(StringBuilder::new, StringBuilder::appendCodePoint,\
    \ StringBuilder::append).toString();\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgzv0rpmg.java:26)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ Arrays.stream(s.split(\"\"))\n                .map(x -> isLetter(x) ? reverseCase(x)\
    \ : x)\n                .collect(Collectors.joining(\"\"));\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpb7xnzenb.java:20: error: cannot find symbol\n                .map(x\
    \ -> isLetter(x) ? reverseCase(x) : x)\n                          ^\n  symbol:\
    \   method isLetter(String)\n  location: class Problem\n/tmp/tmpb7xnzenb.java:20:\
    \ error: cannot find symbol\n                .map(x -> isLetter(x) ? reverseCase(x)\
    \ : x)\n                                        ^\n  symbol:   method reverseCase(String)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasAlpha = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isAlphabetic(s.charAt(i)))\
    \ {\n                hasAlpha = true;\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        return hasAlpha ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().anyMatch(Character::isLetter))\
    \ {\n            return s.chars()\n                .mapToObj(i -> (char) i)\n\
    \                .map(c -> (c.isLetter()) ? Character.toLowerCase(c) : c)\n  \
    \              .map(c -> (c.isLetter()) ? Character.toUpperCase(c) : c)\n    \
    \            .map(c -> \"\" + c)\n                .collect(Collectors.joining());\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp1ely7d85.java:22: error: no suitable method found for isLetter(no\
    \ arguments)\n                .map(c -> (c.isLetter()) ? Character.toLowerCase(c)\
    \ : c)\n                            ^\n    method Character.isLetter(char) is\
    \ not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Character.isLetter(int) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n/tmp/tmp1ely7d85.java:23: error: no suitable\
    \ method found for isLetter(no arguments)\n                .map(c -> (c.isLetter())\
    \ ? Character.toUpperCase(c) : c)\n                            ^\n    method Character.isLetter(char)\
    \ is not applicable\n      (actual and formal argument lists differ in length)\n\
    \    method Character.isLetter(int) is not applicable\n      (actual and formal\
    \ argument lists differ in length)\n2 errors\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int start\
    \ = -1;\n        int end = -1;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (start\
    \ == -1) {\n                    start = i;\n                }\n              \
    \  end = i;\n            }\n        }\n        if (start == -1) {\n          \
    \  return reverse(s);\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        sb.append(s.substring(0, start));\n        for (int i = start; i <= end;\
    \ i++) {\n            if (Character.isLowerCase(s.charAt(i))) {\n            \
    \    sb.append(Character.toUpperCase(s.charAt(i)));\n            } else {\n  \
    \              sb.append(Character.toLowerCase(s.charAt(i)));\n            }\n\
    \        }\n        sb.append(s.substring(end + 1));\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmphoymx37p.java:30: error: cannot find symbol\n            return\
    \ reverse(s);\n                   ^\n  symbol:   method reverse(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int l\
    \ = s.length();\n        if (l == 0) {\n            return \"\";\n        }\n\
    \        int k = 0;\n        for (int i = 0; i < l; i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                k = 1;\n                break;\n            }\n        }\n\
    \        if (k == 0) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        StringBuilder sb = new StringBuilder(s);\n        for (int\
    \ i = 0; i < l; i++) {\n            if (Character.isLowerCase(s.charAt(i))) {\n\
    \                sb.setCharAt(i, Character.toUpperCase(s.charAt(i)));\n      \
    \      } else if (Character.isUpperCase(s.charAt(i))) {\n                sb.setCharAt(i,\
    \ Character.toLowerCase(s.charAt(i)));\n            }\n        }\n        return\
    \ sb.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Type\
    \ your solution here\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpcc6usecq.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ result = new StringBuilder();\n        boolean found = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                found = true;\n            \
    \    result.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \            } else {\n                result.append(c);\n            }\n    \
    \    }\n        return found ? result.toString() : result.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        if (s.length() == 0) return s;\n        boolean isLetter\
    \ = false;\n        char[] arr = s.toCharArray();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n        \
    \        isLetter = true;\n                break;\n            }\n        }\n\
    \        if (!isLetter) {\n            for (int i = 0; i < arr.length / 2; i++)\
    \ {\n                char temp = arr[i];\n                arr[i] = arr[arr.length\
    \ - 1 - i];\n                arr[arr.length - 1 - i] = temp;\n            }\n\
    \        } else {\n            for (int i = 0; i < arr.length; i++) {\n      \
    \          if (Character.isLetter(arr[i])) {\n                    if (Character.isUpperCase(arr[i]))\
    \ arr[i] = Character.toLowerCase(arr[i]);\n                    else arr[i] = Character.toUpperCase(arr[i]);\n\
    \                }\n            }\n        }\n        return new String(arr);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // your\
    \ code goes here.\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmpsbqkd_xl.java:23)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.isEmpty())\
    \ return s;\n        char[] ch = s.toCharArray();\n        int i = 0;\n      \
    \  while (i < ch.length && !isLetter(ch[i])) i++;\n        if (i == ch.length)\
    \ return new StringBuilder(s).reverse().toString();\n        for (int j = 0; j\
    \ < ch.length; j++) {\n            if (isLetter(ch[j])) {\n                ch[j]\
    \ = (char) (ch[j] ^ 32);\n            }\n        }\n        return new String(ch);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpsd9_3en8.java:22: error: cannot find symbol\n        while (i <\
    \ ch.length && !isLetter(ch[i])) i++;\n                                 ^\n  symbol:\
    \   method isLetter(char)\n  location: class Problem\n/tmp/tmpsd9_3en8.java:25:\
    \ error: cannot find symbol\n            if (isLetter(ch[j])) {\n            \
    \    ^\n  symbol:   method isLetter(char)\n  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()==0)\
    \ {\n            return s;\n        }\n        boolean b = Character.isLetter(s.charAt(0));\n\
    \        if (b) {\n            StringBuilder sb = new StringBuilder();\n     \
    \       for (int i=0; i<s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isLetter(c)) {\n                    sb.append(Character.toUpperCase(c));\n\
    \                } else {\n                    sb.append(c);\n               \
    \ }\n            }\n            return sb.toString();\n        } else {\n    \
    \        StringBuilder sb = new StringBuilder();\n            for (int i=0; i<s.length();\
    \ i++) {\n                char c = s.charAt(i);\n                if (Character.isLetter(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(c);\n                }\n          \
    \  }\n            return sb.reverse().toString();\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvs0lm8h6.java:48)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int cnt = 0;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            char ch = s.charAt(i);\n            if (ch >=\
    \ 'a' && ch <= 'z') {\n                sb.append((char)(ch + 'A' - 'a'));\n  \
    \              cnt++;\n            } else if (ch >= 'A' && ch <= 'Z') {\n    \
    \            sb.append((char)(ch + 'a' - 'A'));\n                cnt++;\n    \
    \        } else {\n                sb.append(ch);\n            }\n        }\n\
    \        return cnt > 0 ? sb.toString() : new StringBuilder(s).reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        boolean hasALetter = false;\n        for (int i = 0;\
    \ i < n; i++) {\n            if (Character.isLetter(s.charAt(i))) {\n        \
    \        hasALetter = true;\n                break;\n            }\n        }\n\
    \        StringBuilder sb = new StringBuilder();\n        if (hasALetter) {\n\
    \            for (int i = 0; i < n; i++) {\n                if (Character.isLetter(s.charAt(i)))\
    \ {\n                    if (Character.isUpperCase(s.charAt(i))) {\n         \
    \               sb.append(Character.toLowerCase(s.charAt(i)));\n             \
    \       } else {\n                        sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                    }\n                } else {\n                    sb.append(s.charAt(i));\n\
    \                }\n            }\n        } else {\n            for (int i =\
    \ n - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n           \
    \ }\n        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int l\
    \ = s.length();\n        boolean letterFound = false;\n        for (int i = 0;\
    \ i < l; i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                letterFound = true;\n                break;\n           \
    \ }\n        }\n        if (!letterFound) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        char[] arr = s.toCharArray();\n        for (int i = 0; i <\
    \ l; i++) {\n            char c = arr[i];\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    arr[i]\
    \ = Character.toLowerCase(c);\n                } else {\n                    arr[i]\
    \ = Character.toUpperCase(c);\n                }\n            }\n        }\n \
    \       return new String(arr);\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // code\
    \ goes here\n        if (s.length() == 0) return s;\n        char[] s_arr = s.toCharArray();\n\
    \        int n = s_arr.length;\n        boolean has_letter = false;\n        for\
    \ (int i = 0; i < n; i++) {\n            if (Character.isLetter(s_arr[i])) {\n\
    \                has_letter = true;\n                if (Character.isUpperCase(s_arr[i]))\
    \ s_arr[i] = Character.toLowerCase(s_arr[i]);\n                else s_arr[i] =\
    \ Character.toUpperCase(s_arr[i]);\n            }\n        }\n        if (!has_letter)\
    \ return new StringBuilder(s).reverse().toString();\n        return new String(s_arr);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetter = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                hasLetter = true;\n        \
    \        c = Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c);\n\
    \            }\n            sb.append(c);\n        }\n        return hasLetter\
    \ ? sb.toString() : sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ result = new StringBuilder();\n        boolean number = true;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if ((c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z')) {\n                number\
    \ = false;\n                char u = Character.toUpperCase(c);\n             \
    \   if (u == c) {\n                    result.append(Character.toLowerCase(c));\n\
    \                } else {\n                    result.append(u);\n           \
    \     }\n            } else {\n                result.append(c);\n           \
    \ }\n        }\n        if (number) {\n            return result.reverse().toString();\n\
    \        }\n        return result.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ Stream.of(s.split(\"\"))\n        .map(x -> {\n            if(Character.isLetter(x.charAt(0)))\
    \ {\n                return Character.isUpperCase(x.charAt(0)) ? x.toLowerCase()\
    \ : x.toUpperCase();\n            } else {\n                return x;\n      \
    \      }\n        })\n        .collect(Collectors.joining(\"\"));\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8v_7j_bj.java:31)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if (s.matches(\"\\\\d+\")) {\n          \
    \  for (int i = s.length() - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n\
    \            }\n        } else {\n            for (int i = 0; i < s.length();\
    \ i++) {\n                char c = s.charAt(i);\n                if (Character.isLetter(c))\
    \ {\n                    if (Character.isUpperCase(c)) {\n                   \
    \     sb.append(Character.toLowerCase(c));\n                    } else {\n   \
    \                     sb.append(Character.toUpperCase(c));\n                 \
    \   }\n                } else {\n                    sb.append(c);\n         \
    \       }\n            }\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8oqcb44l.java:46)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n\
    \                sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        if (sb.toString().equals(s)) {\n          \
    \  return sb.reverse().toString();\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n\
    \            char ch = s.charAt(i);\n            if (Character.isLetter(ch)) {\n\
    \                count++;\n            }\n        }\n        if (count == 0) {\n\
    \            StringBuilder sb = new StringBuilder();\n            for (int i =\
    \ n - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n           \
    \ }\n            return sb.toString();\n        }\n        StringBuilder sb =\
    \ new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            char\
    \ ch = s.charAt(i);\n            if (Character.isLetter(ch)) {\n             \
    \   if (Character.isUpperCase(ch)) {\n                    sb.append(Character.toLowerCase(ch));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(ch));\n\
    \                }\n            } else {\n                sb.append(ch);\n   \
    \         }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011017
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.isEmpty())\
    \ return s;\n        if (s.chars().allMatch(Character::isDigit)) {\n         \
    \   return new StringBuilder(s).reverse().toString();\n        } else {\n    \
    \        return s.chars().mapToObj(c -> {\n                if (Character.isLetter(c))\
    \ {\n                    if (Character.isUpperCase(c)) return Character.toLowerCase(c);\n\
    \                    else return Character.toUpperCase(c);\n                }\
    \ else return (char) c;\n            }).map(String::valueOf).collect(Collectors.joining());\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rfbljui.java:32)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ == 0) {\n            return s;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8zztxf2.java:35)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        var str\
    \ = s.toCharArray();\n        if(str.length == 0){\n            return s;\n  \
    \      }\n        var flag = false;\n        for(var c : str){\n            if(Character.isLetter(c)){\n\
    \                flag = true;\n                break;\n            }\n       \
    \ }\n        if(!flag){\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        for(int i = 0; i < str.length; i++){\n            if(Character.isLetter(str[i])){\n\
    \                if(Character.isUpperCase(str[i])){\n                    str[i]\
    \ = Character.toLowerCase(str[i]);\n                }else{\n                 \
    \   str[i] = Character.toUpperCase(str[i]);\n                }\n            }\n\
    \        }\n        return new String(str);\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        //1\n\
    \        // if (s.length() == 0) return s;\n        // StringBuilder sb = new\
    \ StringBuilder();\n        // for (int i = 0; i < s.length(); i++) {\n      \
    \  //     char c = s.charAt(i);\n        //     if (!Character.isLetter(c)) sb.append(c);\n\
    \        //     else sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n        // }\n        // return sb.toString();\n\
    \        //2\n        // StringBuilder sb = new StringBuilder();\n        // for\
    \ (int i = 0; i < s.length(); i++) {\n        //     char c = s.charAt(i);\n \
    \       //     if (!Character.isLetter(c)) sb.append(c);\n        //     else\
    \ sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \        // }\n        // return sb.toString();\n        //3\n        // StringBuilder\
    \ sb = new StringBuilder();\n        // for (int i = 0; i < s.length(); i++) {\n\
    \        //     char c = s.charAt(i);\n        //     if (!Character.isLetter(c))\
    \ sb.append(c);\n        //     else sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n        // }\n        // return sb.toString();\n\
    \        //4\n        // StringBuilder sb = new StringBuilder();\n        // for\
    \ (int i = 0; i < s.length(); i++) {\n        //     char c = s.charAt(i);\n \
    \       //     if (!Character.isLetter(c)) sb.append(c);\n        //     else\
    \ sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \        // }\n        // return sb.toString();\n        //5\n        // StringBuilder\
    \ sb = new\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp0rk3te8d.java:54: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ s.chars().filter(c -> Character.isLetter(c)).map(c -> {\n            if (Character.isUpperCase(c))\
    \ {\n                return Character.toLowerCase(c);\n            } else {\n\
    \                return Character.toUpperCase(c);\n            }\n        }).mapToObj(c\
    \ -> Character.toString((char) c)).collect(Collectors.joining());\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnejwsprm.java:29)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ ans = \"\";\n        String word = \"\";\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (Character.isLetter(s.charAt(i))) {\n               \
    \ word += s.charAt(i);\n            }\n        }\n        if (word.length() ==\
    \ 0) {\n            for (int i = s.length() - 1; i >= 0; i--) {\n            \
    \    ans += s.charAt(i);\n            }\n        } else {\n            for (int\
    \ i = 0; i < s.length(); i++) {\n                if (Character.isLetter(s.charAt(i)))\
    \ {\n                    if (Character.isUpperCase(s.charAt(i))) {\n         \
    \               ans += Character.toLowerCase(s.charAt(i));\n                 \
    \   } else {\n                        ans += Character.toUpperCase(s.charAt(i));\n\
    \                    }\n                } else {\n                    ans += s.charAt(i);\n\
    \                }\n            }\n        }\n        return ans;\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasLetters = false;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n    \
    \        if (c >= 'a' && c <= 'z') {\n                hasLetters = true;\n   \
    \             sb.append((char)(c - 'a' + 'A'));\n            } else if (c >= 'A'\
    \ && c <= 'Z') {\n                hasLetters = true;\n                sb.append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.append(c);\n      \
    \      }\n        }\n        return hasLetters ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.length()\
    \ == 0) return s;\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ allLetters = true;\n        for(int i = 0; i < s.length(); i++) {\n        \
    \    if(Character.isLetter(s.charAt(i))) {\n                allLetters = false;\n\
    \                char ch = s.charAt(i);\n                if(Character.isUpperCase(ch))\
    \ sb.append(Character.toLowerCase(ch));\n                else sb.append(Character.toUpperCase(ch));\n\
    \            } else {\n                sb.append(s.charAt(i));\n            }\n\
    \        }\n        return allLetters ? new StringBuilder(s).reverse().toString()\
    \ : sb.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean noLetters = true;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                sb.append(Character.toUpperCase(s.charAt(i)));\n        \
    \        noLetters = false;\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (noLetters) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphy8mrmxy.java:35)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ cs = s.toCharArray();\n        for (int i = 0; i < cs.length; i++) {\n     \
    \       if (Character.isLetter(cs[i])) {\n                cs[i] = Character.isUpperCase(cs[i])\
    \ ? Character.toLowerCase(cs[i]) : Character.toUpperCase(cs[i]);\n           \
    \ }\n        }\n        return cs.length == 0 ? s : new String(cs);\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3i_8kpih.java:29)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ str = new StringBuilder(s);\n        if (s.length() > 0) {\n            for\
    \ (int i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isLetter(c)) {\n                    char o;\n \
    \                   if (Character.isUpperCase(c))\n                        o =\
    \ Character.toLowerCase(c);\n                    else\n                      \
    \  o = Character.toUpperCase(c);\n                    str.setCharAt(i, o);\n \
    \               }\n            }\n        } else {\n            str.reverse();\n\
    \        }\n        return str.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpagn_a1no.java:39)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[a-zA-Z]+$\")) {\n            StringBuilder sb = new StringBuilder();\n     \
    \       for (int i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isLowerCase(c)) {\n                    sb.append(Character.toUpperCase(c));\n\
    \                } else {\n                    sb.append(Character.toLowerCase(c));\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ } else {\n            return new StringBuilder(s).reverse().toString();\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy8jh5_f3.java:38)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ s.chars().mapToObj(c -> {\n            if (Character.isLetter(c)) {\n      \
    \          return Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c);\n\
    \            }\n            return (char) c;\n        }).collect(Collectors.joining(\"\
    \"));\n}\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\"\
    )).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n \
    \   assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprv5cgt3i.java:24: error: no suitable method found for collect(Collector<CharSequence,CAP#1,String>)\n\
    \        }).collect(Collectors.joining(\"\"));\n          ^\n    method Stream.<R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super INT#1>,BiConsumer<R#1,R#1>) is not applicable\n      (cannot infer type-variable(s)\
    \ R#1\n        (actual and formal argument lists differ in length))\n    method\
    \ Stream.<R#2,A>collect(Collector<? super INT#1,A,R#2>) is not applicable\n  \
    \    (cannot infer type-variable(s) R#2,A\n        (argument mismatch; Collector<CharSequence,CAP#2,String>\
    \ cannot be converted to Collector<? super INT#1,A,R#2>))\n  where R#1,T,R#2,A\
    \ are type-variables:\n    R#1 extends Object declared in method <R#1>collect(Supplier<R#1>,BiConsumer<R#1,?\
    \ super T>,BiConsumer<R#1,R#1>)\n    T extends Object declared in interface Stream\n\
    \    R#2 extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \    A extends Object declared in method <R#2,A>collect(Collector<? super T,A,R#2>)\n\
    \  where CAP#1,CAP#2 are fresh type-variables:\n    CAP#1 extends Object from\
    \ capture of ?\n    CAP#2 extends Object from capture of ?\n  where INT#1,INT#2\
    \ are intersection types:\n    INT#1 extends Object,Serializable,Comparable<?\
    \ extends INT#2>,Constable\n    INT#2 extends Object,Serializable,Comparable<?>,Constable\n\
    1 error\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.matches(\"\
    ^[^a-zA-Z]+$\")){\n            return reverse(s);\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for(int i = 0; i < s.length(); i++){\n  \
    \          char c = s.charAt(i);\n            if(Character.isLetter(c)){\n   \
    \             if(Character.isUpperCase(c)){\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmplc0od2bv.java:20: error: cannot find symbol\n            return\
    \ reverse(s);\n                   ^\n  symbol:   method reverse(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        StringBuilder sb = new StringBuilder();\n\
    \        boolean flag = false;\n        for (int i = 0; i < chars.length; i++)\
    \ {\n            if (Character.isLetter(chars[i])) {\n                flag = true;\n\
    \                chars[i] = Character.isUpperCase(chars[i]) ? Character.toLowerCase(chars[i])\
    \ : Character.toUpperCase(chars[i]);\n            }\n            sb.append(chars[i]);\n\
    \        }\n        if (!flag) {\n            String str = sb.toString();\n  \
    \          sb = new StringBuilder();\n            for (int i = str.length() -\
    \ 1; i >= 0; i--) {\n                sb.append(str.charAt(i));\n            }\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011018
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        final\
    \ boolean hasLetters = s.chars().mapToObj(c -> (char) c).anyMatch(Character::isLetter);\n\
    \        final String flipped = new StringBuilder(s).reverse().toString();\n \
    \       return hasLetters ? flipped.chars().mapToObj(c -> (char) c).map(c -> {\n\
    \            if (Character.isUpperCase(c)) {\n                return Character.toLowerCase(c);\n\
    \            } else if (Character.isLowerCase(c)) {\n                return Character.toUpperCase(c);\n\
    \            } else {\n                return c;\n            }\n        }).map(Object::toString).collect(Collectors.joining())\
    \ : flipped;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphyvbc_p2.java:32)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[A-Za-z]*$\")) {\n            return s.equals(s.toUpperCase()) ? s.toLowerCase()\
    \ : s.toUpperCase();\n        }\n        return new StringBuilder(s).reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_wj7ldl.java:25)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ s.chars().filter(Character::isLetter).map(x -> {\n            if (Character.isUpperCase(x))\
    \ return Character.toLowerCase(x);\n            return Character.toUpperCase(x);\n\
    \        }).collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append).toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwpsu44vc.java:26)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.chars().noneMatch(c\
    \ -> Character.isLetter(c))) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        for(char\
    \ c : s.toCharArray()) {\n            if(Character.isLetter(c)) {\n          \
    \      char x = Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c);\n\
    \                sb.append(x);\n            } else {\n                sb.append(c);\n\
    \            }\n        }\n        return sb.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int left\
    \ = 0;\n        int right = s.length() - 1;\n        char[] str = s.toCharArray();\n\
    \        while (left < right) {\n            while (left < right && !Character.isLetter(str[left]))\
    \ {\n                left++;\n            }\n            while (left < right &&\
    \ !Character.isLetter(str[right])) {\n                right--;\n            }\n\
    \            if (left < right) {\n                str[left] = Character.isUpperCase(str[left])\
    \ ? Character.toLowerCase(str[left]) : Character.toUpperCase(str[left]);\n   \
    \             str[right] = Character.isUpperCase(str[right]) ? Character.toLowerCase(str[right])\
    \ : Character.toUpperCase(str[right]);\n                left++;\n            \
    \    right--;\n            }\n        }\n        return new String(str);\n}\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkq1h_r4b.java:40)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().noneMatch(c\
    \ -> Character.isLetter(c)))\n            return new StringBuilder(s).reverse().toString();\n\
    \        return s.chars().mapToObj(c -> {\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c))\n                    return\
    \ Character.toLowerCase(c);\n                return Character.toUpperCase(c);\n\
    \            }\n            return (char) c;\n        }).map(c -> String.valueOf(c)).collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3rv8crzh.java:31)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [A-Za-z]*\")) {\n            StringBuilder sb = new StringBuilder();\n       \
    \     for (int i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ } else {\n            return new StringBuilder(s).reverse().toString();\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpno_apqce.java:38)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ ans = \"\";\n        int k = 0;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (Character.isLetter(s.charAt(i))) {\n                k++;\n\
    \                if (Character.isUpperCase(s.charAt(i))) {\n                 \
    \   ans += Character.toLowerCase(s.charAt(i));\n                } else {\n   \
    \                 ans += Character.toUpperCase(s.charAt(i));\n               \
    \ }\n            } else {\n                ans += s.charAt(i);\n            }\n\
    \        }\n        if (k == 0) {\n            return new StringBuilder(ans).reverse().toString();\n\
    \        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.matches(\"\
    ^[a-zA-Z]*$\"))\n            return new StringBuilder(s).reverse().toString();\n\
    \        char[] sc = s.toCharArray();\n        int i = 0;\n        while(i < sc.length)\
    \ {\n            if(Character.isLetter(sc[i])) {\n                sc[i] = Character.isUpperCase(sc[i])\
    \ ? Character.toLowerCase(sc[i]) : Character.toUpperCase(sc[i]);\n           \
    \ }\n            i++;\n        }\n        return new String(sc);\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpupbdm1j4.java:32)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        StringBuilder sb = new StringBuilder();\n        boolean\
    \ flag = false;\n        for (int i = 0; i < n; i++) {\n            char ch =\
    \ s.charAt(i);\n            if (Character.isLetter(ch)) {\n                flag\
    \ = true;\n                sb.append(Character.isUpperCase(ch) ? Character.toLowerCase(ch)\
    \ : Character.toUpperCase(ch));\n            } else sb.append(ch);\n        }\n\
    \        return flag ? sb.toString() : sb.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmplvfq3zdx.java:23)\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (isLetters(s))\
    \ {\n            return reverseCase(s);\n        } else {\n            return\
    \ reverse(s);\n        }\n}\n    public static void main(String[] args) {\n  \
    \  assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"\
    4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpddakh4zw.java:19: error: cannot find symbol\n        if (isLetters(s))\
    \ {\n            ^\n  symbol:   method isLetters(String)\n  location: class Problem\n\
    /tmp/tmpddakh4zw.java:20: error: cannot find symbol\n            return reverseCase(s);\n\
    \                   ^\n  symbol:   method reverseCase(String)\n  location: class\
    \ Problem\n/tmp/tmpddakh4zw.java:22: error: cannot find symbol\n            return\
    \ reverse(s);\n                   ^\n  symbol:   method reverse(String)\n  location:\
    \ class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011019
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ solution = \"\";\n        String reverse = \"\";\n        String string = \"\
    \";\n        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (c != '#' && c != '@' && c != '$' && c != '%' && c != '!' && c\
    \ != '^' && c != '&' && c != '*' && c != '?' && c != '_' && c != '=' && c != '+'\
    \ && c != '~' && c != '`' && c != '|' && c != '\\\\' && c != '.' && c != ',' &&\
    \ c != ':' && c != ';' && c != '>' && c != '<' && c != '\"' && c != '{' && c !=\
    \ '}' && c != '[' && c != ']' && c != '(' && c != ')' && c != '-' && c != '/'\
    \ && c != '1' && c != '2' && c != '3' && c != '4' && c != '5' && c != '6' && c\
    \ != '7' && c != '8' && c != '9' && c != '0') {\n                char c1 = Character.toUpperCase(c);\n\
    \                char c2 = Character.toLowerCase(c);\n                if (c ==\
    \ c1) {\n                    string += c2;\n                } else {\n       \
    \             string += c1;\n                }\n            } else {\n       \
    \         string += c;\n            }\n        }\n        for (int i = string.length()\
    \ - 1; i >= 0; i--) {\n            reverse += string.charAt(i);\n        }\n \
    \       if (string == reverse) {\n            solution = string;\n        } else\
    \ {\n            solution = reverse;\n        }\n        return solution;\n}\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe7u5ey7_.java:47)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    \\\\d+\")) return new StringBuilder(s).reverse().toString();\n        StringBuilder\
    \ res = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    res.append(Character.toLowerCase(s.charAt(i)));\n   \
    \             } else {\n                    res.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                res.append(s.charAt(i));\n\
    \            }\n        }\n        return res.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp39tg8vu3.java:40)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(!s.matches(\"\
    .*[a-zA-Z].*\"))\n            return new StringBuilder(s).reverse().toString();\n\
    \        StringBuilder sb = new StringBuilder();\n        for(int i = 0; i < s.length();\
    \ i++) {\n            if(Character.isAlphabetic(s.charAt(i))) {\n            \
    \    if(Character.isUpperCase(s.charAt(i)))\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n\
    \                else\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \            } else\n                sb.append(s.charAt(i));\n        }\n    \
    \    return sb.toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[a-zA-Z]+$\")) {\n            StringBuilder b = new StringBuilder();\n      \
    \      for (char c : s.toCharArray()) {\n                b.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            }\n   \
    \         return b.toString();\n        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_0rm98li.java:33)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        final\
    \ var regex = \"[a-zA-Z]\";\n        final var letters = s.chars().filter(c ->\
    \ c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z').toArray();\n        if (letters.length\
    \ == 0) {\n            return new StringBuilder(s).reverse().toString();\n   \
    \     }\n        return s.chars().map(c -> {\n            if (Character.isLetter(c))\
    \ {\n                return Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c);\n            }\n            return c;\n        }).collect(StringBuilder::new,\
    \ StringBuilder::appendCodePoint, StringBuilder::append).toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean isFound = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                isFound = true;\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (!isFound) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        // loop through the given string\n      \
    \  for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                // if the character\
    \ is a letter, then reverse its case\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                // else append the character as it is\n                sb.append(c);\n\
    \            }\n        }\n        // if the string contains no letters, then\
    \ reverse the string\n        if (sb.toString().equals(s)) {\n            return\
    \ sb.reverse().toString();\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // write\
    \ your code here.\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp47_57nia.java:23)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.chars().noneMatch(Character::isLetter))\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    \        StringBuilder sb = new StringBuilder();\n        for(char c : s.toCharArray())\
    \ {\n            if(Character.isLetter(c)) {\n                if(Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            } else {\n                sb.append(c);\n          \
    \  }\n        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ == 0) {\n            return s;\n        }\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char ch = s.charAt(i);\n            if (Character.isLetter(ch))\
    \ {\n                return reverse(s);\n            }\n        }\n        return\
    \ reverse(s);\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpetbzbysg.java:25: error: cannot find symbol\n                return\
    \ reverse(s);\n                       ^\n  symbol:   method reverse(String)\n\
    \  location: class Problem\n/tmp/tmpetbzbysg.java:28: error: cannot find symbol\n\
    \        return reverse(s);\n               ^\n  symbol:   method reverse(String)\n\
    \  location: class Problem\n2 errors\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[a-zA-Z]+$\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        else {\n            return s.chars()\n                   \
    \ .mapToObj(i -> (char) i)\n                    .map(i -> {\n                \
    \        if (Character.isUpperCase(i)) {\n                            return Character.toLowerCase(i);\n\
    \                        }\n                        else if (Character.isLowerCase(i))\
    \ {\n                            return Character.toUpperCase(i);\n          \
    \              }\n                        else {\n                           \
    \ return i;\n                        }\n                    })\n             \
    \       .map(Object::toString)\n                    .collect(Collectors.joining());\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1mzw45_.java:41)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                sb.append(Character.toUpperCase(s.charAt(i))\
    \ == s.charAt(i) ? Character.toLowerCase(s.charAt(i)) : Character.toUpperCase(s.charAt(i)));\n\
    \            } else {\n                sb.append(s.charAt(i));\n            }\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5lqybzmc.java:31)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int len\
    \ = s.length();\n        StringBuilder sb = new StringBuilder();\n        for\
    \ (int i = 0; i < len; i++) {\n            char ch = s.charAt(i);\n          \
    \  if (Character.isLetter(ch)) {\n                if (Character.isUpperCase(ch))\
    \ {\n                    sb.append(Character.toLowerCase(ch));\n             \
    \   } else {\n                    sb.append(Character.toUpperCase(ch));\n    \
    \            }\n            } else {\n                sb.append(ch);\n       \
    \     }\n        }\n        return (len == sb.length()) ? sb.reverse().toString()\
    \ : sb.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqfvawfpw.java:36)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().allMatch(Character::isLetter))\n\
    \            return new StringBuilder(s).reverse().toString();\n        int[]\
    \ a = s.chars().map(c -> Character.isLowerCase(c) ? Character.toUpperCase(c) :\
    \ Character.toLowerCase(c)).toArray();\n        return new String(a, 0, a.length);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjq___6ga.java:25)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ chars = s.toCharArray();\n        for (int i = 0; i < chars.length; i++) {\n\
    \            if (Character.isLetter(chars[i])) {\n                chars[i] = Character.isUpperCase(chars[i])\
    \ ? Character.toLowerCase(chars[i]) : Character.toUpperCase(chars[i]);\n     \
    \       }\n        }\n        return String.valueOf(chars);\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbd3l0ztt.java:29)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.chars().noneMatch(c\
    \ -> Character.isLetter(c)))\n            return new StringBuilder(s).reverse().toString();\n\
    \        return IntStream.range(0, s.length())\n            .mapToObj(i -> Character.isLetter(s.charAt(i))\
    \ ? \n                       Character.isUpperCase(s.charAt(i)) ? Character.toLowerCase(s.charAt(i))\
    \ : Character.toUpperCase(s.charAt(i)) : s.charAt(i))\n            .map(c -> String.valueOf(c))\n\
    \            .collect(Collectors.joining());\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int i\
    \ = 0;\n        boolean nonLetter = true;\n        // find the first letter from\
    \ the left\n        while (i < s.length() && !Character.isLetter(s.charAt(i)))\
    \ {\n            i++;\n        }\n        // check if there are any letters\n\
    \        if (i == s.length()) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        // keep the first letter, if it is a letter, and change it\
    \ to upper case\n        String s2 = Character.toUpperCase(s.charAt(i)) + \"\"\
    ;\n        // check if there are any other letters\n        if (i < s.length()\
    \ - 1) {\n            // add all other letters as lower case letters\n       \
    \     for (int j = i + 1; j < s.length(); j++) {\n                if (Character.isLetter(s.charAt(j)))\
    \ {\n                    s2 += Character.toLowerCase(s.charAt(j));\n         \
    \       } else {\n                    s2 += s.charAt(j);\n                }\n\
    \            }\n        }\n        // add the rest of the string from the beginning\n\
    \        for (int j = 0; j < i; j++) {\n            s2 += s.charAt(j);\n     \
    \   }\n        return s2;\n}\n    public static void main(String[] args) {\n \
    \   assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpajei2j6a.java:49)\n"
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // if\
    \ no letters, return the reverse string\n        if (s.length() == s.replaceAll(\"\
    [a-zA-Z]\", \"\").length()) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        for (char\
    \ c : s.toCharArray()) {\n            if (Character.isLetter(c)) {\n         \
    \       sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        return sb.toString();\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean containsLetter = false;\n       \
    \ for (int i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                sb.append(Character.toLowerCase(s.charAt(i)) == s.charAt(i)\
    \ ? Character.toUpperCase(s.charAt(i)) : Character.toLowerCase(s.charAt(i)));\n\
    \                containsLetter = true;\n            } else {\n              \
    \  sb.append(s.charAt(i));\n            }\n        }\n        return containsLetter\
    \ ? sb.toString() : sb.reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011020
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [A-Za-z]+\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        StringBuilder str = new StringBuilder();\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                str.append(Character.toLowerCase(s.charAt(i)));\n       \
    \     } else if (Character.isLowerCase(s.charAt(i))) {\n                str.append(Character.toUpperCase(s.charAt(i)));\n\
    \            } else {\n                str.append(s.charAt(i));\n            }\n\
    \        }\n        return str.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp400koez8.java:35)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\n\
    \                    sb.append(Character.toLowerCase(s.charAt(i)));\n        \
    \        else if (Character.isLowerCase(s.charAt(i)))\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \            } else\n                sb.append(s.charAt(i));\n        }\n    \
    \    if (s.matches(\".*[a-zA-Z]+.*\"))\n            return sb.toString();\n  \
    \      else\n            return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.matches(\"\
    [a-zA-Z]+\")){\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n        return s;\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsvic262.java:25)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ letters = false;\n        int len = s.length();\n        char[] t = new char[len];\n\
    \        for (int i = 0; i < len; i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                letters = true;\n \
    \               if (Character.isUpperCase(c)) t[i] = Character.toLowerCase(c);\n\
    \                else t[i] = Character.toUpperCase(c);\n            } else t[i]\
    \ = c;\n        }\n        if (!letters) return new StringBuilder(s).reverse().toString();\n\
    \        return new String(t);\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.chars().anyMatch(Character::isLetter))\
    \ {\n            return s.chars().mapToObj(c -> (char)c).map(c -> {\n        \
    \        if(Character.isLetter(c)) {\n                    return Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c);\n                }\n\
    \                return c;\n            }).map(c -> c.toString()).collect(Collectors.joining());\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        String ans = \"\";\n        int count = 0;\n        for\
    \ (int i = 0; i < n; i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                count++;\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    ans += Character.toLowerCase(s.charAt(i));\n        \
    \        } else {\n                    ans += Character.toUpperCase(s.charAt(i));\n\
    \                }\n            } else {\n                ans += s.charAt(i);\n\
    \            }\n        }\n        if (count == 0) {\n            return new StringBuilder(ans).reverse().toString();\n\
    \        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ res = new StringBuilder(s);\n        if(s.chars().anyMatch(x -> Character.isLetter(x)))\
    \ {\n            res.reverse();\n            for(int i = 0; i < res.length();\
    \ i++) {\n                char c = res.charAt(i);\n                if(Character.isLetter(c))\
    \ {\n                    res.setCharAt(i, Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n                }\n            }\n        } else\
    \ {\n            res.reverse();\n        }\n        return res.toString();\n}\n\
    \    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4z1gzolq.java:34)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ res = s.replaceAll(\"[a-zA-Z]\", \"\");\n        if (res.length() == s.length())\
    \ return new StringBuilder(s).reverse().toString();\n        String s2 = s.replaceAll(\"\
    [^a-zA-Z]\", \"\");\n        for (int i = 0; i < s2.length(); i++) {\n       \
    \     if (Character.isUpperCase(s2.charAt(i))) {\n                s2 = s2.replace(s2.charAt(i),\
    \ Character.toLowerCase(s2.charAt(i)));\n            } else {\n              \
    \  s2 = s2.replace(s2.charAt(i), Character.toUpperCase(s2.charAt(i)));\n     \
    \       }\n        }\n        return res.replaceAll(\"\", s2);\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvuzmwhcz.java:35)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        return \"\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2utr2djg.java:23)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    ^[a-zA-Z]+$\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            return s.chars()\n                .mapToObj(c ->\
    \ {\n                    if (Character.isLetter(c)) {\n                      \
    \  return (char) (c ^ ' ');\n                    } else {\n                  \
    \      return (char) c;\n                    }\n                })\n         \
    \       .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \                .toString();\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1n9o_dt5.java:35)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ \"\";\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3xadpsz.java:22)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        while (i < s.length()\
    \ && !Character.isLetter(s.charAt(i))) {\n            sb.append(s.charAt(i));\n\
    \            i++;\n        }\n        if (i == s.length()) {\n            return\
    \ sb.reverse().toString();\n        }\n        for (; i < s.length(); i++) {\n\
    \            char c = s.charAt(i);\n            if (Character.isLetter(c)) {\n\
    \                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ res = \"\";\n        if (s.length() == 0) {\n            return res;\n     \
    \   }\n        boolean isContainLetters = false;\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            if (Character.isLetter(s.charAt(i))) {\n   \
    \             isContainLetters = true;\n                break;\n            }\n\
    \        }\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isLowerCase(s.charAt(i)))\
    \ {\n                res += Character.toUpperCase(s.charAt(i));\n            }\
    \ else if (Character.isUpperCase(s.charAt(i))) {\n                res += Character.toLowerCase(s.charAt(i));\n\
    \            } else {\n                res += s.charAt(i);\n            }\n  \
    \      }\n        if (!isContainLetters) {\n            String reverseRes = \"\
    \";\n            for (int i = res.length() - 1; i >= 0; i--) {\n             \
    \   reverseRes += res.charAt(i);\n            }\n            return reverseRes;\n\
    \        }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int i = 0;\n        boolean hasLetters =\
    \ false;\n        while (i < s.length()) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                hasLetters = true;\n\
    \                c = Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c);\n\
    \            }\n            sb.append(c);\n            i++;\n        }\n     \
    \   if (!hasLetters)\n            sb.reverse();\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ str = s.toCharArray();\n        for (int i = 0; i < str.length; i++) {\n   \
    \         if (Character.isLetter(str[i])) {\n                if (Character.isUpperCase(str[i]))\
    \ {\n                    str[i] = Character.toLowerCase(str[i]);\n           \
    \     } else {\n                    str[i] = Character.toUpperCase(str[i]);\n\
    \                }\n            }\n        }\n        String result = String.valueOf(str);\n\
    \        if (result.equals(s)) {\n            StringBuilder sb = new StringBuilder(result);\n\
    \            result = sb.reverse().toString();\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        // To print results to the standard output you can use\
    \ System.out.println()\n        // Example: System.out.println(\"Hello world!\"\
    );\n        int l = s.length();\n        if (l == 0) return \"\";\n        if\
    \ (l == 1) {\n            char c = s.charAt(0);\n            if (Character.isLetter(c))\
    \ return Character.isUpperCase(c) ? Character.toString(Character.toLowerCase(c))\
    \ : Character.toString(Character.toUpperCase(c));\n            else return s;\n\
    \        }\n        StringBuilder sb = new StringBuilder();\n        boolean flag\
    \ = false;\n        for (int i = 0; i < l; i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                flag = true;\n    \
    \            sb.append(Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c));\n\
    \            } else {\n                sb.append(c);\n            }\n        }\n\
    \        if (flag) return sb.toString();\n        else return sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ sArray = s.toCharArray();\n        int j = 0;\n        for (int i = 0; i < sArray.length;\
    \ i++) {\n            if (Character.isLetter(sArray[i])) {\n                sArray[j]\
    \ = sArray[i];\n                j++;\n            }\n        }\n        int n\
    \ = j;\n        if (n == 0) {\n            int k = 0;\n            for (int i\
    \ = sArray.length - 1; i >= 0; i--) {\n                sArray[k] = sArray[i];\n\
    \                k++;\n            }\n            return new String(sArray);\n\
    \        }\n        for (int i = 0; i < n / 2; i++) {\n            char temp =\
    \ sArray[i];\n            sArray[i] = sArray[n - i - 1];\n            sArray[n\
    \ - i - 1] = temp;\n        }\n        for (int i = 0; i < sArray.length; i++)\
    \ {\n            if (Character.isLetter(sArray[i])) {\n                if (Character.isUpperCase(sArray[i]))\
    \ {\n                    sArray[i] = Character.toLowerCase(sArray[i]);\n     \
    \           } else {\n                    sArray[i] = Character.toUpperCase(sArray[i]);\n\
    \                }\n            }\n        }\n        return new String(sArray);\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpii5gwhp0.java:53)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // your\
    \ code goes here\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp94d27znr.java:23)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ hasLetters = false;\n        for (int i = 0; i < s.length(); i++) {\n      \
    \      if (Character.isLetter(s.charAt(i))) {\n                hasLetters = true;\n\
    \                break;\n            }\n        }\n        if (!hasLetters) {\n\
    \            return new StringBuilder(s).reverse().toString();\n        }\n  \
    \      StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.isEmpty())\
    \ {\n            return s;\n        }\n        boolean noLetters = true;\n   \
    \     for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                noLetters = false;\n\
    \                s = s.substring(0, i) +\n                    (Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c)) +\n                 \
    \   s.substring(i + 1);\n            }\n        }\n        if (noLetters) {\n\
    \            return new StringBuilder(s).reverse().toString();\n        }\n  \
    \      return s;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // The\
    \ problem and its variations can be solved by converting the string to a char\
    \ array,\n        // reversing and the converting to a string.\n        // Another\
    \ solution is to change the string to a list of integers, reversing and converting\n\
    \        // back to a string.\n        if (s.length() == 0) return s;\n      \
    \  StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ sb.append(Character.isUpperCase(c) ? \n                    Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            else sb.append(c);\n        }\n  \
    \      return sb.toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5p49p2hi.java:35)\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ result = new StringBuilder(s);\n        int length = s.length();\n        boolean\
    \ noLetters = true;\n        for (int i = 0; i < length; i++) {\n            char\
    \ c = s.charAt(i);\n            if (Character.isLetter(c)) {\n               \
    \ result.setCharAt(i, (Character.isUpperCase(c)) ? Character.toLowerCase(c) :\
    \ Character.toUpperCase(c));\n                noLetters = false;\n           \
    \ }\n        }\n        if (noLetters) {\n            result.reverse();\n    \
    \    }\n        return result.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        if (containsLetters(s))\n            return reverseString(s);\n\
    \        else\n            return switchCase(s);\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpba_va2up.java:20: error: cannot find symbol\n        if (containsLetters(s))\n\
    \            ^\n  symbol:   method containsLetters(String)\n  location: class\
    \ Problem\n/tmp/tmpba_va2up.java:21: error: cannot find symbol\n            return\
    \ reverseString(s);\n                   ^\n  symbol:   method reverseString(String)\n\
    \  location: class Problem\n/tmp/tmpba_va2up.java:23: error: cannot find symbol\n\
    \            return switchCase(s);\n                   ^\n  symbol:   method switchCase(String)\n\
    \  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ s.chars().mapToObj(c -> Character.isLetter(c) ? \n            (char) (Character.isUpperCase(c)\
    \ ? \n            Character.toLowerCase(c) : Character.toUpperCase(c)) : (char)\
    \ c)\n            .collect(StringBuilder::new, StringBuilder::append, StringBuilder::append)\n\
    \            .reverse().toString();\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps7rxqm0l.java:26)\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ answer = new StringBuilder();\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                answer.append(Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c));\n            } else {\n                answer.append(c);\n\
    \            }\n        }\n        if (answer.toString().equals(s)) {\n      \
    \      return answer.reverse().toString();\n        }\n        return answer.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ res = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    res.append(Character.toLowerCase(s.charAt(i)));\n   \
    \             } else {\n                    res.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                res.append(s.charAt(i));\n\
    \            }\n        }\n        return s.matches(\"\\\\d+\") ? res.reverse().toString()\
    \ : res.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr045e2u0.java:39)\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char arr[]\
    \ = s.toCharArray();\n        boolean isLetters = false;\n        for (int i =\
    \ 0; i < arr.length; i++) {\n            if (Character.isLetter(arr[i])) {\n \
    \               isLetters = true;\n                if (Character.isUpperCase(arr[i]))\n\
    \                    arr[i] = Character.toLowerCase(arr[i]);\n               \
    \ else\n                    arr[i] = Character.toUpperCase(arr[i]);\n        \
    \    }\n        }\n        return isLetters ? new String(arr) : new StringBuilder(s).reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if (s.length() == 0) return s;\n        String\
    \ l = s.toLowerCase();\n        String u = s.toUpperCase();\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (s.charAt(i) == l.charAt(i)) sb.append(u.charAt(i));\n            else\
    \ if (s.charAt(i) == u.charAt(i)) sb.append(l.charAt(i));\n            else sb.append(c);\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00n5_e2g.java:33)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ result = new StringBuilder();\n        for (char c : s.toCharArray()) {\n  \
    \          if (Character.isLetter(c)) {\n                result.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                result.append(c);\n            }\n        }\n        return\
    \ result.toString();\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ukq19t1.java:31)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ stringBuilder = new StringBuilder();\n        // we need to check how many letters\
    \ are in the string.\n        int count = 0;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (Character.isLetter(s.charAt(i))) {\n               \
    \ count++;\n            }\n        }\n        if (count == 0) {\n            //\
    \ we need to reverse the string.\n            for (int i = s.length() - 1; i >=\
    \ 0; i--) {\n                stringBuilder.append(s.charAt(i));\n            }\n\
    \        } else {\n            for (int i = 0; i < s.length(); i++) {\n      \
    \          if (Character.isLetter(s.charAt(i))) {\n                    stringBuilder.append(Character.toUpperCase(s.charAt(i)));\n\
    \                } else {\n                    stringBuilder.append(s.charAt(i));\n\
    \                }\n            }\n        }\n        return stringBuilder.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp75i81vvt.java:44)\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Your\
    \ code here.\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmplgrmdtxb.java:23)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if(s.matches(\"[a-zA-Z]+\")) {\n        \
    \    for(char c : s.toCharArray()) {\n                if(Character.isUpperCase(c))\
    \ {\n                    sb.append(Character.toLowerCase(c));\n              \
    \  } else {\n                    sb.append(Character.toUpperCase(c));\n      \
    \          }\n            }\n        } else {\n            for(int i = s.length()\
    \ - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n            }\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk0y86e6d.java:39)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ ans = \"\";\n        boolean isNumber = true;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            if (!Character.isDigit(s.charAt(i))) {\n               \
    \ isNumber = false;\n                if (Character.isUpperCase(s.charAt(i))) {\n\
    \                    ans += Character.toLowerCase(s.charAt(i));\n            \
    \    } else {\n                    ans += Character.toUpperCase(s.charAt(i));\n\
    \                }\n            } else {\n                ans += s.charAt(i);\n\
    \            }\n        }\n        if (isNumber) {\n            ans = reverse(ans);\n\
    \        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpw1n0u6l5.java:34: error: cannot find symbol\n            ans =\
    \ reverse(ans);\n                  ^\n  symbol:   method reverse(String)\n  location:\
    \ class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [a-zA-Z]+\")) {\n            return new StringBuilder(s).reverse().toString();\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString().chars()\n\
    \            .map(i -> {\n                if (Character.isLetter((char) i)) {\n\
    \                    if (Character.isUpperCase((char) i)) {\n                \
    \        return Character.toLowerCase((char) i);\n                    } else {\n\
    \                        return Character.toUpperCase((char) i);\n           \
    \         }\n                } else {\n                    return i;\n       \
    \         }\n            }).mapToObj(i -> String.valueOf((char) i)).collect(Collectors.joining());\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm3d13q1e.java:37)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ > 0) {\n            StringBuilder sb = new StringBuilder();\n            for\
    \ (int i = 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n\
    \                if (Character.isLetter(c)) {\n                    if (Character.isUpperCase(c))\
    \ {\n                        sb.append(Character.toLowerCase(c));\n          \
    \          } else {\n                        sb.append(Character.toUpperCase(c));\n\
    \                    }\n                } else {\n                    sb.append(c);\n\
    \                }\n            }\n            return sb.toString();\n       \
    \ } else {\n            return s;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7ies7ojw.java:40)\n"
  stdout: ''
  timestamp: 1660011022
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ result = new StringBuilder();\n        if (s.chars().allMatch(Character::isLetter))\
    \ {\n            for (int i = 0; i < s.length(); i++) {\n                result.append(s.charAt(s.length()\
    \ - 1 - i));\n            }\n        } else {\n            for (int i = 0; i <\
    \ s.length(); i++) {\n                if (Character.isLetter(s.charAt(i))) {\n\
    \                    if (Character.isUpperCase(s.charAt(i))) {\n             \
    \           result.append(Character.toLowerCase(s.charAt(i)));\n             \
    \       } else {\n                        result.append(Character.toUpperCase(s.charAt(i)));\n\
    \                    }\n                } else {\n                    result.append(s.charAt(i));\n\
    \                }\n            }\n        }\n        return result.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7yjdakxe.java:40)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String[]\
    \ arr = s.split(\"\");\n        String newString = \"\";\n        for (int i =\
    \ 0; i < arr.length; i++) {\n            if (arr[i].equals(arr[i].toUpperCase()))\
    \ {\n                newString += arr[i].toLowerCase();\n            } else if\
    \ (arr[i].equals(arr[i].toLowerCase())) {\n                newString += arr[i].toUpperCase();\n\
    \            } else {\n                newString += arr[i];\n            }\n \
    \       }\n        return newString;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpglwe8wzm.java:34)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here\n        // return null;\n        if (s.isEmpty()) return s;\n\
    \        boolean isDigit = true;\n        for (int i = 0; i < s.length(); i++)\
    \ {\n            if (!Character.isDigit(s.charAt(i))) {\n                isDigit\
    \ = false;\n                break;\n            }\n        }\n        if (isDigit)\
    \ {\n            StringBuilder sb = new StringBuilder();\n            for (int\
    \ i = s.length() - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n\
    \            }\n            return sb.toString();\n        } else {\n        \
    \    StringBuilder sb = new StringBuilder();\n            for (int i = 0; i <\
    \ s.length(); i++) {\n                if (Character.isDigit(s.charAt(i))) {\n\
    \                    sb.append(s.charAt(i));\n                } else {\n     \
    \               if (Character.isUpperCase(s.charAt(i))) {\n                  \
    \      sb.append(Character.toLowerCase(s.charAt(i)));\n                    } else\
    \ {\n                        sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                    }\n                }\n            }\n            return sb.toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqqap6gm5.java:57)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ \"\";\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3xadpsz.java:22)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ doesContainLetters = s.matches(\".*[a-zA-Z].*\");\n        if (doesContainLetters)\
    \ {\n            return s.chars()\n                    .mapToObj(c -> (char) c)\n\
    \                    .map(c -> {\n                        if (Character.isLetter(c))\
    \ {\n                            return Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c);\n                        } else {\n            \
    \                return c;\n                        }\n                    })\n\
    \                    .map(Object::toString)\n                    .collect(Collectors.joining());\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n\
    \        int c = 0;\n        for (int i = 0; i < s.length(); i++) {\n        \
    \    char ch = s.charAt(i);\n            if (Character.isLetter(ch)) {\n     \
    \           sb.append(s.charAt(i));\n                c++;\n            }\n   \
    \     }\n        if (c == 0) {\n            sb2.append(s);\n            sb2.reverse();\n\
    \            return sb2.toString();\n        }\n        sb.reverse();\n      \
    \  for (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n\
    \            if (Character.isLetter(ch)) {\n                if (Character.isUpperCase(ch))\
    \ {\n                    sb2.append(Character.toLowerCase(sb.charAt(0)));\n  \
    \                  sb.deleteCharAt(0);\n                } else {\n           \
    \         sb2.append(Character.toUpperCase(sb.charAt(0)));\n                 \
    \   sb.deleteCharAt(0);\n                }\n            } else {\n           \
    \     sb2.append(s.charAt(i));\n            }\n        }\n        return sb2.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7dn1jg8p.java:52)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        //@BEGIN\n\
    \        if (s.equals(\"\")) {\n            return \"\";\n        }\n        else\
    \ {\n            char[] chars = s.toCharArray();\n            for (int i = 0;\
    \ i < chars.length; i++) {\n                if (Character.isLetter(chars[i]))\
    \ {\n                    chars[i] = Character.isUpperCase(chars[i]) ? Character.toLowerCase(chars[i])\
    \ : Character.toUpperCase(chars[i]);\n                }\n            }\n     \
    \       String result = String.valueOf(chars);\n            StringBuffer sb =\
    \ new StringBuffer(result);\n            return sb.reverse().toString();\n   \
    \     }\n        //@END\n}\n    public static void main(String[] args) {\n   \
    \ assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"\
    4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9j3dzcnx.java:37)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuffer\
    \ buffer = new StringBuffer();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                buffer.append(Character.toUpperCase(s.charAt(i)));\n\
    \            } else {\n                buffer.append(s.charAt(i));\n         \
    \   }\n        }\n        if (buffer.length() == 0) {\n            return new\
    \ StringBuffer(s).reverse().toString();\n        }\n        return buffer.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmo6dqjav.java:33)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // TODO\n\
    \        return null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmpyp2f2p13.java:23)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ == 0) {\n            return s;\n        }\n        else {\n            if (Stream.of(s.split(\"\
    \")).filter(c -> c.matches(\"[a-zA-Z]\")).count() == 0) {\n                return\
    \ s;\n            }\n            else {\n                char[] cs = s.toCharArray();\n\
    \                for (int i = 0; i < cs.length; i++) {\n                    if\
    \ (Character.isLetter(cs[i])) {\n                        if (Character.isUpperCase(cs[i]))\
    \ {\n                            cs[i] = Character.toLowerCase(cs[i]);\n     \
    \                   }\n                        else {\n                      \
    \      cs[i] = Character.toUpperCase(cs[i]);\n                        }\n    \
    \                }\n                }\n                return new String(cs);\n\
    \            }\n        }\n}\n    public static void main(String[] args) {\n \
    \   assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu2qrfqo7.java:44)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int l\
    \ = s.length();\n        char[] arr = s.toCharArray();\n        for (int i = 0;\
    \ i < l; i++) {\n            if (Character.isLetter(arr[i])) {\n             \
    \   if (Character.isUpperCase(arr[i])) {\n                    arr[i] = Character.toLowerCase(arr[i]);\n\
    \                } else {\n                    arr[i] = Character.toUpperCase(arr[i]);\n\
    \                }\n            }\n        }\n        if (s.matches(\"\\\\W*\"\
    )) {\n            return new StringBuilder(new String(arr)).reverse().toString();\n\
    \        }\n        return new String(arr);\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzjvmslm4.java:37)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ builder = new StringBuilder();\n        if (s.chars().allMatch(i -> i < 65 ||\
    \ i > 122 || (i > 90 && i < 97))) {\n            builder.append(s);\n        \
    \    builder.reverse();\n            return builder.toString();\n        }\n \
    \       char[] array = s.toCharArray();\n        for (int i = 0; i < array.length;\
    \ i++) {\n            if (array[i] >= 65 && array[i] <= 90) {\n              \
    \  builder.append((char) (array[i] + 32));\n            } else if (array[i] >=\
    \ 97 && array[i] <= 122) {\n                builder.append((char) (array[i] -\
    \ 32));\n            } else {\n                builder.append(array[i]);\n   \
    \         }\n        }\n        return builder.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011023
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            char ch = s.charAt(i);\n            if (Character.isLetter(ch)) {\n\
    \                sb.append(Character.isUpperCase(ch) ? \n                    \
    \    Character.toLowerCase(ch) : Character.toUpperCase(ch));\n            } else\
    \ {\n                sb.append(ch);\n            }\n        }\n        return\
    \ sb.length() == 0 ? new StringBuilder(s).reverse().toString() : sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpawtboe21.java:33)\n"
  stdout: ''
  timestamp: 1660011023
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ res = \"\";\n        int noLetters = 1;\n        for (int i = 0; i < s.length();\
    \ i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                noLetters = 0;\n                res += Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c);\n            } else {\n\
    \                res += c;\n            }\n        }\n        return noLetters\
    \ == 1 ? new StringBuilder(s).reverse().toString() : res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean letters = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n         \
    \   if (Character.isLetter(c)) {\n                letters = true;\n          \
    \      c = Character.isUpperCase(c) ? Character.toLowerCase(c) : Character.toUpperCase(c);\n\
    \            }\n            sb.append(c);\n        }\n        if (!letters) {\n\
    \            sb.reverse();\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if(s.matches(\"\
    [a-zA-Z]+\")) {\n            char[] ch = s.toCharArray();\n            for(int\
    \ i = 0; i < ch.length; i++) {\n                if(Character.isLowerCase(ch[i]))\
    \ {\n                    ch[i] = Character.toUpperCase(ch[i]);\n             \
    \   } else {\n                    ch[i] = Character.toLowerCase(ch[i]);\n    \
    \            }\n            }\n            return new String(ch);\n        } else\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz6trsj8g.java:37)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n      if(s.matches(\"\
    ^[a-zA-Z]+$\")) {\n        StringBuilder stb = new StringBuilder();\n        char[]\
    \ arr = s.toCharArray();\n        for(char c : arr) {\n          stb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n        }\n       \
    \ return stb.toString();\n      } else {\n        StringBuilder stb = new StringBuilder();\n\
    \        char[] arr = s.toCharArray();\n        for(int i = arr.length - 1; i\
    \ >= 0; i--) {\n          stb.append(arr[i]);\n        }\n        return stb.toString();\n\
    \      }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vg5iyex.java:39)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // your\
    \ code here.\n        return s;\n}\n    public static void main(String[] args)\
    \ {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\"\
    )).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"\
    #a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\"\
    )));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n    assert(solve((\"\
    #$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\")).equals((\"#CCC\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdr55iioy.java:23)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean hasChar = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                sb.append(Character.toLowerCase(s.charAt(i)) == s.charAt(i)\n\
    \                        ? Character.toUpperCase(s.charAt(i)) : Character.toLowerCase(s.charAt(i)));\n\
    \                hasChar = true;\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        return hasChar ? sb.toString() : sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ c = s.toCharArray();\n        int[] checks = new int[c.length];\n        //\
    \ we need to check if the string contains letters\n        for (int i = 0; i <\
    \ c.length; i++) {\n            if (Character.isLetter(c[i])) {\n            \
    \    checks[i] = 1;\n            }\n        }\n        int sum = Arrays.stream(checks).sum();\n\
    \        // if it contains letters, reverse case\n        if (sum > 0) {\n   \
    \         for (int i = 0; i < c.length; i++) {\n                if (Character.isLowerCase(c[i]))\
    \ {\n                    c[i] = Character.toUpperCase(c[i]);\n               \
    \ } else if (Character.isUpperCase(c[i])) {\n                    c[i] = Character.toLowerCase(c[i]);\n\
    \                }\n            }\n        } else {\n            // if it doesn't\
    \ contain letters, reverse the string\n            char[] tmp = new char[c.length];\n\
    \            for (int i = 0; i < c.length; i++) {\n                tmp[i] = c[c.length\
    \ - i - 1];\n            }\n            c = tmp;\n        }\n        return new\
    \ String(c);\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        boolean\
    \ isAllDigits = s.chars().allMatch(Character::isDigit);\n        if (isAllDigits)\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i <\
    \ s.length(); i++) {\n            char c = s.charAt(i);\n            if (Character.isLetter(c))\
    \ {\n                if (Character.isUpperCase(c)) {\n                    sb.append(Character.toLowerCase(c));\n\
    \                } else {\n                    sb.append(Character.toUpperCase(c));\n\
    \                }\n            } else {\n                sb.append(c);\n    \
    \        }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmdcr30se.java:44)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // Write\
    \ your code here.\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpfgcg4cwt.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [A-Za-z]+\")) {\n            StringBuilder sb = new StringBuilder();\n       \
    \     for (char c : s.toCharArray()) {\n                if (Character.isLowerCase(c))\
    \ {\n                    sb.append(Character.toUpperCase(c));\n              \
    \  } else {\n                    sb.append(Character.toLowerCase(c));\n      \
    \          }\n            }\n            return sb.toString();\n        } else\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjkwihhbw.java:37)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().anyMatch(Character::isLetter))\
    \ {\n            return s.chars()\n                    .mapToObj(e -> (char) e)\n\
    \                    .map(Character::toString)\n                    .map(c ->\
    \ (char) (Character.isLowerCase(c.charAt(0)) ? Character.toUpperCase(c.charAt(0))\
    \ : Character.toLowerCase(c.charAt(0))))\n                    .collect(Collectors.joining());\n\
    \        } else {\n            return new StringBuilder(s).reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpvmtea6il.java:22: error: incompatible types: cannot infer type-variable(s)\
    \ R\n                    .map(Character::toString)\n                        ^\n\
    \    (argument mismatch; invalid method reference\n      reference to toString\
    \ is ambiguous\n        both method toString(char) in Character and method toString()\
    \ in Character match)\n  where R,T are type-variables:\n    R extends Object declared\
    \ in method <R>map(Function<? super T,? extends R>)\n    T extends Object declared\
    \ in interface Stream\n1 error\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if (s.chars().allMatch(Character::isDigit))\
    \ {\n            sb.append(s);\n            sb.reverse();\n            return\
    \ sb.toString();\n        }\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        return sb.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpa6u7wrm2.java:44)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ Stream.of(s.split(\"\"))\n            .map(x -> x.matches(\"[a-zA-Z]\") ? new\
    \ StringBuilder(x).reverse().toString() : x)\n            .collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxat2tdv8.java:24)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.length()\
    \ == 0) {\n            return s;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isLetter(c)) {\n                sb.append(Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c));\n            } else\
    \ {\n                sb.append(c);\n            }\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpj8zztxf2.java:35)\n"
  stdout: ''
  timestamp: 1660011018
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ builder = new StringBuilder();\n        String swapCase = s.toUpperCase();\n\
    \        boolean flag = false;\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                flag = true;\n\
    \                builder.append(s.charAt(i) == swapCase.charAt(i) ? Character.toLowerCase(s.charAt(i))\
    \ : Character.toUpperCase(s.charAt(i)));\n            } else {\n             \
    \   builder.append(s.charAt(i));\n            }\n        }\n        return flag\
    \ ? builder.toString() : builder.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if (s.matches(\"^[a-zA-Z]+$\")) {\n     \
    \       for (int i = 0; i < s.length(); i++) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            }\n        } else {\n            for (int i =\
    \ s.length() - 1; i >= 0; i--) {\n                sb.append(s.charAt(i));\n  \
    \          }\n        }\n        return sb.toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmps5az6_d5.java:39)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // write\
    \ your code here\n        StringBuilder result = new StringBuilder();\n      \
    \  String toCheck = s.toLowerCase();\n        boolean isUpperCase = false;\n \
    \       for (int i = 0; i < s.length(); i++) {\n            if (Character.isLowerCase(s.charAt(i)))\
    \ {\n                result.append(s.substring(i, i + 1).toUpperCase());\n   \
    \             isUpperCase = true;\n            } else if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                result.append(s.substring(i, i + 1).toLowerCase());\n   \
    \             isUpperCase = true;\n            } else {\n                result.append(s.substring(i,\
    \ i + 1));\n            }\n        }\n        if (isUpperCase) {\n           \
    \ return result.toString();\n        } else {\n            return result.reverse().toString();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        int n\
    \ = s.length();\n        char[] t = new char[n];\n        for (int i = 0; i <\
    \ n; i++) {\n            char c = s.charAt(i);\n            char d = c;\n    \
    \        if (c >= 'a' && c <= 'z') {\n                d = (char)(c - 'a' + 'A');\n\
    \            } else if (c >= 'A' && c <= 'Z') {\n                d = (char)(c\
    \ - 'A' + 'a');\n            }\n            t[n - i - 1] = d;\n        }\n   \
    \     String ans = String.valueOf(t);\n        return ans;\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnpj46cc.java:35)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        String\
    \ digits = \"0123456789\";\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < s.length(); i++) {\n            char c = s.charAt(i);\n\
    \            if (Character.isUpperCase(c)) {\n                c = Character.toLowerCase(c);\n\
    \            } else if (Character.isLowerCase(c)) {\n                c = Character.toUpperCase(c);\n\
    \            }\n            sb.append(c);\n        }\n        if (s.chars().filter(Character::isLetter).count()\
    \ == 0) {\n            sb.reverse();\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ ans = new StringBuilder();\n        boolean hasChar = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            char x = s.charAt(i);\n         \
    \   if (x >= 'a' && x <= 'z') {\n                x = (char) (x - 'a' + 'A');\n\
    \                hasChar = true;\n            } else if (x >= 'A' && x <= 'Z')\
    \ {\n                x = (char) (x - 'A' + 'a');\n                hasChar = true;\n\
    \            }\n            ans.append(x);\n        }\n        if (!hasChar) {\n\
    \            return ans.reverse().toString();\n        }\n        return ans.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n\
    \            if (Character.isLetter(s.charAt(i))) {\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        return sb.toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n\
    \    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplfhjz_mf.java:35)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ Arrays.stream(s.split(\"\"))\n            .map(e -> \n                e.matches(\"\
    [a-zA-Z]\") \n                ? e.equals(e.toLowerCase()) ? e.toUpperCase() :\
    \ e.toLowerCase()\n                : e\n            )\n            .collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp_82dbga.java:29)\n"
  stdout: ''
  timestamp: 1660011024
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ builder = new StringBuilder();\n        boolean found = false;\n        for\
    \ (int i = 0; i < s.length(); i++) {\n            char ch = s.charAt(i);\n   \
    \         if (Character.isLetter(ch)) {\n                found = true;\n     \
    \           builder.append(Character.isUpperCase(ch) ? Character.toLowerCase(ch)\
    \ : Character.toUpperCase(ch));\n            } else {\n                builder.append(ch);\n\
    \            }\n        }\n        if (!found) {\n            return builder.reverse().toString();\n\
    \        }\n        return builder.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011024
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ res = new StringBuilder();\n        if (s.equals(s.toUpperCase())) {\n     \
    \       s = s.toLowerCase();\n        } else if (s.equals(s.toLowerCase())) {\n\
    \            s = s.toUpperCase();\n        } else {\n            for (int i =\
    \ 0; i < s.length(); i++) {\n                char c = s.charAt(i);\n         \
    \       res.append(Character.isLetter(c) ? Character.isUpperCase(c) ? Character.toLowerCase(c)\
    \ : Character.toUpperCase(c) : c);\n            }\n            s = res.toString();\n\
    \        }\n        return new StringBuilder(s).reverse().toString();\n}\n   \
    \ public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpymx28o14.java:34)\n"
  stdout: ''
  timestamp: 1660011025
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        if(s.length() == 0) {\n            return\
    \ s;\n        }\n        for(int i = 0; i < s.length(); i++) {\n            if(Character.isLetter(s.charAt(i)))\
    \ {\n                if(Character.isUpperCase(s.charAt(i))) {\n              \
    \      sb.append(Character.toLowerCase(s.charAt(i)));\n                } else\
    \ {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n    \
    \            }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if(sb.toString().matches(\"[a-zA-Z]+\")) {\n\
    \            return sb.reverse().toString();\n        }\n        return sb.toString();\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpaav4rlnd.java:40)\n"
  stdout: ''
  timestamp: 1660011025
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.chars().allMatch(Character::isDigit))\
    \ {\n            return new StringBuilder(s).reverse().toString();\n        }\
    \ else {\n            return s.chars()\n                .map(c -> {\n        \
    \            if (Character.isLetter(c)) {\n                        return Character.isUpperCase(c)\
    \ ? Character.toLowerCase(c) : Character.toUpperCase(c);\n                   \
    \ } else {\n                        return c;\n                    }\n       \
    \         })\n                .collect(StringBuilder::new, StringBuilder::appendCodePoint,\
    \ StringBuilder::append)\n                .toString();\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\"\
    )));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuonu26zy.java:40)\n"
  stdout: ''
  timestamp: 1660011025
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        boolean letters = false;\n        for (int\
    \ i = 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                letters = true;\n                if (Character.isUpperCase(s.charAt(i)))\
    \ {\n                    sb.append(Character.toLowerCase(s.charAt(i)));\n    \
    \            } else {\n                    sb.append(Character.toUpperCase(s.charAt(i)));\n\
    \                }\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (!letters) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011025
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmp6_60xdt4.java:22)\n"
  stdout: ''
  timestamp: 1660011014
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        return\
    \ \"\";\n}\n    public static void main(String[] args) {\n    assert(solve((\"\
    AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n\
    \    assert(solve((\"ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"\
    #A@c\")));\n    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp3xadpsz.java:22)\n"
  stdout: ''
  timestamp: 1660011021
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        if (s.matches(\"\
    [a-zA-Z]*\"))\n            return s.toUpperCase();\n        else if (s.matches(\"\
    [^a-zA-Z]*\"))\n            return new StringBuilder(s).reverse().toString();\n\
    \        else \n            return s.chars().mapToObj(c -> {\n               \
    \ if (Character.isLetter(c))\n                    return Character.isUpperCase(c)\
    \ ? \n                        Character.toLowerCase(c) : \n                  \
    \      Character.toUpperCase(c);\n                else\n                    return\
    \ (char) c;\n            }).map(c -> c.toString()).collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"\
    aSdF\")));\n    assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"\
    ab\")).equals((\"AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n\
    \    assert(solve((\"#AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"\
    #6@2\")).equals((\"2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\"\
    )));\n    assert(solve((\"#ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxpex9myw.java:34)\n"
  stdout: ''
  timestamp: 1660011025
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        // your\
    \ code goes here.\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.solve(String)\"\
    \ is null\n\tat Problem.main(tmpsbqkd_xl.java:23)\n"
  stdout: ''
  timestamp: 1660011017
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        char[]\
    \ arr = s.toCharArray();\n        int n = arr.length;\n        boolean hasAlpha\
    \ = false;\n        for (int i = 0; i < n; i++) {\n            if (Character.isAlphabetic(arr[i]))\
    \ {\n                hasAlpha = true;\n                if (Character.isUpperCase(arr[i]))\
    \ {\n                    arr[i] = Character.toLowerCase(arr[i]);\n           \
    \     } else {\n                    arr[i] = Character.toUpperCase(arr[i]);\n\
    \                }\n            }\n        }\n        if (!hasAlpha) {\n     \
    \       for (int i = 0; i < n/2; i++) {\n                char c = arr[i];\n  \
    \              arr[i] = arr[n-i-1];\n                arr[n-i-1] = c;\n       \
    \     }\n        }\n        return new String(arr);\n}\n    public static void\
    \ main(String[] args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n \
    \   assert(solve((\"1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"\
    AB\")));\n    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"\
    #AsdfW^45\")).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"\
    2@6#\")));\n    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"\
    #ccc\")).equals((\"#CCC\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011025
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // You are given a string s.\n    // if s[i] is a letter,\
    \ reverse its case from lower to upper or vise versa, \n    // otherwise keep\
    \ it as it is.\n    // If the string contains no letters, reverse the string.\n\
    \    // The function should return the resulted string.\n    // Examples\n   \
    \ // solve(\"1234\") = \"4321\"\n    // solve(\"ab\") = \"AB\"\n    // solve(\"\
    #a@C\") = \"#A@c\"\n    public static String solve(String s) {\n        StringBuilder\
    \ sb = new StringBuilder();\n        int hasLetter = 0;\n        for (int i =\
    \ 0; i < s.length(); i++) {\n            if (Character.isLetter(s.charAt(i)))\
    \ {\n                sb.append(Character.toLowerCase(s.charAt(i)));\n        \
    \        hasLetter = 1;\n            } else {\n                sb.append(s.charAt(i));\n\
    \            }\n        }\n        if (hasLetter == 0) {\n            return sb.reverse().toString();\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(solve((\"AsDf\")).equals((\"aSdF\")));\n    assert(solve((\"\
    1234\")).equals((\"4321\")));\n    assert(solve((\"ab\")).equals((\"AB\")));\n\
    \    assert(solve((\"#a@C\")).equals((\"#A@c\")));\n    assert(solve((\"#AsdfW^45\"\
    )).equals((\"#aSDFw^45\")));\n    assert(solve((\"#6@2\")).equals((\"2@6#\")));\n\
    \    assert(solve((\"#$a^D\")).equals((\"#$A^d\")));\n    assert(solve((\"#ccc\"\
    )).equals((\"#CCC\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz157_ss2.java:35)\n"
  stdout: ''
  timestamp: 1660011025

language: java
name: HumanEval_17_parse_music
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        char prev = ' ';\n        int count = 0;\n        for (int i = 0; i <\
    \ music_string.length(); i++) {\n            char curr = music_string.charAt(i);\n\
    \            if (curr == ' ') {\n                continue;\n            }\n  \
    \          if (curr == 'o') {\n                if (prev == '|') {\n          \
    \          beats.add(count);\n                    count = 0;\n               \
    \ }\n                count += 4;\n            } else if (curr == '|') {\n    \
    \            beats.add(count);\n                count = 0;\n            } else\
    \ if (curr == '.') {\n                count += 1;\n            }\n           \
    \ prev = curr;\n        }\n        beats.add(count);\n        return beats;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph943tdt5.java:45)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // TODO: Implement this function\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplidle57f.java:25)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> values = new ArrayList<Integer>();\n\
    \        char[] arr = music_string.toCharArray();\n        for (int i = 0; i <\
    \ arr.length; i++) {\n            if (arr[i] == 'o') {\n                if (i\
    \ + 1 < arr.length && arr[i + 1] == '|') {\n                    values.add(2);\n\
    \                    i += 1;\n                } else {\n                    values.add(4);\n\
    \                }\n            } else if (arr[i] == '.') {\n                if\
    \ (i + 1 < arr.length && arr[i + 1] == '|') {\n                    values.add(1);\n\
    \                    i += 1;\n                }\n            }\n        }\n  \
    \      return values;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] tokens = music_string.split(\" \");\n    \
    \    ArrayList<Integer> result = new ArrayList<Integer>();\n        for (String\
    \ token : tokens) {\n            if (token.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (token.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (token.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        ArrayList<Character> notes = new ArrayList<Character>();\n        for\
    \ (int i = 0; i < music_string.length(); i++) {\n            notes.add(music_string.charAt(i));\n\
    \        }\n        int counter = 0;\n        for (int i = 0; i < notes.size();\
    \ i++) {\n            if (notes.get(i) == 'o') {\n                if (i == notes.size()\
    \ - 1) {\n                    beats.add(counter);\n                    beats.add(4);\n\
    \                } else if (notes.get(i + 1) == ' ') {\n                    beats.add(counter);\n\
    \                    counter = 0;\n                } else if (notes.get(i + 1)\
    \ == '|') {\n                    beats.add(counter);\n                    counter\
    \ = 0;\n                    if (notes.get(i + 2) == ' ') {\n                 \
    \       beats.add(4);\n                    }\n                }\n            }\
    \ else if (notes.get(i) == 'o' && notes.get(i + 1) == '|') {\n               \
    \ if (i == notes.size() - 2) {\n                    beats.add(counter);\n    \
    \                beats.add(2);\n                } else if (notes.get(i + 2) ==\
    \ ' ') {\n                    beats.add(counter);\n                    counter\
    \ = 0;\n                    beats.add(2);\n                }\n            } else\
    \ if (notes.get(i) == '.' && notes.get(i + 1) == '|') {\n                if (i\
    \ == notes.size() - 2) {\n                    beats.add(counter);\n          \
    \          beats.add(1);\n                } else if (notes.get(i + 2) == ' ')\
    \ {\n                    beats.add(counter);\n                    counter = 0;\n\
    \                    beats.add(1);\n                }\n            } else if (notes.get(i)\
    \ == ' ') {\n                counter++;\n            }\n        }\n        return\
    \ beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprxppxs9f.java:66)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            char lastCharacter = note.charAt(note.length() - 1);\n\
    \            if (lastCharacter == 'o') {\n                beats.add(4);\n    \
    \        } else if (lastCharacter == '|') {\n                beats.add(2);\n \
    \           } else {\n                beats.add(1);\n            }\n        }\n\
    \        return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: -1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmptevu3oci.java:22)\n\
    \tat Problem.main(tmptevu3oci.java:34)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> answer = new ArrayList<Integer>();\n\
    \        int total = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            if (music_string.charAt(i) == 'o') {\n                if (i +\
    \ 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n        \
    \            answer.add(2);\n                    total += 2;\n               \
    \     i++;\n                } else {\n                    answer.add(4);\n   \
    \                 total += 4;\n                }\n            } else if (music_string.charAt(i)\
    \ == '.') {\n                answer.add(1);\n                total += 1;\n   \
    \         }\n        }\n        return answer;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsed_music = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == ' ') continue;\n            if (music_string.charAt(i) == 'o') {\n      \
    \          if (i + 1 < music_string.length() && music_string.charAt(i + 1) ==\
    \ '|') {\n                    parsed_music.add(2);\n                    i++;\n\
    \                } else {\n                    parsed_music.add(4);\n        \
    \        }\n            } else if (music_string.charAt(i) == '.') {\n        \
    \        parsed_music.add(1);\n            }\n        }\n        return parsed_music;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        music_string = music_string.replaceAll(\" +\", \" \");\n        String[]\
    \ music_array = music_string.split(\" \");\n        for (String i : music_array)\
    \ {\n            switch (i) {\n                case \"o\":\n                 \
    \   ret.add(4);\n                    break;\n                case \"o|\":\n  \
    \                  ret.add(2);\n                    break;\n                case\
    \ \".|\":\n                    ret.add(1);\n                    break;\n     \
    \       }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Scanner scanner = new Scanner(music_string);\n        while (scanner.hasNext())\
    \ {\n            String note = scanner.next();\n            char noteSymbol =\
    \ note.charAt(0);\n            if (noteSymbol == 'o') {\n                result.add(4);\n\
    \            } else if (noteSymbol == '.') {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmzwqwud.java:36)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                output.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                output.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                output.add(1);\n\
    \            }\n        }\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parseResult = new ArrayList<Integer>();\n\
    \        StringTokenizer st = new StringTokenizer(music_string);\n        while\
    \ (st.hasMoreTokens()) {\n            String token = st.nextToken();\n       \
    \     if (token.charAt(0) == 'o') {\n                if (token.length() == 1)\
    \ {\n                    parseResult.add(4);\n                } else {\n     \
    \               parseResult.add(2);\n                }\n            } else {\n\
    \                parseResult.add(1);\n            }\n        }\n        return\
    \ parseResult;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] arr = music_string.split(\" \");\n       \
    \ ArrayList<Integer> arr_int = new ArrayList<Integer>();\n        for (String\
    \ item : arr) {\n            if (item.equals(\"o\")) {\n                arr_int.add(4);\n\
    \            } else if (item.equals(\"o|\")) {\n                arr_int.add(2);\n\
    \            } else if (item.equals(\".|\")) {\n                arr_int.add(1);\n\
    \            }\n        }\n        return arr_int;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (String note : music_string.split(\" \")) {\n            char c =\
    \ note.charAt(0);\n            switch (c) {\n                case 'o': ret.add(4);\
    \ break;\n                case '.': ret.add(1); break;\n                default:\
    \ ret.add(2); break;\n            }\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpj98pjjpu.java:21)\n\
    \tat Problem.main(tmpj98pjjpu.java:31)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music = new ArrayList<Integer>();\n\
    \        int i = 0;\n        for (char note : music_string.toCharArray()) {\n\
    \            if (note == 'o') {\n                music.add(4);\n            }\
    \ else if (note == '|') {\n                music.set(i - 1, music.get(i - 1) /\
    \ 2);\n            } else if (note == '.') {\n                music.add(1);\n\
    \            }\n            i++;\n        }\n        return music;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 3 out of bounds for length 2\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.parseMusic(tmpmmkhy7n4.java:25)\n\tat Problem.main(tmpmmkhy7n4.java:36)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\"\\\\s+\");\n        // Implement\
    \ this function\n        for (String s : notes) {\n            if (s.charAt(0)\
    \ == 'o') {\n                if (s.charAt(1) == '|') {\n                    arr.add(2);\n\
    \                } else {\n                    arr.add(4);\n                }\n\
    \            } else {\n                arr.add(1);\n            }\n        }\n\
    \        return arr;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 0\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmp3sp2j7up.java:23)\n\
    \tat Problem.main(tmp3sp2j7up.java:36)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        int i = 0;\n        ArrayList<Integer> al = new ArrayList<Integer>();\n\
    \        for(i = 0; i < music_string.length(); i++){\n            if(music_string.charAt(i)\
    \ == 'o'){\n                if(i == music_string.length() - 1){\n            \
    \        al.add(4);\n                }\n                else if(music_string.charAt(i\
    \ + 1) == '|'){\n                    al.add(2);\n                    i++;\n  \
    \              }\n                else{\n                    al.add(4);\n    \
    \            }\n            }\n            else if(music_string.charAt(i) == '.'){\n\
    \                if(music_string.charAt(i + 1) == '|'){\n                    al.add(1);\n\
    \                    i++;\n                }\n            }\n        }\n     \
    \   return al;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    result.add(2);\n                    i++;\n\
    \                } else {\n                    result.add(4);\n              \
    \  }\n            } else if (music_string.charAt(i) == '.') {\n              \
    \  result.add(1);\n                i++;\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                output.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                output.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                output.add(1);\n\
    \            }\n        }\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music = new ArrayList<Integer>();\n\
    \        music.add(4);\n        music.add(2);\n        music.add(1);\n       \
    \ music.add(2);\n        music.add(2);\n        music.add(1);\n        music.add(1);\n\
    \        music.add(1);\n        music.add(1);\n        music.add(4);\n       \
    \ music.add(4);\n        return music;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvsj82t10.java:34)\n"
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        String[] notes_array = music_string.split(\" \");\n        for (String\
    \ s : notes_array) {\n            if (s.equals(\"o\")) {\n                notes.add(4);\n\
    \            } else if (s.equals(\"o|\")) {\n                notes.add(2);\n \
    \           } else if (s.equals(\".|\")) {\n                notes.add(1);\n  \
    \          }\n        }\n        return notes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] music = music_string.split(\" \");\n        for (String note\
    \ : music) {\n            if (note.length() == 1) {\n                result.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> a=new ArrayList<Integer>();\n  \
    \      String x[]=music_string.split(\" \");\n        for(int i=0;i<x.length;i++)\n\
    \        {\n            if(x[i].equals(\"o\"))\n            {\n              \
    \  a.add(4);\n            }\n            else if(x[i].equals(\"o|\"))\n      \
    \      {\n                a.add(2);\n            }\n            else if(x[i].equals(\"\
    .|\"))\n            {\n                a.add(1);\n            }\n        }\n \
    \       return a;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        String[] note_list = music_string.split(\" \");\n        for (String\
    \ note : note_list) {\n            if (note.equals(\"o\")) {\n               \
    \ beats.add(4);\n            } else if (note.equals(\"o|\")) {\n             \
    \   beats.add(2);\n            } else if (note.equals(\".|\")) {\n           \
    \     beats.add(1);\n            }\n        }\n        return beats;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        // YOUR CODE HERE!\n        return beats;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpenxvs4x0.java:25)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        // Write your code here!\n        return notes;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjdd1erep.java:25)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Character> stringToArray = new ArrayList<Character>();\n  \
    \      for (char c : music_string.toCharArray()) {\n            stringToArray.add(c);\n\
    \        }\n        int count = 0;\n        int index = 0;\n        while (index\
    \ < stringToArray.size()) {\n            if (stringToArray.get(index) == 'o')\
    \ {\n                result.add(4);\n                index++;\n            } else\
    \ if (stringToArray.get(index) == '.') {\n                result.add(1);\n   \
    \             index++;\n            } else if (stringToArray.get(index) == '|')\
    \ {\n                result.add(2);\n                index++;\n            } else\
    \ {\n                index++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppqqderch.java:45)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   String[] notes = music_string.split(\" \");\n        for (String note : notes)\
    \ {\n            if (note.equals(\"o\")) {\n                res.add(4);\n    \
    \        } else if (note.equals(\"o|\")) {\n                res.add(2);\n    \
    \        } else if (note.equals(\".|\")) {\n                res.add(1);\n    \
    \        }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i < music_string.length() - 1 && music_string.charAt(i\
    \ + 1) == '|') {\n                    l.add(2);\n                    i++;\n  \
    \              } else {\n                    l.add(4);\n                }\n  \
    \          } else if (music_string.charAt(i) == '.') {\n                l.add(1);\n\
    \                i++;\n            }\n        }\n        return l;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] split = music_string.split(\"\\\\s+\");\n\
    \        ArrayList<Integer> beats = new ArrayList<>();\n        for (String s\
    \ : split) {\n            if (s.length() == 1) {\n                beats.add(4);\n\
    \            } else {\n                beats.add(2);\n            }\n        }\n\
    \        return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp1917lc4.java:31)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music_list = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        //  System.out.println(notes.length);\n\
    \        for (int i = 0; i < notes.length; i++) {\n            String notes1 =\
    \ notes[i];\n            switch (notes1) {\n                case \"o\":\n    \
    \                music_list.add(4);\n                    break;\n            \
    \    case \"o|\":\n                    music_list.add(2);\n                  \
    \  break;\n                case \".|\":\n                    music_list.add(1);\n\
    \                    break;\n            }\n        }\n        return music_list;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        char[] music_array = music_string.toCharArray();\n        int size =\
    \ music_array.length;\n        int beats = 1;\n        for (int i = 0; i < size;\
    \ i++) {\n            if (music_array[i] == 'o') {\n                if (i + 1\
    \ < size && music_array[i + 1] == '|') {\n                    result.add(2);\n\
    \                    i += 1;\n                } else {\n                    result.add(4);\n\
    \                }\n            } else if (music_array[i] == '.') {\n        \
    \        result.add(1);\n            }\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> beatCount = new ArrayList<Integer>();\n        for (String\
    \ note : notes) {\n            if (note.equals(\"o\")) {\n                beatCount.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                beatCount.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                beatCount.add(1);\n\
    \            }\n        }\n        return beatCount;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        int count = 0;\n        int length = music_string.length();\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < length; i++) {\n            if (music_string.charAt(i) == 'o') {\n\
    \                count++;\n                if (i == length - 1 || music_string.charAt(i\
    \ + 1) == ' ') {\n                    result.add(count);\n                   \
    \ count = 0;\n                }\n            } else if (music_string.charAt(i)\
    \ == '|') {\n                result.add(count);\n                count = 0;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2tl0slj0.java:38)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n\tArrayList<Integer> ret = new ArrayList<Integer>();\n\t//\
    \ TODO: your code here.\n\tStringTokenizer st = new StringTokenizer(music_string);\n\
    \twhile (st.hasMoreTokens()) {\n\t    String cur = st.nextToken();\n\t    ret.add(cur.length());\n\
    \t}\n\treturn ret;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4saonhe5.java:30)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beat_lengths = new ArrayList<Integer>();\n\
    \        char[] currentNote = new char[2];\n        int noteIndex = 0;\n     \
    \   for (int i = 0; i < music_string.length(); i++) {\n            char c = music_string.charAt(i);\n\
    \            if (c == ' ') {\n                if (currentNote[0] == 'o') {\n \
    \                   beat_lengths.add(4);\n                } else if (currentNote[0]\
    \ == '.') {\n                    beat_lengths.add(1);\n                }\n   \
    \             noteIndex = 0;\n            } else {\n                currentNote[noteIndex]\
    \ = c;\n                noteIndex++;\n            }\n        }\n        return\
    \ beat_lengths;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7njlq_ad.java:40)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Remove whitespace.\n        music_string = music_string.replaceAll(\"\
    \\\\s+\", \"\");\n        // Split the string by '|'.\n        String[] music_notes\
    \ = music_string.split(\"\\\\|\");\n        // For each note, iterate over characters\
    \ to check how many beats does it last.\n        ArrayList<Integer> lengths =\
    \ new ArrayList<Integer>();\n        for (String note : music_notes) {\n     \
    \       for (char c : note.toCharArray()) {\n                if (c == 'o') {\n\
    \                    lengths.add(4);\n                } else if (c == '.') {\n\
    \                    lengths.add(1);\n                }\n            }\n     \
    \   }\n        return lengths;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbst1e7a1.java:40)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // IMPLEMENTATION GOES HERE\n        ArrayList<Integer>\
    \ music = new ArrayList<Integer>();\n        char[] musicArr = music_string.toCharArray();\n\
    \        int i = 0;\n        while (i < musicArr.length) {\n            if (musicArr[i]\
    \ == 'o') {\n                if (i < musicArr.length - 1 && musicArr[i + 1] ==\
    \ '|') {\n                    music.add(2);\n                    i += 2;\n   \
    \             } else {\n                    music.add(4);\n                  \
    \  i++;\n                }\n            } else {\n                music.add(1);\n\
    \                i += 2;\n            }\n        }\n        return music;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxre56e46.java:41)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   int i = 0;\n        while (i < music_string.length()) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                res.add(4);\n                i++;\n            }\
    \ else {\n                res.add(1);\n                i += 2;\n            }\n\
    \        }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo1n61v8t.java:34)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code goes here\n        // You can add methods\
    \ and other classes.\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpuwpwdh0g.java:24)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> to_return = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.length() == 1) {\n                to_return.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                to_return.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                to_return.add(1);\n\
    \            }\n        }\n        return to_return;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // Add your code here\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3wsqrkf9.java:25)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new NotImplementedException();\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp9q0c8nci.java:19: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new Error(\"Not implemented yet\");\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.Error: Not implemented yet\n\tat\
    \ Problem.parseMusic(tmpl7x2_plc.java:19)\n\tat Problem.main(tmpl7x2_plc.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ans = new ArrayList<>();\n     \
    \   int i = 0;\n        while (i < music_string.length()) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    ans.add(2);\n                    i += 2;\n\
    \                } else {\n                    ans.add(4);\n                 \
    \   i += 1;\n                }\n            } else {\n                ans.add(1);\n\
    \                i += 2;\n            }\n        }\n        return ans;\n}\n \
    \   public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq__qydk4.java:39)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        int i = 0;\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        while (i < music_string.length()) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    res.add(2);\n                    i += 2;\n\
    \                } else {\n                    res.add(4);\n                 \
    \   i += 1;\n                }\n            } else {\n                res.add(1);\n\
    \                i += 2;\n            }\n        }\n        return res;\n}\n \
    \   public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3fco3f0w.java:39)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        //TODO: Implement this method\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp7xpc91wg.java:23)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] music_notes = music_string.split(\" \");\n\
    \        ArrayList<Integer> music_beats = new ArrayList<Integer>();\n        //\
    \ IMPLEMENT ME\n        return music_beats;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5szyllmk.java:26)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> output = new ArrayList<Integer>();\n        for (String\
    \ note : notes) {\n            if (note.equals(\"o\")) {\n                output.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                output.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                output.add(1);\n\
    \            }\n        }\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \        String[] music_array = music_string.split(\" \");\n        for (String\
    \ note : music_array) {\n            if (note.equals(\"o\")) {\n             \
    \   results.add(4);\n            } else if (note.equals(\"o|\")) {\n         \
    \       results.add(2);\n            } else if (note.equals(\".|\")) {\n     \
    \           results.add(1);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        String music = music_string.replaceAll(\"o|\", \"o\");\n        music\
    \ = music.replaceAll(\"o o|\", \"o o o o\");\n        music = music.replaceAll(\"\
    o o o o\", \"o o o o o o o o\");\n        music = music.replaceAll(\"o o o o o\
    \ o o o\", \"o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfl24atwa.java:23: error: unclosed string literal\n        music\
    \ = music.replaceAll(\"o o o o o o o o\", \"o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o\
    \ o o o o o o o o o o o o o o o o o o o\n                                    \
    \                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                ret.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                ret.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                ret.add(1);\n\
    \            }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        int curr_val = 1;\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                list.add(curr_val);\n\
    \            } else if (music_string.charAt(i) == '|') {\n                curr_val\
    \ *= 2;\n            }\n        }\n        return list;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf9rylivb.java:32)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // // Your code here\n        // String[] music_array\
    \ = music_string.split(\"\\\\s+\");\n        // ArrayList<Integer> music_beat\
    \ = new ArrayList<Integer>();\n        // for (String notes : music_array) {\n\
    \        //     if (notes.equals(\"o\")) {\n        //         music_beat.add(4);\n\
    \        //     } else if (notes.equals(\"o|\")) {\n        //         music_beat.add(2);\n\
    \        //     } else if (notes.equals(\".|\")) {\n        //         music_beat.add(1);\n\
    \        //     }\n        // }\n        // return music_beat;\n        return\
    \ music_string.chars().map(c -> c == 'o' ? 4 : c == 'o' ? 2 : 1).boxed().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd5hqh7zt.java:36)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] music_array = music_string.split(\" \");\n        for (String\
    \ s : music_array) {\n            if (s.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (s.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (s.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        String[] split_notes = music_string.split(\" \");\n        for (String\
    \ note : split_notes) {\n            if (note.equals(\"o\")) {\n             \
    \   notes.add(4);\n            } else if (note.equals(\"o|\")) {\n           \
    \     notes.add(2);\n            } else if (note.equals(\".|\")) {\n         \
    \       notes.add(1);\n            }\n        }\n        return notes;\n}\n  \
    \  public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code here\n        ArrayList<Integer> list\
    \ = new ArrayList<Integer>();\n        String letter = \"\";\n        String num\
    \ = \"\";\n        ArrayList<String> notes = new ArrayList<String>();\n      \
    \  ArrayList<Integer> note_lengths = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < music_string.length(); i++) {\n            if (Character.isLetter(music_string.charAt(i)))\
    \ {\n                letter += music_string.charAt(i);\n            } else if\
    \ (Character.isDigit(music_string.charAt(i))) {\n                num += music_string.charAt(i);\n\
    \            } else if (letter != \"\" && num != \"\") {\n                notes.add(letter);\n\
    \                note_lengths.add(Integer.parseInt(num));\n                letter\
    \ = \"\";\n                num = \"\";\n            }\n        }\n        if (letter\
    \ != \"\" && num != \"\") {\n            notes.add(letter);\n            note_lengths.add(Integer.parseInt(num));\n\
    \        }\n        for (int i = 0; i < notes.size(); i++) {\n            String\
    \ note = notes.get(i);\n            if (note.equals(\"o\")) {\n              \
    \  list.add(4);\n            } else if (note.equals(\"o|\")) {\n             \
    \   list.add(2);\n            } else if (note.equals(\".|\")) {\n            \
    \    list.add(1);\n            } else {\n                note = note.replaceAll(\"\
    \\\\.\", \"\");\n                note = note.replaceAll(\"\\\\|\", \"\");\n  \
    \              int num_dots = note.length();\n                int base_note =\
    \ note_lengths.get(i);\n                int total_note = 0;\n                for\
    \ (int j = 0; j < num_dots; j++) {\n                    total_note += base_note;\n\
    \                    base_note /= 2;\n                }\n                total_note\
    \ += base_note;\n                list.add(total_note);\n            }\n      \
    \  }\n        return list;\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6g4isd6f.java:67)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   ArrayList<Character> list = new ArrayList<>();\n        for (char c : music_string.toCharArray())\
    \ {\n            list.add(c);\n        }\n        //System.out.println(list);\n\
    \        int i = 0;\n        while (i < list.size()) {\n            if (list.get(i)\
    \ == 'o') {\n                if (i + 1 < list.size() && list.get(i + 1) == '|')\
    \ {\n                    i += 2;\n                    res.add(2);\n          \
    \      } else {\n                    i++;\n                    res.add(4);\n \
    \               }\n            } else {\n                i += 2;\n           \
    \     res.add(1);\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9dxkjhy5.java:44)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code goes here\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpl7vsyl5h.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        for (String note : music_string.split(\" \")) {\n            switch (note)\
    \ {\n                case \"o\":\n                    beats.add(4);\n        \
    \            break;\n                case \"o|\":\n                    beats.add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  beats.add(1);\n                    break;\n            }\n        }\n     \
    \   return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> duration = new ArrayList<Integer>();\n\
    \        StringBuilder sb = new StringBuilder();\n        String[] music = music_string.split(\"\
    \ \");\n        for (String note : music) {\n            if (note.equals(\"o\"\
    )) {\n                duration.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                duration.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                duration.add(1);\n            }\n        }\n       \
    \ return duration;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        var list = new ArrayList<Integer>();\n        var chars\
    \ = music_string.split(\" \");\n        for (var c : chars) {\n            switch\
    \ (c) {\n                case \"o\":\n                    list.add(4);\n     \
    \               break;\n                case \"o|\":\n                    list.add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  list.add(1);\n                    break;\n            }\n        }\n      \
    \  return list;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int count = 0;\n        while (count < music_string.length()) {\n   \
    \         if (music_string.charAt(count) == 'o') {\n                result.add(4);\n\
    \                count += 2;\n            } else if (music_string.charAt(count)\
    \ == '.') {\n                result.add(1);\n                count += 2;\n   \
    \         } else {\n                result.add(2);\n                count += 3;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpik4vzk73.java:38)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // >>>> Your code here <<<<\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpyeaj_x4d.java:23)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for (String\
    \ note : notes) {\n            if (note.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO your implementation here\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpg1_tvbio.java:23)\n"
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        String [] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                beats.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                beats.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                beats.add(1);\n\
    \            }\n        }\n        return beats;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsed = new ArrayList<Integer>();\n\
    \        String[] x = music_string.split(\" \");\n        for (int i = 0; i <\
    \ x.length; i++) {\n            if (x[i].equals(\"o\")) {\n                parsed.add(4);\n\
    \            } else if (x[i].equals(\"o|\")) {\n                parsed.add(2);\n\
    \            } else if (x[i].equals(\".|\")) {\n                parsed.add(1);\n\
    \            }\n        }\n        return parsed;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011599
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        final int WHOLE_NOTE = 4;\n        final int HALF_NOTE\
    \ = 2;\n        final int QUARTER_NOTE = 1;\n        final char WHOLE_NOTE_CHAR\
    \ = 'o';\n        final char HALF_NOTE_CHAR = '|';\n        final char QUARTER_NOTE_CHAR\
    \ = '.';\n        ArrayList<Integer> result = new ArrayList<Integer>();\n    \
    \    char[] music = music_string.toCharArray();\n        int index = 0;\n    \
    \    for (int i = 0; i < music.length; i++) {\n            if (music[i] == WHOLE_NOTE_CHAR)\
    \ {\n                result.add(WHOLE_NOTE);\n            } else if (music[i]\
    \ == HALF_NOTE_CHAR) {\n                result.add(HALF_NOTE);\n            }\
    \ else if (music[i] == QUARTER_NOTE_CHAR) {\n                result.add(QUARTER_NOTE);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmywb_9h.java:42)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        String[] splitString = music_string.split(\" \");\n        for (String\
    \ note : splitString) {\n            switch (note) {\n                case \"\
    o\":\n                    notes.add(4);\n                    break;\n        \
    \        case \"o|\":\n                    notes.add(2);\n                   \
    \ break;\n                case \".|\":\n                    notes.add(1);\n  \
    \                  break;\n            }\n        }\n        return notes;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011599
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        char[] music = music_string.toCharArray();\n      \
    \  ArrayList<Integer> res = new ArrayList<>();\n        int n = music.length;\n\
    \        int i = 0;\n        while (i < n) {\n            switch (music[i]) {\n\
    \                case 'o':\n                    if (i + 1 < n && music[i + 1]\
    \ == '|') {\n                        res.add(2);\n                        i +=\
    \ 2;\n                    } else {\n                        res.add(4);\n    \
    \                    i++;\n                    }\n                    break;\n\
    \                case '.':\n                    res.add(1);\n                \
    \    i += 2;\n                    break;\n                default:\n         \
    \           i++;\n            }\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011599
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // first we create a stack for storing notes\n        Stack<Character>\
    \ tempStack = new Stack<Character>();\n        // then we iterate through the\
    \ music_string and push every new note to the stack\n        for (int i = 0; i\
    \ < music_string.length(); i++) {\n            if (music_string.charAt(i) == 'o')\
    \ {\n                tempStack.push(music_string.charAt(i));\n            }\n\
    \        }\n        // then we check every stack element. if it's a whole note\
    \ - we add '4' to the result, if it's\n        // a half note - we add '2' to\
    \ the result and so on\n        for (int i = 0; i < tempStack.size(); i++) {\n\
    \            if (tempStack.get(i) == 'o') {\n                result.add(4);\n\
    \            } else if (tempStack.get(i) == '|') {\n                result.add(2);\n\
    \            } else if (tempStack.get(i) == '.') {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyjthz9dy.java:44)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new NotImplementedError();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpfrnuy7kj.java:19: error: cannot find symbol\n        throw new\
    \ NotImplementedError();\n                  ^\n  symbol:   class NotImplementedError\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011599
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> ret = new ArrayList<Integer>();\n        for (String n\
    \ : notes) {\n            switch (n) {\n                case \"o\":\n        \
    \            ret.add(4);\n                    break;\n                case \"\
    o|\":\n                    ret.add(2);\n                    break;\n         \
    \       case \".|\":\n                    ret.add(1);\n                    break;\n\
    \            }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n        // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n        return beats;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplqimh9c2.java:26)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] strings = music_string.split(\" \");\n        for (String s\
    \ : strings) {\n            if (s.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (s.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (s.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsed_music = new ArrayList<Integer>();\n\
    \        for (String s : music_string.split(\" \")) {\n            if (s.equals(\"\
    o\")) {\n                parsed_music.add(4);\n            } else if (s.equals(\"\
    o|\")) {\n                parsed_music.add(2);\n            } else if (s.equals(\"\
    .|\")) {\n                parsed_music.add(1);\n            }\n        }\n   \
    \     return parsed_music;\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        var music = new ArrayList<Integer>();\n        for\
    \ (var note : music_string.split(\" \")) {\n            if (note.equals(\"o\"\
    )) {\n                music.add(4);\n            } else if (note.equals(\"o|\"\
    )) {\n                music.add(2);\n            } else if (note.equals(\".|\"\
    )) {\n                music.add(1);\n            }\n        }\n        return\
    \ music;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // YOUR CODE GOES HERE.\n\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkio3hqed.java:26)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   String[] arr = music_string.split(\" \");\n        for (String note : arr)\
    \ {\n            if (note.equals(\"o\")) {\n                res.add(4);\n    \
    \        } else if (note.equals(\"o|\")) {\n                res.add(2);\n    \
    \        } else if (note.equals(\".|\")) {\n                res.add(1);\n    \
    \        }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   String[] t = music_string.split(\" \");\n        for (String s : t) {\n  \
    \          if (s.equals(\"o\")) {\n                res.add(4);\n            }\
    \ else if (s.equals(\"o|\")) {\n                res.add(2);\n            } else\
    \ if (s.equals(\".|\")) {\n                res.add(1);\n            }\n      \
    \  }\n        return res;\n}\n    public static void main(String[] args) {\n \
    \   assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   for (int i = 0; i < music_string.length(); i++) {\n            switch (music_string.charAt(i))\
    \ {\n                case 'o':\n                    res.add(4);\n            \
    \        break;\n                case '|':\n                    i++;\n       \
    \             res.add(2);\n                    break;\n                case '.':\n\
    \                    i++;\n                    res.add(1);\n                 \
    \   break;\n            }\n        }\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf1g2yntk.java:41)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   for (int i = 0; i < music_string.length();) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                res.add(4);\n                i += 2;\n          \
    \  } else {\n                res.add(1);\n                i += 2;\n          \
    \  }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp91i3pih1.java:34)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> music = new ArrayList<Integer>();\n        int beat = 0;\n\
    \        for (String note : notes) {\n            beat++;\n            if (note.equals(\"\
    o\")) {\n                music.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                music.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                music.add(1);\n            }\n        }\n        return\
    \ music;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] parts = music_string.split(\" \");\n        for (String s :\
    \ parts) {\n            if (s.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (s.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (s.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Integer count = 0;\n        char[] chr = music_string.toCharArray();\n\
    \        for (int i = 0; i < chr.length; i++) {\n            if (chr[i] == 'o')\
    \ {\n                if (i == chr.length - 1) {\n                    result.add(4);\n\
    \                } else if (chr[i + 1] == ' ') {\n                    result.add(4);\n\
    \                } else if (chr[i + 1] == '|') {\n                    result.add(2);\n\
    \                }\n            } else if (chr[i] == '.') {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\"\\\\s+\");\n\
    \        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for (String\
    \ note : notes) {\n            ret.add(note.length());\n        }\n        return\
    \ ret;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbfrgpycb.java:27)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        StringTokenizer st = new StringTokenizer(music_string, \" \");\n    \
    \    while (st.hasMoreTokens()) {\n            String element = st.nextToken();\n\
    \            if (element.equals(\"o\")) {\n                result.add(4);\n  \
    \          } else if (element.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (element.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        for (String note : music_string.split(\" \")) {\n            switch (note)\
    \ {\n                case \"o\":\n                    beats.add(4);\n        \
    \            break;\n                case \"o|\":\n                    beats.add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  beats.add(1);\n                    break;\n            }\n        }\n     \
    \   return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011598
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // YOUR CODE GOES HERE\n        music_string = music_string.replaceAll(\"\
    \\\\s+\",\"\");\n        int len = music_string.length();\n        ArrayList<Integer>\
    \ res = new ArrayList<Integer>();\n        for(int i = 0; i < len; i++) {\n  \
    \          char c = music_string.charAt(i);\n            if(c == 'o') {\n    \
    \            if(i + 1 < len && music_string.charAt(i + 1) == '|') {\n        \
    \            res.add(2);\n                    i++;\n                } else {\n\
    \                    res.add(4);\n                }\n            } else if(c ==\
    \ '.') {\n                res.add(1);\n                i++;\n            }\n \
    \       }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // your code goes here\n        ArrayList<Integer>\
    \ beats = new ArrayList<Integer>();\n        int len = music_string.length();\n\
    \        int i = 0;\n        while(i < len) {\n            if(music_string.charAt(i)\
    \ == 'o') {\n                i++;\n                if(i < len && music_string.charAt(i)\
    \ == '|') {\n                    beats.add(2);\n                    i++;\n   \
    \             } else beats.add(4);\n            } else {\n                i++;\n\
    \                beats.add(1);\n                i++;\n            }\n        }\n\
    \        return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx5xndx_u.java:40)\n"
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    result.add(2);\n                    i++;\n\
    \                } else {\n                    result.add(4);\n              \
    \  }\n            } else if (music_string.charAt(i) == '.') {\n              \
    \  result.add(1);\n                i++;\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        // YOUR CODE GOES HERE\n        String[] notes = music_string.split(\"\
    \ \");\n        for (String note : notes) {\n            switch (note) {\n   \
    \             case \"o\":\n                    beats.add(4);\n               \
    \     break;\n                case \"o|\":\n                    beats.add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  beats.add(1);\n                    break;\n            }\n        }\n     \
    \   return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        var music = new ArrayList<Integer>();\n        for\
    \ (var note : music_string.split(\" \")) {\n            if (note.equals(\"o\"\
    )) {\n                music.add(4);\n            } else if (note.equals(\"o|\"\
    )) {\n                music.add(2);\n            } else if (note.equals(\".|\"\
    )) {\n                music.add(1);\n            }\n        }\n        return\
    \ music;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011600
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        char[] base = music_string.toCharArray();\n       \
    \ ArrayList<Integer> arrayList = new ArrayList<>();\n        for (int i = 0; i\
    \ < base.length; i++) {\n            if (base[i] == 'o') {\n                arrayList.add(4);\n\
    \            } else if (base[i] == '|') {\n                arrayList.add(2);\n\
    \            } else if (base[i] == '.') {\n                arrayList.add(1);\n\
    \            }\n        }\n        return arrayList;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiqx8izw_.java:35)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> list_beats = new ArrayList<Integer>();\n\
    \        String[] note_arr = music_string.split(\" \");\n        // 'o' - whole\
    \ note, lasts four beats\n        // 'o|' - half note, lasts two beats\n     \
    \   // '.|' - quater note, lasts one beat\n        for (String note : note_arr)\
    \ {\n            if (note.equals(\"o\")) {\n                list_beats.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                list_beats.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                list_beats.add(1);\n\
    \            }\n        }\n        return list_beats;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n      char[] arr = music_string.toCharArray();\n      int length\
    \ = arr.length;\n      ArrayList<Integer> res = new ArrayList<Integer>();\n  \
    \    int count = 0;\n      for(int i = 0; i < length; i++) {\n        if(arr[i]\
    \ == 'o') {\n          if(i + 1 < length && arr[i + 1] == '|') {\n           \
    \ res.add(2);\n            i++;\n          } else {\n            res.add(4);\n\
    \          }\n        } else if(arr[i] == '.') {\n          res.add(1);\n    \
    \      i++;\n        }\n      }\n      return res;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // write your code here\n        String s[] = music_string.split(\"\
    \ \");\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n        for(int\
    \ i=0;i<s.length;i++){\n            if(s[i].equals(\"o\")){\n                arr.add(4);\n\
    \            }\n            else if(s[i].equals(\"o|\")){\n                arr.add(2);\n\
    \            }\n            else if(s[i].equals(\".|\")){\n                arr.add(1);\n\
    \            }\n        }\n        return arr;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            char c\
    \ = music_string.charAt(i);\n            if (c == ' ') {\n                continue;\n\
    \            }\n            if (c == 'o') {\n                list.add(4);\n  \
    \          }\n            if (c == 'o' && music_string.charAt(i + 1) == '|') {\n\
    \                list.add(2);\n                i++;\n            }\n         \
    \   if (c == '.' && music_string.charAt(i + 1) == '|') {\n                list.add(1);\n\
    \                i++;\n            }\n        }\n        return list;\n}\n   \
    \ public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 7\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpdbwqtwah.java:28)\n\
    \tat Problem.main(tmpdbwqtwah.java:41)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            switch\
    \ (music_string.charAt(i)) {\n                case 'o':\n                    result.add(4);\n\
    \                    break;\n                case '|':\n                    result.add(2);\n\
    \                    break;\n                case '.':\n                    result.add(1);\n\
    \                    break;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5uedofv8.java:38)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music_notes = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            switch (note) {\n                case \"o\":\n     \
    \               music_notes.add(4);\n                    break;\n            \
    \    case \"o|\":\n                    music_notes.add(2);\n                 \
    \   break;\n                case \".|\":\n                    music_notes.add(1);\n\
    \                    break;\n            }\n        }\n        return music_notes;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == ' ') {\n                continue;\n            }\n            if (music_string.charAt(i)\
    \ == 'o') {\n                ret.add(4);\n            } else if (music_string.charAt(i)\
    \ == '.') {\n                ret.add(1);\n            }\n            if (i + 1\
    \ < music_string.length() && music_string.charAt(i + 1) == '|') {\n          \
    \      ret.set(ret.size() - 1, ret.get(ret.size() - 1) / 2);\n               \
    \ i++;\n            }\n        }\n        return ret;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmvu_ciqq.java:39)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] parts = music_string.split(\" \");\n     \
    \   ArrayList<Integer> result = new ArrayList<Integer>();\n        for (String\
    \ part : parts) {\n            if (part.length() == 1) {\n                result.add(4);\n\
    \            } else {\n                result.add(2);\n            }\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpedjs357h.java:31)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        music_string = music_string.replaceAll(\"\\\\s+\",\
    \ \"\");\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        int\
    \ i = 0;\n        while (i < music_string.length()) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i < music_string.length() - 1 && music_string.charAt(i\
    \ + 1) == '|') {\n                    l.add(2);\n                    i += 2;\n\
    \                } else {\n                    l.add(4);\n                   \
    \ i += 1;\n                }\n            } else {\n                l.add(1);\n\
    \                i += 2;\n            }\n        }\n        return l;\n}\n   \
    \ public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> time_list = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            char c\
    \ = music_string.charAt(i);\n            if (c == 'o') {\n                time_list.add(4);\n\
    \            } else if (c == '|') {\n                time_list.add(2);\n     \
    \       } else if (c == '.') {\n                time_list.add(1);\n          \
    \  }\n        }\n        return time_list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk1rffjfy.java:35)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: IMPLEMENT\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpd2zn3pgd.java:23)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.parseMusic(tmp8hkh0car.java:19)\n\tat Problem.main(tmp8hkh0car.java:22)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return new ArrayList<Integer>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6nr924kg.java:23)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music = new ArrayList<Integer>();\n\
    \        char tmp = ' ';\n        int counter = 0;\n        for (int i = 0; i\
    \ < music_string.length(); i++) {\n            if (tmp == ' ')\n             \
    \   tmp = music_string.charAt(i);\n            if (tmp == music_string.charAt(i))\n\
    \                counter++;\n            else {\n                music.add(counter);\n\
    \                counter = 1;\n                tmp = music_string.charAt(i);\n\
    \            }\n        }\n        music.add(counter);\n        return music;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkymer1gw.java:37)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   for (int i = 0; i < music_string.length(); i++) {\n            switch (music_string.charAt(i))\
    \ {\n                case 'o': res.add(4); break;\n                case '.': res.add(1);\
    \ break;\n                case '|': continue;\n                default: throw\
    \ new IllegalArgumentException(\"Unknown character!\");\n            }\n     \
    \   }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IllegalArgumentException: Unknown\
    \ character!\n\tat Problem.parseMusic(tmppcyj1o2m.java:25)\n\tat Problem.main(tmppcyj1o2m.java:32)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\"\\\\s+\");\n\
    \        ArrayList<Integer> res = new ArrayList<>();\n        for (String s :\
    \ notes) {\n            if (s.equals(\"o\")) {\n                res.add(4);\n\
    \            } else if (s.equals(\"o|\")) {\n                res.add(2);\n   \
    \         } else if (s.equals(\".|\")) {\n                res.add(1);\n      \
    \      }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music_string_new = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (music_string.charAt(i + 1) == ' ') {\n      \
    \              music_string_new.add(4);\n                } else {\n          \
    \          music_string_new.add(4);\n                    i++;\n              \
    \  }\n            } else if (music_string.charAt(i) == 'o') {\n              \
    \  if (music_string.charAt(i + 1) == '|') {\n                    music_string_new.add(2);\n\
    \                    i++;\n                }\n            } else if (music_string.charAt(i)\
    \ == '.') {\n                if (music_string.charAt(i + 1) == '|') {\n      \
    \              music_string_new.add(1);\n                    i++;\n          \
    \      }\n            }\n        }\n        return music_string_new;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 7\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpzw1gbqvz.java:22)\n\
    \tat Problem.main(tmpzw1gbqvz.java:44)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> arr = new ArrayList<Integer>();\n\
    \        String[] a = music_string.split(\"\\\\s+\");\n        for(int i = 0;\
    \ i < a.length; i++) {\n            if(a[i].equals(\"o\")) {\n               \
    \ arr.add(4);\n            }\n            else if(a[i].equals(\"o|\")) {\n   \
    \             arr.add(2);\n            }\n            else if(a[i].equals(\".|\"\
    )) {\n                arr.add(1);\n            }\n        }\n        return arr;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Write your code here\n        // Return an array\
    \ list of integers with each element corresponding to how many beats does each\
    \ note last\n        return null;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpbcskedxr.java:24)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new RuntimeException(\"Implement me!\");\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Implement me!\n\
    \tat Problem.parseMusic(tmpeu0y8xt2.java:19)\n\tat Problem.main(tmpeu0y8xt2.java:22)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: -1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        int sum = 0;\n        int length = music_string.length();\n        char[]\
    \ chars = music_string.toCharArray();\n        int i = 0;\n        while (i <\
    \ length) {\n            int count = 0;\n            while (i < length && chars[i]\
    \ == 'o') {\n                count++;\n                i++;\n            }\n \
    \           beats.add(count * 4);\n            if (i < length && chars[i] == '.')\
    \ {\n                count = 0;\n                while (i < length && chars[i]\
    \ == '.') {\n                    count++;\n                    i++;\n        \
    \        }\n                beats.add(count);\n            }\n            if (i\
    \ < length && chars[i] == '|') {\n                i++;\n            }\n      \
    \  }\n        return beats;\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660011607
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            char c = music_string.charAt(i);\n            if (c == '|') {\n\
    \                if (count == 0) {\n                    notes.add(4);\n      \
    \          } else if (count == 1) {\n                    notes.add(2);\n     \
    \           } else if (count == 2) {\n                    notes.add(1);\n    \
    \            }\n                count = 0;\n            } else if (c == 'o') {\n\
    \                count++;\n            }\n        }\n        return notes;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm7k0ym6z.java:40)\n"
  stdout: ''
  timestamp: 1660011602
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            char ch\
    \ = music_string.charAt(i);\n            if (ch == 'o') {\n                if\
    \ (i == music_string.length() - 1 || music_string.charAt(i + 1) != '|') {\n  \
    \                  music.add(4);\n                } else {\n                 \
    \   music.add(2);\n                    i++;\n                }\n            }\
    \ else if (ch == '.') {\n                music.add(1);\n                i++;\n\
    \            }\n        }\n        return music;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011602
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \        // >>>>>>>>>>>>>>>>>>>>>>>> Implement me\n        // <<<<<<<<<<<<<<<<<<<<<<<<<\
    \ Implement me\n        return results;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkk2fool4.java:26)\n"
  stdout: ''
  timestamp: 1660011602
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] music = music_string.split(\"\\\\s+\");\n        for (String\
    \ note : music) {\n            if (note.equals(\"o\")) {\n                result.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011602
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Implement your solution here\n        ArrayList<Integer>\
    \ list = new ArrayList<Integer>();\n        String [] temp = music_string.split(\"\
    \ \");\n        for(int i = 0; i < temp.length; i++){\n            if(temp[i].equals(\"\
    o\")){\n                list.add(4);\n            }else if(temp[i].equals(\"o|\"\
    )){\n                list.add(2);\n            }else if(temp[i].equals(\".|\"\
    )){\n                list.add(1);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Write your solution here.\n        // Remember:\
    \ Do not print to the console or use any print or break statements\n        //\
    \ in your code.\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        for (String note : music_string.split(\" \")) {\n            if (note.equals(\"\
    o\")) {\n                beats.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                beats.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                beats.add(1);\n            }\n        }\n        return\
    \ beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011602
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                results.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                results.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                results.add(1);\n\
    \            }\n        }\n        return results;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> notes = new ArrayList<Integer>();\n\
    \        ArrayList<String> music_notes = new ArrayList<String>(Arrays.asList(music_string.split(\"\
    \ \")));\n        for (String note : music_notes) {\n            if (note.equals(\"\
    o\")) {\n                notes.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                notes.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                notes.add(1);\n            }\n        }\n        return\
    \ notes;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code here\n        ArrayList<Integer> beats\
    \ = new ArrayList<Integer>();\n        int sum = 0;\n        boolean isOne = false;\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (isOne) {\n                    beats.add(1);\n\
    \                    isOne = false;\n                }\n                sum +=\
    \ 4;\n            } else if (music_string.charAt(i) == '|') {\n              \
    \  beats.add(sum);\n                sum = 0;\n            } else if (music_string.charAt(i)\
    \ == '.') {\n                isOne = true;\n            }\n        }\n       \
    \ return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzl3387c4.java:41)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int i = 0;\n        while (i < music_string.length()) {\n           \
    \ char current_char = music_string.charAt(i);\n            if (current_char ==\
    \ 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    result.add(2);\n                    i +=\
    \ 2;\n                } else {\n                    result.add(4);\n         \
    \           i += 1;\n                }\n            } else if (current_char ==\
    \ '.') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    result.add(1);\n                    i +=\
    \ 2;\n                } else {\n                    throw new RuntimeException(\"\
    Invalid input!\");\n                }\n            } else {\n                throw\
    \ new RuntimeException(\"Invalid input!\");\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Invalid input!\n\
    \tat Problem.parseMusic(tmpse5kz6hg.java:39)\n\tat Problem.main(tmpse5kz6hg.java:46)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your solution should be placed here\n        return\
    \ null;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpbwp2nyq6.java:23)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ans = new ArrayList<>();\n     \
    \   String [] music_notes = music_string.split(\" \");\n        for(String s :\
    \ music_notes) {\n            if(s.equals(\"o\")) {\n                ans.add(4);\n\
    \            } else if(s.equals(\"o|\")) {\n                ans.add(2);\n    \
    \        } else if(s.equals(\".|\")) {\n                ans.add(1);\n        \
    \    }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // Your solution goes here\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5be6xdo.java:25)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        //remove spaces\n        music_string = music_string.replaceAll(\"\\\\\
    s+\",\"\");\n        for (int i = 0; i < music_string.length(); i++) {\n     \
    \       switch (music_string.charAt(i)) {\n                case 'o':\n       \
    \             result.add(4);\n                    break;\n                case\
    \ 'o':\n                    result.add(2);\n                    break;\n     \
    \           case '.':\n                    result.add(1);\n                  \
    \  break;\n                default:\n                    //skip all '|'\n    \
    \                break;\n            }\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmprqiasi3g.java:27: error: duplicate case label\n               \
    \ case 'o':\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music_lengths = new ArrayList<Integer>();\n\
    \        // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n        // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n        if (music_string.length() > 0) {\n     \
    \       String[] music_symbols = music_string.split(\" \");\n            for (String\
    \ str : music_symbols) {\n                if (str.equals(\"o\")) {\n         \
    \           music_lengths.add(4);\n                } else if (str.equals(\"o|\"\
    )) {\n                    music_lengths.add(2);\n                } else if (str.equals(\"\
    .|\")) {\n                    music_lengths.add(1);\n                }\n     \
    \       }\n        }\n        return music_lengths;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // Do your magic here\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg_3mgg47.java:25)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> rv = new ArrayList<Integer>();\n\
    \        // TODO - implement this function.\n        return rv;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppjp9oie0.java:25)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        char[] music = music_string.toCharArray();\n      \
    \  int i = 0;\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        while (i < music.length) {\n            if (music[i] == 'o') {\n    \
    \            if (i + 1 < music.length && music[i + 1] == '|') {\n            \
    \        beats.add(2);\n                    i += 2;\n                } else {\n\
    \                    beats.add(4);\n                    i += 1;\n            \
    \    }\n            } else {\n                beats.add(1);\n                i\
    \ += 2;\n            }\n        }\n        return beats;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmy_1qilr.java:40)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        int i = 0;\n        int j = 0;\n        int count = 0;\n        for (int\
    \ c = 0; c < music_string.length(); c++) {\n            if (music_string.charAt(c)\
    \ == ' ') {\n                beats.add(count);\n                count = 0;\n \
    \           } else if (music_string.charAt(c) == 'o') {\n                count\
    \ = 4;\n            } else if (music_string.charAt(c) == '|') {\n            \
    \    count = 2;\n            } else if (music_string.charAt(c) == '.') {\n   \
    \             count = 1;\n            }\n        }\n        beats.add(count);\n\
    \        return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp630bgym3.java:39)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        music_string = music_string.replaceAll(\" \", \"\");\n        for (int\
    \ i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i == music_string.length() - 1 || music_string.charAt(i\
    \ + 1) != '|') {\n                    result.add(4);\n                } else {\n\
    \                    result.add(2);\n                    i++;\n              \
    \  }\n            } else {\n                result.add(1);\n                i++;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        ArrayList<Character> valid_chars = new ArrayList<Character>(Arrays.asList('o',\
    \ '|', '.'));\n        // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n \
    \       // [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n        int beat = 0;\n        for\
    \ (int i = 0; i < music_string.length(); i++) {\n            char c = music_string.charAt(i);\n\
    \            if (valid_chars.contains(c)) {\n                if (c == 'o') {\n\
    \                    result.add(4);\n                    beat += 4;\n        \
    \        } else if (c == '|') {\n                    result.add(2);\n        \
    \            beat += 2;\n                } else if (c == '.') {\n            \
    \        result.add(1);\n                    beat += 1;\n                }\n \
    \           }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvmcnmxac.java:44)\n"
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.length() == 1) {\n                result.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                result.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                result.add(1);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // your code here\n        ArrayList<Integer> beats\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            if (music_string.charAt(i) == 'o') {\n                if\
    \ (i + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n   \
    \                 beats.add(2);\n                    i++;\n                } else\
    \ {\n                    beats.add(4);\n                }\n            } else\
    \ if (music_string.charAt(i) == '.') {\n                if (i + 1 < music_string.length()\
    \ && music_string.charAt(i + 1) == '|') {\n                    beats.add(1);\n\
    \                    i++;\n                }\n            }\n        }\n     \
    \   return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Check if music string is empty, then return an empty\
    \ list\n        if (music_string.isEmpty()) {\n            return new ArrayList<Integer>();\n\
    \        }\n\n        // Split music string on whitespace, then iterate over all\
    \ the notes\n        String[] notes = music_string.split(\"\\\\s+\");\n      \
    \  ArrayList<Integer> beats = new ArrayList<Integer>();\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                beats.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                beats.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                beats.add(1);\n\
    \            }\n        }\n\n        return beats;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011603
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            char c = music_string.charAt(i);\n            if (c == 'o') {\n\
    \                count++;\n            } else if (c == '|') {\n              \
    \  beats.add(count);\n                count = 0;\n            }\n        }\n \
    \       beats.add(count);\n        return beats;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpe86gj6ze.java:34)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        StringTokenizer st = new StringTokenizer(music_string, \" \", false);\n\
    \        while (st.hasMoreTokens()) {\n            String note = st.nextToken();\n\
    \            char last = note.charAt(note.length() - 1);\n            int len\
    \ = 1;\n            if (last == '|') {\n                len = note.length() ==\
    \ 1 ? 1 : 2;\n            } else {\n                len = 4;\n            }\n\
    \            result.add(len);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmjo_rplg.java:37)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Write your code here\n        return null;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp66t4vm6o.java:23)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] music_arr = music_string.split(\" \");\n \
    \       ArrayList<Integer> ret = new ArrayList<Integer>();\n        for (String\
    \ note : music_arr) {\n            if (note.equals(\"o\")) {\n               \
    \ ret.add(4);\n            } else if (note.equals(\"o|\")) {\n               \
    \ ret.add(2);\n            } else if (note.equals(\".|\")) {\n               \
    \ ret.add(1);\n            }\n        }\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new RuntimeException(\"parseMusic() is not implemented\
    \ yet.\");\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: parseMusic() is\
    \ not implemented yet.\n\tat Problem.parseMusic(tmpqvflljkr.java:19)\n\tat Problem.main(tmpqvflljkr.java:22)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i += 2) {\n            char\
    \ note = music_string.charAt(i);\n            int beat = 0;\n            if (note\
    \ == 'o') {\n                beat = 4;\n            } else if (note == '.') {\n\
    \                beat = 1;\n            } else {\n                throw new IllegalArgumentException(\"\
    Invalid character in music_string\");\n            }\n            char articulation\
    \ = music_string.charAt(i + 1);\n            if (articulation == ' ') {\n    \
    \            // Nothing\n            } else if (articulation == '|') {\n     \
    \           beat /= 2;\n            } else {\n                throw new IllegalArgumentException(\"\
    Invalid character in music_string\");\n            }\n            beats.add(beat);\n\
    \        }\n        return beats;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 7\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmpg8nzml3x.java:30)\n\
    \tat Problem.main(tmpg8nzml3x.java:44)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsed_music = new ArrayList<Integer>();\n\
    \        StringTokenizer tokenizer = new StringTokenizer(music_string, \"|\",\
    \ true);\n        while (tokenizer.hasMoreTokens()) {\n            String note\
    \ = tokenizer.nextToken();\n            if (note.equals(\"o\")) {\n          \
    \      parsed_music.add(4);\n            } else if (note.equals(\"o|\")) {\n \
    \               parsed_music.add(2);\n            } else if (note.equals(\".|\"\
    )) {\n                parsed_music.add(1);\n            }\n        }\n       \
    \ return parsed_music;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprgz8q3xr.java:35)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        /*<<<replace_with_your_code_here*/\n        // Finally,\
    \ there is a real use for regular expressions!\n        // I need to point out\
    \ that this is not the best way to solve this problem.\n        // Use this only\
    \ if you are feeling adventurous and your brain is boiling from the heat of the\
    \ problems.\n        // Due to the nature of Regex engine, the whole thing might\
    \ not be very efficient.\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        Pattern p = Pattern.compile(\"(o|o\\\\||\\\\.\\\\|)+\");\n        Matcher\
    \ m = p.matcher(music_string);\n        while (m.find()) {\n            String\
    \ note = m.group();\n            if (note.equals(\"o\")) res.add(4);\n       \
    \     else if (note.equals(\"o|\")) res.add(2);\n            else if (note.equals(\"\
    .|\")) res.add(1);\n        }\n        return res;\n        /*>>>*/\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf680kwsk.java:25: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(\"(o|o\\\\||\\\\.\\\\|)+\");\n        ^\n  symbol:   class\
    \ Pattern\n  location: class Problem\n/tmp/tmpf680kwsk.java:25: error: cannot\
    \ find symbol\n        Pattern p = Pattern.compile(\"(o|o\\\\||\\\\.\\\\|)+\"\
    );\n                    ^\n  symbol:   variable Pattern\n  location: class Problem\n\
    /tmp/tmpf680kwsk.java:26: error: cannot find symbol\n        Matcher m = p.matcher(music_string);\n\
    \        ^\n  symbol:   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i == music_string.length() - 1 || music_string.charAt(i\
    \ + 1) != '|') {\n                    ret.add(4);\n                } else {\n\
    \                    ret.add(2);\n                    i++;\n                }\n\
    \            } else {\n                ret.add(1);\n                i++;\n   \
    \         }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptryss73s.java:37)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsed = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.equals(\"o\")) {\n                parsed.add(4);\n\
    \            } else if (note.equals(\"o|\")) {\n                parsed.add(2);\n\
    \            } else if (note.equals(\".|\")) {\n                parsed.add(1);\n\
    \            }\n        }\n        return parsed;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ans = new ArrayList<>();\n     \
    \   int i = 0;\n        while (i < music_string.length()) {\n            char\
    \ ch = music_string.charAt(i);\n            int note = ch == 'o' ? 4 : ch == '.'\
    \ ? 1 : 2;\n            ans.add(note);\n            i += 2;\n        }\n     \
    \   return ans;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjmls_ogq.java:32)\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> parsedMusic = new ArrayList<Integer>();\n\
    \        ArrayList<String> music_array = new ArrayList<String>(Arrays.asList(music_string.split(\"\
    \ \")));\n        for (String note : music_array) {\n            if (note.equals(\"\
    o\")) {\n                parsedMusic.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                parsedMusic.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                parsedMusic.add(1);\n            }\n        }\n    \
    \    return parsedMusic;\n}\n    public static void main(String[] args) {\n  \
    \  assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011604
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> beats = new ArrayList<Integer>();\n\
    \        String[] music = music_string.split(\" \");\n        for (String i :\
    \ music) {\n            switch (i) {\n                case \"o\":\n          \
    \          beats.add(4);\n                    break;\n                case \"\
    o|\":\n                    beats.add(2);\n                    break;\n       \
    \         case \".|\":\n                    beats.add(1);\n                  \
    \  break;\n            }\n        }\n        return beats;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: Implement this function\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpfhzp6t53.java:23)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        // Fill in your solution here\n        char[] notes = music_string.toCharArray();\n\
    \        for (int i = 0; i < notes.length; i++) {\n            switch (notes[i])\
    \ {\n                case 'o':\n                    ret.add(4);\n            \
    \        break;\n                case '|':\n                    ret.add(1);\n\
    \                    break;\n                case '.':\n                    if\
    \ (notes[i + 1] == '|')\n                        ret.add(2);\n               \
    \     break;\n            }\n        }\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_ohyyda.java:41)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: implement this method.\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpo7an8yo5.java:23)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> counts = new ArrayList<Integer>();\n\
    \        int count = 0;\n        for (int i = 0; i < music_string.length(); i++)\
    \ {\n            if (music_string.charAt(i) == 'o') {\n                count++;\n\
    \            } else if (music_string.charAt(i) == '|') {\n                counts.add(count);\n\
    \                count = 0;\n            }\n        }\n        return counts;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0vj5rj4o.java:33)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                if (i + 1 < music_string.length() && music_string.charAt(i\
    \ + 1) == '|') {\n                    result.add(2);\n                    i++;\n\
    \                } else {\n                    result.add(4);\n              \
    \  }\n            } else if (music_string.charAt(i) == '.') {\n              \
    \  result.add(1);\n                i++;\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011595
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n\tArrayList<Integer> music_string_list = new ArrayList<Integer>();\n\
    \tfor (int i = 0; i < music_string.length(); i++) {\n\t    if (music_string.charAt(i)\
    \ == 'o') {\n\t\tif (i < music_string.length() - 1 && music_string.charAt(i +\
    \ 1) == '|') {\n\t\t    music_string_list.add(2);\n\t\t    i++;\n\t\t} else {\n\
    \t\t    music_string_list.add(4);\n\t\t}\n\t    } else if (music_string.charAt(i)\
    \ == '.') {\n\t\tmusic_string_list.add(1);\n\t\ti++;\n\t    }\n\t}\n\treturn music_string_list;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            if (music_string.charAt(i)\
    \ == 'o') {\n                result.add(4);\n            } else if (music_string.charAt(i)\
    \ == '|') {\n                result.add(2);\n            } else if (music_string.charAt(i)\
    \ == '.') {\n                result.add(1);\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjksr4j80.java:34)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] music_notes = music_string.split(\" \");\n\
    \        ArrayList<Integer> beats = new ArrayList<Integer>();\n        for (String\
    \ note : music_notes) {\n            beats.add(getBeat(note));\n        }\n  \
    \      return beats;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpg9ijqeb1.java:22: error: cannot find symbol\n            beats.add(getBeat(note));\n\
    \                      ^\n  symbol:   method getBeat(String)\n  location: class\
    \ Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011604
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        String[] notes = music_string.split(\" \");\n     \
    \   ArrayList<Integer> durations = new ArrayList<Integer>();\n        for (String\
    \ note : notes) {\n            char last_char = note.charAt(note.length() - 1);\n\
    \            if (last_char == 'o') {\n                durations.add(4);\n    \
    \        } else if (last_char == '|') {\n                durations.add(2);\n \
    \           } else {\n                durations.add(1);\n            }\n     \
    \   }\n        return durations;\n}\n    public static void main(String[] args)\
    \ {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: -1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmp9upez_hw.java:22)\n\
    \tat Problem.main(tmp9upez_hw.java:34)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code goes here.\n        ArrayList<Integer>\
    \ ans = new ArrayList<Integer>();\n        String[] s_notes = music_string.split(\"\
    \\\\s+\");\n        for (String note : s_notes) {\n            int n = note.length();\n\
    \            if (n == 1) {\n                ans.add(4);\n            } else if\
    \ (n == 2) {\n                ans.add(note.charAt(1) == '|' ? 2 : 4);\n      \
    \      } else {\n                ans.add(1);\n            }\n        }\n     \
    \   return ans;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwzkxd3am.java:35)\n"
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n\
    \        int i = 0;\n        while (i < music_string.length()) {\n           \
    \ if (music_string.charAt(i) == 'o') {\n                if (i + 1 < music_string.length()\
    \ && music_string.charAt(i + 1) == '|') {\n                    l.add(2);\n   \
    \                 i += 2;\n                } else {\n                    l.add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          l.add(1);\n                i += 2;\n            }\n        }\n    \
    \    return l;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6r7_ntr_.java:39)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code here.\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpbw_9mag2.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011605
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: write your code here\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpdh18e8mw.java:23)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // return new ArrayList<>();\n        var result =\
    \ new ArrayList<Integer>();\n        for (int i = 0; i < music_string.length();\
    \ i++) {\n            char c = music_string.charAt(i);\n            if (c == 'o')\
    \ {\n                result.add(4);\n            } else if (c == '|') {\n    \
    \            result.add(1);\n            } else if (c == '.') {\n            \
    \    result.add(2);\n            }\n        }\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1qs4e4no.java:36)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        //placeholder\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsrug8xv.java:24)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        throw new UnsupportedOperationException(\"Not implemented\"\
    );\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.parseMusic(tmp8hkh0car.java:19)\n\tat Problem.main(tmp8hkh0car.java:22)\n"
  stdout: ''
  timestamp: 1660011601
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> out = new ArrayList<Integer>();\n\
    \        String[] notes = music_string.split(\" \");\n        for (String note\
    \ : notes) {\n            if (note.length() == 1) {\n                out.add(4);\n\
    \            } else if (note.charAt(1) == '|') {\n                out.add(2);\n\
    \            } else {\n                out.add(1);\n            }\n        }\n\
    \        return out;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 1\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.parseMusic(tmp9hlrrjmh.java:24)\n\
    \tat Problem.main(tmp9hlrrjmh.java:33)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmphyfejz2t.java:22)\n"
  stdout: ''
  timestamp: 1660011597
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> music = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < music_string.length(); i++) {\n            char ch\
    \ = music_string.charAt(i);\n            if (ch == 'o') {\n                if\
    \ (i + 1 < music_string.length() && music_string.charAt(i + 1) == '|') {\n   \
    \                 music.add(2);\n                    i++;\n                } else\
    \ {\n                    music.add(4);\n                }\n            } else\
    \ if (ch == '.') {\n                music.add(1);\n                i++;\n    \
    \        }\n        }\n        return music;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: your code here\n        return null;\n}\n\
    \    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpvl3ay28u.java:23)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // TODO: Implement this function as required.\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1pxbjm0i.java:25)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code starts here\n        return null;\n  \
    \      // Your code ends here\n}\n    public static void main(String[] args) {\n\
    \    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpiygczwjr.java:24)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code goes here\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpl7vsyl5h.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011598
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: implement this function.\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmp4frdcgtx.java:23)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: implement this function\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp6tijs79e.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n\
    \        // YOUR CODE HERE\n        return output;\n}\n    public static void\
    \ main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw0xxgg6x.java:25)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        String[] note_strs = music_string.split(\" \");\n        for (String\
    \ note_str : note_strs) {\n            char note_type = note_str.charAt(0);\n\
    \            switch (note_type) {\n                case 'o':\n               \
    \     result.add(4);\n                    break;\n                case 'o':\n\
    \                    result.add(2);\n                    break;\n            \
    \    case '.':\n                    result.add(1);\n                    break;\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpdi7x92dz.java:27: error: duplicate case label\n               \
    \ case 'o':\n                ^\n1 error\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // Your code here\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpi5g7rfnt.java:23)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO: write your code here!\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpirlqxa6a.java:20: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // your code here\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.parseMusic(String)\"\
    \ is null\n\tat Problem.main(tmpst7tewbe.java:23)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        int i = 0;\n        while (i < music_string.length()) {\n           \
    \ if (music_string.charAt(i) == 'o') {\n                int j = i + 1;\n     \
    \           while (j < music_string.length() && music_string.charAt(j) == ' ')\
    \ {\n                    j += 1;\n                }\n                if (j < music_string.length()\
    \ && music_string.charAt(j) == '|') {\n                    r.add(2);\n       \
    \             i = j + 1;\n                } else {\n                    r.add(4);\n\
    \                    i = j;\n                }\n            } else {\n       \
    \         r.add(1);\n                i += 3;\n            }\n        }\n     \
    \   return r;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1at4pzkt.java:45)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        // TODO\n        // Edit this method.\n        String[]\
    \ notes = music_string.split(\" \");\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        for (String note : notes) {\n            if (note.equals(\"\
    o\")) {\n                result.add(4);\n            } else if (note.equals(\"\
    o|\")) {\n                result.add(2);\n            } else if (note.equals(\"\
    .|\")) {\n                result.add(1);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011606
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> res = new ArrayList<>();\n     \
    \   int cnt = 0;\n        for (int i = 0; i < music_string.length(); i++) {\n\
    \            if (music_string.charAt(i) == 'o') {\n                if (i < music_string.length()\
    \ - 1 && music_string.charAt(i + 1) == '|') {\n                    res.add(2);\n\
    \                    i++;\n                } else {\n                    res.add(4);\n\
    \                }\n            } else if (music_string.charAt(i) == '.') {\n\
    \                res.add(1);\n                i++;\n            }\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(parseMusic((\"\
    \")).equals((new ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"\
    o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4,\
    \ (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        ArrayList<Character> temp = new ArrayList<Character>();\n        for(int\
    \ i = 0; i < music_string.length(); i++) {\n            temp.add(music_string.charAt(i));\n\
    \        }\n        int counter = 0;\n        for(int i = 0; i < temp.size();\
    \ i++) {\n            if(i == 0 || temp.get(i - 1) == ' ') {\n               \
    \ if(temp.get(i) == 'o') {\n                    list.add(4);\n               \
    \ }\n                else if(temp.get(i) == '.') {\n                    list.add(1);\n\
    \                }\n            }\n            else if(temp.get(i) == '|') {\n\
    \                list.add(2);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    assert(parseMusic((\"o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)4, (int)4, (int)4, (int)4)))));\n\
    \    assert(parseMusic((\".| .| .| .|\")).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"o| o| .| .| o o o o\"\
    )).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2, (int)1, (int)1,\
    \ (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"o| .| o| .| o\
    \ o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)1, (int)2,\
    \ (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpveyvs817.java:43)\n"
  stdout: ''
  timestamp: 1660011606
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Input to this function is a string representing musical\
    \ notes in a special ASCII format.\n    // Your task is to parse this string and\
    \ return list of integers corresponding to how many beats does each\n    // not\
    \ last.\n    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n\
    \    // 'o|' - half note, lasts two beats\n    // '.|' - quater note, lasts one\
    \ beat\n    // >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    // [4, 2,\
    \ 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    public static ArrayList<Integer> parseMusic(String\
    \ music_string) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // implement this function\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(parseMusic((\"\")).equals((new ArrayList<Integer>(Arrays.asList()))));\n\
    \    assert(parseMusic((\"o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\".| .| .| .|\")).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)1, (int)1, (int)1)))));\n    assert(parseMusic((\"\
    o| o| .| .| o o o o\")).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)2,\
    \ (int)1, (int)1, (int)4, (int)4, (int)4, (int)4)))));\n    assert(parseMusic((\"\
    o| .| o| .| o o| o o|\")).equals((new ArrayList<Integer>(Arrays.asList((int)2,\
    \ (int)1, (int)2, (int)1, (int)4, (int)2, (int)4, (int)2)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcd86r_86.java:25)\n"
  stdout: ''
  timestamp: 1660011606

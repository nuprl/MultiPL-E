name: HumanEval_151_double_the_difference
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t\tint result = 0;\n\t\tfor (int i = 0; i < lst.size(); i++) {\n\t\t\
    \tif (lst.get(i) % 2 == 1) {\n\t\t\t\tresult += lst.get(i) * lst.get(i);\n\t\t\
    \t}\n\t\t}\n\t\treturn result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfa6oa3_l.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i) * lst.get(i);\n\
    \            }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1lm7lks8.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ghrgpht.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // ADD YOUR CODE HERE\n        int sum = 0;\n        for (Float\
    \ number : lst) {\n            if (number > 0 && number % 2 == 1) {\n        \
    \        sum += Math.pow(number, 2);\n            }\n        }\n        return\
    \ sum;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps4jw96dr.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            float x = lst.get(i);\n            if (x % 2 == 1 && x > 0) {\n \
    \               sum += x * x;\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1trbftxu.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int output = 0;\n        for (Float num : lst) {\n         \
    \   if (num % 2 != 0 && num > 0) {\n                output += num * num;\n   \
    \         }\n        }\n        return output;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa3_va68l.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n                .filter(i -> (i % 2 ==\
    \ 1 && i > 0))\n                .mapToInt(Float::intValue)\n                .map(x\
    \ -> x * x)\n                .sum();\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeljqd9v6.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpowrt9a4c.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        int index = 0;\n        while (index <\
    \ lst.size()) {\n            float num = lst.get(index);\n            // if num\
    \ is integer (odd and positive)\n            if (num == (int) num && num > 0 &&\
    \ num % 2 == 1) {\n                sum += num * num;\n            }\n        \
    \    index += 1;\n        }\n        return sum;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpltqe4q0l.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your Code Here\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf0c8eair.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7vv1w2nt.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t\treturn 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp6xvkp19.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(n -> n % 2 == 1)\n\
    \            .mapToInt(n -> n * n)\n            .sum();\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprgmelan5.java:19: error: incompatible types: bad return type in\
    \ lambda expression\n            .mapToInt(n -> n * n)\n                     \
    \        ^\n    possible lossy conversion from float to int\nNote: Some messages\
    \ have been simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfum965r4.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb4d84hyu.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj08vqkra.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // int sum = 0;\n        // for (int i = 0; i < lst.size();\
    \ i++) {\n        //     if (lst.get(i) % 2 == 1) {\n        //         sum +=\
    \ lst.get(i) * lst.get(i);\n        //     }\n        // }\n        // return\
    \ sum;\n        return (int) lst.stream().filter(i -> i%2==1).map(i -> i*i).reduce(0,\
    \ (i,j) -> i+j);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptfft2t_v.java:24: error: no suitable method found for reduce(int,(i,j)->i\
    \ + j)\n        return (int) lst.stream().filter(i -> i%2==1).map(i -> i*i).reduce(0,\
    \ (i,j) -> i+j);\n                                                           \
    \        ^\n    method Stream.reduce(Float,BinaryOperator<Float>) is not applicable\n\
    \      (argument mismatch; int cannot be converted to Float)\n    method Stream.<U>reduce(U,BiFunction<U,?\
    \ super Float,U>,BinaryOperator<U>) is not applicable\n      (cannot infer type-variable(s)\
    \ U\n        (actual and formal argument lists differ in length))\n  where U,T\
    \ are type-variables:\n    U extends Object declared in method <U>reduce(U,BiFunction<U,?\
    \ super T,U>,BinaryOperator<U>)\n    T extends Object declared in interface Stream\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp69v_9q1j.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppkirtbpm.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        throw new NotImplementedException();\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx1i40uk0.java:17: error: cannot find symbol\n        throw new\
    \ NotImplementedException();\n                  ^\n  symbol:   class NotImplementedException\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            float num = lst.get(i);\n            if (num < 0) {\n           \
    \     continue;\n            }\n            float numRounded = Math.round(num);\n\
    \            if (numRounded != num) {\n                continue;\n           \
    \ }\n            if (numRounded % 2 == 0) {\n                continue;\n     \
    \       }\n            int numInt = (int) numRounded;\n            sum += numInt*numInt;\n\
    \        }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcno6edqu.java:34: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpws06y449.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \tint sum = 0;\n    \tfor (int i = 0; i < lst.size(); i++) {\n \
    \   \t\tif (lst.get(i) % 2 == 1) {\n    \t\t\tsum += lst.get(i) * lst.get(i);\n\
    \    \t\t}\n    \t}\n    \treturn sum;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcl7f7emt.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // STUDENTS: YOU MUST FILL IN THIS FUNCTION.\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbykgleha.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfu8alair.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \tint sum = 0;\n    \tif(lst.size() > 0) {\n    \t\tfor(Float n\
    \ : lst) {\n    \t\t\tif(n.intValue() % 2 != 0 && n > 0) {\n    \t\t\t\tsum +=\
    \ n * n;\n    \t\t\t}\n    \t\t}\n    \t} else {\n    \t\treturn 0;\n    \t}\n\
    \        return sum;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_fyk4lmr.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int k = 0;\n        int j = 0;\n        for (Float i : lst)\
    \ {\n            if (i % 2 == 0) {\n                j += i;\n            } else\
    \ {\n                k += i;\n            }\n        }\n        return 2 * (k\
    \ - j);\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0v1fbn89.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk8yvo_l9.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() <= 1) {\n            return 0;\n        }\n \
    \       int max = lst.get(0).intValue();\n        int min = lst.get(0).intValue();\n\
    \        for (int i = 1; i < lst.size(); i++) {\n            if (lst.get(i).intValue()\
    \ > max) {\n                max = lst.get(i).intValue();\n            }\n    \
    \        if (lst.get(i).intValue() < min) {\n                min = lst.get(i).intValue();\n\
    \            }\n        }\n        return (max - min) * 2;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0cyae8e2.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0n_bwr52.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsw2kiey5.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp72fb9itu.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float a : lst) {\n            if\
    \ (a % 2 == 1) {\n                sum += a * a;\n            }\n        }\n  \
    \      return sum;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1z1n3dx5.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd0paonic.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7if3ff4r.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t\tint squares = 0;\n\t\tfor (float i : lst) {\n\t\t\tif (i >= 0 &&\
    \ i % 2 == 1) {\n\t\t\t\tsquares += i * i;\n\t\t\t}\n\t\t}\n\t\treturn squares;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxz3d3pq4.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return \n            lst.stream()\n                .filter(x\
    \ -> x % 2 != 0)\n                .filter(x -> x > 0)\n                .mapToInt(x\
    \ -> (int) Math.pow(x, 2))\n                .sum();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbd2guyva.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int i = 0;\n        for (float elem : lst) {\n            if\
    \ ((int)elem % 2 == 1 && elem > 0) {\n                i += elem * elem;\n    \
    \        }\n        }\n        return i;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp88zx2432.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Complete this function\n        return 0;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeqn6a09o.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 + 0 = 10\n\
    \        // double_the_difference([-1, -2, 0]) == 0\n        // double_the_difference([9,\
    \ -2]) == 81\n        // double_the_difference([0]) == 0\n        // If the input\
    \ list is empty, return 0.\n        return 0;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi7frqdpe.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeqh368h8.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int oddSum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (lst.get(i) % 2 == 1) {\n                oddSum += lst.get(i);\n\
    \            }\n        }\n        return oddSum * 2;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzssso0pv.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ndllwdw.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        if (lst == null) return result;\n \
    \       for (Float f : lst) {\n            if (f.isNaN() || f.isInfinite() ||\
    \ f < 0) continue;\n            int floor = (int) Math.floor(f);\n           \
    \ if (floor % 2 == 1) result += floor * floor;\n        }\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg53x3s_x.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1 && lst.get(i) > 0) {\n                sum\
    \ += Math.pow(lst.get(i), 2);\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppf9q68od.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpngevvtun.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqx8f80jk.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // REPLACE THE LINE BELOW WITH YOUR CODE\n        int sum =\
    \ 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 == 1) {\n                sum += Math.pow(lst.get(i), 2);\n            }\n\
    \        }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvdkz275l.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int odd_sum = 0;\n        int even_sum = 0;\n        int double_diff\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ % 2 == 0) {\n                even_sum += lst.get(i) * lst.get(i);\n        \
    \    } else {\n                odd_sum += lst.get(i) * lst.get(i);\n         \
    \   }\n        }\n        double_diff = (odd_sum - even_sum) * 2;\n        return\
    \ double_diff;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpznpuj7ya.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // comment out return 0 to see compilation error\n        return\
    \ 0;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl5ihr935.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                sum += Math.pow(lst.get(i),\
    \ 2);\n            }\n        }\n        return sum;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf78d6we7.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int total = 0;\n        // YOUR CODE HERE\n        return total;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa0aygkg6.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3own9juk.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && (int)f == f) {\n                sum += f * f;\n            }\n   \
    \     }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe2_b7d41.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n            if (f > 0 && (int)f == f) {\n                          \
    \    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        // YOUR CODE HERE\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvczsm0f8.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(el -> (el > 0) && el\
    \ == Math.floor(el))\n            .mapToInt(el -> ((int) el % 2 == 1 ? (int) Math.pow(el,\
    \ 2) : 0))\n            .sum();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph8ag_7vz.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n            .mapToInt(el -> ((int) el % 2 == 1 ? (int) Math.pow(el,\
    \ 2) : 0))\n                                   ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int res = 0;\n        // Wrong. What if lst is empty?\n    \
    \    //for (int i = 0; i < lst.size(); i++) {\n        //    if (lst.get(i) %\
    \ 2 == 1) {\n        //        res += Math.pow(lst.get(i), 2);\n        //   \
    \ }\n        //}\n        for (int i = 0; i < lst.size(); i++) {\n           \
    \ if (lst.get(i) % 2 == 1) {\n                res += Math.pow(lst.get(i), 2);\n\
    \            }\n        }\n        return res;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9z7nu9kd.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \treturn lst.stream().filter(x -> x%2 == 1 && Math.floor(x) == x).mapToInt(x\
    \ -> x*x).sum();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9857t028.java:17: error: incompatible types: bad return type in\
    \ lambda expression\n    \treturn lst.stream().filter(x -> x%2 == 1 && Math.floor(x)\
    \ == x).mapToInt(x -> x*x).sum();\n    \t                                    \
    \                                           ^\n    possible lossy conversion from\
    \ float to int\nNote: Some messages have been simplified; recompile with -Xdiags:verbose\
    \ to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n                  .filter(n -> n % 2 !=\
    \ 0)\n                  .filter(n -> n > 0)\n                  .mapToInt(n ->\
    \ (int)n * (int)n)\n                  .sum();\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdrloutit.java:20: error: incompatible types: Float cannot be converted\
    \ to int\n                  .mapToInt(n -> (int)n * (int)n)\n                \
    \                      ^\n/tmp/tmpdrloutit.java:20: error: incompatible types:\
    \ Float cannot be converted to int\n                  .mapToInt(n -> (int)n *\
    \ (int)n)\n                                               ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp31qxgijk.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // TODO\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8j4i9dtm.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpam0ewi35.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbo1qlwsw.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpotb1uh7y.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptfrxub_6.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i)%2 == 1) {\n                sum += lst.get(i)*lst.get(i);\n\
    \            }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt50h0bt9.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Write your code here\n        return 0;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcdgmdjwm.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n      int retval = 0;\n      for (Float x : lst) {\n         if (x %\
    \ 2 == 1) {\n            retval += x * x;\n         }\n      }\n      return retval;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4o_8eys4.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(num -> num > 0 && num\
    \ == Math.floor(num))\n            .mapToInt(num -> (int)Math.pow(num, 2))\n \
    \           .sum();\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0pe96853.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpewtv5055.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx5up0lrt.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // 1. Find the difference between the smallest and largest elements\n\
    \        //    in the list.\n        // 2. Double this difference.\n        //\
    \ 3. Return the result.\n        // Some hints:\n        // 1. To find the smallest\
    \ element in the list, use\n        //    Collections.min(lst) or Collections.max(lst)\n\
    \        // 2. You should also use these methods once to find the largest element\n\
    \        //    in the list.\n        // 3. To double the difference, use *=\n\
    \        // 4. To find the difference between two numbers, use -. For example,\n\
    \        //    if diff is 5.0, then diff *= 5 is 25, and diff -= 3 is 22\n   \
    \     float diff = (float) Math.max(0, Collections.max(lst) - Collections.min(lst));\n\
    \        // diff *= 2;\n        diff -= 3;\n        return (int) diff;\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfxnj01e1.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Used for implicit conversions\n        int sum = 0;\n   \
    \     for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) % 2 !=\
    \ 0 && lst.get(i) > 0) {\n                sum += Math.pow(lst.get(i), 2);\n  \
    \          }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvkmiowu2.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your code here\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn31w3yka.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1twk8foy.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // remove negative or non-integer numbers from lst\n       \
    \ for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) < 0 || lst.get(i)\
    \ % 1 != 0) {\n                lst.remove(i);\n                i--;\n        \
    \    }\n        }\n        // count odds and evens\n        int numOdds = 0;\n\
    \        int numEvens = 0;\n        for (int i = 0; i < lst.size(); i++) {\n \
    \           if (lst.get(i) % 2 == 0) {\n                numEvens++;\n        \
    \    } else {\n                numOdds++;\n            }\n        }\n        //\
    \ square odds\n        for (int i = 0; i < lst.size(); i++) {\n            if\
    \ (lst.get(i) % 2 == 1) {\n                lst.set(i, (float) Math.pow(lst.get(i),\
    \ 2));\n            }\n        }\n        // double the difference\n        if\
    \ (numOdds >= numEvens) {\n            return numOdds - numEvens;\n        } else\
    \ {\n            return numEvens - numOdds;\n        }\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt7m4gbiz.java:46: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7bf8vna7.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\treturn 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsvuy37qx.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if (lst.get(i) > 0 && lst.get(i) % 2 == 1) {\n              \
    \  result += Math.pow(lst.get(i), 2);\n            }\n        }\n        return\
    \ result;\nreturn 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpai8qx15y.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int res = 0;\n        int i = 0;\n        while (i < lst.size())\
    \ {\n            if (lst.get(i) < 0) {\n                i = i + 1;\n         \
    \   } else {\n                int sq = (int)Math.pow(lst.get(i), 2);\n       \
    \         if (sq % 2 == 0) {\n                    sq = sq * 2;\n             \
    \   }\n                res = res + sq;\n                i = i + 1;\n         \
    \   }\n        }\n        return res;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp18pgjx3d.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (Float f : lst) {\n           \
    \ if (Math.floor(f) == f && f > 0) {\n                result += Math.pow(f, 2);\n\
    \            }\n        }\n        return result;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8r7z6m24.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \tint sum = 0;\n    \tfor (int i = 0; i < lst.size(); i++) {\n \
    \   \t\tint x = lst.get(i);\n    \t\tif (x % 2 == 1) {\n    \t\t\tsum += x * x;\n\
    \    \t\t}\n    \t}\n    \treturn sum;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpffudo2s5.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n    \t\tint x = lst.get(i);\n    \t\t               ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return sumOfSquaresOfOdd(lst) - sumOfSquaresOfEven(lst);\nreturn\
    \ 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmponr082mh.java:17: error: cannot find symbol\n        return sumOfSquaresOfOdd(lst)\
    \ - sumOfSquaresOfEven(lst);\n               ^\n  symbol:   method sumOfSquaresOfOdd(ArrayList<Float>)\n\
    \  location: class Problem\n/tmp/tmponr082mh.java:17: error: cannot find symbol\n\
    \        return sumOfSquaresOfOdd(lst) - sumOfSquaresOfEven(lst);\n          \
    \                              ^\n  symbol:   method sumOfSquaresOfEven(ArrayList<Float>)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvfrwz7uo.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Note:  We want you to implement this without loops or recursion\n\
    \        // (i.e., using map, filter, fold, etc.).  It's a lot less code that\
    \ way.\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7emamho7.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int squareSum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            float num = lst.get(i);\n            if (num > 0 && num\
    \ % 2 == 1) {\n                squareSum += Math.pow(num, 2);\n            }\n\
    \        }\n        return squareSum;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgdu17xv_.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Write your code here!\n        return 0;\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsuiiicnp.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t// ArrayList lst;\n\t// Integer sum;\n\t// lst = new ArrayList();\n\
    \t// sum = 0;\n\tint sum = 0;\n\tfor (float x : lst) {\n\t    if (x % 2 == 1)\
    \ {\n\t\tsum += x * x;\n\t    }\n\t}\n\treturn sum;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpui4mvhqg.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmqqe9gdv.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\treturn 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqd1kjchm.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your code here\n        if (lst.size() == 0) {\n        \
    \    return 0;\n        }\n        else {\n            ArrayList<Integer> newList\
    \ = new ArrayList<Integer>();\n            for (Float f : lst) {\n           \
    \     Integer fInt = f.intValue();\n                if (fInt % 2 != 0 && fInt\
    \ > 0) {\n                    newList.add(fInt);\n                }\n        \
    \    }\n            int sum = 0;\n            for (Integer i : newList) {\n  \
    \              sum += i * i;\n            }\n            return sum;\n       \
    \ }\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4hw96338.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Fill in the missing code below.\n        \n        ArrayList<Float>\
    \ r = new ArrayList<Float>();\n        float sum = 0;\n        for(int i = 0;\
    \ i < lst.size(); i++){\n            float j = lst.get(i);\n            if(j>0\
    \ && j%2 != 0){\n                r.add(j);\n            }\n        }\n       \
    \ for(int i = 0; i < r.size(); i++){\n            float x = r.get(i);\n      \
    \      sum = sum + (x*x);\n        }\n        return (int)sum;\nreturn 0;\n  \
    \  }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoi9xkbgd.java:32: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int total = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            total += Math.pow(lst.get(i), 2);\n        }\n        return\
    \ total;\nreturn 0;\n    }\n    public static void main(String[] args) {\n   \
    \ assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxbyqizr3.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float n : lst) {\n            //\
    \ sum += n * n;\n            sum += (n > 0 && n % 1 == 0 && n % 2 == 1) ? n *\
    \ n : 0;\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp02lqtib7.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp83f_ywaa.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7hjpppfh.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int total = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            if ((int)lst.get(i) % 2 == 1 && lst.get(i) > 0) {\n         \
    \       total += (int)Math.pow(lst.get(i), 2);\n            }\n        }\n   \
    \     return total;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ky886xv.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n            if ((int)lst.get(i) % 2 == 1 && lst.get(i) > 0) {\n    \
    \                        ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            Float current = lst.get(i);\n            if (current.intValue() <\
    \ 0) {\n                continue;\n            }\n            if (current % 2\
    \ == 0) {\n                sum += Math.pow(current, 2);\n            }\n     \
    \   }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprznp4cj_.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // replace the line below with your solution\n        return\
    \ (int) lst.stream().filter(x -> x > 0).map(x -> x * x).filter(x -> x % 2 == 1).reduce(0f,\
    \ (x, y) -> x + y);\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxtmaiy8p.java:18: error: incompatible types: Float cannot be converted\
    \ to int\n        return (int) lst.stream().filter(x -> x > 0).map(x -> x * x).filter(x\
    \ -> x % 2 == 1).reduce(0f, (x, y) -> x + y);\n                              \
    \                                                                     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float n : lst) {\n            if\
    \ (n % 2 == 1) {\n                sum += Math.pow(n, 2);\n            }\n    \
    \    }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcp1016vw.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (Float f : lst) {\n           \
    \ if (f % 2 == 1)\n                result += f * f;\n        }\n        return\
    \ result;\nreturn 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7grd6ym_.java:23: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t\tint sum = 0;\n\t\tfor (float f : lst) {\n\t\t\t//check if f is an\
    \ int and positive\n\t\t\tif (f%1 == 0 && f > 0) {\n\t\t\t\tint num = (int)f;\n\
    \t\t\t\tif (num%2 == 1) {\n\t\t\t\t\tsum += num*num;\n\t\t\t\t}\n\t\t\t}\n\t\t\
    }\n\t\treturn sum;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnwjuv4vw.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // YOUR CODE HERE\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbl70gdv7.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int res = 0;\n        for (Float f : lst) {\n            if\
    \ (f > 0 && f % 2 != 0) {\n                res += f * f;\n            }\n    \
    \    }\n        return res;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4b4_nw49.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float i : lst) {\n            if\
    \ (i.intValue() % 2 == 1 && i.intValue() > 0) {\n                sum += i.intValue()\
    \ * i.intValue();\n            }\n        }\n        return sum;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3q3ms5vb.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(x -> x > 0 && x % 1\
    \ == 0)\n            .mapToInt(x -> (int)Math.pow(x, 2) * 2)\n            .sum();\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqcstg2gp.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int total = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            float num = lst.get(i);\n            if (((int) num) % 2 == 1)\
    \ {\n                total += Math.pow(num, 2);\n            }\n        }\n  \
    \      return total;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgwajpuh.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7o4dvdy1.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            float x = lst.get(i);\n            if (x > 0 && x == Math.floor(x))\
    \ {\n                if (x % 2 == 1) {\n                    sum += x * x;\n  \
    \              }\n            }\n        }\n        return sum;\nreturn 0;\n \
    \   }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi2x6n07l.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int x = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (isOdd(lst.get(i))) {\n                x += lst.get(i);\n    \
    \        }\n        }\n        return x;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg7de0997.java:19: error: cannot find symbol\n            if (isOdd(lst.get(i)))\
    \ {\n                ^\n  symbol:   method isOdd(Float)\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpib5qo2bd.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            int temp = (int) lst.get(i);\n            if (temp % 2 == 1) {\n\
    \                sum += temp * temp;\n            }\n        }\n        return\
    \ sum;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeor7sbhw.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n            int temp = (int) lst.get(i);\n                         \
    \           ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                sum += Math.pow(lst.get(i),\
    \ 2);\n            }\n        }\n        return sum;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ijfqs8k.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // your code here!\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphg3fmhsj.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        throw new RuntimeException(\"Please implement this function\"\
    );\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptond2cpl.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t// Iterate through the list and check if each is an integer. If it\
    \ is,\n\t// square it and if it is odd, add it to the sum.\n\tint sum = 0;\n\t\
    for (Float num : lst) {\n\t    if ((num % 1) == 0 && num > 0) {\n\t\tint squaredNum\
    \ = (int)Math.pow(num, 2);\n\t\tif (squaredNum % 2 == 1) {\n\t\t    sum += squaredNum;\n\
    \t\t}\n\t    }\n\t}\n\treturn sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpucgte6up.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n      return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr9iqty6f.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Check whether the input list is empty\n        if (lst.size()\
    \ == 0) {\n            return 0;\n        }\n        // Sum squares of odd numbers\n\
    \        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n      \
    \      // Confirm if number is odd\n            float n = lst.get(i);\n      \
    \      if (Math.floor(n) == n && (int)n % 2 == 1) {\n                sum += n\
    \ * n;\n            }\n        }\n        return sum;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3qvexlma.java:31: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp957rnfhl.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        throw new UnsupportedOperationException(\"Solution not implemented\"\
    );\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpma6s3f35.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int difference = 0;\n        if(lst.size() == 0) {\n       \
    \     return 0;\n        }\n        else {\n            int pos = 0;\n       \
    \     while(pos < lst.size()) {\n                int nextPos = pos + 1;\n    \
    \            while(nextPos < lst.size()) {\n                    if(Math.abs(lst.get(pos)\
    \ - lst.get(nextPos)) > 0) {\n                        difference += Math.abs(lst.get(pos)\
    \ - lst.get(nextPos));\n                    }\n                    nextPos++;\n\
    \                }\n                pos++;\n            }\n        }\n       \
    \ return difference;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpybroai3t.java:35: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return \n            lst.stream()\n                .filter(x\
    \ -> x >= 0 && x % 1 == 0)\n                .mapToInt(x -> (int) Math.pow(x, 2))\n\
    \                .sum();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl77mic8y.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        // ...\n        // ...\n        //\
    \ ...\n        return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpha5vqe0y.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return (int) lst.stream().map(x -> (int) x).filter(x -> x >\
    \ 0).map(x -> x * x).reduce(0, (x, y) -> x + y);\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwmbr8hvi.java:17: error: incompatible types: Float cannot be converted\
    \ to int\n        return (int) lst.stream().map(x -> (int) x).filter(x -> x >\
    \ 0).map(x -> x * x).reduce(0, (x, y) -> x + y);\n                           \
    \                      ^\n/tmp/tmpwmbr8hvi.java:17: error: bad operand types for\
    \ binary operator '>'\n        return (int) lst.stream().map(x -> (int) x).filter(x\
    \ -> x > 0).map(x -> x * x).reduce(0, (x, y) -> x + y);\n                    \
    \                                              ^\n  first type:  Object\n  second\
    \ type: int\n/tmp/tmpwmbr8hvi.java:17: error: bad operand types for binary operator\
    \ '*'\n        return (int) lst.stream().map(x -> (int) x).filter(x -> x > 0).map(x\
    \ -> x * x).reduce(0, (x, y) -> x + y);\n                                    \
    \                                              ^\n  first type:  Object\n  second\
    \ type: Object\n/tmp/tmpwmbr8hvi.java:17: error: bad operand types for binary\
    \ operator '+'\n        return (int) lst.stream().map(x -> (int) x).filter(x ->\
    \ x > 0).map(x -> x * x).reduce(0, (x, y) -> x + y);\n                       \
    \                                                                            \
    \          ^\n  first type:  Object\n  second type: Object\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int oddSquareSum = 0;\n        for (int i = 0; i < lst.size();\
    \ i++) {\n            if (lst.get(i) < 0) {\n                oddSquareSum += 0;\n\
    \            } else if (lst.get(i) % 2 == 0) {\n                oddSquareSum +=\
    \ 0;\n            } else {\n                int square = (int) Math.pow(lst.get(i),\
    \ 2);\n                oddSquareSum += square;\n            }\n        }\n   \
    \     return oddSquareSum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj7ezlq5n.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplngqd3pf.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2z2yt6gh.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5h_t3grv.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your code goes here\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqw4h741w.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5cs9qwbp.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        ArrayList<Integer> lst_squared = new ArrayList<Integer>();\n\
    \        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n      \
    \      if (lst.get(i) >= 0 && lst.get(i) % 1 == 0) {\n                if (lst.get(i)\
    \ % 2 != 0) {\n                    lst_squared.add((int) Math.pow(lst.get(i),\
    \ 2));\n                }\n            }\n        }\n        for (int i = 0; i\
    \ < lst_squared.size(); i++) {\n            sum += lst_squared.get(i);\n     \
    \   }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6iu2ygoz.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // TODO: your code here\n        int sum = 0;\n        int r\
    \ = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i)\
    \ > 0 && lst.get(i) % 2 == 1) {\n                sum += Math.pow(lst.get(i), 2);\n\
    \            }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbxy5sl8.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(i -> (i % 2 != 0 &&\
    \ i > 0 && i == Math.floor(i)))\n            .mapToInt(i -> (int) Math.pow(i,\
    \ 2))\n            .sum();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1nvpf9fb.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // your code here\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuwv8jaf5.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // write your code here\n        return 0;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdye4rf4p.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n      int result = 0;\n      for (Float item : lst) {\n          if\
    \ (item % 2 == 1 && item >= 0) {\n              result += Math.pow(item, 2);\n\
    \          }\n      }\n      return result;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8wwn3aq5.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (int i = 0; i < lst.size(); i++){\n\
    \            float elem = lst.get(i);\n            if (elem >= 0 && (int)elem\
    \ == elem){\n                if (elem % 2 == 1) {\n                    result\
    \ += elem * elem;\n                }\n            }\n        }\n        return\
    \ result;\nreturn 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxbb9zqn2.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // replace 0 with your answer\n\n        // return the sum of\
    \ squares of the numbers in the list that are odd\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpw34mkb2i.java:21: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return (int) lst.stream().filter(x -> x >= 0 && x == Math.floor(x)).map(x\
    \ -> x%2==0 ? x : Math.pow(x, 2)).reduce(0, (x, y) -> x + y);\nreturn 0;\n   \
    \ }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfvw212h3.java:17: error: no suitable method found for reduce(int,(x,y)->x\
    \ + y)\n        return (int) lst.stream().filter(x -> x >= 0 && x == Math.floor(x)).map(x\
    \ -> x%2==0 ? x : Math.pow(x, 2)).reduce(0, (x, y) -> x + y);\n              \
    \                                                                            \
    \                       ^\n    method Stream.reduce(Double,BinaryOperator<Double>)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Double)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Double,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return (int) (lst.stream().filter(x -> Math.floor(x) == x).filter(x\
    \ -> x > 0).filter(x -> x % 2 == 1).map(x -> x * x).reduce(0, (x, y) -> x + y));\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpau9rl8my.java:17: error: no suitable method found for reduce(int,(x,y)->x\
    \ + y)\n        return (int) (lst.stream().filter(x -> Math.floor(x) == x).filter(x\
    \ -> x > 0).filter(x -> x % 2 == 1).map(x -> x * x).reduce(0, (x, y) -> x + y));\n\
    \                                                                            \
    \                                                 ^\n    method Stream.reduce(Float,BinaryOperator<Float>)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Float)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n      int sum = 0;\n      for (int i = 0; i < lst.size(); i++) {\n \
    \       Float f = lst.get(i);\n        if (f % 2 == 1) {\n          sum += Math.pow(f,\
    \ 2);\n        }\n      }\n      return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx4www9er.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++){\n\
    \            if (lst.get(i) >= 0 && lst.get(i) % 2 == 1){\n                sum\
    \ += Math.pow(lst.get(i), 2);\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj3cknu9v.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // +++your code here+++\n        return 0;\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkj72a8bx.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int r = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                r += Math.pow(lst.get(i),\
    \ 2);\n            }\n        }\n        return r;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6_qnhumw.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsixf3r_d.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \tArrayList<Float> numbers = new ArrayList<Float>();\n    \tfor\
    \ (Float num : lst) {\n    \t\tif (num >= 0 && num % 1 == 0) {\n    \t\t\tnumbers.add(num);\n\
    \    \t\t}\n    \t}\n    \tint res = 0;\n    \tfor (Float num : numbers) {\n \
    \   \t\tif (num % 2 == 1) {\n    \t\t\tres += num*num;\n    \t\t}\n    \t}\n \
    \   \treturn res;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxk97rxgq.java:30: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \tint ans = 0;\n    \tfor(int i = 0; i < lst.size(); i++) {\n  \
    \  \t\tif(lst.get(i) % 2 == 1) {\n    \t\t\tans += Math.pow(lst.get(i), 2);\n\
    \    \t\t}\n    \t}\n    \treturn ans;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9yko4m_r.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) > 0 && lst.get(i) % 2 == 1) {\n                sum\
    \ += Math.pow(lst.get(i), 2);\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp291td03t.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            float f = lst.get(i);\n            if (f > 0 && f == Math.floor(f))\
    \ {\n                sum += (f % 2 == 0) ? f : f * f;\n            }\n       \
    \ }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_g6ydoz1.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n                .filter(n -> n % 2 != 0)\n\
    \                .mapToInt(n -> n.intValue())\n                .map(n -> n * n)\n\
    \                .sum();\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpshoekl1b.java:22: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your code here!\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt9tpikei.java:22)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        throw new UnsupportedOperationException(\"Not yet implemented\"\
    );\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxa3hl1mt.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float f : lst) {\n            if\
    \ (f % 2 == 1) {\n                sum += f * f;\n            }\n        }\n  \
    \      return sum;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpabelu1o3.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkjn8449a.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoxd0026r.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Fill this in\n        return 0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3osf0n9b.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Your solution here.\n        int diff = 0;\n        int i\
    \ = 0;\n        while (i < lst.size()) {\n            if (lst.get(i) % 2 == 0)\
    \ {\n                diff = diff + lst.get(i) * lst.get(i);\n            }\n \
    \           i = i + 1;\n        }\n        return diff;\nreturn 0;\n    }\n  \
    \  public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp95c498f_.java:22: error: incompatible types: possible lossy conversion\
    \ from float to int\n                diff = diff + lst.get(i) * lst.get(i);\n\
    \                            ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int n = lst.size();\n        ArrayList<Float> lst2 = new ArrayList<Float>();\n\
    \        for (int i = 0; i < n; i++) {\n            if (lst.get(i) % 2 != 0) {\n\
    \                lst2.add(lst.get(i));\n            }\n        }\n        return\
    \ lst2.size();\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1nyd51hz.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprybbg4cn.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        double sum = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            float current = lst.get(i);\n            if (isPositiveInt(current))\
    \ {\n                if (isOdd(current)) {\n                    sum += Math.pow(current,\
    \ 2);\n                }\n            }\n        }\n        return (int) (sum\
    \ * 2);\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5zh6nj_a.java:20: error: cannot find symbol\n            if (isPositiveInt(current))\
    \ {\n                ^\n  symbol:   method isPositiveInt(float)\n  location: class\
    \ Problem\n/tmp/tmp5zh6nj_a.java:21: error: cannot find symbol\n             \
    \   if (isOdd(current)) {\n                    ^\n  symbol:   method isOdd(float)\n\
    \  location: class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n\t\treturn 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjr16o8fm.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float item : lst) {\n           \
    \ if (item > 0 && item % 2 == 1) {\n                sum += item * item;\n    \
    \        }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdp_monwh.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe1di2qnz.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq8mxnlr5.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Write your code here\n        if (lst.size() < 1) {\n   \
    \         return 0;\n        }\n        int sum = 0;\n        for (int i = 0;\
    \ i < lst.size(); i++) {\n            if (lst.get(i) % 2 == 1) {\n           \
    \     sum += Math.pow(lst.get(i), 2);\n            }\n        }\n        return\
    \ sum;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8w5wjd3h.java:28: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        float sum = 0;\n        for (float e : lst) {\n            if\
    \ (e == 0) continue;\n            if (e % 2 == 0) {\n                sum -= e\
    \ * e;\n            } else {\n                sum += e * e;\n            }\n \
    \       }\n        return (int) sum;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2p96fr2f.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int n = lst.size();\n        int[] diff = new int[n];\n    \
    \    int sum = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (lst.get(i)\
    \ > 0 && lst.get(i + 1) > 0) {\n                diff[i] = (int) lst.get(i) - (int)\
    \ lst.get(i + 1);\n                sum += diff[i] * diff[i];\n            }\n\
    \        }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7nwgcqek.java:22: error: incompatible types: Float cannot be converted\
    \ to int\n                diff[i] = (int) lst.get(i) - (int) lst.get(i + 1);\n\
    \                                       ^\n/tmp/tmp7nwgcqek.java:22: error: incompatible\
    \ types: Float cannot be converted to int\n                diff[i] = (int) lst.get(i)\
    \ - (int) lst.get(i + 1);\n                                                  \
    \        ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return -1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4vivsye8.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float number : lst) {\n         \
    \   // Checking whether number is instance of float and is not NaN\n         \
    \   if (number.isNaN() || !number.getClass().equals(Float.class)) {\n        \
    \        continue;\n            }\n            // Ignore numbers that are negative\
    \ or not integers.\n            if (number < 0 || number != Math.floor(number))\
    \ {\n                continue;\n            }\n            // Adding squares of\
    \ number in the list that are odd.\n            if (number % 2 != 0) {\n     \
    \           sum += Math.pow(number, 2);\n            }\n        }\n        return\
    \ sum;\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp950_6tb6.java:33: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (Float i : lst) {\n            if\
    \ (i > 0 && i % 2 == 1) {\n                sum += Math.pow(i, 2);\n          \
    \  }\n        }\n        return sum;\nreturn 0;\n    }\n    public static void\
    \ main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8ty46gac.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Add code here\n        return 0;\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1wypusgr.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0n7jeiwr.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Delete the line below and implement the function!\n     \
    \   return -1;\nreturn 0;\n    }\n    public static void main(String[] args) {\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpioszk6fq.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvxitqiol.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // your code here\n        return 0;\nreturn 0;\n    }\n   \
    \ public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxjq4gfd.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // This can be written much more succintly using streams, but\n\
    \        // if you want to use a foreach loop, that's OK too.\n        return\
    \ (int)lst.stream()\n            .filter(i -> (i % 2 == 1) && (i >= 0))\n    \
    \        .map(i -> i * i)\n            .reduce(0, (a,b) -> a + b);\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpchcpt8c_.java:22: error: no suitable method found for reduce(int,(a,b)->a\
    \ + b)\n            .reduce(0, (a,b) -> a + b);\n            ^\n    method Stream.reduce(Float,BinaryOperator<Float>)\
    \ is not applicable\n      (argument mismatch; int cannot be converted to Float)\n\
    \    method Stream.<U>reduce(U,BiFunction<U,? super Float,U>,BinaryOperator<U>)\
    \ is not applicable\n      (cannot infer type-variable(s) U\n        (actual and\
    \ formal argument lists differ in length))\n  where U,T are type-variables:\n\
    \    U extends Object declared in method <U>reduce(U,BiFunction<U,? super T,U>,BinaryOperator<U>)\n\
    \    T extends Object declared in interface Stream\nNote: Some messages have been\
    \ simplified; recompile with -Xdiags:verbose to get full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return lst.stream()\n            .filter(f -> f > 0 && (f %\
    \ 1 == 0))\n            .filter(f -> f % 2 == 1)\n            .mapToInt(f -> (int)f)\n\
    \            .map(f -> f * f)\n            .sum();\nreturn 0;\n    }\n    public\
    \ static void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptd1bi6r8.java:20: error: incompatible types: Float cannot be converted\
    \ to int\n            .mapToInt(f -> (int)f)\n                               \
    \ ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (int i = 0; i < lst.size(); i++)\
    \ {\n            float x = lst.get(i);\n            if ((int) x % 2 == 1) {\n\
    \                result += x * x;\n            }\n        }\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdzyg1uq7.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) return 0;\n        return 0;\nreturn 0;\n\
    \    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp49ip3m2p.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // int result = 0;\n        // for (Float n : lst) {\n     \
    \   //     if (n % 2 == 1) {\n        //         result += n * n;\n        //\
    \     }\n        // }\n        // return result;\n        return lst.stream()\n\
    \                .filter(n -> n % 2 == 1)\n                .mapToInt(n -> n.intValue())\n\
    \                .map(n -> n * n)\n                .sum();\nreturn 0;\n    }\n\
    \    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb_a1qeok.java:29: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        double sum = 0;\n        for (Float f : lst) {\n           \
    \ if (f % 2 != 0 && f > 0) {\n                sum += Math.pow(f, 2);\n       \
    \     }\n        }\n        return (int) sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxrw3k2sw.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzjhj7qyg.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5newsao_.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8xhu9hc1.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i) * lst.get(i);\n\
    \            }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv5ybxwu0.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Iterate through the list and accumulate the sum of the squares\n\
    \        // of the numbers in the list that are odd.\n        int sum = 0;\n \
    \       for (int i = 0; i < lst.size(); i++) {\n            if (lst.get(i) % 2\
    \ == 1) {\n                sum += Math.pow(lst.get(i), 2);\n            }\n  \
    \      }\n        return sum;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbf3fedki.java:26: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        if (lst.size() == 0) {\n            return 0;\n        } else\
    \ {\n            return 2*Collections.max(lst) - Collections.min(lst);\n     \
    \   }\nreturn 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmperyp46bi.java:20: error: incompatible types: possible lossy conversion\
    \ from float to int\n            return 2*Collections.max(lst) - Collections.min(lst);\n\
    \                                          ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            int x = (int) lst.get(i);\n            if (x > 0 && x % 2 == 1) {\n\
    \                sum += x * x;\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwosng86k.java:19: error: incompatible types: Float cannot be converted\
    \ to int\n            int x = (int) lst.get(i);\n                            \
    \     ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n    \treturn 1;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp38cr764u.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (Float num : lst) {\n         \
    \   if (num > 0 && num.intValue() == num) {\n                int square = (int)\
    \ Math.pow(num, 2);\n                if (square % 2 == 1) {\n                \
    \    result += square;\n                }\n            }\n        }\n        return\
    \ result;\nreturn 0;\n    }\n    public static void main(String[] args) {\n  \
    \  assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) == (0));\n\
    \    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphqyzaxvj.java:27: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        // Use streams to filter odd numbers and sum their squares\n\
    \        return (int) (Math.pow(lst.stream().filter(num -> num % 2 == 1).reduce(0f,\
    \ (a, b) -> a + b), 2) - Math.pow(lst.stream().filter(num -> num % 2 == 0).reduce(0f,\
    \ (a, b) -> a + b), 2));\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7t9t_psz.java:19: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1 && lst.get(i) >= 0) {\n                sum\
    \ += Math.pow(lst.get(i), 2);\n            }\n        }\n        return sum;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5_t6ku14.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj1603qv2.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        // your code here\n        return result;\n\
    return 0;\n    }\n    public static void main(String[] args) {\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList()))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)5.0f, (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)0.1f, (float)0.2f, (float)0.3f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ibtc4wz.java:20: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int result = 0;\n        for (Float num : lst) {\n         \
    \   if (num % 2 == 1) {\n                result += num * num;\n            }\n\
    \        }\n        return result;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2j_morp.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            if (lst.get(i) % 2 == 1) {\n                sum += lst.get(i) * lst.get(i);\n\
    \            }\n        }\n        return sum;\nreturn 0;\n    }\n    public static\
    \ void main(String[] args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppy76s72q.java:24: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        int res = 0;\n        for (int i = 0; i < lst.size(); i++) {\n\
    \            float elem = lst.get(i);\n            if (elem % 2 == 1 && elem >=\
    \ 0) {\n                res += Math.pow(elem, 2);\n            }\n        }\n\
    \        return res;\nreturn 0;\n    }\n    public static void main(String[] args)\
    \ {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList()))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4js86h2.java:25: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbyljk0xb.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        return 0;\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6rbt_16_.java:18: error: unreachable statement\nreturn 0;\n^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a list of numbers, return the sum of squares of\
    \ the numbers\n    // in the list that are odd. Ignore numbers that are negative\
    \ or not integers.\n    // double_the_difference([1, 3, 2, 0]) == 1 + 9 + 0 +\
    \ 0 = 10\n    // double_the_difference([-1, -2, 0]) == 0\n    // double_the_difference([9,\
    \ -2]) == 81\n    // double_the_difference([0]) == 0  \n    // If the input list\
    \ is empty, return 0.\n    public static int doubleTheDifference(ArrayList<Float>\
    \ lst) {\n        //YOUR CODE HERE\nreturn 0;\n    }\n    public static void main(String[]\
    \ args) {\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList())))\
    \ == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)5.0f,\
    \ (float)4.0f)))) == (25));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.1f,\
    \ (float)0.2f, (float)0.3f)))) == (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)-10.0f,\
    \ (float)-20.0f, (float)-30.0f)))) == (0));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-1.0f, (float)-2.0f, (float)8.0f)))) ==\
    \ (0));\n    assert(doubleTheDifference((new ArrayList<Float>(Arrays.asList((float)0.2f,\
    \ (float)3.0f, (float)5.0f)))) == (34));\n    assert(doubleTheDifference((new\
    \ ArrayList<Float>(Arrays.asList((float)-9.0f, (float)-7.0f, (float)-5.0f, (float)-3.0f,\
    \ (float)-1.0f, (float)1.0f, (float)3.0f, (float)5.0f, (float)7.0f, (float)9.0f))))\
    \ == (165));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpdcjqrpks.java:22)\n"
  exit_code: 1
  status: Exception

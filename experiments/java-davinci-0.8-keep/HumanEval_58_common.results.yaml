language: java
name: HumanEval_58_common
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonList = new ArrayList<Integer>();\n     \
    \   for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    commonList.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(commonList);\n\
    \        commonList = (ArrayList<Integer>) commonList.stream().distinct().collect(Collectors.toList());\n\
    \        return commonList;\n}\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulnp1ymb.java:28)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(null);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(new HashSet<Integer>(l1).retainAll(new\
    \ HashSet<Integer>(l2)) ? Collections.emptyList() : l1);\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo3q350g2.java:18)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(Integer::compareTo);\n       \
    \ return l1;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    l3.add(l1.get(i));\n\
    \                }\n            }\n        }\n        return l3;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ckbwzju.java:26)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        if (l1.size()\
    \ > l2.size()) {\n            ArrayList<Integer> t = l1;\n            l1 = l2;\n\
    \            l2 = t;\n        }\n        ArrayList<Integer> u1 = new ArrayList<Integer>(new\
    \ HashSet<Integer>(l1));\n        ArrayList<Integer> u2 = new ArrayList<Integer>(new\
    \ HashSet<Integer>(l2));\n        for (int i : u1) {\n            for (int j :\
    \ u2) {\n                if (i == j) {\n                    res.add(i);\n    \
    \            }\n            }\n        }\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(null);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Your code here\n        HashSet<Integer> set = new HashSet<>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            set.add(l1.get(i));\n\
    \        }\n        ArrayList<Integer> result = new ArrayList<>();\n        for\
    \ (int i = 0; i < l2.size(); i++) {\n            if (set.contains(l2.get(i)))\
    \ {\n                result.add(l2.get(i));\n            }\n        }\n      \
    \  Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb1mbbsml.java:30)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ max = l1.size() > l2.size() ? l1 : l2;\n        ArrayList<Integer> min = l1.size()\
    \ > l2.size() ? l2 : l1;\n        for (int i = 0; i < min.size(); i++) {\n   \
    \         if (max.contains(min.get(i)))\n                l.add(min.get(i));\n\
    \        }\n        return l;\n}\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl983zc2v.java:25)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        throw new RuntimeException(\"Not implemented yet\");\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\
    \ yet\n\tat Problem.common(tmpb444tiau.java:15)\n\tat Problem.main(tmpb444tiau.java:18)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        //\
    \ TODO\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4oegt25j.java:20)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else if (l1.get(i) > l2.get(j)) {\n \
    \               j++;\n            } else {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        //TODO\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4xf3wj2n.java:20)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ s2 = new HashSet<Integer>(l2);\n        Set<Integer> intersection = new HashSet<Integer>(s1);\n\
    \        intersection.retainAll(s2);\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>(intersection);\n        Collections.sort(result);\n     \
    \   return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    l3.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(l3);\n\
    \        for (int i = 0; i < l3.size() - 1; i++) {\n            if (l3.get(i)\
    \ == l3.get(i + 1)) {\n                l3.remove(i);\n            }\n        }\n\
    \        return l3;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8nc6etl8.java:32)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: Return the sorted unique elements of l1 and l2.\n      \
    \  ArrayList<Integer> l3 = new ArrayList<Integer>();\n        l3.addAll(l1);\n\
    \        l3.retainAll(l2);\n        return l3;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpf79n8c79.java:22)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: return the sorted unique common elements for two lists.\n\
    \        return new ArrayList<Integer>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6knkmmv0.java:19)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() <= l2.size()) {\n            return common_aux(l1,\
    \ l2);\n        } else {\n            return common_aux(l2, l1);\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpmrr293wx.java:16: error: cannot find symbol\n            return\
    \ common_aux(l1, l2);\n                   ^\n  symbol:   method common_aux(ArrayList<Integer>,ArrayList<Integer>)\n\
    \  location: class Problem\n/tmp/tmpmrr293wx.java:18: error: cannot find symbol\n\
    \            return common_aux(l2, l1);\n                   ^\n  symbol:   method\
    \ common_aux(ArrayList<Integer>,ArrayList<Integer>)\n  location: class Problem\n\
    2 errors\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ l1Set = new HashSet<Integer>(l1);\n        for (Integer i : l2) {\n        \
    \    if (l1Set.contains(i)) {\n                ret.add(i);\n            }\n  \
    \      }\n        Collections.sort(ret);\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpyuqovyvx.java:26)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here.\n        ArrayList<Integer> com = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                com.add(l1.get(i));\n            }\n        }\n        Collections.sort(com);\n\
    \        return new ArrayList<Integer>(new LinkedHashSet<Integer>(com));\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return l1.stream().filter(n -> l2.contains(n)).distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i1 = 0;\n        int i2 = 0;\n   \
    \     while (i1 < l1.size() && i2 < l2.size()) {\n            int e1 = l1.get(i1);\n\
    \            int e2 = l2.get(i2);\n            if (e1 == e2) {\n             \
    \   result.add(e1);\n                i1++;\n                i2++;\n          \
    \  } else if (e1 < e2) {\n                i1++;\n            } else {\n      \
    \          i2++;\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Replace by your implementation.\n        ArrayList<Integer> l\
    \ = new ArrayList<Integer>();\n        for (int a : l1) {\n            for (int\
    \ b : l2) {\n                if (a == b) {\n                    l.add(a);\n  \
    \              }\n            }\n        }\n        Collections.sort(l);\n   \
    \     return l;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_ykfwes9.java:28)\n"
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(\n            (Set<Integer>) l1.stream()\n\
    \                .filter(l2::contains)\n                .collect(Collectors.toSet())\n\
    \        );\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ p1 = 0;\n        int p2 = 0;\n        int len1 = l1.size();\n        int len2\
    \ = l2.size();\n        int t1 = 0;\n        int t2 = 0;\n        while (p1 <\
    \ len1 && p2 < len2) {\n            t1 = l1.get(p1);\n            t2 = l2.get(p2);\n\
    \            if (t1 == t2) {\n                if (result.size() == 0 || t1 !=\
    \ result.get(result.size() - 1)) {\n                    result.add(t1);\n    \
    \            }\n                p1 += 1;\n                p2 += 1;\n         \
    \   } else if (t1 < t2) {\n                p1 += 1;\n            } else {\n  \
    \              p2 += 1;\n            }\n        }\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpc4m6c97o.java:40)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) == l2.get(j)) {\n                if (result.size()\
    \ == 0 || result.get(result.size() - 1) != l1.get(i)) {\n                    result.add(l1.get(i));\n\
    \                }\n                i++;\n                j++;\n            }\
    \ else if (l1.get(i) < l2.get(j)) {\n                i++;\n            } else\
    \ {\n                j++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9jk8qc1k.java:34)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return l1.stream().filter(e -> l2.contains(e)).distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        int n1\
    \ = l1.size();\n        int n2 = l2.size();\n        int i = 0;\n        int j\
    \ = 0;\n        while (i < n1 && j < n2) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                res.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpynzagl9x.java:34)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        int i1\
    \ = 0;\n        int i2 = 0;\n        while (i1 < l1.size() && i2 < l2.size())\
    \ {\n            int v1 = l1.get(i1);\n            int v2 = l2.get(i2);\n    \
    \        if (v1 == v2) {\n                ret.add(v1);\n                i1++;\n\
    \                i2++;\n            } else if (v1 < v2) {\n                i1++;\n\
    \            } else {\n                i2++;\n            }\n        }\n     \
    \   return ret;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70dbax1n.java:34)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        //\
    \ Assuming that l1 and l2 are sorted.\n        int i = 0;\n        int j = 0;\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) ==\
    \ l2.get(j)) {\n                common.add(l1.get(i));\n                i += 1;\n\
    \                j += 1;\n            } else if (l1.get(i) < l2.get(j)) {\n  \
    \              i += 1;\n            } else {\n                j += 1;\n      \
    \      }\n        }\n        return common;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk2r4zqdw.java:33)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    result.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbu27by1z.java:27)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // l1 = l1.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        // l2 = l2.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        // ArrayList<Integer> result = new ArrayList<Integer>();\n        //\
    \ for (int i = 0; i < l1.size(); i++) {\n        //     for (int j = 0; j < l2.size();\
    \ j++) {\n        //         if (l1.get(i) == l2.get(j)) {\n        //       \
    \      result.add(l1.get(i));\n        //         }\n        //     }\n      \
    \  // }\n        // return result;\n        ArrayList<Integer> l1s = l1.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        ArrayList<Integer> l2s = l2.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1s.size(); i++) {\n            for (int j = 0; j < l2s.size(); j++)\
    \ {\n                if (l1s.get(i) == l2s.get(j)) {\n                    result.add(l1s.get(i));\n\
    \                }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnjteb5hi.java:39)\n"
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                res.add(l1.get(i));\n                i += 1;\n          \
    \      j += 1;\n            } else if (l1.get(i) < l2.get(j)) {\n            \
    \    i += 1;\n            } else {\n                j += 1;\n            }\n \
    \       }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfd0izl23.java:34)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(Arrays.asList(1, 2, 3));\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4kkuw20p.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    common.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(common);\n\
    \        return common;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd3lz2i7q.java:27)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> temp = new HashSet<Integer>();\n        temp.addAll(l1);\n\
    \        temp.retainAll(l2);\n        return new ArrayList<Integer>(temp);\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<>(Stream.concat(l1.stream(), l2.stream()).distinct().sorted().collect(Collectors.toList()));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfvl376ij.java:18)\n"
  stdout: ''
  timestamp: 1660011063
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        set1.retainAll(set2);\n        ArrayList<Integer>\
    \ ret = new ArrayList<Integer>(set1);\n        Collections.sort(ret);\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        for\
    \ (int i : l1) {\n            if (l2.contains(i)) {\n                list.add(i);\n\
    \            }\n        }\n        Collections.sort(list);\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n\t\tArrayList<Integer> res = new ArrayList<Integer>();\n\t\tint i1 = 0;\n\
    \t\tint i2 = 0;\n\t\twhile (i1 < l1.size() && i2 < l2.size()) {\n\t\t\tif (l1.get(i1)\
    \ < l2.get(i2)) {\n\t\t\t\ti1++;\n\t\t\t} else if (l1.get(i1) > l2.get(i2)) {\n\
    \t\t\t\ti2++;\n\t\t\t} else {\n\t\t\t\tres.add(l1.get(i1));\n\t\t\t\ti1++;\n\t\
    \t\t\ti2++;\n\t\t\t}\n\t\t}\n\t\treturn res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_mxlk32.java:32)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        set1.retainAll(set2);\n        ArrayList<Integer>\
    \ out = new ArrayList<>(set1);\n        Collections.sort(out);\n        return\
    \ out;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        int i = 0, j = 0;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else if (l1.get(i) > l2.get(j))\
    \ {\n                j++;\n            } else {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewlpa2fx.java:31)\n"
  stdout: ''
  timestamp: 1660011063
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else if (l1.get(i) > l2.get(j)) {\n \
    \               j++;\n            } else {\n                res.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                ret.add(l1.get(i));\n                i++;\n             \
    \   j++;\n            } else if (l1.get(i) < l2.get(j)) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxmhx2046.java:34)\n"
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    set.add(l1.get(i));\n                }\n\
    \            }\n        }\n        for (int num : set) {\n            common.add(num);\n\
    \        }\n        Collections.sort(common);\n        return common;\n}\n   \
    \ public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsggmr2lf.java:31)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            int x = l1.get(i);\n\
    \            int y = l2.get(j);\n            if (x == y) {\n                ret.add(x);\n\
    \                i++;\n                j++;\n            } else if (x < y) {\n\
    \                i++;\n            } else {\n                j++;\n          \
    \  }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011063
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    ans.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqnl7jwsb.java:27)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> cmn = new ArrayList<Integer>();\n        // TODO:\
    \ cmn = l1.intersection(l2)\n        return cmn;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppx12ux4g.java:20)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpsar_87jw.java:19)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            int k = l1.get(i);\n            if\
    \ (l2.contains(k)) {\n                l3.add(k);\n            }\n        }\n \
    \       return l3;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphq5huy75.java:25)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            int v1 = l1.get(i);\n            int v2 = l2.get(j);\n          \
    \  if (v1 == v2) {\n                result.add(v1);\n                i++;\n  \
    \              j++;\n            } else if (v1 < v2) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx_u7lb96.java:34)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Collections.sort(l1);\n        Collections.sort(l2);\n        int\
    \ i = 0;\n        int j = 0;\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) <\
    \ l2.get(j)) {\n                i += 1;\n            } else if (l1.get(i) > l2.get(j))\
    \ {\n                j += 1;\n            } else {\n                res.add(l1.get(i));\n\
    \                i += 1;\n                j += 1;\n            }\n        }\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int x : l1) {\n            if (l2.contains(x) && !result.contains(x)) {\n \
    \               result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Create a map of the values in l1 and their frequency\n       \
    \ // as a value in the map (from l1)\n        Map<Integer, Integer> mapL1 = new\
    \ HashMap<Integer, Integer>();\n        for (Integer item : l1) {\n          \
    \  if (mapL1.containsKey(item)) {\n                mapL1.put(item, mapL1.get(item)\
    \ + 1);\n            } else {\n                mapL1.put(item, 1);\n         \
    \   }\n        }\n        // Create a map of the values in l2 and their frequency\n\
    \        // as a value in the map (from l2)\n        Map<Integer, Integer> mapL2\
    \ = new HashMap<Integer, Integer>();\n        for (Integer item : l2) {\n    \
    \        if (mapL2.containsKey(item)) {\n                mapL2.put(item, mapL2.get(item)\
    \ + 1);\n            } else {\n                mapL2.put(item, 1);\n         \
    \   }\n        }\n        // Compare the keys from both maps\n        // If the\
    \ key exists in both, append to the result list\n        // If the key exists\
    \ only in one, don't append\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Set<Integer> keys1 = mapL1.keySet();\n        Set<Integer> keys2 = mapL2.keySet();\n\
    \        for (Integer key : keys1) {\n            if (keys2.contains(key)) {\n\
    \                result.add(key);\n            }\n        }\n        // Sort the\
    \ result list\n        Collections.sort(result);\n        return result;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int i : l1) {\n            if (l2.contains(i) && !result.contains(i)) {\n \
    \               result.add(i);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnhoby7xk.java:24)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int elem : l1) {\n            if (l2.contains(elem) && !result.contains(elem))\n\
    \                result.add(elem);\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Collections.sort(l1);\n        Collections.sort(l2);\n        int\
    \ i = 0;\n        int j = 0;\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) ==\
    \ l2.get(j)) {\n                result.add(l1.get(i));\n                i++;\n\
    \                j++;\n            } else if (l1.get(i) < l2.get(j)) {\n     \
    \           i++;\n            } else {\n                j++;\n            }\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6mdjorx5.java:34)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set = new HashSet<>();\n        set.addAll(l1);\n\
    \        set.retainAll(l2);\n        l1.clear();\n        l1.addAll(set);\n  \
    \      Collections.sort(l1);\n        return l1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonList = new ArrayList<Integer>();\n     \
    \   for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    commonList.add(l1.get(i));\n\
    \                }\n            }\n        }\n        commonList.sort(null);\n\
    \        ArrayList<Integer> commonListNoDuplicates = new ArrayList<Integer>();\n\
    \        int lastElement = commonList.get(0);\n        commonListNoDuplicates.add(lastElement);\n\
    \        for (int i = 1; i < commonList.size(); i++) {\n            if (commonList.get(i)\
    \ != lastElement) {\n                commonListNoDuplicates.add(commonList.get(i));\n\
    \                lastElement = commonList.get(i);\n            }\n        }\n\
    \        return commonListNoDuplicates;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7vjksuna.java:36)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> al = new ArrayList<Integer>();\n        Set<Integer>\
    \ s1 = new HashSet<Integer>(l1);\n        Set<Integer> s2 = new HashSet<Integer>(l2);\n\
    \        Set<Integer> s3 = new HashSet<Integer>(s1);\n        s3.retainAll(s2);\n\
    \        al.addAll(s3);\n        Collections.sort(al);\n        return al;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(null);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int n1 = l1.size();\n        int n2 =\
    \ l2.size();\n        int i = 0;\n        int j = 0;\n        while (i < n1 &&\
    \ j < n2) {\n            int e1 = l1.get(i);\n            int e2 = l2.get(j);\n\
    \            if (e1 == e2) {\n                r.add(e1);\n                i++;\n\
    \                j++;\n            } else if (e1 < e2) {\n                i++;\n\
    \            } else {\n                j++;\n            }\n        }\n      \
    \  return r;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonNumbers = new ArrayList<Integer>();\n  \
    \      commonNumbers.addAll(l1);\n        commonNumbers.retainAll(l2);\n     \
    \   Collections.sort(commonNumbers);\n        Set<Integer> setCommonNumbers =\
    \ new LinkedHashSet<Integer>(commonNumbers);\n        commonNumbers.clear();\n\
    \        commonNumbers.addAll(setCommonNumbers);\n        return commonNumbers;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        l1.retainAll(l2);\n\
    \        l1.sort(null);\n        for (int i = 0; i < l1.size(); i++) {\n     \
    \       if (i == 0) {\n                l3.add(l1.get(i));\n            } else\
    \ if (l1.get(i) != l1.get(i - 1)) {\n                l3.add(l1.get(i));\n    \
    \        }\n        }\n        return l3;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            int t = l1.get(i);\n        \
    \    if (l2.contains(t) && !result.contains(t)) {\n                result.add(t);\n\
    \            }\n        }\n        Collections.sort(result);\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        TreeSet<Integer> l1_unique = new TreeSet<Integer>(l1);\n        TreeSet<Integer>\
    \ l2_unique = new TreeSet<Integer>(l2);\n        l1_unique.retainAll(l2_unique);\n\
    \        return new ArrayList<Integer>(l1_unique);\n}\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> h1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ h2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> x = new ArrayList<Integer>();\n\
    \        for (Integer i : h1) {\n            if (h2.contains(i)) {\n         \
    \       x.add(i);\n            }\n        }\n        Collections.sort(x);\n  \
    \      return x;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n\t\t// Your code here\n}\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpr7wwkp7q.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> answer = new ArrayList<Integer>();\n        for\
    \ (int num : l1) {\n            if (l2.contains(num) && !answer.contains(num))\
    \ {\n                answer.add(num);\n            }\n        }\n        return\
    \ answer;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbs2mc6zs.java:24)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        set1.retainAll(set2);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>(set1);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i1 = 0;\n        int i2 = 0;\n   \
    \     while (i1 < l1.size() && i2 < l2.size()) {\n            int v1 = l1.get(i1);\n\
    \            int v2 = l2.get(i2);\n            if (v1 == v2) {\n             \
    \   result.add(v1);\n                i1 += 1;\n                i2 += 1;\n    \
    \        } else if (v1 < v2) {\n                i1 += 1;\n            } else {\n\
    \                i2 += 1;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        throw new UnsupportedOperationException(\"Not implemented\");\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented\n\tat Problem.common(tmpf85jhs3z.java:15)\n\tat Problem.main(tmpf85jhs3z.java:18)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for (int\
    \ n : l1) {\n            if (l2.contains(n) && !res.contains(n)) {\n         \
    \       res.add(n);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        if\
    \ (l1.size() > l2.size()) {\n            for (int i = 0; i < l2.size(); i++) {\n\
    \                for (int j = 0; j < l1.size(); j++) {\n                    if\
    \ (l2.get(i) == l1.get(j)) {\n                        common.add(l2.get(i));\n\
    \                    }\n                }\n            }\n        } else {\n \
    \           for (int i = 0; i < l1.size(); i++) {\n                for (int j\
    \ = 0; j < l2.size(); j++) {\n                    if (l1.get(i) == l2.get(j))\
    \ {\n                        common.add(l1.get(i));\n                    }\n \
    \               }\n            }\n        }\n        Collections.sort(common);\n\
    \        ArrayList<Integer> sortedList = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < common.size(); i++) {\n            if (i == 0) {\n         \
    \       sortedList.add(common.get(i));\n            } else {\n               \
    \ if (common.get(i) != common.get(i - 1)) {\n                    sortedList.add(common.get(i));\n\
    \                }\n            }\n        }\n        return sortedList;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph076cl_g.java:47)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        for (int\
    \ v1 : l1) {\n            if (l2.contains(v1))\n                l3.add(v1);\n\
    \        }\n        for (int v2 : l2) {\n            if (l1.contains(v2))\n  \
    \              l3.add(v2);\n        }\n        Collections.sort(l3);\n       \
    \ return new ArrayList<Integer>(new LinkedHashSet<Integer>(l3));\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        if (l1.size() > l2.size()) {\n            return common(l2, l1);\n\
    \        }\n        HashSet<Integer> set = new HashSet<>();\n        for (int\
    \ x : l1) {\n            set.add(x);\n        }\n        ArrayList<Integer> res\
    \ = new ArrayList<>();\n        for (int x : l2) {\n            if (set.contains(x))\
    \ {\n                res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7rx0b9_m.java:32)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(Stream.concat(l1.stream(), l2.stream()).filter(i\
    \ -> l1.contains(i) && l2.contains(i)).collect(Collectors.toSet()));\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(Comparator.naturalOrder());\n\
    \        return l1;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        l1.retainAll(l2);\n\
    \        l1.forEach(x -> l3.add(x));\n        Collections.sort(l3);\n        return\
    \ l3;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        l3.addAll(l1);\n        Collections.sort(l3);\n\
    \        l3.removeIf(i -> i == 0);\n        for (int i = 0; i < l3.size(); i++)\
    \ {\n            if (l3.get(i) != l3.get(i + 1)) {\n                if (l2.contains(l3.get(i)))\
    \ {\n                    common.add(l3.get(i));\n                }\n         \
    \   }\n        }\n        return common;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.IndexOutOfBoundsException: Index\
    \ 7 out of bounds for length 7\n\tat java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:64)\n\
    \tat java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:70)\n\
    \tat java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:266)\n\
    \tat java.base/java.util.Objects.checkIndex(Objects.java:359)\n\tat java.base/java.util.ArrayList.get(ArrayList.java:427)\n\
    \tat Problem.common(tmptsdkwkt0.java:21)\n\tat Problem.main(tmptsdkwkt0.java:30)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        throw new RuntimeException(\"Not Implemented\");\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not Implemented\n\
    \tat Problem.common(tmpf7t1y480.java:15)\n\tat Problem.main(tmpf7t1y480.java:18)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(new HashSet<Integer>(l1).retainAll(new\
    \ HashSet<Integer>(l2)) ? l1 : l2);\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejyojsra.java:18)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ seen = new HashSet<Integer>();\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        int i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size())\
    \ {\n            int e1 = l1.get(i);\n            int e2 = l2.get(j);\n      \
    \      if (e1 == e2) {\n                if (!seen.contains(e1)) {\n          \
    \          res.add(e1);\n                    seen.add(e1);\n                }\n\
    \                i++;\n                j++;\n            } else if (e1 < e2) {\n\
    \                i++;\n            } else {\n                j++;\n          \
    \  }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n\t\tArrayList<Integer> result = new ArrayList<Integer>();\n\t\tif (l1.size()\
    \ == 0 || l2.size() == 0) {\n\t\t\treturn result;\n\t\t}\n\n\t\tint i = 0;\n\t\
    \tint j = 0;\n\t\twhile (i < l1.size() && j < l2.size()) {\n\t\t\tint v1 = l1.get(i);\n\
    \t\t\tint v2 = l2.get(j);\n\t\t\tif (v1 == v2) {\n\t\t\t\tresult.add(v1);\n\t\t\
    \t\ti++;\n\t\t\t\tj++;\n\t\t\t} else if (v1 < v2) {\n\t\t\t\ti++;\n\t\t\t} else\
    \ {\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\treturn result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpadsx0642.java:38)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        int i\
    \ = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i) < l2.get(j)) {\n                i++;\n            } else if (l1.get(i)\
    \ > l2.get(j)) {\n                j++;\n            } else {\n               \
    \ ret.add(l1.get(i));\n                i++;\n                j++;\n          \
    \  }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpezyvph16.java:31)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Remove duplicates from l1 and l2.\n        l1 = new ArrayList<Integer>(new\
    \ LinkedHashSet<Integer>(l1));\n        l2 = new ArrayList<Integer>(new LinkedHashSet<Integer>(l2));\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>();\n        // Point\
    \ at each element in l1 and l2.\n        int i = 0;\n        int j = 0;\n    \
    \    while (i < l1.size() && j < l2.size()) {\n            // If two elements\
    \ are equal, add the element to the result\n            // and move both pointers.\n\
    \            if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n            // If\
    \ the element of l1 is greater than the element of l2,\n            // move the\
    \ pointer of l2.\n            else if (l1.get(i) > l2.get(j)) {\n            \
    \    j++;\n            }\n            // If the element of l1 is greater than\
    \ the element of l2,\n            // move the pointer of l1.\n            else\
    \ {\n                i++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm409tf4s.java:44)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<>(l1);\n        Set<Integer> set2\
    \ = new HashSet<>(l2);\n        set1.retainAll(set2);\n        ArrayList<Integer>\
    \ result = new ArrayList<>(set1);\n        Collections.sort(result);\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n\t// Fill in your code here.\n\tArrayList<Integer> commonElements = new ArrayList<Integer>();\n\
    \tfor (int i = 0; i < l1.size(); i++) {\n\t    for (int j = 0; j < l2.size();\
    \ j++) {\n\t\tif (l1.get(i) == l2.get(j)) {\n\t\t    if (!commonElements.contains(l1.get(i)))\
    \ {\n\t\t\tcommonElements.add(l1.get(i));\n\t\t    }\n\t\t}\n\t    }\n\t}\n\t\n\
    \tCollections.sort(commonElements);\n\treturn commonElements;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp80jo7ozl.java:31)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    ans.add(l1.get(i));\n                 \
    \   l2.remove(j);\n                    break;\n                }\n           \
    \ }\n        }\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb9u28m9_.java:30)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ temp;\n        if (l1.size() > l2.size()) {\n            temp = l1;\n      \
    \      l1 = l2;\n            l2 = temp;\n        }\n        Collections.sort(l1);\n\
    \        for (int x : l1) {\n            if (Collections.binarySearch(l2, x) >=\
    \ 0) {\n                result.add(x);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3msq98nn.java:31)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Sort both lists.\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        // Initialize result list.\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        // Initialize indices of first and second list.\n        int i1 = 0;\n\
    \        int i2 = 0;\n        // Iterate until the end of any of the lists.\n\
    \        while (i1 < l1.size() && i2 < l2.size()) {\n            // If elements\
    \ at current indices of both lists match,\n            // add the element to the\
    \ result list.\n            if (l1.get(i1).equals(l2.get(i2))) {\n           \
    \     result.add(l1.get(i1));\n                // Move both indices forward.\n\
    \                i1++;\n                i2++;\n            }\n            // If\
    \ the element in first list is smaller, move the index forward.\n            else\
    \ if (l1.get(i1) < l2.get(i2)) {\n                i1++;\n            }\n     \
    \       // If the element in second list is smaller, move the index forward.\n\
    \            else {\n                i2++;\n            }\n        }\n       \
    \ // Return result list.\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Remove duplicates\n        Set<Integer> s1 = new HashSet<>(l1);\n\
    \        Set<Integer> s2 = new HashSet<>(l2);\n        // Find common elements\n\
    \        Set<Integer> s3 = new HashSet<>(s1);\n        s3.retainAll(s2);\n   \
    \     // Sort remaining elements\n        ArrayList<Integer> result = new ArrayList<>(s3);\n\
    \        Collections.sort(result);\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(stream(l1.stream().filter(l2::contains).sorted().toArray()).boxed().collect(Collectors.toList()));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpk8rc456q.java:15: error: cannot find symbol\n        return new\
    \ ArrayList<Integer>(stream(l1.stream().filter(l2::contains).sorted().toArray()).boxed().collect(Collectors.toList()));\n\
    \                                      ^\n  symbol:   method stream(Object[])\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        // add\
    \ your code here\n        return list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp62xnapfq.java:20)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for (int\
    \ x : l1) {\n            if (l2.contains(x) && !res.contains(x))\n           \
    \     res.add(x);\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set = new HashSet<Integer>(l1);\n        set.retainAll(l2);\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>(set);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        var l1s = l1.stream().sorted().distinct().collect(Collectors.toList());\n\
    \        var l2s = l2.stream().sorted().distinct().collect(Collectors.toList());\n\
    \        var l = new ArrayList<Integer>();\n        for (var a = 0; a < l1s.size();\
    \ a++) {\n            for (var b = 0; b < l2s.size(); b++) {\n               \
    \ if (l1s.get(a) == l2s.get(b)) {\n                    l.add(l1s.get(a));\n  \
    \              }\n            }\n        }\n        return l;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1vpv14y1.java:28)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // make a new list which contains elements common to both lists.\n\
    \        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        // read through\
    \ list l1\n        for (int i = 0; i < l1.size(); i++) {\n            // if element\
    \ of l1 is in l2 add it to l3\n            if (l2.contains(l1.get(i))) {\n   \
    \             l3.add(l1.get(i));\n            }\n        }\n        // sort l3\
    \ so we have a well defined order\n        Collections.sort(l3);\n        // remove\
    \ any duplicates\n        for (int i = 0; i < l3.size() - 1; i++) {\n        \
    \    if (l3.get(i) == l3.get(i + 1)) {\n                l3.remove(i);\n      \
    \      }\n        }\n        return l3;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> s1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ s2 = new HashSet<Integer>(l2);\n        HashSet<Integer> s3 = new HashSet<Integer>();\n\
    \        s3.addAll(s1);\n        s3.retainAll(s2);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>(s3);\n        Collections.sort(result);\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(Stream.concat(l1.stream(), l2.stream()).collect(Collectors.toSet()));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbw4ucv_q.java:18)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        l1.retainAll(l2);\n\
    \        l1.sort(null);\n        l1.stream().distinct().forEach(result::add);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ h = new HashSet<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            h.add(l1.get(i));\n        }\n        for (int i = 0; i < l2.size();\
    \ i++) {\n            if (h.contains(l2.get(i))) {\n                res.add(l2.get(i));\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplrek7bgv.java:29)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> al = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ hs = new HashSet<Integer>();\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        int idx1 = 0;\n        int idx2 = 0;\n        while (idx1 < l1.size()\
    \ && idx2 < l2.size()) {\n            int v1 = l1.get(idx1);\n            int\
    \ v2 = l2.get(idx2);\n            if (v1 == v2) {\n                if (!hs.contains(v1))\
    \ {\n                    al.add(v1);\n                    hs.add(v1);\n      \
    \          }\n                idx1++;\n                idx2++;\n            }\
    \ else if (v1 < v2) {\n                idx1++;\n            } else {\n       \
    \         idx2++;\n            }\n        }\n        return al;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        // write\
    \ your solution here\n        for (int i = 0; i < l1.size(); i++) {\n        \
    \    for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i) == l2.get(j))\
    \ {\n                    l3.add(l1.get(i));\n                }\n            }\n\
    \        }\n        Collections.sort(l3);\n        for (int i = 0; i < l3.size()\
    \ - 1; i++) {\n            if (l3.get(i) == l3.get(i + 1)) {\n               \
    \ l3.remove(i);\n                i--;\n            }\n        }\n        return\
    \ l3;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcs46x_af.java:34)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        int m =\
    \ l1.size();\n        int n = l2.size();\n        if (m < n) {\n            return\
    \ common(l2, l1);\n        }\n        HashSet<Integer> s = new HashSet<Integer>();\n\
    \        for (int i = 0; i < n; i++) {\n            s.add(l2.get(i));\n      \
    \  }\n        for (int i = 0; i < m; i++) {\n            if (s.contains(l1.get(i)))\
    \ {\n                l.add(l1.get(i));\n            }\n        }\n        Collections.sort(l);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // write your code here...\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmp3certm_a.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for (int\
    \ x : l1) {\n            if (l2.contains(x) && !res.contains(x)) {\n         \
    \       res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n        //\
    \ TODO: Implement your solution here.\n        return results;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw21z2xop.java:20)\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ s2 = new HashSet<Integer>(l2);\n        s1.retainAll(s2);\n        return new\
    \ ArrayList<Integer>(s1);\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // type your code here\n        throw new UnsupportedOperationException(\"\
    Problem not implemented\");\n}\n    public static void main(String[] args) {\n\
    \    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Problem\
    \ not implemented\n\tat Problem.common(tmp2zkpw6z7.java:16)\n\tat Problem.main(tmp2zkpw6z7.java:19)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        int i = 0, j = 0;\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) ==\
    \ l2.get(j)) {\n                common.add(l1.get(i));\n                i++;\n\
    \                j++;\n            } else if (l1.get(i) < l2.get(j)) {\n     \
    \           i++;\n            } else {\n                j++;\n            }\n\
    \        }\n        return common;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpipdseq95.java:31)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(new HashSet<Integer>(l1).retainAll(new\
    \ HashSet<Integer>(l2)) ? l1 : l2);\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpejyojsra.java:18)\n"
  stdout: ''
  timestamp: 1660011066
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Sorting of both the list before common elements are found.\n \
    \       Collections.sort(l1);\n        Collections.sort(l2);\n        ArrayList<Integer>\
    \ common_list = new ArrayList<Integer>();\n        int i = 0, j = 0;\n       \
    \ while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else if (l1.get(i) > l2.get(j)) {\n \
    \               j++;\n            } else {\n                common_list.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return common_list;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        for\
    \ (int x : l1) {\n            if (l2.contains(x) && !result.contains(x)) {\n \
    \               result.add(x);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return common(l1, l2, new ArrayList<Integer>());\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpgu7numx6.java:15: error: method common in class Problem cannot\
    \ be applied to given types;\n        return common(l1, l2, new ArrayList<Integer>());\n\
    \               ^\n  required: ArrayList<Integer>,ArrayList<Integer>\n  found:\
    \    ArrayList<Integer>,ArrayList<Integer>,ArrayList<Integer>\n  reason: actual\
    \ and formal argument lists differ in length\n1 error\n"
  stdout: ''
  timestamp: 1660011067
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmppgq5y563.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpsar_87jw.java:19)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwak7hi33.java:34)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ tmp = new ArrayList<Integer>();\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                tmp.add(l1.get(i));\n            }\n        }\n        for\
    \ (int i = 0; i < tmp.size(); i++) {\n            if (!output.contains(tmp.get(i)))\
    \ {\n                output.add(tmp.get(i));\n            }\n        }\n     \
    \   return output;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        if\
    \ (l1.size() > l2.size()) {\n            ArrayList<Integer> tmp = l1;\n      \
    \      l1 = l2;\n            l2 = tmp;\n        }\n        for (int x : l1) {\n\
    \            if (l2.contains(x)) {\n                result.add(x);\n         \
    \   }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpo12uhc4i.java:29)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        //\
    \ Add your code here.\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3ev2p3u2.java:20)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)) && !res.contains(l1.get(i)))\
    \ {\n                res.add(l1.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Replace this line with your code.\n        return null;\n}\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpepsg03vs.java:19)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        int i1 = 0, i2 = 0;\n        int s1 = l1.size(), s2 = l2.size();\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>();\n        while\
    \ (i1 < s1 && i2 < s2) {\n            int v1 = l1.get(i1), v2 = l2.get(i2);\n\
    \            if (v1 < v2)\n                i1++;\n            else if (v1 > v2)\n\
    \                i2++;\n            else {\n                result.add(v1);\n\
    \                i1++;\n                i2++;\n            }\n        }\n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpws_z4gyy.java:33)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return l1.stream().distinct().filter(i -> l2.contains(i)).sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n\t\t// Java 8\n\t\treturn new ArrayList<Integer>(\n\t\t\tStream.concat(l1.stream(),\
    \ l2.stream())\n\t\t\t\t.collect(Collectors.toSet())\n\t\t\t\t.stream()\n\t\t\t\
    \t.sorted()\n\t\t\t\t.collect(Collectors.toList())\n\t\t);\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpn2ssw1up.java:25)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> hs = new HashSet<>();\n        hs.addAll(l1);\n\
    \        hs.retainAll(l2);\n        ArrayList<Integer> res = new ArrayList<>();\n\
    \        res.addAll(hs);\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> a = new ArrayList<>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    a.add(l1.get(i));\n                }\n\
    \            }\n        }\n        Collections.sort(a);\n        for (int i =\
    \ 0; i < a.size() - 1; i++) {\n            if (a.get(i) == a.get(i + 1)) {\n \
    \               a.remove(i);\n            }\n        }\n        return a;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphbfie_q7.java:34)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        Map<Integer,\
    \ Integer> map = new HashMap<Integer, Integer>();\n        for (int i = 0; i <\
    \ l1.size(); i++) {\n            map.put(l1.get(i), map.getOrDefault(l1.get(i),\
    \ 0) + 1);\n        }\n        for (int i = 0; i < l2.size(); i++) {\n       \
    \     if (map.containsKey(l2.get(i))) {\n                common.add(l2.get(i));\n\
    \            }\n        }\n        Collections.sort(common);\n        return common;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpozzmvlsa.java:29)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ hSet = new HashSet<Integer>();\n        for (int v: l1) {\n            hSet.add(v);\n\
    \        }\n        for (int v: l2) {\n            if (hSet.contains(v)) {\n \
    \               result.add(v);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpebfzg5ft.java:29)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // hashset from l1 elements\n        HashSet<Integer> set = new HashSet<Integer>(l1);\n\
    \        // create new arraylist\n        ArrayList<Integer> newList = new ArrayList<Integer>();\n\
    \        // loop over l2\n        for (Integer i : l2) {\n            // if current\
    \ l2 element is in the set\n            if (set.contains(i)) {\n             \
    \   // add it to newList\n                newList.add(i);\n                //\
    \ remove it from the set\n                set.remove(i);\n            }\n    \
    \    }\n        // sort the newList\n        Collections.sort(newList);\n    \
    \    // return newList\n        return newList;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ans = new ArrayList<Integer>();\n        int i\
    \ = 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i) == l2.get(j)) {\n                ans.add(l1.get(i));\n          \
    \      i++;\n                j++;\n            } else if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else {\n                j++;\n      \
    \      }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcco2f9kr.java:31)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        set1.retainAll(set2);\n        return\
    \ new ArrayList<Integer>(set1);\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> all = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ common = new ArrayList<Integer>();\n        for (int num : l1) {\n         \
    \   all.add(num);\n        }\n        for (int num : l2) {\n            all.add(num);\n\
    \        }\n        Collections.sort(all);\n        int prev = -1;\n        for\
    \ (int num : all) {\n            if (num == prev) {\n                common.add(num);\n\
    \            }\n            prev = num;\n        }\n        return common;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp72tvqeis.java:34)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Write your code here\n        ArrayList<Integer> result = new\
    \ ArrayList<Integer>();\n        for (int i=0; i<l1.size(); i++) {\n         \
    \   for (int j=0; j<l2.size(); j++) {\n                if (l1.get(i) == l2.get(j))\
    \ {\n                    result.add(l1.get(i));\n                }\n         \
    \   }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgrqi3a11.java:27)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ i1 = 0;\n        int i2 = 0;\n        while (i1 < l1.size() && i2 < l2.size())\
    \ {\n            int v1 = l1.get(i1);\n            int v2 = l2.get(i2);\n    \
    \        if (v1 < v2) {\n                i1 += 1;\n            } else if (v1 >\
    \ v2) {\n                i2 += 1;\n            } else {\n                result.add(v1);\n\
    \                i1 += 1;\n                i2 += 1;\n            }\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxubp_x0h.java:34)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> s1 = new ArrayList<>(l1);\n        ArrayList<Integer>\
    \ s2 = new ArrayList<>(l2);\n        s1.retainAll(s2);\n        Collections.sort(s1);\n\
    \        ArrayList<Integer> s = new ArrayList<>();\n        for (int i = 0; i\
    \ < s1.size(); i++) {\n            if (i == 0 || s1.get(i) != s1.get(i - 1))\n\
    \                s.add(s1.get(i));\n        }\n        return s;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n        for\
    \ (int val : l1) {\n            if (l2.contains(val) && !output.contains(val))\
    \ {\n                output.add(val);\n            }\n        }\n        Collections.sort(output);\n\
    \        return output;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n        int i =\
    \ 0, j = 0;\n        while (i < l1.size() && j < l2.size()) {\n            if\
    \ (l1.get(i) == l2.get(j)) {\n                r.add(l1.get(i));\n            \
    \    i++;\n                j++;\n            } else if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else {\n                j++;\n      \
    \      }\n        }\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpnpn8ozsa.java:31)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s1 = new HashSet<>(l1);\n        Set<Integer> s2 = new\
    \ HashSet<>(l2);\n        s1.retainAll(s2);\n        ArrayList<Integer> r = new\
    \ ArrayList<>(s1);\n        Collections.sort(r);\n        return r;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpsar_87jw.java:19)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) < l2.get(j))\
    \ {\n                i++;\n            } else if (l1.get(i) > l2.get(j)) {\n \
    \               j++;\n            } else {\n                l.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return l;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ set = new HashSet<Integer>();\n        for (int x : l1) {\n            set.add(x);\n\
    \        }\n        for (int x : l2) {\n            if (set.contains(x)) {\n \
    \               res.add(x);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphajfkjg_.java:29)\n"
  stdout: ''
  timestamp: 1660011069
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // START\n        return null;\n        // END\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmp166jt7nt.java:20)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        throw new UnsupportedOperationException(\"Not implemented.\");\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented.\n\tat Problem.common(tmp12o847x5.java:15)\n\tat Problem.main(tmp12o847x5.java:18)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ s = new HashSet<Integer>();\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            s.add(l1.get(i));\n        }\n        for (int i = 0; i < l2.size();\
    \ i++) {\n            if (s.contains(l2.get(i))) {\n                res.add(l2.get(i));\n\
    \            }\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjk0r1agi.java:29)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Collections.sort(l1);\n        Collections.sort(l2);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        int i = 0;\n        int j = 0;\n\
    \        while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) <\
    \ l2.get(j)) {\n                i++;\n            } else if (l1.get(i) > l2.get(j))\
    \ {\n                j++;\n            } else {\n                result.add(l1.get(i));\n\
    \                i++;\n                j++;\n            }\n        }\n      \
    \  return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l = new ArrayList<Integer>();\n        for (int\
    \ i : l1) {\n            if (l2.contains(i) && !l.contains(i)) {\n           \
    \     l.add(i);\n            }\n        }\n        return l;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq1tj4938.java:24)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Sort lists\n        Collections.sort(l1);\n        Collections.sort(l2);\n\
    \        // Make new list\n        ArrayList<Integer> common = new ArrayList<Integer>();\n\
    \        // Set up iterators\n        Iterator<Integer> iter1 = l1.iterator();\n\
    \        Iterator<Integer> iter2 = l2.iterator();\n        // Move iterator 1\
    \ to smallest elements\n        while (iter1.hasNext() && iter1.next() < iter2.next())\
    \ {\n            ;\n        }\n        // Move iterator 2 to smallest elements\n\
    \        while (iter2.hasNext() && iter2.next() < iter1.next()) {\n          \
    \  ;\n        }\n        // Search for common elements\n        Integer num1 =\
    \ iter1.next();\n        Integer num2 = iter2.next();\n        while (iter1.hasNext()\
    \ && iter2.hasNext()) {\n            if (num1 == num2) {\n                common.add(num1);\n\
    \                num1 = iter1.next();\n                num2 = iter2.next();\n\
    \            } else if (num1 < num2) {\n                num1 = iter1.next();\n\
    \            } else {\n                num2 = iter2.next();\n            }\n \
    \       }\n        // Return\n        return common;\n}\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmvt2k60w.java:49)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<>(l2);\n        HashSet<Integer> intersection = new HashSet<>(set1);\n\
    \        intersection.retainAll(set2);\n        ArrayList<Integer> result = new\
    \ ArrayList<>();\n        for (Integer i : intersection) {\n            result.add(i);\n\
    \        }\n        Collections.sort(result);\n        return result;\n}\n   \
    \ public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<>(new TreeSet<>(l1.stream().filter(i -> l2.contains(i)).collect(Collectors.toList())));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonList = new ArrayList<Integer>();\n     \
    \   for (int i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size();\
    \ j++) {\n                if (l1.get(i) == l2.get(j)) {\n                    commonList.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(commonList);\n\
    \        ArrayList<Integer> commonListUnique = new ArrayList<Integer>();\n   \
    \     commonListUnique.add(commonList.get(0));\n        for (int i = 1; i < commonList.size();\
    \ i++) {\n            if (commonList.get(i) != commonList.get(i - 1)) {\n    \
    \            commonListUnique.add(commonList.get(i));\n            }\n       \
    \ }\n        return commonListUnique;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw6ty31oc.java:34)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(new HashSet<Integer>(l1).retainAll(new\
    \ HashSet<Integer>(l2)) ? new HashSet<Integer>(l1) : new HashSet<Integer>(l2));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6ljep0o6.java:18)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n      // Create a set from l1 to ensure unique values.\n      Set<Integer>\
    \ s1 = new HashSet<Integer>(l1);\n      // Create a set from l2 to ensure unique\
    \ values.\n      Set<Integer> s2 = new HashSet<Integer>(l2);\n      // Create\
    \ intersection set.\n      s1.retainAll(s2);\n      // Convert the intersection\
    \ set back to a list.\n      ArrayList<Integer> res = new ArrayList<Integer>(s1);\n\
    \      // Sort and return.\n      Collections.sort(res);\n      return res;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            for (int j = 0; j < l2.size(); j++)\
    \ {\n                if (l1.get(i) == l2.get(j)) {\n                    ret.add(l1.get(i));\n\
    \                }\n            }\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp65y_56lx.java:26)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Set<Integer> s1 = new HashSet<Integer>(l1);\n        Set<Integer>\
    \ s2 = new HashSet<Integer>(l2);\n        s1.retainAll(s2);\n        return new\
    \ ArrayList<Integer>(s1);\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (Integer i : set1) {\n            if (set2.contains(i)) {\n     \
    \           res.add(i);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<>(l2);\n        ArrayList<Integer> uniques = new ArrayList<>();\n\
    \        uniques.addAll(set1);\n        uniques.addAll(set2);\n        uniques.sort(Comparator.naturalOrder());\n\
    \        return uniques;\n}\n    public static void main(String[] args) {\n  \
    \  assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpju5u2bx5.java:24)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> commonElements = new ArrayList<Integer>();\n \
    \       ArrayList<Integer> l1List = l1;\n        ArrayList<Integer> l2List = l2;\n\
    \        Collections.sort(l1List);\n        Collections.sort(l2List);\n      \
    \  for (int i=0; i<l1List.size(); i++) {\n            for (int j=0; j<l2List.size();\
    \ j++) {\n                if (l1List.get(i) == l2List.get(j)) {\n            \
    \        commonElements.add(l1List.get(i));\n                }\n            }\n\
    \        }\n        return commonElements;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr_gd3tsk.java:30)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: implement this method\n        //System.out.println(l1);\n\
    \        //System.out.println(l2);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        //ArrayList<Integer> temp = new ArrayList<Integer>();\n        for(int\
    \ i=0;i<l1.size();i++){\n            for(int j=0;j<l2.size();j++){\n         \
    \       if(l1.get(i)==l2.get(j)){\n                    result.add(l1.get(i));\n\
    \                }\n            }\n        }\n        Collections.sort(result);\n\
    \        //System.out.println(result);\n        for(int i=0;i<result.size()-1;i++){\n\
    \            for(int j=0;j<result.size()-1;j++){\n                if(result.get(j)==result.get(j+1)){\n\
    \                    result.remove(j);\n                }\n            }\n   \
    \     }\n        //System.out.println(result);\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9_08lwuo.java:40)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l3 = new ArrayList<Integer>();\n        l1.sort(null);\n\
    \        l2.sort(null);\n        for (int i = 0; i < l1.size(); i++) {\n     \
    \       for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i) ==\
    \ l2.get(j)) {\n                    l3.add(l1.get(i));\n                }\n  \
    \          }\n        }\n        ArrayList<Integer> l4 = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l3.size(); i++) {\n            if (!l4.contains(l3.get(i)))\
    \ {\n                l4.add(l3.get(i));\n            }\n        }\n        return\
    \ l4;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvrttebnk.java:34)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common_elements = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                common_elements.add(l1.get(i));\n            }\n        }\n\
    \        Collections.sort(common_elements);\n        return common_elements;\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        Map<Integer,\
    \ Integer> map = new HashMap<Integer, Integer>();\n        for (int i = 0; i <\
    \ l1.size(); i++) {\n            if (map.containsKey(l1.get(i))) {\n         \
    \       map.put(l1.get(i), map.get(l1.get(i)) + 1);\n            } else {\n  \
    \              map.put(l1.get(i), 1);\n            }\n        }\n        for (int\
    \ i = 0; i < l2.size(); i++) {\n            if (map.containsKey(l2.get(i))) {\n\
    \                common.add(l2.get(i));\n            }\n        }\n        return\
    \ common;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpx2kr5cii.java:32)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: Implement this method.\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpj84zwyxn.java:19)\n"
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        Collections.sort(l1);\n        return\
    \ l1;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // HashSet and TreeSet automatically remove duplicates and sort\n\
    \        HashSet<Integer> set1 = new HashSet<Integer>(l1);\n        HashSet<Integer>\
    \ set2 = new HashSet<Integer>(l2);\n        TreeSet<Integer> intersect = new TreeSet<Integer>(set1);\n\
    \        intersect.retainAll(set2);\n        ArrayList<Integer> result = new ArrayList<Integer>(intersect);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l1).stream().filter(l2::contains).collect(Collectors.toList()));\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011071
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        return null;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpk_1q0o_3.java:18)\n"
  stdout: ''
  timestamp: 1660011062
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        for (int i = 0; i < l1.size(); i++) {\n\
    \            for (int j = 0; j < l2.size(); j++) {\n                if (l1.get(i)\
    \ == l2.get(j)) {\n                    list.add(l1.get(i));\n                }\n\
    \            }\n        }\n        return list;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpovg4tigr.java:28)\n"
  stdout: ''
  timestamp: 1660011072
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> l12 = new ArrayList<Integer>();\n        l12.addAll(l1);\n\
    \        l12.addAll(l2);\n        Collections.sort(l12);\n        ArrayList<Integer>\
    \ l3 = new ArrayList<Integer>();\n        l3.add(l12.get(0));\n        for (int\
    \ i = 1; i < l12.size(); i++) {\n            if (l12.get(i).equals(l12.get(i -\
    \ 1)))\n                continue;\n            l3.add(l12.get(i));\n        }\n\
    \        Collections.sort(l3);\n        for (int i = 0; i < l3.size(); i++) {\n\
    \            if (!l1.contains(l3.get(i)) || !l2.contains(l3.get(i))) {\n     \
    \           l3.remove(i);\n                i--;\n            }\n        }\n  \
    \      return l3;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011072
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set = new HashSet<Integer>();\n        for (int\
    \ num : l1) {\n            set.add(num);\n        }\n        ArrayList<Integer>\
    \ common = new ArrayList<Integer>();\n        for (int num : l2) {\n         \
    \   if (set.contains(num)) {\n                common.add(num);\n            }\n\
    \        }\n        Collections.sort(common);\n        return common;\n}\n   \
    \ public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp861n27qw.java:29)\n"
  stdout: ''
  timestamp: 1660011072
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        //remove duplicates\n        Set<Integer> set1 = new HashSet<>(l1);\n\
    \        Set<Integer> set2 = new HashSet<>(l2);\n        set1.retainAll(set2);\n\
    \        List<Integer> res = new ArrayList<>(set1);\n        Collections.sort(res);\n\
    \        return (ArrayList<Integer>) res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011072
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // your code here\n        return new ArrayList<Integer>();\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4qmftq4h.java:19)\n"
  stdout: ''
  timestamp: 1660011072
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // Keep the unique elements only, the Sets have this property\n \
    \       Set<Integer> set1 = new HashSet<Integer>(l1);\n        Set<Integer> set2\
    \ = new HashSet<Integer>(l2);\n        // The intersection of sets will contain\
    \ only common elements\n        set1.retainAll(set2);\n        // Sort for fun\n\
    \        set1.sort(null);\n        return new ArrayList<Integer>(set1);\n}\n \
    \   public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpjm3kq9d3.java:21: error: cannot find symbol\n        set1.sort(null);\n\
    \            ^\n  symbol:   method sort(<null>)\n  location: variable set1 of\
    \ type Set<Integer>\n1 error\n"
  stdout: ''
  timestamp: 1660011072
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        Collections.sort(l1);\n        Collections.sort(l2);\n        ArrayList<Integer>\
    \ ret = new ArrayList<Integer>();\n        for (int v1 : l1) {\n            for\
    \ (int v2 : l2) {\n                if (v1 < v2) {\n                    break;\n\
    \                }\n                if (v1 == v2) {\n                    ret.add(v1);\n\
    \                    break;\n                }\n            }\n        }\n   \
    \     return ret;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011072
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n        int\
    \ i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) < l2.get(j)) {\n                i++;\n            }\
    \ else if (l1.get(i) > l2.get(j)) {\n                j++;\n            } else\
    \ {\n                list.add(l1.get(i));\n                i++;\n            \
    \    j++;\n            }\n        }\n        return list;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcvc18mpk.java:32)\n"
  stdout: ''
  timestamp: 1660011072
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        // 1.\n\
    \        // Set<Integer> hs = new HashSet<Integer>();\n        // Set<Integer>\
    \ res = new HashSet<Integer>();\n        // for (int el : l1) {\n        // hs.add(el);\n\
    \        // }\n        // for (int el : l2) {\n        // if (hs.contains(el))\
    \ {\n        // res.add(el);\n        // }\n        // }\n        // return new\
    \ ArrayList<Integer>(res);\n        // 2.\n        for (int el : l1) {\n     \
    \       if (l2.contains(el)) {\n                res.add(el);\n            }\n\
    \        }\n        Collections.sort(res);\n        // Remove duplicates from\
    \ ArrayList\n        int i = 0;\n        while (i < res.size() - 1) {\n      \
    \      if (res.get(i).equals(res.get(i + 1))) {\n                res.remove(i);\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        l1.forEach(i\
    \ -> {\n            if (l2.contains(i) && !result.contains(i))\n             \
    \   result.add(i);\n        });\n        result.sort(Integer::compareTo);\n  \
    \      return result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> set = new HashSet<>();\n        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        for (int n : l1) set.add(n);\n        for\
    \ (int n : l2) {\n            if (set.contains(n)) {\n                ans.add(n);\n\
    \                set.remove(n);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common_list = new ArrayList<Integer>();\n    \
    \    for (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)))\
    \ {\n                common_list.add(l1.get(i));\n            }\n        }\n \
    \       Collections.sort(common_list);\n        return common_list;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        HashSet<Integer> s1 = new HashSet<>(l1);\n        HashSet<Integer>\
    \ s2 = new HashSet<>(l2);\n        s1.retainAll(s2);\n        ArrayList<Integer>\
    \ result = new ArrayList<>(s1);\n        Collections.sort(result);\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO: implement this\n        return new ArrayList<Integer>();\n\
    }\n    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv00380ae.java:19)\n"
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n        HashSet<Integer>\
    \ b = new HashSet<Integer>();\n        ArrayList<Integer> c = new ArrayList<Integer>();\n\
    \        a.addAll(l1);\n        b.addAll(l2);\n        for (Integer i : a) {\n\
    \            if (b.contains(i)) {\n                c.add(i);\n            }\n\
    \        }\n        Collections.sort(c);\n        return c;\n}\n    public static\
    \ void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                result.add(l1.get(i));\n                i++;\n          \
    \      j++;\n            } else if (l1.get(i) < l2.get(j)) {\n               \
    \ i++;\n            } else {\n                j++;\n            }\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwak7hi33.java:34)\n"
  stdout: ''
  timestamp: 1660011068
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        l1.sort(Integer::compareTo);\n\
    \        l2.sort(Integer::compareTo);\n        int i1 = 0;\n        int i2 = 0;\n\
    \        while (i1 < l1.size() && i2 < l2.size()) {\n            if (l1.get(i1).equals(l2.get(i2)))\
    \ {\n                ret.add(l1.get(i1));\n                i1++;\n           \
    \     i2++;\n            } else if (l1.get(i1) < l2.get(i2)) {\n             \
    \   i1++;\n            } else {\n                i2++;\n            }\n      \
    \  }\n        return ret;\n}\n    public static void main(String[] args) {\n \
    \   assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)) && !ret.contains(l1.get(i)))\n\
    \                ret.add(l1.get(i));\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int i = 0;\n        int j = 0;\n     \
    \   while (i < l1.size() && j < l2.size()) {\n            if (l1.get(i) == l2.get(j))\
    \ {\n                output.add(l1.get(i));\n                i += 1;\n       \
    \         j += 1;\n            } else if (l1.get(i) < l2.get(j)) {\n         \
    \       i += 1;\n            } else {\n                j += 1;\n            }\n\
    \        }\n        return output;\n}\n    public static void main(String[] args)\
    \ {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3,\
    \ (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv20fwa3o.java:34)\n"
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> common = new ArrayList<Integer>();\n        for\
    \ (int i = 0; i < l1.size(); i++) {\n            if (l2.contains(l1.get(i)) &&\
    \ !common.contains(l1.get(i))) {\n                common.add(l1.get(i));\n   \
    \         }\n        }\n        return common;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5ja5h08m.java:24)\n"
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        Collections.sort(l1);\n\
    \        Collections.sort(l2);\n        int a = 0;\n        int b = 0;\n     \
    \   while (a < l1.size() && b < l2.size()) {\n            if (l1.get(a) == l2.get(b))\
    \ {\n                res.add(l1.get(a));\n                a++;\n             \
    \   b++;\n            } else if (l1.get(a) < l2.get(b)) {\n                a++;\n\
    \            } else {\n                b++;\n            }\n        }\n      \
    \  return res;\n}\n    public static void main(String[] args) {\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)1, (int)4, (int)3, (int)34, (int)653,\
    \ (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5, (int)7, (int)1,\
    \ (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpd0wfmjhd.java:34)\n"
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(null);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n        int\
    \ i = 0;\n        int j = 0;\n        while (i < l1.size() && j < l2.size()) {\n\
    \            if (l1.get(i) == l2.get(j)) {\n                result.add(l1.get(i));\n\
    \                i += 1;\n                j += 1;\n            } else if (l1.get(i)\
    \ < l2.get(j)) {\n                i += 1;\n            } else {\n            \
    \    j += 1;\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfdsb1dp_.java:32)\n"
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n      return new ArrayList<Integer>(new HashSet<Integer>(l1) {{\n       \
    \ retainAll(new HashSet<Integer>(l2));\n      }});\n}\n    public static void\
    \ main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        // TODO\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1, (int)4,\
    \ (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.common(java.util.ArrayList,\
    \ java.util.ArrayList)\" is null\n\tat Problem.main(tmpsar_87jw.java:19)\n"
  stdout: ''
  timestamp: 1660011064
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n        ArrayList<Integer>\
    \ tmp;\n        if (l1.size() > l2.size()) {\n            tmp = l1;\n        \
    \    l1 = l2;\n            l2 = tmp;\n        }\n        for (int i : l1) {\n\
    \            if (l2.contains(i)) {\n                res.add(i);\n            }\n\
    \        }\n        Collections.sort(res);\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011073
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique common elements for two lists.\n\
    \    // >>> common([1, 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n    //\
    \ [1, 5, 653]\n    // >>> common([5, 3, 2, 8], [3, 2])\n    // [2, 3]\n    public\
    \ static ArrayList<Integer> common(ArrayList<Integer> l1, ArrayList<Integer> l2)\
    \ {\n        l1.retainAll(l2);\n        l1.sort(null);\n        return l1;\n}\n\
    \    public static void main(String[] args) {\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)4, (int)3, (int)34, (int)653, (int)2, (int)5))), (new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)7, (int)1, (int)5, (int)9, (int)653, (int)121)))).equals((new ArrayList<Integer>(Arrays.asList((int)1,\
    \ (int)5, (int)653)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3, (int)2)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)2, (int)3)))));\n    assert(common((new\
    \ ArrayList<Integer>(Arrays.asList((int)4, (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)2, (int)4)))).equals((new ArrayList<Integer>(Arrays.asList((int)2, (int)3,\
    \ (int)4)))));\n    assert(common((new ArrayList<Integer>(Arrays.asList((int)4,\
    \ (int)3, (int)2, (int)8))), (new ArrayList<Integer>(Arrays.asList()))).equals((new\
    \ ArrayList<Integer>(Arrays.asList()))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011061

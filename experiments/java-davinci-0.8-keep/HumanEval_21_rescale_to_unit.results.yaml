name: HumanEval_21_rescale_to_unit
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        Float min = Collections.min(numbers);\n        Float\
    \ max = Collections.max(numbers);\n        for (Float n : numbers) {\n       \
    \     result.add((n - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1x9rxa4k.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float n : numbers) {\n\
    \            result.add((n - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy0kzz6tl.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Float.MAX_VALUE;\n        Float\
    \ max = Float.MIN_VALUE;\n        for (Float number : numbers) {\n           \
    \ if (number < min) min = number;\n            if (number > max) max = number;\n\
    \        }\n        Float delta = max - min;\n        for (Float number : numbers)\
    \ {\n            Float scaled = (number - min) / delta;\n            result.add(scaled);\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpms7u44ko.java:27: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaledNumbers\
    \ = new ArrayList<Float>();\n        float smallest = numbers.get(0);\n      \
    \  float largest = numbers.get(0);\n        for (float number : numbers) {\n \
    \           if (number < smallest) smallest = number;\n            if (number\
    \ > largest) largest = number;\n        }\n        for (float number : numbers)\
    \ {\n            rescaledNumbers.add((number - smallest) / (largest - smallest));\n\
    \        }\n        return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptqd5zxvt.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minVal = Float.MAX_VALUE;\n\
    \        float maxVal = Float.MIN_VALUE;\n        for (float val : numbers) {\n\
    \            if (val < minVal) {\n                minVal = val;\n            }\n\
    \            if (val > maxVal) {\n                maxVal = val;\n            }\n\
    \        }\n        ArrayList<Float> scaledVals = new ArrayList<Float>();\n  \
    \      for (float val : numbers) {\n            scaledVals.add((val - minVal)\
    \ / (maxVal - minVal));\n        }\n        return scaledVals;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmcjqwtfi.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float number : numbers) {\n\
    \            if (number < min) {\n                min = number;\n            }\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \        }\n        float minmax = max - min;\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    result.add((number - min) / minmax);\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5uot8_g3.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float number : numbers)\
    \ {\n            Float normalizedNumber = (number - min) / (max - min);\n    \
    \        result.add(normalizedNumber);\n        }\n        return result;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppbh51orr.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        float min = Float.MAX_VALUE;\n        float\
    \ max = Float.MIN_VALUE;\n        for (float number : numbers) {\n           \
    \ if (number < min) {\n                min = number;\n            }\n        \
    \    if (number > max) {\n                max = number;\n            }\n     \
    \   }\n        float delta = max - min;\n        if (delta == 0) {\n         \
    \   return numbers;\n        }\n        for (float number : numbers) {\n     \
    \       rescaled.add((number - min) / delta);\n        }\n        return rescaled;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpem2v9u0r.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float number : numbers) {\n\
    \            if (number < min) {\n                min = number;\n            }\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \        }\n        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i,\
    \ (numbers.get(i) - min) / (max - min));\n        }\n        return numbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuhszqkcn.java:28: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            return null;\n        }\n        float minNumber = Float.MAX_VALUE;\n\
    \        float maxNumber = Float.MIN_VALUE;\n        for (float n : numbers) {\n\
    \            if (n < minNumber) {\n                minNumber = n;\n          \
    \  }\n            if (n > maxNumber) {\n                maxNumber = n;\n     \
    \       }\n        }\n        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        for (float n : numbers) {\n            float rescaledFloat = (n - minNumber)\
    \ / (maxNumber - minNumber);\n            rescaled.add(rescaledFloat);\n     \
    \   }\n        return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcydcto_y.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        return numbers.stream().map(number\
    \ -> (number - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6ranu7fx.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> transformedNumbers\
    \ = new ArrayList<Float>();\n        for (Float n : numbers) {\n            transformedNumbers.add((n\
    \ - min) / (max - min));\n        }\n        return transformedNumbers;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy73oql_q.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float smallest = numbers.get(0);\n\
    \        float largest = numbers.get(0);\n        for (float n : numbers) {\n\
    \            if (n < smallest) {\n                smallest = n;\n            }\n\
    \            if (n > largest) {\n                largest = n;\n            }\n\
    \        }\n        ArrayList<Float> normalizedNumbers = new ArrayList<Float>();\n\
    \        for (float n : numbers) {\n            float normalized = (n - smallest)\
    \ / (largest - smallest);\n            normalizedNumbers.add(normalized);\n  \
    \      }\n        return normalizedNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbjk4hctq.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> res = new\
    \ ArrayList<Float>();\n        float max = numbers.get(0);\n        float min\
    \ = numbers.get(0);\n        for (float num : numbers) {\n            if (num\
    \ > max) {\n                max = num;\n            }\n            if (num < min)\
    \ {\n                min = num;\n            }\n        }\n        for (float\
    \ num : numbers) {\n            res.add((num - min) / (max - min));\n        }\n\
    \        return res;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpglmpo3lv.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> scaled =\
    \ new ArrayList<Float>();\n        float small = Collections.min(numbers);\n \
    \       float large = Collections.max(numbers);\n        for (Float number : numbers)\
    \ {\n            scaled.add((number - small) / (large - small));\n        }\n\
    \        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphe3d18gt.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float big = numbers.get(0);\n\
    \        Float small = numbers.get(0);\n        for (Float i : numbers) {\n  \
    \          if (i > big) {\n                big = i;\n            }\n         \
    \   if (i < small) {\n                small = i;\n            }\n        }\n \
    \       ArrayList<Float> unitNums = new ArrayList<Float>();\n        for (Float\
    \ num : numbers) {\n            unitNums.add(((num - small) / (big - small)));\n\
    \        }\n        return unitNums;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8lzgszw4.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        return numbers.stream().map(number\
    \ -> (number - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkxi5pgmf.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float largest = numbers.get(0);\n\
    \        float smallest = numbers.get(0);\n        for (float n : numbers) {\n\
    \            if (n > largest) {\n                largest = n;\n            }\n\
    \            if (n < smallest) {\n                smallest = n;\n            }\n\
    \        }\n        ArrayList<Float> result = new ArrayList<Float>();\n      \
    \  for (float n : numbers) {\n            result.add((n - smallest) / (largest\
    \ - smallest));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe8ckwpav.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n      float min = numbers.get(0);\n\
    \      float max = numbers.get(0);\n      for (float num : numbers) {\n      \
    \  if (num < min) {\n          min = num;\n        }\n        if (num > max) {\n\
    \          max = num;\n        }\n      }\n      ArrayList<Float> newNumbers =\
    \ new ArrayList<Float>();\n      for (float num : numbers) {\n        newNumbers.add((num\
    \ - min) / (max - min));\n      }\n      return newNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmkgjfltm.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        return numbers.stream().map(number -> (number - min) / range).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpac7z9rho.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ num : numbers) {\n            result.add((num - min) / range);\n        }\n\
    \        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoichthbu.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        ArrayList<Float> numbers_rescaled\
    \ = new ArrayList<Float>();\n        for (float f : numbers) {\n            if\
    \ (f < min) {\n                min = f;\n            }\n            if (f > max)\
    \ {\n                max = f;\n            }\n        }\n        for (float f\
    \ : numbers) {\n            numbers_rescaled.add((f - min) / (max - min));\n \
    \       }\n        return numbers_rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu0t64tbd.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float maxMinusMin = max\
    \ - min;\n        return numbers.stream().map(x -> (x - min) / maxMinusMin).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwnis8sbm.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> ans = new\
    \ ArrayList<Float>();\n        float max = Collections.max(numbers);\n       \
    \ float min = Collections.min(numbers);\n        for (float n : numbers) {\n \
    \           ans.add((n - min) / (max - min));\n        }\n        return ans;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3l1t929e.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (float val : numbers) {\n  \
    \          if (val < min) {\n                min = val;\n            }\n     \
    \       if (val > max) {\n                max = val;\n            }\n        }\n\
    \        if (min == max) {\n            System.out.println(\"Warning: all numbers\
    \ are the same\");\n            return numbers;\n        }\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            numbers.set(i, (numbers.get(i)\
    \ - min) / (max - min));\n        }\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpme0pe6s2.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float[] result = new float[numbers.size()];\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            result[i] = (numbers.get(i)\
    \ - min) / (max - min);\n        }\n        return new ArrayList<Float>(Arrays.asList(result));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpizuklct2.java:20: error: no suitable constructor found for ArrayList(List<float[]>)\n\
    \        return new ArrayList<Float>(Arrays.asList(result));\n               ^\n\
    \    constructor ArrayList.ArrayList(int) is not applicable\n      (argument mismatch;\
    \ no instance(s) of type variable(s) T exist so that List<T> conforms to int)\n\
    \    constructor ArrayList.ArrayList(Collection<? extends Float>) is not applicable\n\
    \      (argument mismatch; inferred type does not conform to upper bound(s)\n\
    \          inferred: float[]\n          upper bound(s): Float,Object)\n  where\
    \ T is a type-variable:\n    T extends Object declared in method <T>asList(T...)\n\
    Note: Some messages have been simplified; recompile with -Xdiags:verbose to get\
    \ full output\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return rescaleTo(numbers,\
    \ 0.0f, 1.0f);\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0up2alh3.java:14: error: cannot find symbol\n        return rescaleTo(numbers,\
    \ 0.0f, 1.0f);\n               ^\n  symbol:   method rescaleTo(ArrayList<Float>,float,float)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    result.add((number - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbfr00zja.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        if (range == 0) {\n            // If range is 0 we can't do anything\n\
    \            return numbers;\n        } else {\n            ArrayList<Float> scaled\
    \ = new ArrayList<Float>();\n            for (Float number : numbers) {\n    \
    \            scaled.add((number - min) / range);\n            }\n            return\
    \ scaled;\n        }\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnear7gll.java:27: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    Float newNumber = (number - min) / (max - min);\n            rescaled.add(newNumber);\n\
    \        }\n        return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkunu9und.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException();\n        }\n        Float min\
    \ = Float.MAX_VALUE;\n        Float max = Float.MIN_VALUE;\n        for (Float\
    \ num : numbers) {\n            if (num < min) {\n                min = num;\n\
    \            }\n            if (num > max) {\n                max = num;\n   \
    \         }\n        }\n        if (min.equals(max)) {\n            throw new\
    \ IllegalArgumentException();\n        }\n        ArrayList<Float> res = new ArrayList<>();\n\
    \        for (Float num : numbers) {\n            res.add((num - min) / (max -\
    \ min));\n        }\n        return res;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv097c3ns.java:35: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        ArrayList<Float> rescaled = new ArrayList<Float>();\n        for (float\
    \ n : numbers) {\n            rescaled.add((n - min) / range);\n        }\n  \
    \      return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpos2c76af.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minimum = numbers.get(0);\n\
    \        float maximum = numbers.get(0);\n        ArrayList<Float> newList = new\
    \ ArrayList<Float>();\n        for (float number : numbers) {\n            if\
    \ (number < minimum) {\n                minimum = number;\n            }\n   \
    \         if (number > maximum) {\n                maximum = number;\n       \
    \     }\n        }\n        for (float number : numbers) {\n            newList.add((number\
    \ - minimum) / (maximum - minimum));\n        }\n        return newList;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4t8fvf3q.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return null;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphhgfqm1u.java:15: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // TODO: do linear transform\
    \ to all given numbers\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmposflg9ea.java:16: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (Float value : numbers) {\n         \
    \   result.add((value - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxm_209l8.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> list = new\
    \ ArrayList<Float>();\n        float max = Collections.max(numbers);\n       \
    \ float min = Collections.min(numbers);\n        for (float number : numbers)\
    \ {\n            list.add((number - min) / (max - min));\n        }\n        return\
    \ list;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbn4msd_v.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = numbers.get(0);\n\
    \        Float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) < min) {\n                min = numbers.get(i);\n\
    \            }\n            if (numbers.get(i) > max) {\n                max =\
    \ numbers.get(i);\n            }\n        }\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        for (int i = 0; i < numbers.size(); i++) {\n   \
    \         result.add((numbers.get(i) - min) / (max - min));\n        }\n     \
    \   return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n   \
    \ public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5rkitsw.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> newList\
    \ = new ArrayList<Float>();\n        float min = numbers.get(0);\n        float\
    \ max = numbers.get(0);\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            if (numbers.get(i) < min) {\n                min = numbers.get(i);\n\
    \            }\n            if (numbers.get(i) > max) {\n                max =\
    \ numbers.get(i);\n            }\n        }\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float tmp = (numbers.get(i) - min) / (max - min);\n    \
    \        newList.add(tmp);\n        }\n        return newList;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxjaqjt8d.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minimum = Collections.min(numbers);\n\
    \        float maximum = Collections.max(numbers);\n        float scale = 1 /\
    \ (maximum - minimum);\n        return numbers.stream().map(f -> (f - minimum)\
    \ * scale).collect(Collectors.toCollection(ArrayList::new));\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9pivui8b.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // write your code here\n\
    \        float min_number = numbers.get(0);\n        float max_number = numbers.get(0);\n\
    \        for (float number : numbers) {\n            if (number < min_number)\
    \ {\n                min_number = number;\n            }\n            if (number\
    \ > max_number) {\n                max_number = number;\n            }\n     \
    \   }\n        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i,\
    \ (numbers.get(i) - min_number) / (max_number - min_number));\n        }\n   \
    \     return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp73w03inr.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float number = numbers.get(i);\n            if (number <\
    \ min) {\n                min = number;\n            }\n            if (number\
    \ > max) {\n                max = number;\n            }\n        }\n        float\
    \ scale = 1.0f / (max - min);\n        ArrayList<Float> scaled = new ArrayList<>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            float number\
    \ = numbers.get(i);\n            scaled.add((number - min) * scale);\n       \
    \ }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptu8i5djr.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> scaledNumbers\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    scaledNumbers.add((number - min) / (max - min));\n        }\n        return\
    \ scaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp08qurw1q.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"This function needs at least\
    \ two numbers in the list\");\n        }\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> unitNumbers\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    Float unitNumber = (number - min) / (max - min);\n            unitNumbers.add(unitNumber);\n\
    \        }\n        return unitNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp23qjfthz.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() == 0)\n\
    \            return numbers;\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        return numbers.stream().map(x\
    \ -> (x - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpoe1cz60l.java:19: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float x_min = numbers.get(0);\n\
    \        float x_max = numbers.get(0);\n        int x_min_index = 0;\n       \
    \ int x_max_index = 0;\n        for (int i = 0; i < numbers.size(); i++) {\n \
    \           float val = numbers.get(i);\n            if (val < x_min) {\n    \
    \            x_min = val;\n                x_min_index = i;\n            }\n \
    \           if (val > x_max) {\n                x_max = val;\n               \
    \ x_max_index = i;\n            }\n        }\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float val = numbers.get(i);\n            float newVal =\
    \ (val - x_min) / (x_max - x_min);\n            numbers.set(i, newVal);\n    \
    \    }\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe21nkk5y.java:35: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    float newNumber = (number - min) / (max - min);\n            result.add(newNumber);\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo8l6pb2z.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> unitnumbers\
    \ = new ArrayList<Float>();\n        if (numbers.size() < 2) {\n            throw\
    \ new IllegalArgumentException(\"Need at least two numbers\");\n        }\n  \
    \      if (numbers.size() == 2) {\n            unitnumbers.add(0f);\n        \
    \    unitnumbers.add(1f);\n            return unitnumbers;\n        }\n      \
    \  float max = numbers.get(0);\n        float min = numbers.get(0);\n        for\
    \ (float number : numbers) {\n            if (number > max) {\n              \
    \  max = number;\n            }\n            if (number < min) {\n           \
    \     min = number;\n            }\n        }\n        float difference = max\
    \ - min;\n        float f;\n        for (float number : numbers) {\n         \
    \   f = (number - min) / difference;\n            unitnumbers.add(f);\n      \
    \  }\n        return unitnumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7f782zuo.java:40: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        float min = Collections.min(numbers);\n        float\
    \ max = Collections.max(numbers);\n        for (float number : numbers) {\n  \
    \          result.add((number - min) / (max - min));\n        }\n        return\
    \ result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp56i0io3s.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float smallest = Collections.min(numbers);\n\
    \        Float largest = Collections.max(numbers);\n        Float unitLargest\
    \ = 1f;\n        Float unitSmallest = 0f;\n        ArrayList<Float> newNumbers\
    \ = new ArrayList<Float>();\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            Float newNumber = (numbers.get(i) - smallest) / (largest - smallest)\
    \ * (unitLargest - unitSmallest) + unitSmallest;\n            newNumbers.add(newNumber);\n\
    \        }\n        return newNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7dda41bk.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float number : numbers)\
    \ {\n            Float zero = number - min;\n            Float one = max - min;\n\
    \            result.add(zero / one);\n        }\n        return result;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp403brikr.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        Float range = max - min;\n\
    \        Float rescaled = 0.0f;\n        ArrayList<Float> out = new ArrayList<Float>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            rescaled = (numbers.get(i)\
    \ - min) / range;\n            out.add(rescaled);\n        }\n        return out;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp28l_jqyg.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // Fill this in.\n      \
    \  float min = Float.MAX_VALUE;\n        float max = Float.MIN_VALUE;\n      \
    \  for (float num : numbers) {\n            if (num < min) min = num;\n      \
    \      if (num > max) max = num;\n        }\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        for (float num : numbers) {\n            float\
    \ diff = num - min;\n            float den = max - min;\n            float res\
    \ = diff / den;\n            result.add(res);\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzbx6izz3.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() == 0)\
    \ {\n            return numbers;\n        }\n        float max = numbers.get(0);\n\
    \        float min = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float n = numbers.get(i);\n            if (n > max) {\n\
    \                max = n;\n            }\n            if (n < min) {\n       \
    \         min = n;\n            }\n        }\n        float delta = max - min;\n\
    \        if (delta == 0) {\n            for (int i = 0; i < numbers.size(); i++)\
    \ {\n                numbers.set(i, 0.0f);\n            }\n            return\
    \ numbers;\n        }\n        for (int i = 0; i < numbers.size(); i++) {\n  \
    \          float n = numbers.get(i);\n            numbers.set(i, (n - min) / delta);\n\
    \        }\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd_hekbzr.java:40: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // YOUR CODE HERE\n     \
    \   ArrayList<Float> res = new ArrayList<Float>();\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        for (float f : numbers)\
    \ {\n            res.add((f - min) / (max - min));\n        }\n        return\
    \ res;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn5x1c3di.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = numbers.stream().max(Float::compare).get();\n\
    \        float min = numbers.stream().min(Float::compare).get();\n        ArrayList<Float>\
    \ scaled = new ArrayList<Float>();\n        for (Float number : numbers) {\n \
    \           float scaledNumber = (number - min) / (max - min);\n            scaled.add(scaledNumber);\n\
    \        }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppevttvxn.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        return numbers.stream().map(x\
    \ -> (x - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz2wfukkb.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        var min = Collections.min(numbers);\n\
    \        var max = Collections.max(numbers);\n        var result = new ArrayList<Float>();\n\
    \        for (var number : numbers) {\n            result.add((number - min) /\
    \ (max - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuqt1vono.java:14: error: cannot find symbol\n        var min =\
    \ Collections.min(numbers);\n        ^\n  symbol:   class var\n  location: class\
    \ Problem\n/tmp/tmpuqt1vono.java:15: error: cannot find symbol\n        var max\
    \ = Collections.max(numbers);\n        ^\n  symbol:   class var\n  location: class\
    \ Problem\n/tmp/tmpuqt1vono.java:16: error: cannot find symbol\n        var result\
    \ = new ArrayList<Float>();\n        ^\n  symbol:   class var\n  location: class\
    \ Problem\n/tmp/tmpuqt1vono.java:17: error: cannot find symbol\n        for (var\
    \ number : numbers) {\n             ^\n  symbol:   class var\n  location: class\
    \ Problem\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float number = numbers.get(i);\n            if (number <\
    \ min) {\n                min = number;\n            }\n            if (number\
    \ > max) {\n                max = number;\n            }\n        }\n        if\
    \ (min == max) {\n            return new ArrayList<>(Collections.nCopies(numbers.size(),\
    \ 0.0f));\n        }\n        float ratio = 1 / (max - min);\n        ArrayList<Float>\
    \ result = new ArrayList<>(numbers.size());\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float number = numbers.get(i);\n            result.add((number\
    \ - min) * ratio);\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyf07kais.java:35: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = numbers.get(0);\n\
    \        Float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) < min) {\n                min = numbers.get(i);\n\
    \            }\n            if (numbers.get(i) > max) {\n                max =\
    \ numbers.get(i);\n            }\n        }\n        float minMaxDiff = max -\
    \ min;\n        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i,\
    \ (numbers.get(i) - min) / minMaxDiff);\n        }\n        return numbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp67a968ob.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> scaled\
    \ = new ArrayList<Float>();\n        for (float n : numbers) {\n            scaled.add((n\
    \ - min) / (max - min));\n        }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0d7bo9yx.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        return numbers.stream().map(x\
    \ -> (x - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk17yzp6j.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        int n = numbers.size();\n\
    \        float min = Collections.min(numbers);\n        float max = Collections.max(numbers);\n\
    \        float scale = max - min;\n        for (int i = 0; i < n; i++) {\n   \
    \         numbers.set(i, (numbers.get(i) - min) / scale);\n        }\n       \
    \ return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp787ax651.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = numbers.stream().max(Float::compare).get();\n\
    \        float min = numbers.stream().min(Float::compare).get();\n        float\
    \ transform = 0.0f;\n        float divisor = (max - min);\n        ArrayList<Float>\
    \ out = new ArrayList<Float>();\n        for (Float i : numbers) {\n         \
    \   transform = ((i - min) / divisor);\n            out.add(transform);\n    \
    \    }\n        return out;\nreturn new ArrayList<Float>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2j75st2w.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float largest = Collections.max(numbers);\n\
    \        float smallest = Collections.min(numbers);\n        float range = largest\
    \ - smallest;\n        ArrayList<Float> normalized = new ArrayList<Float>();\n\
    \        for (float number : numbers) {\n            float normalizedNumber =\
    \ (number - smallest) / range;\n            normalized.add(normalizedNumber);\n\
    \        }\n        return normalized;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9wjre3mi.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (Float value : numbers) {\n         \
    \   result.add((value - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9u3xm0om.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        ArrayList<Float> result = new ArrayList<Float>();\n        for (Float\
    \ number : numbers) {\n            result.add((number - min) / range);\n     \
    \   }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0358lcfv.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (float number : numbers) {\n\
    \            if (number < min) min = number;\n            if (number > max) max\
    \ = number;\n        }\n        ArrayList<Float> result = new ArrayList<>();\n\
    \        for (float number : numbers) {\n            result.add((number - min)\
    \ / (max - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_nohqnnd.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min_value = Collections.min(numbers);\n\
    \        Float max_value = Collections.max(numbers);\n        Float range = max_value\
    \ - min_value;\n        ArrayList<Float> retval = new ArrayList<Float>();\n  \
    \      if (range == 0.0) {\n            for (int i = 0; i < numbers.size(); i++)\
    \ {\n                retval.add(1.0f);\n            }\n        } else {\n    \
    \        for (int i = 0; i < numbers.size(); i++) {\n                retval.add((numbers.get(i)\
    \ - min_value) / range);\n            }\n        }\n        return retval;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmtqibvuf.java:28: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2)\n\
    \            throw new IllegalArgumentException(\"At least two elements required\"\
    );\n        float largest = numbers.get(0);\n        float smallest = numbers.get(0);\n\
    \        for (int i = 1; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ > largest) {\n                largest = numbers.get(i);\n            }\n   \
    \         if (numbers.get(i) < smallest) {\n                smallest = numbers.get(i);\n\
    \            }\n        }\n        float d = largest - smallest;\n        ArrayList<Float>\
    \ scaled = new ArrayList<Float>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            scaled.add((numbers.get(i) - smallest) / d);\n        }\n\
    \        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp39mqzfww.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            result.add((numbers.get(i) - min) / (max - min));\n        }\n\
    \        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcxmm1_3t.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float max = numbers.stream().max(Float::compare).get();\n\
    \        Float min = numbers.stream().min(Float::compare).get();\n        return\
    \ (ArrayList<Float>) numbers.stream().map(x -> (x - min) / (max - min)).collect(Collectors.toList());\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxfdd69zy.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            result.add((numbers.get(i) - min) / (max - min));\n    \
    \    }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu8qyb32l.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> transformedNumbers\
    \ = new ArrayList<Float>();\n        float x, y, max, min;\n        max = numbers.get(0);\n\
    \        min = numbers.get(0);\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            if (numbers.get(i) > max) {\n                max = numbers.get(i);\n\
    \            }\n            if (numbers.get(i) < min) {\n                min =\
    \ numbers.get(i);\n            }\n        }\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            x = numbers.get(i);\n            y = (x - min) / (max -\
    \ min);\n            transformedNumbers.add(y);\n        }\n        return transformedNumbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpr4rmd4ue.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        //return numbers.stream().map(n\
    \ -> n).collect(Collectors.toCollection(ArrayList::new));\n        //System.out.println(numbers);\n\
    \        float min = numbers.stream().mapToDouble(n -> n).min().getAsDouble();\n\
    \        float max = numbers.stream().mapToDouble(n -> n).max().getAsDouble();\n\
    \        float step = (max - min) / numbers.size();\n        //System.out.println(step);\n\
    \        return numbers.stream().map(n -> (n - min) / step).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpklxf1e4a.java:16: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float min = numbers.stream().mapToDouble(n ->\
    \ n).min().getAsDouble();\n                                                  \
    \                        ^\n/tmp/tmpklxf1e4a.java:17: error: incompatible types:\
    \ possible lossy conversion from double to float\n        float max = numbers.stream().mapToDouble(n\
    \ -> n).max().getAsDouble();\n                                               \
    \                           ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minVal = Collections.min(numbers);\n\
    \        float maxVal = Collections.max(numbers);\n        float range = maxVal\
    \ - minVal;\n        float nMinusMinVal;\n        float rescaledNumber;\n    \
    \    float numerator;\n        float denominator;\n        float finalRescaledNumber;\n\
    \        ArrayList<Float> rescaledList = new ArrayList<Float>();\n        for\
    \ (int i = 0; i < numbers.size(); i++) {\n            nMinusMinVal = numbers.get(i)\
    \ - minVal;\n            numerator = nMinusMinVal;\n            denominator =\
    \ range;\n            finalRescaledNumber = numerator / denominator;\n       \
    \     rescaledList.add(finalRescaledNumber);\n        }\n        return rescaledList;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ia_88fb.java:31: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float num : numbers) {\n           \
    \ result.add((num - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbalr676.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float largest = Collections.max(numbers);\n\
    \        float smallest = Collections.min(numbers);\n        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        for (float number : numbers) {\n \
    \           result.add((number - smallest) / (largest - smallest));\n        }\n\
    \        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp50qwu8su.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        Float current;\n     \
    \   ArrayList<Float> result = new ArrayList<Float>();\n        for (int i = 0;\
    \ i < numbers.size(); i++) {\n            current = numbers.get(i);\n        \
    \    result.add((current - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph3med8qq.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (float number : numbers) {\n\
    \            if (number < min) {\n                min = number;\n            }\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \        }\n        float delta = max - min;\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    float value = (number - min) / delta;\n            result.add(value);\n \
    \       }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd0tjff4n.java:31: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float i : numbers) {\n            result.add((i\
    \ - min) / (max - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfajwoiah.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // low, high = min(numbers),\
    \ max(numbers)\n        float low = numbers.get(0);\n        float high = numbers.get(0);\n\
    \        for (float number : numbers) {\n            if (number < low) {\n   \
    \             low = number;\n            }\n            if (number > high) {\n\
    \                high = number;\n            }\n        }\n        // denominator\
    \ = high - low\n        float denominator = high - low;\n        // return [(high\
    \ - n) / denominator for n in numbers]\n        ArrayList<Float> result = new\
    \ ArrayList<Float>();\n        for (float number : numbers) {\n            result.add((high\
    \ - number) / denominator);\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgj3a2aw8.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float delta = max - min;\n\
    \        return numbers.stream().map(x -> (x - min) / delta).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu7y2v92j.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            Float number = numbers.get(i);\n            numbers.set(i,\
    \ (number - min) / (max - min));\n        }\n        return numbers;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwacv504c.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> numbers_scaled\
    \ = new ArrayList<Float>();\n        if (numbers.size() >= 2) {\n            float\
    \ min = Collections.min(numbers);\n            float max = Collections.max(numbers);\n\
    \            float difference = max - min;\n            for (Float number : numbers)\
    \ {\n                numbers_scaled.add((number - min) / difference);\n      \
    \      }\n        }\n        return numbers_scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp794x0jea.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return null;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn93d2e8v.java:15: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float n : numbers) {\n   \
    \         if (n < min) min = n;\n            if (n > max) max = n;\n        }\n\
    \        float span = max - min;\n        float diff = 0;\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            diff = numbers.get(i) - min;\n\
    \            numbers.set(i, diff / span);\n        }\n        return numbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptnt8sal5.java:27: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaledNumbers\
    \ = new ArrayList<>();\n        float max = Collections.max(numbers);\n      \
    \  float min = Collections.min(numbers);\n        float difference = max - min;\n\
    \        for (Float n : numbers) {\n            rescaledNumbers.add((n - min)\
    \ / difference);\n        }\n        return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2ckv0ioo.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float offset = min;\n\
    \        float factor = 1 / (max - min);\n        ArrayList<Float> rescaled =\
    \ new ArrayList<Float>();\n        for (Float value : numbers) {\n           \
    \ float x = (value - offset) * factor;\n            rescaled.add(x);\n       \
    \ }\n        return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3xea6hvj.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // smallest number\n    \
    \    Float smallestNumber = numbers.get(0);\n        for (Float number : numbers)\
    \ {\n            if (number < smallestNumber) {\n                smallestNumber\
    \ = number;\n            }\n        }\n        // largest number\n        Float\
    \ largestNumber = numbers.get(0);\n        for (Float number : numbers) {\n  \
    \          if (number > largestNumber) {\n                largestNumber = number;\n\
    \            }\n        }\n        Float range = largestNumber - smallestNumber;\n\
    \        // apply the transformation\n        ArrayList<Float> numbersRescaled\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    Float newNumber = (number - smallestNumber) / range;\n            numbersRescaled.add(newNumber);\n\
    \        }\n        return numbersRescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuvt0zx6z.java:36: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n      ArrayList<Float> result = new\
    \ ArrayList<Float>();\n      // your code goes here\n      float minimum = Collections.min(numbers);\n\
    \      float maximum = Collections.max(numbers);\n      float range = maximum\
    \ - minimum;\n      for (float num : numbers) {\n        result.add((num - minimum)\
    \ / range);\n      }\n      return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppv5_dm3r.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaledNumbers\
    \ = new ArrayList<Float>();\n        float min = Collections.min(numbers);\n \
    \       float max = Collections.max(numbers);\n        for (Float n : numbers)\
    \ {\n            float r = (n - min) / (max - min);\n            rescaledNumbers.add(r);\n\
    \        }\n        return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvh8jlhgx.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> ret = new\
    \ ArrayList<Float>();\n        Float max = Collections.max(numbers);\n       \
    \ Float min = Collections.min(numbers);\n        for (Float number : numbers)\
    \ {\n            ret.add((number - min) / (max - min));\n        }\n        return\
    \ ret;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3aaj3ev_.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    result.add((number - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmuqcn995.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // >>> max([1.0, 2.0, 3.0,\
    \ 4.0, 5.0])\n        // 5.0\n        float maxNumber = Collections.max(numbers);\n\
    \        // >>> min([1.0, 2.0, 3.0, 4.0, 5.0])\n        // 1.0\n        float\
    \ minNumber = Collections.min(numbers);\n        // >>> [x - 1.0 for x in [1.0,\
    \ 2.0, 3.0, 4.0, 5.0]]\n        // [0.0, 1.0, 2.0, 3.0, 4.0]\n        ArrayList<Float>\
    \ transformedNumbers = (ArrayList<Float>) numbers.stream().map(n -> n - minNumber).collect(Collectors.toList());\n\
    \        // >>> [x / 4.0 for x in [0.0, 1.0, 2.0, 3.0, 4.0]]\n        // [0.0,\
    \ 0.25, 0.5, 0.75, 1.0]\n        ArrayList<Float> rescaledNumbers = (ArrayList<Float>)\
    \ transformedNumbers.stream().map(n -> n / (maxNumber - minNumber)).collect(Collectors.toList());\n\
    \        return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjr21wtkx.java:27: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> re =\
    \ new ArrayList<Float>();\n        for (float n : numbers) {\n            re.add((n\
    \ - min) / (max - min));\n        }\n        return re;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7vd1_x0z.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> rescaled\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    rescaled.add((number - min) / (max - min));\n        }\n        return rescaled;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm5l7cc9l.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        float minNumber = numbers.get(0);\n        float\
    \ maxNumber = numbers.get(0);\n        for (float i: numbers) {\n            if\
    \ (i < minNumber) minNumber = i;\n            if (i > maxNumber) maxNumber = i;\n\
    \        }\n        for (float i: numbers) {\n            result.add((i - minNumber)\
    \ / (maxNumber - minNumber));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfh_j1rs7.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float max = Collections.max(numbers);\n   \
    \     Float min = Collections.min(numbers);\n        for (Float item : numbers)\
    \ {\n            result.add((item - min) / (max - min));\n        }\n        return\
    \ result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvrns87ia.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // find maximum and minimum\n\
    \        float max = Collections.max(numbers);\n        float min = Collections.min(numbers);\n\
    \        float range = max - min;\n        ArrayList<Float> newNumbers = new ArrayList<Float>();\n\
    \        for (float n : numbers) {\n            float newValue = (n - min) / range;\n\
    \            newNumbers.add(newValue);\n        }\n        return newNumbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpynv7dnw5.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // find min and max\n   \
    \     float min = numbers.get(0);\n        float max = numbers.get(0);\n     \
    \   for (float x : numbers) {\n            if (x < min) {\n                min\
    \ = x;\n            }\n            if (x > max) {\n                max = x;\n\
    \            }\n        }\n        ArrayList<Float> scaled = new ArrayList<Float>();\n\
    \        for (float x : numbers) {\n            scaled.add((x - min) / (max -\
    \ min));\n        }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxmr43tly.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (float number : numbers) {\n\
    \            if (number < min) {\n                min = number;\n            }\n\
    \            if (number > max) {\n                max = number;\n            }\n\
    \        }\n        ArrayList<Float> result = new ArrayList<Float>();\n      \
    \  for (float number : numbers) {\n            result.add((number - min) / (max\
    \ - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuhftb63b.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        ArrayList<Float> ans = new ArrayList<Float>();\n\
    \        for (float f : numbers) {\n            min = Math.min(min, f);\n    \
    \        max = Math.max(max, f);\n        }\n        for (float f : numbers) {\n\
    \            float res = (f - min) / (max - min);\n            ans.add(res);\n\
    \        }\n        return ans;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2_4o520e.java:26: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        final float lowest = Collections.min(numbers);\n\
    \        final float highest = Collections.max(numbers);\n        return numbers.stream().map(i\
    \ -> (i - lowest) / (highest - lowest)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpegl1423z.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"List of numbers should contain\
    \ at least two elements\");\n        }\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float number = numbers.get(i);\n            if (number <\
    \ min) {\n                min = number;\n            }\n            if (number\
    \ > max) {\n                max = number;\n            }\n        }\n        ArrayList<Float>\
    \ result = new ArrayList<>();\n        for (float number : numbers) {\n      \
    \      result.add((number - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprtlwfwog.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float max = Collections.max(numbers);\n\
    \        Float min = Collections.min(numbers);\n        ArrayList<Float> scaledNumbers\
    \ = new ArrayList<Float>();\n        for (Float number : numbers) {\n        \
    \    Float scaledNumber = (number - min) / (max - min);\n            scaledNumbers.add(scaledNumber);\n\
    \        }\n        return scaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpsllkm0gt.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n      if (numbers.size() < 2) {\n\
    \        throw new IllegalArgumentException(\"ArrayList must have at least two\
    \ elements\");\n      }\n      Float min = Collections.min(numbers);\n      Float\
    \ max = Collections.max(numbers);\n      return numbers.stream().map(x -> (x -\
    \ min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnv1gfoh4.java:20: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        if (range == 0) {\n            return new ArrayList<Float>(Collections.nCopies(numbers.size(),\
    \ 0.0f));\n        } else {\n            return numbers.stream().map(x -> (x -\
    \ min) / range).collect(Collectors.toCollection(ArrayList::new));\n        }\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8gtil_h9.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // For this problem, we have\
    \ to deal with floating point numbers, \n        // so we can't do what we normally\
    \ do in functional programming:\n        // We can't just use max() and min()\
    \ to get the min and max values, then subtract and divide by those values.\n \
    \       // For example, say we have a list of 7 numbers, the min value is 0.0\
    \ and the max value is 1.0.\n        // We will usually do this:\n        // >>>\
    \ numbers = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.0]\n        // >>> numbers = list(map(lambda\
    \ x: (x - 0.0) / (1.0 - 0.0), numbers))\n        // However, this results in an\
    \ error.\n        // This is because of how floating point numbers are stored\
    \ in memory.\n        // The numbers 0.2, 0.4, 0.6, 0.8 and 1.0 are not exactly\
    \ 0.2, 0.4, 0.6, 0.8 and 1.0 in memory.\n        // The number 0.2 is actually\
    \ slightly greater than 0.2.\n        // The number 0.6 is actually slightly greater\
    \ than 0.6.\n        // The numbers 0.8 and 1.0 are actually slightly smaller\
    \ than 0.8 and 1.0.\n        // This is because the number of bits in a floating\
    \ point number is limited.\n        // As a result, the numbers 0.8 and 1.0 are\
    \ actually slightly smaller than 0.8 and 1.0.\n        // Because 1.0 is slightly\
    \ smaller than 1.0, 1.0 - 0.0 gives you a slightly negative number.\n        //\
    \ This slightly negative number is then divided by 1.0, resulting in a slightly\
    \ negative number again.\n        // >>> (1.0 - 0.0) / 1.0\n        // -2.220446049250313e-16\n\
    \        // >>> (1.0 - 0.0) / 1.0 < 0\n        // True\n        // >>> 1.0 + (1.0\
    \ - 0.0) / 1.0\n        // 0.9999999999999999\n        // >>> 1.0 + (1.0 - 0.0)\
    \ / 1.0 < 1.\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00azfsgg.java:41)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // Insert code here ...\n\
    \        // If numbers is empty, return an empty list\n        if (numbers.size()\
    \ == 0) {\n            return new ArrayList<Float>();\n        }\n        // If\
    \ numbers has only one element, return a list with that element repeated twice\n\
    \        if (numbers.size() == 1) {\n            ArrayList<Float> result = new\
    \ ArrayList<Float>();\n            result.add(numbers.get(0));\n            result.add(numbers.get(0));\n\
    \            return result;\n        }\n        // Find the minimum and maximum\
    \ of numbers\n        float min = numbers.get(0);\n        float max = numbers.get(0);\n\
    \        for (float i : numbers) {\n            if (i < min) {\n             \
    \   min = i;\n            }\n            if (i > max) {\n                max =\
    \ i;\n            }\n        }\n        // Create a new list and populate it with\
    \ the transformed numbers\n        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        for (float i : numbers) {\n            result.add((i - min) / (max -\
    \ min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpju0ky4zp.java:43: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float maxNumber = Collections.max(numbers);\n\
    \        float minNumber = Collections.min(numbers);\n        float maxMinusMin\
    \ = maxNumber - minNumber;\n        ArrayList<Float> rescaled = new ArrayList<Float>();\n\
    \        for (float number : numbers) {\n            rescaled.add((number - minNumber)\
    \ / maxMinusMin);\n        }\n        return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpti0a1s3i.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        return numbers.stream().map(e\
    \ -> (e - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1zg43pgh.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        ArrayList<Float> sorted = (ArrayList<Float>)\
    \ numbers.clone();\n        Collections.sort(sorted);\n        int len = sorted.size();\n\
    \        float min = sorted.get(0);\n        float max = sorted.get(len - 1);\n\
    \        for (float number : numbers) {\n            float diff = number - min;\n\
    \            float segment = max - min;\n            float progress = diff / segment;\n\
    \            result.add(progress);\n        }\n        return result;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp749w1205.java:27: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\nNote: /tmp/tmp749w1205.java uses unchecked or unsafe operations.\nNote: Recompile\
    \ with -Xlint:unchecked for details.\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> list\
    \ = new ArrayList<Float>();\n        for (Float num : numbers) {\n           \
    \ list.add((num - min) / (max - min));\n        }\n        return list;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd39a9s2y.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float max = Collections.max(numbers);\n\
    \        Float min = Collections.min(numbers);\n        Float denominator = max\
    \ - min;\n        ArrayList<Float> result = new ArrayList<Float>();\n        for\
    \ (Float num : numbers) {\n            Float val = (num - min) / denominator;\n\
    \            result.add(val);\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc9ey1s7d.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float n : numbers) {\n\
    \            result.add((n - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8u0gxe0o.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // your code goes here\n\
    \        // check if numbers is empty\n        if (numbers.size() <= 1) {\n  \
    \          System.out.println(\"You must have at least two elements in the list\
    \ to scale\");\n            return null;\n        }\n        int smallestNumberIndex\
    \ = 0;\n        int largestNumberIndex = 0;\n        // walk the array and find\
    \ smallest and largest value\n        for (int i = 0; i < numbers.size(); i++)\
    \ {\n            if (numbers.get(i) < numbers.get(smallestNumberIndex)) {\n  \
    \              smallestNumberIndex = i;\n            }\n            if (numbers.get(i)\
    \ > numbers.get(largestNumberIndex)) {\n                largestNumberIndex = i;\n\
    \            }\n        }\n        // found smallest and largest\n        Float\
    \ smallest = numbers.get(smallestNumberIndex);\n        Float largest = numbers.get(largestNumberIndex);\n\
    \        Float difference = largest - smallest;\n        ArrayList<Float> scaledArray\
    \ = new ArrayList<Float>();\n        // scale all the numbers\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            scaledArray.add((numbers.get(i)\
    \ - smallest) / difference);\n        }\n        return scaledArray;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwgwjaoet.java:41: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        return numbers.stream().map(x -> (x - min) / range).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwfymz03y.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float diff = max - min;\n\
    \        float factor = 1.0f / diff;\n        float offset = min * factor;\n \
    \       ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ num : numbers) {\n            result.add((num * factor) - offset);\n       \
    \ }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0_zo59ud.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return rescale(numbers, Collections.min(numbers),\
    \ Collections.max(numbers), 0.0f, 1.0f);\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe8tzcq9f.java:14: error: cannot find symbol\n        return rescale(numbers,\
    \ Collections.min(numbers), Collections.max(numbers), 0.0f, 1.0f);\n         \
    \      ^\n  symbol:   method rescale(ArrayList<Float>,Float,Float,float,float)\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float diff = max - min;\n\
    \        return numbers.stream().map(x -> (x - min) / diff).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprj_pbut7.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        float largest = Collections.max(numbers);\n\
    \        float smallest = Collections.min(numbers);\n        float difference\
    \ = largest - smallest;\n        for (float element : numbers) {\n           \
    \ result.add((element - smallest) / difference);\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnlc260do.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minimum = Collections.min(numbers);\n\
    \        float maximum = Collections.max(numbers);\n        float range = maximum\
    \ - minimum;\n        ArrayList<Float> results = new ArrayList<Float>();\n   \
    \     for (float number : numbers) {\n            results.add((number - minimum)\
    \ / range);\n        }\n        return results;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnqmk3edc.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float n : numbers) {\n\
    \            result.add((n - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb1gum1d6.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            numbers.set(i, (numbers.get(i) - min) / (max - min));\n\
    \        }\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxrhk_1f5.java:20: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> zipped\
    \ = new ArrayList<Float>();\n        for (Float item : numbers) {\n          \
    \  zipped.add((item - min) / (max - min));\n        }\n        return zipped;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp04fldx6q.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        final float min = Collections.min(numbers);\n\
    \        final float max = Collections.max(numbers);\n        final float rng\
    \ = max - min;\n        return numbers.stream().map(x -> (x - min) / rng).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp916b5220.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaled\
    \ = new ArrayList<>();\n        Float min = Collections.min(numbers);\n      \
    \  Float max = Collections.max(numbers);\n        for (Float number : numbers)\
    \ {\n            rescaled.add((number - min) / (max - min));\n        }\n    \
    \    return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8zvqwmmb.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float max = Collections.max(numbers);\n   \
    \     Float min = Collections.min(numbers);\n        for (Float number : numbers)\
    \ {\n            result.add((number - min) / (max - min));\n        }\n      \
    \  return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6y9u_ph4.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> results\
    \ = new ArrayList<Float>();\n        float maxVal = Collections.max(numbers);\n\
    \        float minVal = Collections.min(numbers);\n        float diff = maxVal\
    \ - minVal;\n        for (float number : numbers) {\n            results.add((number\
    \ - minVal) / diff);\n        }\n        return results;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqofz4qms.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float val = numbers.get(i);\n            if (val < min)\
    \ {\n                min = val;\n            }\n            if (val > max) {\n\
    \                max = val;\n            }\n        }\n        float div = max\
    \ - min;\n        if (div == 0.0) {\n            return new ArrayList<Float>(Collections.nCopies(numbers.size(),\
    \ 0.0f));\n        }\n        ArrayList<Float> ret = new ArrayList<Float>();\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            ret.add((numbers.get(i)\
    \ - min) / div);\n        }\n        return ret;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu38e4n15.java:34: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            float n = numbers.get(i);\n            if (n < min) {\n\
    \                min = n;\n            }\n            if (n > max) {\n       \
    \         max = n;\n            }\n        }\n        float r = max - min;\n \
    \       ArrayList<Float> result = new ArrayList<Float>();\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            float n = numbers.get(i);\n   \
    \         float rn = (n - min) / r;\n            result.add(rn);\n        }\n\
    \        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8c1m6haq.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaledNumbers\
    \ = new ArrayList<Float>();\n        Float minValue = Collections.min(numbers);\n\
    \        Float maxValue = Collections.max(numbers);\n        Float delta = maxValue\
    \ - minValue;\n        for (Float n : numbers) {\n            Float rn = (n -\
    \ minValue) / delta;\n            rescaledNumbers.add(rn);\n        }\n      \
    \  return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n  \
    \  }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp97rhsbzq.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            return numbers;\n        }\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float num : numbers) {\n \
    \           if (num < min) {\n                min = num;\n            }\n    \
    \        if (num > max) {\n                max = num;\n            }\n       \
    \ }\n        ArrayList<Float> ret = new ArrayList<Float>();\n        for (float\
    \ num : numbers) {\n            ret.add((num - min) / (max - min));\n        }\n\
    \        return ret;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf3fwhf1m.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        for (Float item : numbers)\
    \ {\n            Float res = 0f;\n            if (max != min) {\n            \
    \    res = (item - min) / (max - min);\n            }\n            result.add(res);\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm16o0b_s.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"Need at least two numbers to\
    \ rescale\");\n        }\n        float min = numbers.get(0);\n        float max\
    \ = numbers.get(0);\n        float range = max - min;\n        for (int i = 1;\
    \ i < numbers.size(); i++) {\n            if (numbers.get(i) < min) {\n      \
    \          min = numbers.get(i);\n            }\n            if (numbers.get(i)\
    \ > max) {\n                max = numbers.get(i);\n            }\n        }\n\
    \        ArrayList<Float> rescaled = new ArrayList<>();\n        for (float num\
    \ : numbers) {\n            rescaled.add((num - min) / range);\n        }\n  \
    \      return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxgnyhk04.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float min = numbers.get(0);\n        Float\
    \ max = numbers.get(0);\n        for (Float f : numbers) {\n            if (f\
    \ > max) max = f;\n            if (f < min) min = f;\n        }\n        for (Float\
    \ f : numbers) {\n            result.add((f - min) / (max - min));\n        }\n\
    \        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp264294bt.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"numbers must have at least two\
    \ elements\");\n        }\n        float min = Collections.min(numbers);\n   \
    \     float max = Collections.max(numbers);\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        for (float number : numbers) {\n          \
    \  result.add((number - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6eo3t52d.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        // write your code here\n        float max\
    \ = Collections.max(numbers);\n        float min = Collections.min(numbers);\n\
    \        float distance = max - min;\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float number = numbers.get(i);\n            if (distance\
    \ == 0) {\n                result.add(0.0f);\n            } else {\n         \
    \       result.add((number - min) / distance);\n            }\n        }\n   \
    \     return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp9d4vmpvu.java:28: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        if (numbers.size() > 1) {\n            float max\
    \ = numbers.get(0);\n            float min = numbers.get(0);\n            float\
    \ range = 0;\n            for (int i = 0; i < numbers.size(); i++) {\n       \
    \         if (numbers.get(i) > max) {\n                    max = numbers.get(i);\n\
    \                }\n                if (numbers.get(i) < min) {\n            \
    \        min = numbers.get(i);\n                }\n            }\n           \
    \ range = max - min;\n            for (int i = 0; i < numbers.size(); i++) {\n\
    \                result.add((numbers.get(i) - min) / range);\n            }\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbyrb35jk.java:33: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> output\
    \ = new ArrayList<Float>();\n        for (Float i : numbers) {\n            float\
    \ scaled = (i - min) / (max - min);\n            output.add(scaled);\n       \
    \ }\n        return output;\nreturn new ArrayList<Float>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk3w2x8g2.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        float max = numbers.get(0);\n        float\
    \ min = numbers.get(0);\n        for (int i = 0; i < numbers.size(); i++) {\n\
    \            if (numbers.get(i) > max) {\n                max = numbers.get(i);\n\
    \            }\n            if (numbers.get(i) < min) {\n                min =\
    \ numbers.get(i);\n            }\n        }\n        float d = max - min;\n  \
    \      for (int i = 0; i < numbers.size(); i++) {\n            result.add((numbers.get(i)\
    \ - min) / d);\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_19rdyqa.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> newList\
    \ = new ArrayList<Float>();\n        for (float number : numbers) {\n        \
    \    newList.add((number - min) / (max - min));\n        }\n        return newList;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqjothfc0.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float largest = numbers.get(0);\n\
    \        float smallest = numbers.get(0);\n        for (float number : numbers)\
    \ {\n            if (number > largest) {\n                largest = number;\n\
    \            }\n            if (number < smallest) {\n                smallest\
    \ = number;\n            }\n        }\n        float diff = largest - smallest;\n\
    \        ArrayList<Float> output = new ArrayList<Float>();\n        for (float\
    \ number : numbers) {\n            output.add((number - smallest) / diff);\n \
    \       }\n        return output;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaa177m_9.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> result\
    \ = new ArrayList<Float>();\n        for (float n : numbers) {\n            result.add((n\
    \ - min) / (max - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp973anle3.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        Float delta = max - min;\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            Float number\
    \ = numbers.get(i);\n            Float scaled = (number - min) / delta;\n    \
    \        numbers.set(i, scaled);\n        }\n        return numbers;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphqmewymd.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = Collections.min(numbers);\n\
    \        Float max = Collections.max(numbers);\n        ArrayList<Float> newNumbers\
    \ = new ArrayList<Float>();\n        for (Float num : numbers) {\n           \
    \ newNumbers.add((num - min) / (max - min));\n        }\n        return newNumbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwo4o61g2.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (Float x : numbers) {\n   \
    \         if (x < min) {\n                min = x;\n            }\n          \
    \  if (x > max) {\n                max = x;\n            }\n        }\n      \
    \  ArrayList<Float> result = new ArrayList<Float>();\n        for (Float x : numbers)\
    \ {\n            result.add((x - min) / (max - min));\n        }\n        return\
    \ result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmhelm7aj.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max_number = Collections.max(numbers);\n\
    \        float min_number = Collections.min(numbers);\n        ArrayList<Float>\
    \ norm_data = new ArrayList<Float>();\n        for (float number : numbers) {\n\
    \            norm_data.add((number - min_number) / (max_number - min_number));\n\
    \        }\n        return norm_data;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm25p05bb.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float newMin = 0.0f;\n\
    \        float newMax = 1.0f;\n        float diff = max - min;\n        ArrayList<Float>\
    \ newNumbers = new ArrayList<Float>();\n        for (float number : numbers) {\n\
    \            float newValue = (newMax - newMin) * (number - min) / diff + newMin;\n\
    \            newNumbers.add(newValue);\n        }\n        return newNumbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkmms5ski.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> ret = new\
    \ ArrayList<>();\n        Float max = Collections.max(numbers);\n        Float\
    \ min = Collections.min(numbers);\n        for (Float number : numbers) {\n  \
    \          Float unit = (number - min) / (max - min);\n            ret.add(unit);\n\
    \        }\n        return ret;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmd16wg36.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float a = Collections.min(numbers);\n\
    \        float b = Collections.max(numbers);\n        float delta = b - a;\n \
    \       ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ n : numbers) {\n            result.add((n - a) / delta);\n        }\n      \
    \  return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfw8zdhmb.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        float max = Collections.max(numbers);\n        float\
    \ min = Collections.min(numbers);\n        float size = max - min;\n        for\
    \ (float number : numbers) {\n            float unitNumber = (number - min) /\
    \ size;\n            result.add(unitNumber);\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcjiue2nf.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> ans =\
    \ new ArrayList<Float>();\n        for (float number : numbers) {\n          \
    \  ans.add((number - min) / (max - min));\n        }\n        return ans;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdf3dl86v.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> ret = new\
    \ ArrayList<Float>();\n        float max = Collections.max(numbers);\n       \
    \ float min = Collections.min(numbers);\n        for (float n : numbers) {\n \
    \           ret.add((n - min) / (max - min));\n        }\n        return ret;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_et4wj88.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return null;\nreturn new\
    \ ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjmp4qs2z.java:15: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float range = max - min;\n\
    \        return numbers.stream().map(n -> (n - min) / range).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpji14xnry.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // save min and max\n   \
    \     Float min = numbers.get(0);\n        Float max = numbers.get(0);\n     \
    \   for (Float n : numbers) {\n            if (n < min) {\n                min\
    \ = n;\n            }\n            if (n > max) {\n                max = n;\n\
    \            }\n        }\n        // rescale\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            numbers.set(i, (numbers.get(i) - min) / (max - min));\n\
    \        }\n        return numbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2ww_56g.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        float one = 1;\n     \
    \   float zero = 0;\n        float diff = max - min;\n        ArrayList<Float>\
    \ newNumbers = new ArrayList<Float>();\n        for (float number : numbers) {\n\
    \            float newNumber = one - (((max - number) * (one - zero)) / diff);\n\
    \            newNumbers.add(newNumber);\n        }\n        return newNumbers;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfjytyd5j.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = numbers.get(0);\n\
    \        float max = numbers.get(0);\n        for (float num : numbers) {\n  \
    \          if (num < min) {\n                min = num;\n            }\n     \
    \       if (num > max) {\n                max = num;\n            }\n        }\n\
    \        ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ num : numbers) {\n            result.add((num - min) / (max - min));\n     \
    \   }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1sh34wal.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"numbers must have at least two\
    \ items\");\n        }\n        float smallest = numbers.get(0);\n        float\
    \ largest = numbers.get(0);\n        for (float number : numbers) {\n        \
    \    if (number < smallest) {\n                smallest = number;\n          \
    \  }\n            if (number > largest) {\n                largest = number;\n\
    \            }\n        }\n        ArrayList<Float> res = new ArrayList<Float>();\n\
    \        for (float number : numbers) {\n            res.add((number - smallest)\
    \ / (largest - smallest));\n        }\n        return res;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_7fqr09z.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        int size = numbers.size();\n\
    \        ArrayList<Float> scaled = new ArrayList<>(size);\n        float min =\
    \ Float.MAX_VALUE;\n        float max = Float.MIN_VALUE;\n        for (int i =\
    \ 0; i < size; i++) {\n            float num = numbers.get(i);\n            if\
    \ (num < min) {\n                min = num;\n            }\n            if (num\
    \ > max) {\n                max = num;\n            }\n        }\n        for\
    \ (int i = 0; i < size; i++) {\n            float num = numbers.get(i);\n    \
    \        scaled.add((num - min) / (max - min));\n        }\n        return scaled;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphgd_lww0.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // return null;\n       \
    \ // TODO: your code here\n        float min = Collections.min(numbers);\n   \
    \     float max = Collections.max(numbers);\n        float div = max - min;\n\
    \        ArrayList<Float> rescaled = new ArrayList<Float>();\n        for (float\
    \ num : numbers) {\n            rescaled.add((num - min) / div);\n        }\n\
    \        return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n   \
    \ }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl5kd_bqh.java:24: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = numbers.stream().mapToDouble(i\
    \ -> i).max().getAsDouble();\n        float min = numbers.stream().mapToDouble(i\
    \ -> i).min().getAsDouble();\n        ArrayList<Float> normalized = new ArrayList<Float>();\n\
    \        for (Float f : numbers) {\n            normalized.add((f - min) / (max\
    \ - min));\n        }\n        return normalized;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcy78xadf.java:14: error: incompatible types: possible lossy conversion\
    \ from double to float\n        float max = numbers.stream().mapToDouble(i ->\
    \ i).max().getAsDouble();\n                                                  \
    \                        ^\n/tmp/tmpcy78xadf.java:15: error: incompatible types:\
    \ possible lossy conversion from double to float\n        float min = numbers.stream().mapToDouble(i\
    \ -> i).min().getAsDouble();\n                                               \
    \                           ^\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<Float>();\n        Float minimum = Collections.min(numbers);\n\
    \        Float maximum = Collections.max(numbers);\n        for (int i = 0; i\
    \ < numbers.size(); i++) {\n            result.add((numbers.get(i) - minimum)\
    \ / (maximum - minimum));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfuas5y0o.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> outList\
    \ = new ArrayList<Float>();\n        int max = Collections.max(numbers);\n   \
    \     int min = Collections.min(numbers);\n        // System.out.println(min);\n\
    \        // System.out.println(max);\n        for (Float number : numbers) {\n\
    \            Float result = (number - min) / (max - min);\n            outList.add(result);\n\
    \        }\n        return outList;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8avm1c8d.java:15: error: incompatible types: no instance(s) of\
    \ type variable(s)  exist so that T conforms to int\n        int max = Collections.max(numbers);\n\
    \                                 ^\n  where T is a type-variable:\n    T extends\
    \ Object,Comparable<? super T> declared in method <T>max(Collection<? extends\
    \ T>)\n/tmp/tmp8avm1c8d.java:16: error: incompatible types: no instance(s) of\
    \ type variable(s)  exist so that T conforms to int\n        int min = Collections.min(numbers);\n\
    \                                 ^\n  where T is a type-variable:\n    T extends\
    \ Object,Comparable<? super T> declared in method <T>min(Collection<? extends\
    \ T>)\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float f : numbers) {\n   \
    \         if (f < min) {\n                min = f;\n            }\n          \
    \  if (f > max) {\n                max = f;\n            }\n        }\n      \
    \  ArrayList<Float> result = new ArrayList<Float>();\n        for (float f : numbers)\
    \ {\n            result.add((f - min) / (max - min));\n        }\n        return\
    \ result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ld05y1y.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float f : numbers) {\n   \
    \         if (f < min) {\n                min = f;\n            }\n          \
    \  if (f > max) {\n                max = f;\n            }\n        }\n      \
    \  float range = max - min;\n        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        for (float f : numbers) {\n            result.add((f - min) / range);\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5_luicz1.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float max = numbers.stream().max(Float::compare).get();\n\
    \        Float min = numbers.stream().min(Float::compare).get();\n        return\
    \ numbers.stream().map(e -> (e - min) / (max - min)).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnpg5k_nr.java:17: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Float.MAX_VALUE;\n\
    \        float max = Float.MIN_VALUE;\n        for (float number : numbers) {\n\
    \            if (number < min) min = number;\n            if (number > max) max\
    \ = number;\n        }\n        ArrayList<Float> newNumbers = new ArrayList<Float>();\n\
    \        for (float number : numbers) {\n            newNumbers.add((number -\
    \ min) / (max - min));\n        }\n        return newNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph1k45y0v.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        return numbers.stream().map(n\
    \ -> (n - min(numbers)) / (max(numbers) - min(numbers))).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptd8_5ngz.java:14: error: cannot find symbol\n        return numbers.stream().map(n\
    \ -> (n - min(numbers)) / (max(numbers) - min(numbers))).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                              ^\n  symbol:   method min(ArrayList<Float>)\n\
    \  location: class Problem\n/tmp/tmptd8_5ngz.java:14: error: cannot find symbol\n\
    \        return numbers.stream().map(n -> (n - min(numbers)) / (max(numbers) -\
    \ min(numbers))).collect(Collectors.toCollection(ArrayList::new));\n         \
    \                                                      ^\n  symbol:   method max(ArrayList<Float>)\n\
    \  location: class Problem\n/tmp/tmptd8_5ngz.java:14: error: cannot find symbol\n\
    \        return numbers.stream().map(n -> (n - min(numbers)) / (max(numbers) -\
    \ min(numbers))).collect(Collectors.toCollection(ArrayList::new));\n         \
    \                                                                     ^\n  symbol:\
    \   method min(ArrayList<Float>)\n  location: class Problem\n/tmp/tmptd8_5ngz.java:14:\
    \ error: incompatible types: inference variable T has incompatible bounds\n  \
    \      return numbers.stream().map(n -> (n - min(numbers)) / (max(numbers) - min(numbers))).collect(Collectors.toCollection(ArrayList::new));\n\
    \                                                                            \
    \                        ^\n    equality constraints: Float,E\n    lower bounds:\
    \ Object\n  where T,C,E are type-variables:\n    T extends Object declared in\
    \ method <T,C>toCollection(Supplier<C>)\n    C extends Collection<T> declared\
    \ in method <T,C>toCollection(Supplier<C>)\n    E extends Object declared in class\
    \ ArrayList\n4 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> scaled =\
    \ new ArrayList<Float>();\n        Float lowest = numbers.get(0);\n        Float\
    \ highest = numbers.get(0);\n        for (Float n : numbers) {\n            if\
    \ (n < lowest) {\n                lowest = n;\n            }\n            if (n\
    \ > highest) {\n                highest = n;\n            }\n        }\n     \
    \   for (Float n : numbers) {\n            scaled.add((n - lowest) / (highest\
    \ - lowest));\n        }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp2n7377dt.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> result =\
    \ new ArrayList<>();\n        float min = Collections.min(numbers);\n        float\
    \ max = Collections.max(numbers);\n        for (float x : numbers) {\n       \
    \     result.add((x - min) / (max - min));\n        }\n        return result;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg5wnck6w.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> rescaledNumbers\
    \ = new ArrayList<>();\n        float min = Collections.min(numbers);\n      \
    \  float max = Collections.max(numbers);\n        float scale = max - min;\n \
    \       if (scale == 0) {\n            return numbers;\n        }\n        for\
    \ (float number : numbers) {\n            float rescaledNumber = (number - min)\
    \ / scale;\n            rescaledNumbers.add(rescaledNumber);\n        }\n    \
    \    return rescaledNumbers;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptb28hy11.java:26: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> numbersUnit\
    \ = new ArrayList<Float>();\n        float min = Collections.min(numbers);\n \
    \       float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        for (float number : numbers) {\n            numbersUnit.add((number -\
    \ min) / range);\n        }\n        return numbersUnit;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ckdhqyb.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float minimum = Collections.min(numbers);\n\
    \        float maximum = Collections.max(numbers);\n        float delta = maximum\
    \ - minimum;\n        return numbers.stream().map(n -> (n - minimum) / delta).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnz_ml66a.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\
    \ we want to map:\n        //  1 -> 0\n        //  2 -> 0.25\n        //  3 ->\
    \ 0.5\n        //  4 -> 0.75\n        //  5 -> 1\n        // For numbers [1,2,3,4,5]\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xpv6nss.java:66)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float x_max = Float.MIN_VALUE;\n\
    \        float x_min = Float.MAX_VALUE;\n        float x;\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            x = numbers.get(i);\n         \
    \   if (x > x_max) x_max = x;\n            if (x < x_min) x_min = x;\n       \
    \ }\n        ArrayList<Float> new_numbers = new ArrayList<Float>();\n        float\
    \ a = 1.0f / (x_max - x_min);\n        float b = - a * x_min;\n        for (int\
    \ i = 0; i < numbers.size(); i++) {\n            x = numbers.get(i);\n       \
    \     new_numbers.add(a * x + b);\n        }\n        return new_numbers;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7eupwwek.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> transformed\
    \ = new ArrayList<Float>();\n        float maximum = numbers.get(0);\n       \
    \ float minimum = numbers.get(0);\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) > maximum) {\n                maximum\
    \ = numbers.get(i);\n            }\n            if (numbers.get(i) < minimum)\
    \ {\n                minimum = numbers.get(i);\n            }\n        }\n   \
    \     for (int i = 0; i < numbers.size(); i++) {\n            transformed.add((numbers.get(i)\
    \ - minimum) / (maximum - minimum));\n        }\n        return transformed;\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ubr6a3h.java:29: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // Your code here\n     \
    \   ArrayList<Float> temp = new ArrayList<Float>();\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        for (float num : numbers)\
    \ {\n            temp.add((num - min) / (max - min));\n        }\n        return\
    \ temp;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public static\
    \ void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkkub156m.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        ArrayList<Float> sorted =\
    \ new ArrayList<Float>(numbers);\n        Collections.sort(sorted);\n        float\
    \ max = sorted.get(sorted.size() - 1);\n        float min = sorted.get(0);\n \
    \       ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ number : numbers) {\n            result.add((number - min) / (max - min));\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp69x_mnxg.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float smallest = numbers.get(0);\n\
    \        float largest = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) < smallest) {\n                smallest\
    \ = numbers.get(i);\n            }\n            if (numbers.get(i) > largest)\
    \ {\n                largest = numbers.get(i);\n            }\n        }\n   \
    \     ArrayList<Float> rescaled = new ArrayList<Float>();\n        for (int i\
    \ = 0; i < numbers.size(); i++) {\n            float x = numbers.get(i);\n   \
    \         rescaled.add((x - smallest) / (largest - smallest));\n        }\n  \
    \      return rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwgbqjizw.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"list must contain at least two\
    \ numbers\");\n        }\n        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        float a = numbers.get(0);\n        float b = numbers.get(0);\n      \
    \  for (int i = 0; i < numbers.size(); i++) {\n            if (numbers.get(i)\
    \ < a) {\n                a = numbers.get(i);\n            }\n            if (numbers.get(i)\
    \ > b) {\n                b = numbers.get(i);\n            }\n        }\n    \
    \    for (int i = 0; i < numbers.size(); i++) {\n            result.add((numbers.get(i)\
    \ - a) / (b - a));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpglbl5898.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        for (int i = 0; i < numbers.size(); i++) {\n            numbers.set(i,\
    \ (numbers.get(i) - min) / range);\n        }\n        return numbers;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpck8f_gil.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"The list has to contain at least\
    \ two numbers\");\n        }\n        float min = numbers.get(0);\n        float\
    \ max = numbers.get(0);\n        for (int i = 1; i < numbers.size(); i++) {\n\
    \            float current = numbers.get(i);\n            if (current < min) {\n\
    \                min = current;\n            }\n            if (current > max)\
    \ {\n                max = current;\n            }\n        }\n        float oldRange\
    \ = max - min;\n        float newRange = 1.0f - 0.0f;\n        ArrayList<Float>\
    \ result = new ArrayList<Float>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            float current = numbers.get(i);\n            float val =\
    \ (((current - min) * newRange) / oldRange) + 0.0f;\n            result.add(val);\n\
    \        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpp9vlz0fx.java:37: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n      float min = Collections.min(numbers);\n\
    \      float max = Collections.max(numbers);\n      float range = max - min;\n\
    \      return (ArrayList<Float>) numbers.stream().map(number -> (number - min)\
    \ / range).collect(Collectors.toList());\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6w1l0fk_.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min = numbers.get(0);\n\
    \        Float max = numbers.get(0);\n        for (Float number : numbers) {\n\
    \            if (number < min) min = number;\n            if (number > max) max\
    \ = number;\n        }\n        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        for (Float number : numbers) {\n            result.add((number - min)\
    \ / (max - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1fr7u6a1.java:25: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        ArrayList<Float> transformed\
    \ = new ArrayList<Float>();\n        for (Float x : numbers) {\n            float\
    \ y = (x - min) / (max - min);\n            transformed.add(y);\n        }\n \
    \       return transformed;\nreturn new ArrayList<Float>(Arrays.asList());\n \
    \   }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa7qzm7fr.java:22: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float lowestNumber = numbers.get(0);\n\
    \        float highestNumber = numbers.get(0);\n        for (int i = 1; i < numbers.size();\
    \ i++) {\n            if (numbers.get(i) < lowestNumber)\n                lowestNumber\
    \ = numbers.get(i);\n            if (numbers.get(i) > highestNumber)\n       \
    \         highestNumber = numbers.get(i);\n        }\n        ArrayList<Float>\
    \ rescaled = new ArrayList<Float>();\n        for (int i = 0; i < numbers.size();\
    \ i++) {\n            if (lowestNumber == highestNumber)\n                rescaled.add(0f);\n\
    \            else\n                rescaled.add((numbers.get(i) - lowestNumber)\
    \ / (highestNumber - lowestNumber));\n        }\n        return rescaled;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprlm7c5sy.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float range = max - min;\n\
    \        ArrayList<Float> rescaled = new ArrayList<Float>();\n        for (Float\
    \ num : numbers) {\n            float rescaledNum = (num - min) / range;\n   \
    \         rescaled.add(rescaledNum);\n        }\n        return rescaled;\nreturn\
    \ new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp72q22xhp.java:23: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = Collections.max(numbers);\n\
    \        float min = Collections.min(numbers);\n        ArrayList<Float> retval\
    \ = new ArrayList<Float>();\n        for (Float n : numbers) {\n            retval.add((n\
    \ - min) / (max - min));\n        }\n        return retval;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5moz0hg8.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // find min and max\n   \
    \     float min = Float.MAX_VALUE;\n        float max = Float.MIN_VALUE;\n   \
    \     for (float n : numbers) {\n            if (n < min) {\n                min\
    \ = n;\n            }\n            if (n > max) {\n                max = n;\n\
    \            }\n        }\n        float length = max - min;\n        // rescale\n\
    \        ArrayList<Float> result = new ArrayList<Float>();\n        for (float\
    \ n : numbers) {\n            result.add((n - min) / length);\n        }\n   \
    \     return result;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n \
    \   public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjqffkp8n.java:32: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float max = Collections.max(numbers);\n\
    \        Float min = Collections.min(numbers);\n        Float diff = max - min;\n\
    \        return new ArrayList<Float>(numbers.stream().map(n -> (n - min) / diff).collect(Collectors.toList()));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprj1_5e2o.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        if (numbers.size() < 2) {\n\
    \            throw new IllegalArgumentException(\"List must contain at least two\
    \ elements\");\n        }\n        Float min = Collections.min(numbers);\n   \
    \     Float max = Collections.max(numbers);\n        if (min.equals(max)) {\n\
    \            throw new IllegalArgumentException(\"Min and max values must not\
    \ be equal\");\n        }\n        ArrayList<Float> rescaled = new ArrayList<>();\n\
    \        for (Float num : numbers) {\n            Float rescaledNum = (num - min)\
    \ / (max - min);\n            rescaled.add(rescaledNum);\n        }\n        return\
    \ rescaled;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n    public\
    \ static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpawn66izj.java:28: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float min = Collections.min(numbers);\n\
    \        float max = Collections.max(numbers);\n        float diff = max - min;\n\
    \        return numbers.stream().map(x -> (x - min) / diff).collect(Collectors.toCollection(ArrayList::new));\n\
    return new ArrayList<Float>(Arrays.asList());\n    }\n    public static void main(String[]\
    \ args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7xwklnu1.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        // find the smallest number\n\
    \        float min = numbers.get(0);\n        for (float num : numbers) {\n  \
    \          if (num < min) {\n                min = num;\n            }\n     \
    \   }\n        // find the largest number\n        float max = numbers.get(0);\n\
    \        for (float num : numbers) {\n            if (num > max) {\n         \
    \       max = num;\n            }\n        }\n        // scale each number to\
    \ be between 0 and 1\n        ArrayList<Float> result = new ArrayList<Float>();\n\
    \        for (float num : numbers) {\n            result.add((num - min) / (max\
    \ - min));\n        }\n        return result;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp11nr6w7_.java:34: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        int len = numbers.size();\n\
    \        float min = numbers.get(0);\n        float max = numbers.get(0);\n  \
    \      for (int i = 1; i < len; i++) {\n            float x = numbers.get(i);\n\
    \            if (x < min) min = x;\n            if (x > max) max = x;\n      \
    \  }\n        float diff = max - min;\n        if (diff == 0) {\n            return\
    \ null;\n        }\n        ArrayList<Float> res = new ArrayList<>();\n      \
    \  for (float x : numbers) {\n            res.add((x - min) / diff);\n       \
    \ }\n        return res;\nreturn new ArrayList<Float>(Arrays.asList());\n    }\n\
    \    public static void main(String[] args) {\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)2.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)1.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f, (float)49.9f)))).equals((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f, (float)3.0f, (float)4.0f,\
    \ (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f, (float)0.25f,\
    \ (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpns3t3xmh.java:31: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        Float min, max;\n       \
    \ min = max = numbers.get(0);\n        for (Float n : numbers) {\n           \
    \ if (n < min) {\n                min = n;\n            }\n            if (n >\
    \ max) {\n                max = n;\n            }\n        }\n        Float diff\
    \ = max - min;\n        ArrayList<Float> scaled = new ArrayList<Float>();\n  \
    \      for (Float n : numbers) {\n            scaled.add((n - min) / diff);\n\
    \        }\n        return scaled;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpepm81b5q.java:30: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float mn = Collections.min(numbers);\n\
    \        float mx = Collections.max(numbers);\n        ArrayList<Float> ret =\
    \ new ArrayList<Float>();\n        for (float i : numbers) {\n            ret.add((i\
    \ - mn) / (mx - mn));\n        }\n        return ret;\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqrk5u8lk.java:21: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n    // such that the smallest number will\
    \ become 0 and the largest will become 1\n    // >>> rescale_to_unit([1.0, 2.0,\
    \ 3.0, 4.0, 5.0])\n    // [0.0, 0.25, 0.5, 0.75, 1.0]\n    public static ArrayList<Float>\
    \ rescaleToUnit(ArrayList<Float> numbers) {\n        float max = numbers.stream().max(Float::compare).get();\n\
    \        float min = numbers.stream().min(Float::compare).get();\n        float\
    \ diff = max - min;\n        return numbers.stream().map(num -> (num - min) /\
    \ diff).collect(Collectors.toCollection(ArrayList::new));\nreturn new ArrayList<Float>(Arrays.asList());\n\
    \    }\n    public static void main(String[] args) {\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)1.0f)))));\n    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)100.0f,\
    \ (float)49.9f)))).equals((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)0.0f)))));\n\
    \    assert(rescaleToUnit((new ArrayList<Float>(Arrays.asList((float)1.0f, (float)2.0f,\
    \ (float)3.0f, (float)4.0f, (float)5.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.0f,\
    \ (float)0.25f, (float)0.5f, (float)0.75f, (float)1.0f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)2.0f, (float)1.0f, (float)5.0f, (float)3.0f,\
    \ (float)4.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    assert(rescaleToUnit((new\
    \ ArrayList<Float>(Arrays.asList((float)12.0f, (float)11.0f, (float)15.0f, (float)13.0f,\
    \ (float)14.0f)))).equals((new ArrayList<Float>(Arrays.asList((float)0.25f, (float)0.0f,\
    \ (float)1.0f, (float)0.5f, (float)0.75f)))));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpm6qu0dwq.java:18: error: unreachable statement\nreturn new ArrayList<Float>(Arrays.asList());\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError

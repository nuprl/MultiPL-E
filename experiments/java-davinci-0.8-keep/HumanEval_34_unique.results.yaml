language: java
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(s);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<>();\n\
    \        for (int e : l) {\n            if (!r.contains(e)) {\n              \
    \  r.add(e);\n            }\n        }\n        Collections.sort(r);\n       \
    \ return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i > 0 && l.get(i).equals(l.get(i - 1))) {\n                continue;\n\
    \            }\n            res.add(l.get(i));\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> seen = new HashSet<>();\n\
    \        ArrayList<Integer> ans = new ArrayList<>();\n        for (int x : l)\
    \ {\n            if (!seen.contains(x)) {\n                seen.add(x);\n    \
    \            ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!a.contains(l.get(i)))\
    \ {\n                a.add(l.get(i));\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                ans.add(l.get(i));\n\
    \            }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> elements = new HashSet<Integer>();\n\
    \        for (int elem : l) {\n            elements.add(elem);\n        }\n  \
    \      ArrayList<Integer> l_unique = new ArrayList<Integer>(elements);\n     \
    \   Collections.sort(l_unique);\n        return l_unique;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i).equals(l.get(i + 1)))\
    \ {\n                l.remove(i + 1);\n                i--;\n            }\n \
    \       }\n        return l;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!r.contains(x)) {\n              \
    \  r.add(x);\n            }\n        }\n        Collections.sort(r);\n       \
    \ return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> answer = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!answer.contains(i)) {\n         \
    \       answer.add(i);\n            }\n        }\n        Collections.sort(answer);\n\
    \        return answer;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> set = new HashSet<>(l);\n\
    \        ArrayList<Integer> unique = new ArrayList<>(set);\n        Collections.sort(unique);\n\
    \        return unique;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(s);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ ret = new ArrayList<Integer>();\n        int prev = -1;\n        for (int x\
    \ : l) {\n            if (x != prev) {\n                ret.add(x);\n        \
    \    }\n            prev = x;\n        }\n        return ret;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        result.add(l.get(0));\n        for (int n: l) {\n            if (result.get(result.size()\
    \ - 1) != n)\n                result.add(n);\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxrxsww_b.java:22)\n"
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> x = new ArrayList<Integer>(s);\n        Collections.sort(x);\n\
    \        return x;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                r.add(l.get(i));\n\
    \            }\n        }\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i == 0 || l.get(i) != l.get(i - 1)) {\n                res.add(l.get(i));\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ sl = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int v = l.get(i);\n            if (i == 0 || v != l.get(i - 1)) {\n\
    \                sl.add(v);\n            }\n        }\n        return sl;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        int i\
    \ = 0;\n        while (i < l.size() - 1) {\n            if (l.get(i).equals(l.get(i\
    \ + 1))) {\n                l.remove(i);\n            } else {\n             \
    \   i++;\n            }\n        }\n        return l;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i).equals(l.get(i + 1)))\
    \ {\n                l.remove(i);\n                i--;\n            }\n     \
    \   }\n        return l;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        HashSet<Integer> x = new HashSet<>();\n        for (int i : l) {\n  \
    \          if (!x.contains(i)) {\n                x.add(i);\n                ans.add(i);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> u = new ArrayList<Integer>(s);\n        Collections.sort(u);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!res.contains(l.get(i)))\
    \ {\n                res.add(l.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!res.contains(x))\n              \
    \  res.add(x);\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ out = new ArrayList<Integer>();\n        for (int i=0; i<l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i-1)) {\n                out.add(l.get(i));\n\
    \            }\n        }\n        return out;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int el : l) {\n            if (!res.contains(el)) {\n          \
    \      res.add(el);\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> out = new ArrayList<Integer>();\n\
    \        HashSet<Integer> set = new HashSet<Integer>();\n        for (int x :\
    \ l) {\n            if (!set.contains(x)) {\n                out.add(x);\n   \
    \             set.add(x);\n            }\n        }\n        Collections.sort(out);\n\
    \        return out;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(Comparator.naturalOrder());\n\
    \        int k = 0;\n        for (int i = 1; i < l.size(); i++) {\n          \
    \  if (l.get(i) != l.get(k)) {\n                l.set(++k, l.get(i));\n      \
    \      }\n        }\n        l.subList(k + 1, l.size()).clear();\n        return\
    \ l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i > 0 && l.get(i).equals(l.get(i - 1))) {\n             \
    \   continue;\n            }\n            result.add(l.get(i));\n        }\n \
    \       return result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                r.add(l.get(i));\n\
    \            }\n        }\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         int j = i;\n            while (j < l.size() && l.get(i) == l.get(j))\
    \ j++;\n            res.add(l.get(i));\n            i = j - 1;\n        }\n  \
    \      return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (int i : l) {\n            if (ret.size()\
    \ == 0 || ret.get(ret.size() - 1) != i) {\n                ret.add(i);\n     \
    \       }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> s = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!s.contains(x)) s.add(x);\n      \
    \  }\n        Collections.sort(s);\n        return s;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // BEGIN SOLUTION\n        ArrayList<Integer>\
    \ lu = new ArrayList<Integer>();\n        for (int i=0; i<l.size(); i++) {\n \
    \           if (!lu.contains(l.get(i))) {\n                lu.add(l.get(i));\n\
    \            }\n        }\n        Collections.sort(lu);\n        return lu;\n\
    \        // END SOLUTION\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(h);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        return\
    \ new ArrayList<Integer>(new LinkedHashSet<Integer>(l));\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i > 0 && l.get(i) == l.get(i - 1)) {\n                continue;\n\
    \            }\n            u.add(l.get(i));\n        }\n        return u;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> h = new HashSet<Integer>();\n\
    \        for (int i : l) {\n            h.add(i);\n        }\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        for (int i : h) {\n            r.add(i);\n\
    \        }\n        Collections.sort(r);\n        return r;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> ans = new ArrayList<>(s);\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<>(s);\n        Collections.sort(r);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!res.contains(x))\n              \
    \  res.add(x);\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        int n = l.size();\n        for (int i = 0; i < n; i++) {\n          \
    \  int e = l.get(i);\n            if (!u.contains(e)) {\n                u.add(e);\n\
    \            }\n        }\n        Collections.sort(u);\n        return u;\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<Integer>(s);\n        Collections.sort(r);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        int n = l.size();\n        if (n == 0)\
    \ return u;\n        u.add(l.get(0));\n        for (int i = 1; i < n; i++) {\n\
    \            if (l.get(i).intValue() != l.get(i - 1).intValue()) {\n         \
    \       u.add(l.get(i));\n            }\n        }\n        return u;\n}\n   \
    \ public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> ans = new ArrayList<>(s);\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(h);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        HashSet<Integer> set = new HashSet<Integer>();\n        for (int x :\
    \ l) {\n            if (!set.contains(x)) {\n                set.add(x);\n   \
    \             ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n\
    \        return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ unique = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i == 0 || l.get(i - 1) != l.get(i)) {\n                unique.add(l.get(i));\n\
    \            }\n        }\n        return unique;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        HashSet<Integer> set = new HashSet<>();\n        for (int i : l) {\n\
    \            if (!set.contains(i)) {\n                set.add(i);\n          \
    \      ans.add(i);\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        int i = 0;\n        while (i < l.size())\
    \ {\n            u.add(l.get(i));\n            while (i + 1 < l.size() && l.get(i).equals(l.get(i\
    \ + 1))) {\n                i++;\n            }\n            i++;\n        }\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ul = new ArrayList<>();\n\
    \        for (int e : l) {\n            if (!ul.contains(e)) {\n             \
    \   ul.add(e);\n            }\n        }\n        Collections.sort(ul);\n    \
    \    return ul;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> newList = new ArrayList<>();\n\
    \        // TODO\n        return newList;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9cy_mi4w.java:18)\n"
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Sort the list, then convert to set\
    \ to remove duplicate elements\n        // then convert back to list\n       \
    \ return new ArrayList<Integer>(new HashSet<Integer>(l));\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!result.contains(i))\n           \
    \     result.add(i);\n        }\n        Collections.sort(result);\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                u.add(l.get(i));\n\
    \            }\n        }\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>(l);\n\
    \        return new ArrayList<>(s);\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (int i : l) {\n            if (ret.size()\
    \ == 0 || ret.get(ret.size() - 1) != i) {\n                ret.add(i);\n     \
    \       }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!a.contains(l.get(i)))\
    \ {\n                a.add(l.get(i));\n            }\n        }\n        Collections.sort(a);\n\
    \        return a;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!result.contains(i)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!r.contains(i)) r.add(i);\n      \
    \  }\n        Collections.sort(r);\n        return r;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // HashSet (no duplicates)\n       \
    \ Set<Integer> set = new HashSet<Integer>(l);\n        // list from set, then\
    \ sort list\n        l = new ArrayList<Integer>(set);\n        Collections.sort(l);\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i == 0 || l.get(i) != l.get(i - 1)) {\n                res.add(l.get(i));\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(s);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!res.contains(l.get(i)))\n\
    \                res.add(l.get(i));\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!res.contains(l.get(i)))\
    \ {\n                res.add(l.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(set);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        int i = 0;\n\
    \        while (i < l.size() - 1) {\n            if (l.get(i).equals(l.get(i +\
    \ 1))) {\n                l.remove(i);\n            } else {\n               \
    \ i++;\n            }\n        }\n        return l;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        int last = -1;\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            if (l.get(i) != last) {\n             \
    \   r.add(l.get(i));\n                last = l.get(i);\n            }\n      \
    \  }\n        return r;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> output = new ArrayList<Integer>();\n\
    \        for (int item : l) {\n            if (!output.contains(item)) {\n   \
    \             output.add(item);\n            }\n        }\n        Collections.sort(output);\n\
    \        return output;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // return (new HashSet<Integer>(l)).stream().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    \        HashSet<Integer> h = new HashSet<Integer>(l);\n        l.clear();\n \
    \       l.addAll(h);\n        Collections.sort(l);\n        return l;\n}\n   \
    \ public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> u = new ArrayList<>(s);\n        Collections.sort(u);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        int index\
    \ = 0;\n        for (int i = 1; i < l.size(); i++) {\n            if (l.get(index)\
    \ != l.get(i)) {\n                index++;\n                l.set(index, l.get(i));\n\
    \            }\n        }\n        l = new ArrayList<Integer>(l.subList(0, index\
    \ + 1));\n        return l;\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> results = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!results.contains(l.get(i)))\
    \ {\n                results.add(l.get(i));\n            }\n        }\n      \
    \  Collections.sort(results);\n        return results;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!result.contains(i)) {\n         \
    \       result.add(i);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return (ArrayList<Integer>) l.stream().distinct().sorted().collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        int last = -1;\n        for (int i = 0;\
    \ i < l.size(); i++) {\n            if (l.get(i) != last) {\n                res.add(l.get(i));\n\
    \                last = l.get(i);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<>(set);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // YOUR CODE HERE\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.unique(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmpn3xwvsc_.java:17)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!res.contains(x)) {\n            \
    \    res.add(x);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!res.contains(i)) {\n            \
    \    res.add(i);\n            }\n        }\n        Collections.sort(res);\n \
    \       return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<Integer>(h);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011580
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            if (l.get(i) == l.get(i - 1)) {\n \
    \               l.remove(i);\n                i--;\n            }\n        }\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!res.contains(l.get(i)))\
    \ {\n                res.add(l.get(i));\n            }\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4ahvqgxw.java:22)\n"
  stdout: ''
  timestamp: 1660011580
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        HashSet<Integer> set = new HashSet<Integer>();\n        for (int i =\
    \ 0; i < l.size(); i++) {\n            int e = l.get(i);\n            if (!set.contains(e))\
    \ {\n                set.add(e);\n                result.add(e);\n           \
    \ }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphaqwojmt.java:25)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> newList = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!newList.contains(x)) {\n        \
    \        newList.add(x);\n            }\n        }\n        Collections.sort(newList);\n\
    \        return newList;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        int s\
    \ = l.size();\n        int last = 0;\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < s; i++) {\n            if (i == 0 || l.get(i) !=\
    \ last) {\n                r.add(l.get(i));\n                last = l.get(i);\n\
    \            }\n        }\n        return r;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        return\
    \ (ArrayList<Integer>) l.stream().distinct().collect(Collectors.toList());\n}\n\
    \    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> x = new ArrayList<>();\n\
    \        for (int e : l) {\n            if (!x.contains(e)) {\n              \
    \  x.add(e);\n            }\n        }\n        Collections.sort(x);\n       \
    \ return x;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> s = new ArrayList<Integer>();\n        for (int i=0;\
    \ i<l.size(); i++) {\n            Integer n = l.get(i);\n            if (!s.contains(n))\
    \ {\n                s.add(n);\n                u.add(n);\n            }\n   \
    \     }\n        Collections.sort(u);\n        return u;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> lhs = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>(lhs);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (int i : l) {\n            if (ret.size()\
    \ == 0 || ret.get(ret.size() - 1) != i) {\n                ret.add(i);\n     \
    \       }\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> l2 = new ArrayList<>(s);\n        Collections.sort(l2);\n\
    \        return l2;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(s);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!res.contains(l.get(i)))\
    \ {\n                res.add(l.get(i));\n            }\n        }\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011577
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> l2 = new ArrayList<Integer>();\n\
    \        l2.add(l.get(0));\n        for (int i = 1; i < l.size(); i++) {\n   \
    \         if (l.get(i) != l.get(i - 1)) {\n                l2.add(l.get(i));\n\
    \            }\n        }\n        return l2;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0woivftj.java:23)\n"
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ uni = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i == 0 || !l.get(i).equals(l.get(i - 1))) {\n           \
    \     uni.add(l.get(i));\n            }\n        }\n        return uni;\n}\n \
    \   public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int x : l) {\n            if (res.size()\
    \ == 0 || res.get(res.size() - 1) != x)\n                res.add(x);\n       \
    \ }\n        return res;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i=0; i<l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        Collections.sort(u);\n\
    \        return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!u.contains(i)) u.add(i);\n      \
    \  }\n        Collections.sort(u);\n        return u;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> k = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> ans = new ArrayList<Integer>();\n        for (int\
    \ i = 0; i < l.size(); i++) {\n            if (!k.contains(l.get(i))) {\n    \
    \            k.add(l.get(i));\n            }\n        }\n        Collections.sort(k);\n\
    \        return k;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> temp = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<Integer>(temp);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            int elem = l.get(i);\n\
    \            if (!u.contains(elem)) {\n                u.add(elem);\n        \
    \    }\n        }\n        Collections.sort(u);\n        return u;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> sortedList = new\
    \ ArrayList<Integer>(l);\n        Collections.sort(sortedList);\n        return\
    \ new ArrayList<Integer>(new LinkedHashSet<Integer>(sortedList));\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ r = new ArrayList<Integer>();\n        for (int e : l) {\n            if (r.size()\
    \ == 0 || r.get(r.size() - 1) != e) {\n                r.add(e);\n           \
    \ }\n        }\n        return r;\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ul = new ArrayList<>();\n\
    \        TreeSet<Integer> set = new TreeSet<>(l);\n        for (Integer el : set)\
    \ {\n            ul.add(el);\n        }\n        return ul;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         int v = l.get(i);\n            if (i == 0 || v != l.get(i - 1)) {\n\
    \                res.add(v);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // TODO: Implement\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.unique(java.util.ArrayList)\"\
    \ is null\n\tat Problem.main(tmp7yd9snw5.java:17)\n"
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int x : l) {\n            if (!ans.contains(x)) {\n            \
    \    ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n \
    \       return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        HashSet<Integer> hs = new HashSet<>();\n        for (int x : l) {\n \
    \           if (!hs.contains(x)) {\n                hs.add(x);\n             \
    \   ans.add(x);\n            }\n        }\n        Collections.sort(ans);\n  \
    \      return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int e : l) {\n            if (!result.contains(e)) {\n         \
    \       result.add(e);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        Collections.sort(l);\n        for (int x : l) {\n            if (res.size()\
    \ == 0 || res.get(res.size() - 1) != x) {\n                res.add(x);\n     \
    \       }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<>();\n\
    \        for (int i : l) {\n            if (!r.contains(i)) r.add(i);\n      \
    \  }\n        Collections.sort(r);\n        return r;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        if (l.size() > 0) {\n            u.add(l.get(0));\n\
    \            for (int i = 1; i < l.size(); i++) {\n                if (l.get(i)\
    \ != l.get(i - 1)) {\n                    u.add(l.get(i));\n                }\n\
    \            }\n        }\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        Set<Integer> set = new HashSet<Integer>();\n        for (Integer e :\
    \ l) {\n            if (!set.contains(e)) {\n                set.add(e);\n   \
    \             result.add(e);\n            }\n        }\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!ans.contains(l.get(i)))\
    \ {\n                ans.add(l.get(i));\n            }\n        }\n        Collections.sort(ans);\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> unique_l = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!unique_l.contains(i)) {\n       \
    \         unique_l.add(i);\n            }\n        }\n        Collections.sort(unique_l);\n\
    \        return unique_l;\n}\n    public static void main(String[] args) {\n \
    \   assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> m = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!m.contains(l.get(i)))\
    \ {\n                m.add(l.get(i));\n            }\n        }\n        Collections.sort(m);\n\
    \        return m;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> out = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!out.contains(x)) {\n            \
    \    out.add(x);\n            }\n        }\n        Collections.sort(out);\n \
    \       return out;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (i == 0 || l.get(i) != l.get(i - 1)) {\n                res.add(l.get(i));\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> res = new ArrayList<Integer>();\n\
    \        for (int e : l) {\n            if (!res.contains(e))\n              \
    \  res.add(e);\n        }\n        Collections.sort(res);\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> o = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!o.contains(i)) {\n              \
    \  o.add(i);\n            }\n        }\n        Collections.sort(o);\n       \
    \ return o;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        int prev = -1;\n        for (int v : l) {\n\
    \            if (v != prev) {\n                ans.add(v);\n                prev\
    \ = v;\n            }\n        }\n        return ans;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Set<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> x = new ArrayList<>(s);\n        Collections.sort(x);\n\
    \        return x;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> sorted = new ArrayList<Integer>(l);\n\
    \        Collections.sort(sorted);\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        if (sorted.size() > 0) {\n            result.add(sorted.get(0));\n  \
    \          for (int i = 1; i < sorted.size(); i++) {\n                if (sorted.get(i)\
    \ != sorted.get(i - 1)) {\n                    result.add(sorted.get(i));\n  \
    \              }\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011582
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!u.contains(x)) {\n              \
    \  u.add(x);\n            }\n        }\n        Collections.sort(u);\n       \
    \ return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011583
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // Replace with your code\n        return\
    \ new ArrayList<Integer>();\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph34sg5sh.java:17)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!u.contains(l.get(i)))\
    \ {\n                u.add(l.get(i));\n            }\n        }\n        return\
    \ u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvm89otdb.java:22)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        ArrayList<Integer>\
    \ u = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                u.add(l.get(i));\n\
    \            }\n        }\n        return u;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011579
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        int prev = l.get(0);\n\
    \        for (int i = 1; i < l.size();) {\n            if (l.get(i) == prev) {\n\
    \                l.remove(i);\n            } else {\n                prev = l.get(i);\n\
    \                i++;\n            }\n        }\n        return l;\n}\n    public\
    \ static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011583
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        // TODO: Implement this\n        return\
    \ new ArrayList<Integer>();\n}\n    public static void main(String[] args) {\n\
    \    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp0eygqpnu.java:17)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ans = new ArrayList<>();\n\
    \        Set<Integer> h = new HashSet<>();\n        for (int x : l) {\n      \
    \      if (!h.contains(x)) {\n                h.add(x);\n                ans.add(x);\n\
    \            }\n        }\n        Collections.sort(ans);\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011583
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!result.contains(l.get(i)))\
    \ {\n                result.add(l.get(i));\n            }\n        }\n       \
    \ Collections.sort(result);\n        return result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        int current = -1;\n        for (int i = 0; i < l.size(); i++) {\n   \
    \         if (current != l.get(i)) {\n                result.add(l.get(i));\n\
    \                current = l.get(i);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb46kq0yn.java:24)\n"
  stdout: ''
  timestamp: 1660011583
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<>(s);\n        Collections.sort(r);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ unq = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i == 0 || (i > 0 && l.get(i - 1) != l.get(i)))\n        \
    \        unq.add(l.get(i));\n        }\n        return unq;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> l2 = new ArrayList<>();\n\
    \        // >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n        // [0, 2, 3, 5,\
    \ 9, 123]\n        for (int i : l) {\n            if (!l2.contains(i)) {\n   \
    \             l2.add(i);\n            }\n        }\n        return l2;\n}\n  \
    \  public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph1o70oc.java:24)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!u.contains(i)) {\n              \
    \  u.add(i);\n            }\n        }\n        Collections.sort(u);\n       \
    \ return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> r = new ArrayList<Integer>(h);\n        Collections.sort(r);\n\
    \        return r;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new TreeSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> r = new ArrayList<Integer>();\n\
    \        TreeSet<Integer> s = new TreeSet<Integer>();\n        for (int i : l)\
    \ {\n            s.add(i);\n        }\n        r.addAll(s);\n        return r;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> list = new ArrayList<Integer>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!list.contains(l.get(i)))\
    \ {\n                list.add(l.get(i));\n            }\n        }\n        Collections.sort(list);\n\
    \        return list;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ result = new ArrayList<Integer>();\n        for (int i=0; i<l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i-1)) {\n                result.add(l.get(i));\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> newl = new ArrayList<>();\n\
    \        for (int i = 0; i < l.size(); i++) {\n            if (!newl.contains(l.get(i)))\
    \ {\n                newl.add(l.get(i));\n            }\n        }\n        Collections.sort(newl);\n\
    \        return newl;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ newList = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++)\
    \ {\n            if (i > 0 && l.get(i) == l.get(i - 1)) {\n                continue;\n\
    \            }\n            newList.add(l.get(i));\n        }\n        return\
    \ newList;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> c = new ArrayList<Integer>();\n\
    \        for (int x : l)\n            if (!c.contains(x))\n                c.add(x);\n\
    \        return c;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq4u2odyd.java:20)\n"
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        return\
    \ new ArrayList<Integer>(new LinkedHashSet<Integer>(l));\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011578
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ ans = new ArrayList<>();\n        int prev = -1;\n        for (int x : l) {\n\
    \            if (x != prev) {\n                ans.add(x);\n                prev\
    \ = x;\n            }\n        }\n        return ans;\n}\n    public static void\
    \ main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        for (int\
    \ i = 0; i < l.size() - 1; i++) {\n            if (l.get(i).equals(l.get(i + 1)))\
    \ {\n                l.remove(i);\n                i--;\n            }\n     \
    \   }\n        return l;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!ret.contains(x)) {\n            \
    \    ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n \
    \       return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return new ArrayList<Integer>(new HashSet<Integer>(l));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> a = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!a.contains(x)) {\n              \
    \  a.add(x);\n            }\n        }\n        Collections.sort(a);\n       \
    \ return a;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        TreeSet<Integer> s = new TreeSet<Integer>(l);\n\
    \        return new ArrayList<Integer>(s);\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        l.sort(null);\n        for (int i =\
    \ 0; i < l.size() - 1; i++) {\n            if (l.get(i).equals(l.get(i + 1)))\
    \ {\n                l.remove(i);\n                i--;\n            }\n     \
    \   }\n        return l;\n}\n    public static void main(String[] args) {\n  \
    \  assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> u = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!u.contains(i)) {\n              \
    \  u.add(i);\n            }\n        }\n        Collections.sort(u);\n       \
    \ return u;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        ArrayList<Integer> sorted = new ArrayList<Integer>(l);\n        Collections.sort(sorted);\n\
    \        int last = 0;\n        for (int i = 0; i < sorted.size(); i++) {\n  \
    \          if (i == 0 || sorted.get(i) != last) {\n                ret.add(sorted.get(i));\n\
    \            }\n            last = sorted.get(i);\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> set = new ArrayList<Integer>();\n\
    \        for (int i : l) {\n            if (!set.contains(i)) {\n            \
    \    set.add(i);\n            }\n        }\n        Collections.sort(set);\n \
    \       return set;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        int i\
    \ = 0;\n        while (i < l.size() - 1) {\n            if (l.get(i).equals(l.get(i\
    \ + 1))) {\n                l.remove(i);\n            } else {\n             \
    \   i += 1;\n            }\n        }\n        return l;\n}\n    public static\
    \ void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> h = new HashSet<>(l);\n\
    \        return new ArrayList<>(h);\n}\n    public static void main(String[] args)\
    \ {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return (ArrayList<Integer>)l.stream().distinct().sorted().collect(Collectors.toList());\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> s = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> result = new ArrayList<Integer>(s);\n        Collections.sort(result);\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5,\
    \ (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        HashSet<Integer> set = new HashSet<Integer>(l);\n\
    \        ArrayList<Integer> res = new ArrayList<Integer>(set);\n        Collections.sort(res);\n\
    \        return res;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        for (int\
    \ i = 1; i < l.size(); i++) {\n            if (l.get(i) == l.get(i - 1)) {\n \
    \               l.remove(i);\n                i--;\n            }\n        }\n\
    \        return l;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011581
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> result = new ArrayList<Integer>();\n\
    \        if (l.size() == 0) {\n            return result;\n        }\n       \
    \ Collections.sort(l);\n        result.add(l.get(0));\n        for (int i = 1;\
    \ i < l.size(); i++) {\n            if (l.get(i) != l.get(i - 1)) {\n        \
    \        result.add(l.get(i));\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011585
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        Collections.sort(l);\n        ArrayList<Integer>\
    \ t = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            if (i == 0 || l.get(i) != l.get(i - 1)) {\n                t.add(l.get(i));\n\
    \            }\n        }\n        return t;\n}\n    public static void main(String[]\
    \ args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5, (int)3,\
    \ (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        ArrayList<Integer> ret = new ArrayList<Integer>();\n\
    \        for (int x : l) {\n            if (!ret.contains(x)) {\n            \
    \    ret.add(x);\n            }\n        }\n        Collections.sort(ret);\n \
    \       return ret;\n}\n    public static void main(String[] args) {\n    assert(unique((new\
    \ ArrayList<Integer>(Arrays.asList((int)5, (int)3, (int)5, (int)2, (int)3, (int)3,\
    \ (int)9, (int)0, (int)123)))).equals((new ArrayList<Integer>(Arrays.asList((int)0,\
    \ (int)2, (int)3, (int)5, (int)9, (int)123)))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011584
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return sorted unique elements in a list\n    // >>> unique([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123])\n    // [0, 2, 3, 5, 9, 123]\n    public static ArrayList<Integer>\
    \ unique(ArrayList<Integer> l) {\n        return l.stream().distinct().sorted().collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(unique((new ArrayList<Integer>(Arrays.asList((int)5,\
    \ (int)3, (int)5, (int)2, (int)3, (int)3, (int)9, (int)0, (int)123)))).equals((new\
    \ ArrayList<Integer>(Arrays.asList((int)0, (int)2, (int)3, (int)5, (int)9, (int)123)))));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011576

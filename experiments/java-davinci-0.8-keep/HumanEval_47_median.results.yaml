language: java
name: HumanEval_47_median
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbd3el18.java:18)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ m;\n        int n = l.size();\n        // Write your code here.\n        Collections.sort(l);\n\
    \        if (n % 2 == 0) {\n            m = (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2;\n        } else {\n            m = l.get(n / 2);\n        }\n        return\
    \ m;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpq98i330w.java:30)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int length = l.size();\n        if (length % 2 == 0) {\n            return\
    \ (l.get(length / 2) + l.get(length / 2 - 1)) / 2.0f;\n        } else {\n    \
    \        return l.get(length / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ median = 0;\n        int size = l.size();\n        Collections.sort(l);\n  \
    \      if (size % 2 == 0) {\n            median = (l.get(size / 2) + l.get(size\
    \ / 2 - 1)) / 2;\n        } else {\n            median = l.get(size / 2);\n  \
    \      }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcn8i9otp.java:29)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if(l.size()\
    \ == 0) {\n            return 0;\n        }\n        Collections.sort(l);\n  \
    \      if(l.size()%2 == 0) {\n            return (l.get(l.size()/2) + l.get(l.size()/2-1))/2.0f;\n\
    \        }\n        return l.get(l.size()/2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if(l.size() % 2 == 0)\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        else\n            return l.get(l.size() / 2);\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        //your\
    \ code goes here\n        int n = l.size();\n        l.sort(null);\n        if(n%2\
    \ == 0)\n        {\n            return (float)(l.get(n/2-1)+l.get(n/2))/2;\n \
    \       }\n        else\n        {\n            return l.get(n/2);\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        l.sort(null);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2) + l.get(len / 2 - 1)) / 2.0f;\n        } else {\n          \
    \  return l.get(len / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        if (n == 0)\n            return 0;\n        Collections.sort(l);\n\
    \        if (n % 2 == 0)\n            return (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2.0f;\n        else\n            return l.get(n / 2);\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Decide\
    \ which comparison function to use\n        // and define comp at the same time\n\
    \        Comparator<Integer> comp = null;\n        if (l.size()%2 == 0) {\n  \
    \          comp = (x, y) -> {\n                if (x >= y) return -1;\n      \
    \          else return 1;\n            };\n        } else {\n            comp\
    \ = (x, y) -> {\n                if (x <= y) return -1;\n                else\
    \ return 1;\n            };\n        }\n        // Build the min heap\n      \
    \  PriorityQueue<Integer> minHeap = new PriorityQueue<Integer>(l.size(), comp);\n\
    \        for (int i : l) {\n            minHeap.add(i);\n        }\n        if\
    \ (l.size()%2 == 0) {\n            int v1 = minHeap.poll();\n            int v2\
    \ = minHeap.poll();\n            return (v1+v2)/2.0f;\n        } else {\n    \
    \        return minHeap.poll();\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8j68sgf_.java:43)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Sorting\
    \ the elements\n        Collections.sort(l);\n        // Calculating the length\
    \ of the list\n        int length = l.size();\n        // Checking if the length\
    \ is even then divide by 2 and typecast to float\n        if (length % 2 == 0)\
    \ {\n            float a = l.get(length / 2 - 1);\n            float b = l.get(length\
    \ / 2);\n            return (a + b) / 2;\n        }\n        // If the length\
    \ is odd return the mid element.\n        else\n            return l.get(length\
    \ / 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int sum\
    \ = 0;\n        for (int i = 0; i < l.size(); i++) {\n            sum += l.get(i);\n\
    \        }\n        float avg = sum / l.size();\n        return avg;\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpit1bm9xd.java:24)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if(l.size()\
    \ == 0) {\n            return 0.0f;\n        }\n        int n = l.size();\n  \
    \      l.sort(null);\n        if(n % 2 == 0) {\n            return (l.get(n /\
    \ 2) + l.get(n / 2 - 1)) / 2.0f;\n        }\n        return l.get(n / 2);\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        return (l.get(l.size() / 2) + l.get((l.size() - 1) / 2)) / 2.0f;\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n\
    \            median = (median + l.get(l.size() / 2 - 1)) / 2;\n        }\n   \
    \     return median;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median;\n        int n = l.size();\n        if (n % 2 == 0) {\n\
    \            median = (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else\
    \ {\n            median = l.get(n / 2);\n        }\n        return median;\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // >>>\
    \ from numpy import median\n        // >>> median([3, 1, 2, 4, 5])\n        //\
    \ 3.0\n        // >>> median([-10, 4, 6, 1000, 10, 20])\n        // 10.0\n   \
    \     //\n        // >>> sorted([-10, 4, 6, 1000, 10, 20])\n        // [-10, 4,\
    \ 6, 10, 20, 1000]\n        //\n        // >>> from numpy import median\n    \
    \    // >>> median(sorted([-10, 4, 6, 1000, 10, 20]))\n        // 10.0\n     \
    \   // >>> median(sorted([-10, 4, 6, 1000, 10, 20])[1:-1])\n        // 8.0\n \
    \       //\n        // >>> sorted([3, 1, 2, 4, 5])\n        // [1, 2, 3, 4, 5]\n\
    \        // >>> median(sorted([3, 1, 2, 4, 5]))\n        // 3.0\n        // >>>\
    \ median(sorted([3, 1, 2, 4, 5])[1:-1])\n        // 2.5\n        //\n        //\
    \ >>> sorted([-1, -1, -1, -1, -1])\n        // [-1, -1, -1, -1, -1]\n        //\
    \ >>> median(sorted([-1, -1, -1, -1, -1]))\n        // -1.0\n        // >>> median(sorted([-1,\
    \ -1, -1, -1, -1])[1:-1])\n        // -1.0\n        //\n        // >>> sorted([])\n\
    \        // []\n        // >>> median(sorted([]))\n        // Traceback (most\
    \ recent call last):\n        //   File \"<stdin>\", line 1, in <module>\n   \
    \     // ValueError: empty sequence\n        // >>> median(sorted([])[1:-1])\n\
    \        // Traceback (most recent call last):\n        //   File \"<stdin>\"\
    , line 1, in <module>\n        // IndexError: list index out of range\n      \
    \  return 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg8w6wyvp.java:57)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float lSize = l.size();\n        if (lSize % 2 == 0) {\n            int\
    \ a = l.get((int) (lSize / 2));\n            int b = l.get((int) (lSize / 2 -\
    \ 1));\n            return (a + b) / 2;\n        } else {\n            return\
    \ l.get((int) (lSize / 2));\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2xg8hkbs.java:29)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Sort\
    \ l first.\n        l.sort((i, j) -> (i - j));\n        int k = l.size();\n  \
    \      float f = 0;\n        if (k % 2 == 0) {\n            f = ((float) l.get(k\
    \ / 2) + (float) l.get(k / 2 - 1)) / 2;\n        } else {\n            f = (float)\
    \ l.get(k / 2);\n        }\n        return f;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Insert\
    \ your code here\n        float x = 0;\n        Collections.sort(l);\n       \
    \ if (l.size() % 2 == 0) {\n            x = (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            x = l.get(l.size() / 2);\n\
    \        }\n        return x;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid) + l.get(mid - 1)) / 2.0f;\n        } else {\n         \
    \   return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ m = 0;\n        Collections.sort(l);\n        if (l.size() % 2 == 0) {\n   \
    \         m = (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n      \
    \  } else {\n            m = l.get(l.size() / 2);\n        }\n        return m;\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float m = 0;\n        int n = l.size();\n        if (n % 2 == 0) {\n\
    \            m = (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n\
    \            m = l.get(n / 2);\n        }\n        return m;\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int sz = l.size();\n        if (sz % 2 == 0) {\n            return (l.get(sz\
    \ / 2) + l.get(sz / 2 - 1)) / 2;\n        } else {\n            return l.get(sz\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpw8oq389e.java:27)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int size\
    \ = l.size();\n        if (size == 0) {\n            return 0.0f;\n        }\n\
    \        else if (size % 2 == 0) {\n            // even case\n            int\
    \ mid = size / 2;\n            int mid1 = mid - 1;\n            int mid2 = mid;\n\
    \            return (l.get(mid1) + l.get(mid2)) / 2.0f;\n        }\n        else\
    \ {\n            // odd case\n            int mid = size / 2;\n            return\
    \ l.get(mid);\n        }\n}\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbfr9ko6a.java:33)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float mid = (float) (l.size()/2);\n        return l.size() % 2 == 0?\
    \ (float) (l.get((int) mid) + l.get((int) mid - 1))/2 : l.get((int) mid);\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ arr=new ArrayList<Integer>(l);\n        Collections.sort(arr);\n        int\
    \ n=arr.size();\n        if(n%2==0)\n        {\n            return (float)(arr.get(n/2)+arr.get(n/2-1))/2;\n\
    \        }\n        else\n        {\n            return arr.get(n/2);\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ fill me in\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplg_tq2_g.java:19)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // sort\
    \ the list\n        Collections.sort(l);\n        // get the middle element's\
    \ index\n        int mid = l.size() / 2;\n        // check if the size of l is\
    \ even\n        if (l.size() % 2 == 0) {\n            return (l.get(mid) + l.get(mid\
    \ - 1)) / 2.0f;\n        } else {\n            return l.get(mid);\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median = 0;\n        int length = l.size();\n        if (length\
    \ % 2 == 0) {\n            int middle = length / 2;\n            float left =\
    \ l.get(middle - 1);\n            float right = l.get(middle);\n            median\
    \ = (left + right) / 2;\n        } else {\n            int middle = length / 2;\n\
    \            median = l.get(middle);\n        }\n        return median;\n}\n \
    \   public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ == 0) {\n            return 0;\n        }\n        // TODO: Implement this method\n\
    \        Collections.sort(l);\n        int n = l.size();\n        int median =\
    \ 0;\n        if (n % 2 == 0) {\n            median = (l.get(n / 2) + l.get(n\
    \ / 2 - 1)) / 2;\n        } else {\n            median = l.get(n / 2);\n     \
    \   }\n        return median;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuigm12nx.java:33)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        Collections.sort(l);\n        if (n % 2 == 0) {\n     \
    \       return (l.get(n / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n \
    \           return l.get(n / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ Return median.\n        int length = l.size();\n        if (length % 2 == 0)\
    \ {\n            return (l.get(length / 2) + l.get(length / 2 - 1)) / 2.0f;\n\
    \        } else {\n            return l.get(length / 2);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp8jykee_c.java:24)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // FIXME:\
    \ return mean of middle elements if even\n        int n = l.size();\n        Collections.sort(l);\n\
    \        return n % 2 == 0 ? (l.get(n / 2) + l.get(n / 2 - 1)) / 2 : l.get(n /\
    \ 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprdox463p.java:24)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        throw\
    \ new RuntimeException(\"Not implemented\");\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: Not implemented\n\
    \tat Problem.median(tmpb8eq1krb.java:15)\n\tat Problem.main(tmpb8eq1krb.java:18)\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return (l.size() % 2 == 0) ? ((l.get(mid\
    \ - 1) + l.get(mid)) / 2.0f) : l.get(mid);\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbd3el18.java:18)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        l.sort(null);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            int median\
    \ = len / 2;\n            return (l.get(median) + l.get(median - 1)) / 2.0f;\n\
    \        } else {\n            return l.get(len / 2);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 15.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7_o43o7e.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            int n = l.size() / 2;\n            return (l.get(n\
    \ - 1) + l.get(n)) / 2.0f;\n        } else {\n            return l.get(l.size()\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt4gx417c.java:23)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbd3el18.java:18)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ x;\n        Collections.sort(l);\n        if (l.size() % 2 == 0) {\n       \
    \     x = (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n        } else\
    \ {\n            x = l.get(l.size() / 2);\n        }\n        return x;\n}\n \
    \   public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        Collections.sort(l);\n        if (n % 2 == 0) {\n     \
    \       return (l.get(n / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n    \
    \        return l.get(n / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdldrxei.java:27)\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n      Collections.sort(l);\n\
    \      float med = 0;\n      if (l.size()%2 == 0) {\n        med = (l.get(l.size()/2)\
    \ + l.get(l.size()/2 - 1))/2.0f;\n      } else {\n        med = l.get(l.size()/2);\n\
    \      }\n      return med;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n%2 == 0) {\n            float median\
    \ = (l.get(n/2) + l.get(n/2-1))/2;\n            return median;\n        }\n  \
    \      else {\n            return l.get(n/2);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpb63didp1.java:29)\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ avg = 0;\n        int size = l.size();\n        float median = 0;\n        int\
    \ mid = size / 2;\n        if (size % 2 == 0) {\n            median = (l.get(mid)\
    \ + l.get(mid - 1)) / 2;\n        } else {\n            median = l.get(mid);\n\
    \        }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsx_6b9vk.java:27)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // The\
    \ code below uses the fact that lists can be sorted\n        // in O(n log n)\
    \ time.\n        int n = l.size();\n        Collections.sort(l);\n        if (n\
    \ % 2 == 1) {\n            return l.get(n / 2);\n        } else {\n          \
    \  return (l.get(n / 2 - 1) + l.get(n / 2)) / 2.0f;\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // sort\
    \ the list\n        Collections.sort(l);\n        int size = l.size();\n     \
    \   // It's the median element\n        if (size % 2 == 1) {\n            return\
    \ l.get(size / 2);\n        }\n        // it's the median of the two middle elements\n\
    \        return ((float) l.get(size / 2 - 1) + (float) l.get(size / 2)) / 2;\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid_index = l.size() / 2;\n        if (l.size() % 2 == 0) {\n   \
    \         return (l.get(mid_index - 1) + l.get(mid_index)) / 2.0f;\n        }\
    \ else {\n            return l.get(mid_index);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ Write code here.\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3imo1x9y.java:19)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float med;\n        if (l.size() % 2 == 0) {\n            int num1 =\
    \ l.get(l.size() / 2);\n            int num2 = l.get(l.size() / 2 - 1);\n    \
    \        med = (float) (num1 + num2) / 2;\n        } else {\n            med =\
    \ l.get(l.size() / 2);\n        }\n        return med;\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ sum = 0;\n        int len = l.size();\n        Collections.sort(l);\n      \
    \  if (len % 2 == 0) {\n            sum = l.get(len / 2 - 1) + l.get(len / 2);\n\
    \            sum /= 2;\n        } else {\n            sum = l.get(len / 2);\n\
    \        }\n        return sum;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here.\n        float m;\n        if(l.size() % 2 == 0) {\n            m\
    \ = ((float)l.get(l.size()/2 - 1) + (float)l.get(l.size()/2))/2;\n        } else\
    \ {\n            m = (float)l.get(l.size()/2);\n        }\n        return m;\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7wfzadbq.java:25)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ ret = 0;\n        // Algorithm: (1) Sort the input list.\n        //       \
    \     (2) Find the middle element.\n        //                (a) If list length\
    \ is odd, return the middle element.\n        //                (b) If list length\
    \ is even, return the average of the\n        //                    two middle\
    \ elements.\n        Collections.sort(l);\n        float mid = l.size() / 2;\n\
    \        if (l.size() % 2 == 0) {\n            ret = (l.get((int) mid) + l.get((int)\
    \ mid - 1)) / 2;\n        } else {\n            ret = l.get((int) mid);\n    \
    \    }\n        return ret;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjn0hx2c2.java:34)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ (l.size() % 2 == 0) ? (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f\
    \ : l.get(l.size() / 2);\n}\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuxymlh0j.java:18)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        if (n == 0) {\n            return 0;\n        }\n     \
    \   Collections.sort(l);\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        //Float\
    \ f = null;\n        float a = 0;\n        Collections.sort(l);\n        int x\
    \ = l.size();\n        float y = (float)x/2;\n        int z = l.size()/2;\n  \
    \      if(y - z == 0)\n        {\n            int sum = 0;\n            sum =\
    \ l.get(x/2) + l.get((x/2)-1);\n            a = (float)sum/2;\n        }\n   \
    \     else\n        {\n            a = l.get(x/2);\n        }\n        return\
    \ a;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        throw\
    \ new UnsupportedOperationException(\"Implement me\");\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Implement\
    \ me\n\tat Problem.median(tmpovla4m4l.java:15)\n\tat Problem.main(tmpovla4m4l.java:18)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ med;\n        Collections.sort(l);\n        med = l.get(l.size()/2);\n     \
    \   return med;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1wt_lj4f.java:22)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ l.stream().mapToInt(e -> e).average().getAsDouble();\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpeomf0utc.java:15: error: incompatible types: possible lossy conversion\
    \ from double to float\n        return l.stream().mapToInt(e -> e).average().getAsDouble();\n\
    \                                                                ^\n1 error\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        ArrayList<Integer> sortedList = new ArrayList<Integer>(l);\n\
    \        Collections.sort(sortedList);\n        if (n % 2 == 0) {\n          \
    \  int x = sortedList.get(n / 2);\n            int y = sortedList.get(n / 2 -\
    \ 1);\n            return (x + y) / 2.0f;\n        } else {\n            return\
    \ sortedList.get(n / 2);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Insert\
    \ the elements of l into a sorted list\n        ArrayList<Integer> sortedList\
    \ = new ArrayList<Integer>();\n        for (int i = 0; i < l.size(); i++) {\n\
    \            int number = l.get(i);\n            if (sortedList.size() == 0) {\n\
    \                sortedList.add(number);\n            } else {\n             \
    \   int j = 0;\n                while (j < sortedList.size() && number > sortedList.get(j))\
    \ {\n                    j++;\n                }\n                sortedList.add(j,\
    \ number);\n            }\n        }\n        // Return the median\n        if\
    \ (sortedList.size() % 2 == 0) {\n            return (sortedList.get(sortedList.size()\
    \ / 2) + sortedList.get(sortedList.size() / 2 - 1)) / 2f;\n        } else {\n\
    \            return sortedList.get(sortedList.size() / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfcwe4rey.java:27)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ l2 = new ArrayList<>(l);\n        Collections.sort(l2);\n        if (l2.size()\
    \ % 2 == 0) {\n            return (l2.get(l2.size() / 2) + l2.get(l2.size() /\
    \ 2 - 1)) / 2.0f;\n        } else {\n            return l2.get(l2.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ mid = (l.size()-1)/2.0f;\n        float median = 0;\n        if(l.size()%2 ==\
    \ 0) {\n            int index1 = (int)Math.floor(mid);\n            int index2\
    \ = (int)Math.ceil(mid);\n            median = (l.get(index1) + l.get(index2))/2.0f;\n\
    \        } else {\n            median = l.get((int)mid);\n        }\n        return\
    \ median;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3he9oq5x.java:27)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid) + l.get(mid - 1)) / 2;\n        } else {\n            return\
    \ l.get(mid);\n        }\n}\n    public static void main(String[] args) {\n  \
    \  assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmppyhgf34n.java:27)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ == 0) {\n            return 0;\n        } else if (l.size() % 2 == 0) {\n  \
    \          return (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n  \
    \      } else {\n            return l.get(l.size() / 2);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9vadae91.java:24)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Fill\
    \ in the code for the median function.\n        return 0;\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi9j50beg.java:19)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0)\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        else\n            return l.get(n /\
    \ 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int N = l.size();\n        if (N % 2 == 0) {\n            return (l.get(N\
    \ / 2) + l.get(N / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(N\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbd3el18.java:18)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ median;\n        int n = l.size();\n        if (n % 2 == 0)\n            median\
    \ = (float)(l.get(n/2) + l.get(n/2 - 1))/2;\n        else\n            median\
    \ = l.get(n/2);\n        return median;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpku_gdptm.java:24)\n"
  stdout: ''
  timestamp: 1660010238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        int mid = n / 2;\n        Collections.sort(l);\n      \
    \  if (n % 2 == 0) {\n            return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n\
    \        } else {\n            return l.get(mid);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len%2 == 0) {\n            return (l.get(len/2)\
    \ + l.get(len/2 - 1))/2;\n        } else {\n            return l.get(len/2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptg0z9mex.java:27)\n"
  stdout: ''
  timestamp: 1660010238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            int i = l.size() / 2;\n            return (l.get(i\
    \ - 1) + l.get(i)) / 2;\n        } else {\n            return l.get(l.size() /\
    \ 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjv_fxwg3.java:23)\n"
  stdout: ''
  timestamp: 1660010238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        l.sort(Integer::compareTo);\n\
    \        int count = l.size();\n        if (count == 0) {\n            return\
    \ 0;\n        }\n        if (count % 2 == 0) {\n            int v1 = l.get(count\
    \ / 2);\n            int v2 = l.get(count / 2 - 1);\n            return (v1 +\
    \ v2) / 2.0f;\n        } else {\n            return l.get(count / 2);\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        float median;\n        if (n % 2 == 0) {\n\
    \            median = (l.get(n / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n\
    \            median = l.get(n / 2);\n        }\n        return median;\n}\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmplc4tjt3c.java:29)\n"
  stdout: ''
  timestamp: 1660010238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i - 1) + l.get(i)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int N\
    \ = l.size();\n        Collections.sort(l);\n        if (N % 2 == 0) {\n     \
    \       return (l.get(N / 2) + l.get(N / 2 - 1)) / 2.0f;\n        } else {\n \
    \           return l.get(N / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float ans = 0;\n        if (l.size() % 2 == 0) {\n            ans = ((float)\
    \ l.get(l.size() / 2) + (float) l.get(l.size() / 2 - 1)) / 2;\n        } else\
    \ {\n            ans = (float) l.get(l.size() / 2);\n        }\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   int lower = l.get(mid - 1);\n            int upper = l.get(mid);\n       \
    \     return (lower + upper) / 2.0f;\n        } else {\n            return l.get(mid);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        Collections.sort(l);\n        if (n % 2 == 0) {\n     \
    \       return (l.get(n / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n    \
    \        return l.get(n / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsdldrxei.java:27)\n"
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median = 0;\n        if (l.size() % 2 == 0) {\n            int\
    \ middle = l.size() / 2;\n            median = (l.get(middle - 1) + l.get(middle))\
    \ / 2.0f;\n        } else {\n            int middle = l.size() / 2;\n        \
    \    median = l.get(middle);\n        }\n        return median;\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Fill\
    \ this in.\n        Collections.sort(l);\n        int n = l.size();\n        if(n\
    \ % 2 == 0) {\n            return (float)(l.get(n/2 - 1) + l.get(n/2))/2;\n  \
    \      } else {\n            return l.get(n/2);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if(l.size()%2==0)\n            return (l.get(l.size()/2-1)+l.get(l.size()/2))/2.0f;\n\
    \        else\n            return l.get(l.size()/2);\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n\tCollections.sort(l);\n\
    \tint n = l.size();\n\tif (n % 2 == 0) {\n\t    int index1 = n / 2;\n\t    int\
    \ index2 = index1 - 1;\n\t    return (l.get(index1) + l.get(index2)) / 2.0f;\n\
    \t} else {\n\t    int index = n / 2;\n\t    return l.get(index);\n\t}\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ Fill in this method so that it returns the median of l.\n        // If l is\
    \ empty, return 0.\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3m3tudye.java:20)\n"
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n\t    Collections.sort(l);\n\
    \t    float median = 0;\n\t    int n = l.size();\n\t    if (n % 2 == 0) {\n\t\
    \        median = (l.get(n/2) + l.get(n/2 - 1)) / 2;\n\t    } else {\n\t     \
    \   median = l.get(n/2);\n\t    }\n\t    return median;\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgno6nyc8.java:29)\n"
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        // Add code to compute median of l here.\n        if (l.size() % 2 ==\
    \ 0) {\n            return (l.get(l.size() / 2) + l.get(l.size() / 2 - 1)) / 2.0f;\n\
    \        } else {\n            return l.get(l.size() / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ l2 = new ArrayList<Integer>(l);\n        Collections.sort(l2);\n        int\
    \ n = l2.size();\n        if (n % 2 == 0) {\n            return (l2.get(n / 2)\
    \ + l2.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l2.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            int idx\
    \ = size / 2;\n            return (l.get(idx) + l.get(idx - 1)) / 2.0f;\n    \
    \    } else {\n            return l.get(size / 2);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float retval = 0;\n        int m = l.size()/2;\n        if (l.size()\
    \ % 2 == 0) {\n            retval = (l.get(m-1) + l.get(m))/2;\n        } else\
    \ {\n            retval = l.get(m);\n        }\n        return retval;\n}\n  \
    \  public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpm789yr7y.java:29)\n"
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Implement\
    \ this function.\n        if (l.size() % 2 == 0) {\n            return ((float)\
    \ l.get(l.size() / 2) + (float) l.get(l.size() / 2 - 1)) / 2;\n        } else\
    \ {\n            return (float) l.get(l.size() / 2);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp6osodcxa.java:23)\n"
  stdout: ''
  timestamp: 1660010239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int middle\
    \ = l.size() / 2;\n        if (l.size() % 2 == 1) {\n            return l.get(middle);\n\
    \        } else {\n            return (l.get(middle - 1) + l.get(middle)) / 2.0f;\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptitsuc9_.java:23)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int middle = l.size() / 2;\n        if (l.size() % 2 == 1) {\n      \
    \      return l.get(middle);\n        } else {\n            return (l.get(middle\
    \ - 1) + l.get(middle)) / 2.0f;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0)\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        else\n            return l.get(n /\
    \ 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int l1\
    \ = l.size();\n        Collections.sort(l);\n        if (l1 % 2 == 0) {\n    \
    \        return (float) (l.get(l1 / 2) + l.get(l1 / 2 - 1)) / 2;\n        } else\
    \ {\n            return (float) l.get(l1 / 2);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Note:\
    \ this function has a bug!\n        if (l.size()%2 == 0) {\n            return\
    \ (l.get(l.size()/2) + l.get(l.size()/2 - 1))/2.0f;\n        } else {\n      \
    \      return l.get(l.size()/2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp961jum45.java:23)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n        } else {\n         \
    \   return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            int left = l.get(l.size() / 2 - 1);\n            int\
    \ right = l.get(l.size() / 2);\n            return (left + right) / 2.0f;\n  \
    \      } else {\n            return l.get(l.size() / 2);\n        }\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp_v9d73gc.java:24)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ l.get(l.size() / 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpk6u14j8o.java:18)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            return ((float)l.get(l.size() / 2) + (float)l.get(l.size()\
    \ / 2 - 1)) / 2;\n        } else {\n            return (float)l.get(l.size() /\
    \ 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph_883uib.java:22)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int mid\
    \ = l.size() / 2;\n        if (l.size() % 2 == 0) {\n            return (l.get(mid\
    \ - 1) + l.get(mid)) / 2.0f;\n        } else {\n            return l.get(mid);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp76i62rm5.java:23)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Code\
    \ here to compute median.\n        // >>> median([3, 1, 2, 4, 5])\n        //\
    \ 3\n        // >>> median([-10, 4, 6, 1000, 10, 20])\n        // 15.0\n     \
    \   float n, n1, n2;\n        n = l.size();\n        if(n%2==0){\n           \
    \ n1 = l.get((int)n/2);\n            n2 = l.get((int)n/2-1);\n            return\
    \ (n1+n2)/2;\n        }\n        else {\n            return l.get((int)n/2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgnk86tt2.java:32)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here\n        Collections.sort(l);\n        float res;\n        if (l.size()\
    \ % 2 == 0) {\n            res = ((l.get(l.size() / 2 - 1) + l.get(l.size() /\
    \ 2))) / 2.0f;\n        } else {\n            res = l.get(l.size() / 2);\n   \
    \     }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        return (l.get(l.size() / 2) + l.get((l.size() - 1) / 2)) / 2.0f;\n}\n\
    \    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ solution here\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpp316pdck.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ (1) Implement median.\n        Collections.sort(l);\n        if (l.size() %\
    \ 2 == 0) {\n            int k = l.size() / 2;\n            return (float)(l.get(k\
    \ - 1) + l.get(k)) / 2;\n        } else {\n            int k = l.size() / 2;\n\
    \            return l.get(k);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ sorted = (ArrayList<Integer>) l.clone();\n        Collections.sort(sorted);\n\
    \        int n = sorted.size();\n        if (n % 2 == 0) {\n            return\
    \ (sorted.get(n / 2) + sorted.get(n / 2 - 1)) / 2.0f;\n        } else {\n    \
    \        return sorted.get(n / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpfcwe4rey.java:27)\n"
  stdout: ''
  timestamp: 1660010237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Fill\
    \ in here ...\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv4try0tb.java:19)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float m;\n        int n = l.size();\n        int i = (n-1)/2;\n     \
    \   if (n % 2 == 0) {\n            m = (l.get(i) + l.get(i+1))/2.0f;\n       \
    \ } else {\n            m = l.get(i);\n        }\n        return m;\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n%2 == 0) {\n            int i = n/2-1;\n\
    \            int j = n/2;\n            return (l.get(i)+l.get(j))/2.0f;\n    \
    \    } else {\n            int i = n/2;\n            return l.get(i);\n      \
    \  }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ l2 = (ArrayList<Integer>) l.clone();\n        Collections.sort(l2);\n      \
    \  if (l2.size() % 2 == 0) {\n            return (l2.get(l2.size() / 2) + l2.get(l2.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l2.get(l2.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int len\
    \ = l.size();\n        Collections.sort(l);\n        if (len % 2 == 0) {\n   \
    \         return (l.get(len / 2) + l.get(len / 2 - 1)) / 2.0f;\n        } else\
    \ {\n            return l.get(len / 2);\n        }\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int mid\
    \ = l.size() / 2;\n        if (l.size() % 2 == 0) {\n            return (l.get(mid)\
    \ + l.get(mid - 1)) / 2;\n        } else {\n            return l.get(mid);\n \
    \       }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbrxs549o.java:23)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0)\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        else\n            return l.get(n /\
    \ 2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            int right = l.size() / 2;\n            int left = right\
    \ - 1;\n            return (l.get(left) + l.get(right)) / 2.0f;\n        } else\
    \ {\n            return l.get(l.size() / 2);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpktj8wnhq.java:24)\n"
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        float x = n / 2.0f;\n        float y = (n\
    \ + 1) / 2.0f;\n        float z = (n - 1) / 2.0f;\n        float w = (n - 2) /\
    \ 2.0f;\n        if (n % 2 == 0) {\n            return (l.get((int) x) + l.get((int)\
    \ y)) / 2.0f;\n        } else {\n            return l.get((int) z);\n        }\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr056awd_.java:29)\n"
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2) + l.get(len / 2 - 1)) / 2.0f;\n        } else {\n          \
    \  return l.get(len / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n        } else {\n         \
    \   return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ == 0) {\n            return 0;\n        }\n        Collections.sort(l);\n  \
    \      int middle = l.size() / 2;\n        if (l.size() % 2 == 1) {\n        \
    \    return l.get(middle);\n        } else {\n            return (l.get(middle-1)\
    \ + l.get(middle)) / 2.0f;\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n       \
    \     float val = (l.get((int)mid) + l.get((int)mid - 1)) / 2;\n            return\
    \ val;\n        }\n        else {\n            return l.get((int)mid);\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dh2lfpg.java:29)\n"
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // l.add(2);\n\
    \        // l.add(1);\n        // l.add(4);\n        // l.add(5);\n        //\
    \ l.add(3);\n        // l.add(0);\n        // l.add(7);\n        // l.add(9);\n\
    \        // l.add(11);\n        // l.add(8);\n        // l.add(10);\n        //\
    \ l.add(6);\n        // System.out.println(l);\n        // Collections.sort(l);\n\
    \        // System.out.println(l);\n        // int n = l.size();\n        // float\
    \ m = (float)l.get(n/2) + (float)l.get((n/2)-1);\n        // System.out.println(m);\n\
    \        // return m;\n        // return (float) l.get(l.size()/2);\n        //\
    \ Collections.sort(l);\n        // int s = l.size();\n        // if (s % 2 ==\
    \ 0) {\n        //     return (float) l.get(s/2);\n        // } else {\n     \
    \   //     int i = (s-1)/2;\n        //     return (float) (l.get(i) + l.get(i+1))/2;\n\
    \        // }\n        // Collections.sort(l);\n        // float m = (float)l.get(l.size()/2);\n\
    \        // return m;\n        // for (int i = 0; i < l.size(); i++) {\n     \
    \   //     for (int j = 0; j < l.size()-1; j++) {\n        //         if (l.get(j)\
    \ > l.get(j+1)) {\n        //             int tmp = l.get(j);\n        //    \
    \         l.set(j, l.get(j+1));\n        //             l.set(j+1, tmp);\n   \
    \     //         }\n        //     }\n        // }\n        // return (float)\
    \ l.get(l.size()/2);\n        // Collections.sort(l);\n        // float m = (float)l.get(l\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpnb5yf60j.java:58: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float m = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n  \
    \          return (l.get(l.size() / 2 - 1) + m) / 2;\n        }\n        return\
    \ m;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        //To calculate median, first sort the list.\n        Collections.sort(l);\n\
    \        if (n % 2 == 0)\n            return (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2;\n        else\n            return l.get(n / 2);\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt5bu_xgk.java:27)\n"
  stdout: ''
  timestamp: 1660010241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        return (l.size() % 2 == 0) ? ((float)\
    \ l.get(mid) + (float) l.get(mid - 1)) / 2 : (float) l.get(mid);\n}\n    public\
    \ static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // write\
    \ your code here\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprsasm6dn.java:19)\n"
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(n\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int lSize = l.size();\n        int m1 = (lSize - 1) / 2;\n        int\
    \ m2 = lSize / 2;\n        float m = (l.get(m1) + l.get(m2)) / 2.0f;\n       \
    \ return m;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here.\n        // You can define helper functions here too.\n        Collections.sort(l);\n\
    \        float median = 0;\n        int size = l.size();\n        if (size % 2\
    \ == 0) {\n            median = (l.get(size / 2) + l.get(size / 2 - 1)) / 2.0f;\n\
    \        } else {\n            median = l.get(size / 2);\n        }\n        return\
    \ median;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int m\
    \ = l.size()/2;\n        if (l.size() % 2 == 0) {\n            return (l.get(m)\
    \ + l.get(m - 1)) / 2.0f;\n        } else {\n            return l.get(m);\n  \
    \      }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp00spg85j.java:23)\n"
  stdout: ''
  timestamp: 1660010242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Write\
    \ your code here\n        float median;\n        int size = l.size();\n      \
    \  if (size % 2 == 0) {\n            median = (l.get(size / 2) + l.get(size /\
    \ 2 - 1)) / 2.0f;\n        } else {\n            median = l.get(size / 2);\n \
    \       }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbgn8lavu.java:26)\n"
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int i = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(i) + l.get(i - 1)) / 2.0f;\n        } else {\n            return\
    \ l.get(i);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float m = l.get(l.size() / 2);\n        if (l.size() % 2 == 0) {\n  \
    \          m += l.get(l.size() / 2 - 1);\n            m /= 2;\n        }\n   \
    \     return m;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        float median = 0;\n        if (size % 2\
    \ == 0) {\n            median = (l.get(size / 2) + l.get(size / 2 - 1)) / 2;\n\
    \        } else {\n            median = l.get(size / 2);\n        }\n        return\
    \ median;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3x3sbt11.java:29)\n"
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if(l.size() % 2 == 0) {\n            int n = l.size() / 2;\n        \
    \    return (l.get(n - 1) + l.get(n)) / 2.0f;\n        } else {\n            return\
    \ l.get(l.size() / 2);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float result = 0;\n        if (l.size() % 2 == 0) {\n            int\
    \ index = l.size() / 2;\n            result = ((float)l.get(index - 1) + (float)l.get(index))\
    \ / 2;\n        } else {\n            int index = l.size() / 2;\n            result\
    \ = (float)l.get(index);\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            int a = l.get(l.size() / 2);\n\
    \            int b = l.get(l.size() / 2 - 1);\n            return (a + b) / 2.0f;\n\
    \        } else {\n            return l.get(l.size() / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Write\
    \ your code here.\n        int n = l.size();\n        int k = n % 2 == 0 ? n /\
    \ 2 : n / 2 + 1;\n        return kth(l, k) / 2.0f;\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpf8dvzd77.java:18: error: cannot find symbol\n        return kth(l,\
    \ k) / 2.0f;\n               ^\n  symbol:   method kth(ArrayList<Integer>,int)\n\
    \  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // >>>\
    \ median([])\n        // 0.0\n        // >>> median([1])\n        // 1.0\n   \
    \     if (l.size() == 0) {\n            return 0.0f;\n        } else if (l.size()\
    \ == 1) {\n            return l.get(0).floatValue();\n        } else {\n     \
    \       // >>> median([1, 2])\n            // 1.5\n            // >>> median([2,\
    \ 1])\n            // 1.5\n            Collections.sort(l);\n            int mid\
    \ = l.size() / 2;\n            if (l.size() % 2 == 0) {\n                return\
    \ (l.get(mid - 1) + l.get(mid)) / 2.0f;\n            } else {\n              \
    \  return l.get(mid);\n            }\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        int mid = n / 2;\n        if (n % 2 == 0)\
    \ {\n            return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n        } else\
    \ {\n            return l.get(mid);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        Collections.sort(l);\n        return (n % 2 == 0) ? (l.get(n\
    \ / 2) + l.get(n / 2 - 1)) / 2.0f : l.get(n / 2);\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ Implement!\n        Collections.sort(l);\n        float median = 0;\n      \
    \  int size = l.size();\n        if (size % 2 == 0) {\n            median = (l.get(size\
    \ / 2) + l.get(size / 2 - 1)) / 2.0f;\n        } else {\n            median =\
    \ l.get(size / 2);\n        }\n        return median;\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        l.sort(null);\n\
    \        return ((float)l.get(l.size()/2) + (float)l.get((l.size()-1)/2))/2;\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median;\n        if (l.size() % 2 == 0)\n            median = ((float)l.get(l.size()/2)\
    \ + (float)l.get(l.size()/2 - 1))/2;\n        else\n            median = (float)\
    \ l.get(l.size()/2);\n        return median;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid - 1) + l.get(mid)) / 2.0f;\n        } else {\n         \
    \   return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Replace\
    \ with your code.\n        Collections.sort(l);\n        float med;\n        int\
    \ n = l.size();\n        int a = (n - 1) / 2;\n        int b = n / 2;\n      \
    \  if(n % 2 == 0) {\n            med = (float)(l.get(a) + l.get(b)) / 2;\n   \
    \     } else {\n            med = l.get(b);\n        }\n        return med;\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int n\
    \ = l.size();\n        if (n == 0) return 0;\n        if (n % 2 == 1) {\n    \
    \        return (float)l.get(n / 2);\n        } else {\n            int sum =\
    \ l.get(n / 2) + l.get(n / 2 - 1);\n            return (float)sum / 2;\n     \
    \   }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprs23u89z.java:25)\n"
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmprbd3el18.java:18)\n"
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here.\n        Collections.sort(l);\n        int mid = l.size()/2;\n  \
    \      if(l.size()%2 == 0)\n            return (float)(l.get(mid-1) + l.get(mid))/2;\n\
    \        else\n            return l.get(mid);\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ med = 0;\n        Collections.sort(l);\n        int index = (l.size()-1)/2;\n\
    \        int n = l.size();\n        if (n%2 == 0) {\n            med = (l.get(index)\
    \ + l.get(index+1))/2.0f;\n        } else {\n            med = l.get(index);\n\
    \        }\n        return med;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        int middle = n / 2;\n        if (n % 2 ==\
    \ 1) {\n            return l.get(middle);\n        } else {\n            return\
    \ (l.get(middle - 1) + l.get(middle)) / 2.0f;\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO\n\
    \        // Return median of elements in the list l.\n        float median = 0;\n\
    \        Collections.sort(l);\n        int size = l.size();\n        if (size\
    \ % 2 == 0) {\n            int middleLeft = size / 2 - 1;\n            int middleRight\
    \ = size / 2;\n            float left = l.get(middleLeft);\n            float\
    \ right = l.get(middleRight);\n            median = (left + right) / 2;\n    \
    \    } else {\n            int middle = size / 2;\n            median = l.get(middle);\n\
    \        }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            int a = l.get(l.size() / 2);\n\
    \            int b = l.get(l.size() / 2 - 1);\n            return (a + b) / 2.0f;\n\
    \        } else {\n            return l.get(l.size() / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int index = l.size() / 2;\n        if (l.size() % 2 == 0) {\n       \
    \     return (l.get(index) + l.get(index-1)) / 2.0f;\n        } else {\n     \
    \       return l.get(index);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int len = l.size();\n        if (len % 2 == 0) {\n            return\
    \ (l.get(len / 2) + l.get(len / 2 - 1)) / 2;\n        } else {\n            return\
    \ l.get(len / 2);\n        }\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4vw2ha15.java:27)\n"
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int length\
    \ = l.size();\n        int[] arr = new int[length];\n        for (int i = 0; i\
    \ < length; i++) {\n            arr[i] = l.get(i);\n        }\n        Arrays.sort(arr);\n\
    \        if (length % 2 == 0) {\n            return (float) (arr[length / 2] +\
    \ arr[length / 2 - 1]) / 2;\n        } else {\n            return arr[length /\
    \ 2];\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int size = l.size();\n        if (size % 2 == 0) {\n            int mid1\
    \ = l.get(size / 2);\n            int mid2 = l.get(size / 2 - 1);\n          \
    \  return (mid1 + mid2) / 2.0f;\n        } else {\n            return l.get(size\
    \ / 2);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        return\
    \ 0.0f;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl65ifn8o.java:18)\n"
  stdout: ''
  timestamp: 1660010235
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            int a = l.get(l.size() / 2);\n\
    \            int b = l.get(l.size() / 2 - 1);\n            return (a + b) / 2.0f;\n\
    \        } else {\n            return l.get(l.size() / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            float m1 =\
    \ l.get(n / 2);\n            float m2 = l.get(n / 2 - 1);\n            return\
    \ (m1 + m2) / 2;\n        } else {\n            return l.get(n / 2);\n       \
    \ }\n}\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if(l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here!\n        return -1;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5xw_nul7.java:19)\n"
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // YOUR\
    \ CODE HERE\n        return 0;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp10iuy9tt.java:19)\n"
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ == 0) {\n            return 0;\n        }\n        Collections.sort(l);\n  \
    \      int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(mid) + l.get(mid - 1)) / 2.0f;\n        } else {\n           \
    \ return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ median = 0;\n        int size = l.size();\n        float middle = (float)Math.floor(size\
    \ / 2);\n        if (size % 2 == 0) {\n            median = (float)(l.get((int)middle)\
    \ + l.get((int)middle - 1)) / 2;\n        } else {\n            median = l.get((int)middle);\n\
    \        }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpktv8tkky.java:26)\n"
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        ArrayList<Integer>\
    \ li = l;\n        Collections.sort(li);\n        int n = li.size();\n       \
    \ if (n % 2 == 0) {\n            return (li.get(n / 2) + li.get(n / 2 - 1)) /\
    \ 2.0f;\n        } else {\n            return li.get(n / 2);\n        }\n}\n \
    \   public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // IMPLEMENT\
    \ ME\n        return 0;\n}\n    public static void main(String[] args) {\n   \
    \ assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpiw4c8cjx.java:19)\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ median = 0;\n        Collections.sort(l);\n        int size = l.size();\n  \
    \      if (size % 2 == 0) {\n            median = (l.get(size / 2) + l.get(size\
    \ / 2 - 1)) / 2;\n        } else {\n            median = l.get(size / 2);\n  \
    \      }\n        return median;\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1bliegmd.java:29)\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int m = l.size() / 2;\n        if (l.size() % 2 == 0) {\n           \
    \ return (l.get(m) + l.get(m - 1)) / 2;\n        } else {\n            return\
    \ l.get(m);\n        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp241ao7w8.java:27)\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int mid = l.size() / 2;\n        if (l.size() % 2 == 0) {\n         \
    \   return (l.get(mid) + l.get(mid - 1)) / 2.0f;\n        } else {\n         \
    \   return l.get(mid);\n        }\n}\n    public static void main(String[] args)\
    \ {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        float median;\n        if (l.size() % 2 == 0)\n            median = ((float)l.get(l.size()/2)\
    \ + (float)l.get(l.size()/2 - 1))/2;\n        else\n            median = (float)\
    \ l.get(l.size()/2);\n        return median;\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010243
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int lsize = l.size();\n        if(lsize % 2 == 0)\n            return\
    \ (l.get(lsize/2 - 1) + l.get(lsize/2)) / 2.0f;\n        else\n            return\
    \ l.get(lsize/2);\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        if (l.size() % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size()\
    \ / 2 - 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO:\
    \ Fill out the body.\n\t\tint size = l.size();\n\t\tif(size == 0)\n\t\t\treturn\
    \ -1;\n\t\tCollections.sort(l);\n\t\tfloat result = (float)0.0;\n\t\tif(size %\
    \ 2 == 0)\n\t\t\tresult = (float)(l.get(size/2) + l.get(size/2 - 1)) / 2;\n\t\t\
    else\n\t\t\tresult = l.get(size/2);\n\t\treturn result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        if (l.size()\
    \ % 2 == 0) {\n            return (l.get(l.size() / 2) + l.get(l.size() / 2 -\
    \ 1)) / 2.0f;\n        } else {\n            return l.get(l.size() / 2);\n   \
    \     }\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpux2nl3xl.java:22)\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // Your\
    \ code here.\n        Collections.sort(l);\n        return (l.size()%2 == 0)?(l.get(l.size()/2-1)+l.get(l.size()/2))/2f:l.get(l.size()/2);\n\
    }\n    public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        Collections.sort(l);\n\
    \        int n = l.size();\n        float m = n % 2 == 0 ? (l.get(n / 2) + l.get(n\
    \ / 2 - 1)) / 2.0f : l.get(n / 2);\n        return m;\n}\n    public static void\
    \ main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        float\
    \ m = 0;\n        Collections.sort(l);\n        int x = l.size();\n        int\
    \ y = x / 2;\n        if (x % 2 == 0) {\n            m = ((float) l.get(y) + (float)\
    \ l.get(y - 1)) / 2;\n        } else {\n            m = (float) l.get(y);\n  \
    \      }\n        return m;\n}\n    public static void main(String[] args) {\n\
    \    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2,\
    \ (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // place\
    \ your code here.\n        // note: this solution can be done without sorting\n\
    \        // but is otherwise not very efficient\n        Collections.sort(l);\n\
    \        int n = l.size();\n        if (n % 2 == 0) {\n            return ((float)\
    \ l.get(n / 2) + (float) l.get(n / 2 - 1)) / 2;\n        } else {\n          \
    \  return (float) l.get(n / 2);\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3, (int)1,\
    \ (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        // TODO\
    \ implement this function.\n        Collections.sort(l);\n        int n = l.size();\n\
    \        if (n % 2 == 0) {\n            return (l.get(n / 2) + l.get(n / 2 - 1))\
    \ / 2;\n        } else {\n            return l.get(n / 2);\n        }\n}\n   \
    \ public static void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbtj9k8kj.java:28)\n"
  stdout: ''
  timestamp: 1660010244
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int len\
    \ = l.size();\n        int mid = len / 2;\n        Collections.sort(l);\n    \
    \    if (len % 2 == 0) {\n            float first = l.get(mid - 1);\n        \
    \    float second = l.get(mid);\n            return (first + second) / 2;\n  \
    \      } else {\n            return l.get(mid);\n        }\n}\n    public static\
    \ void main(String[] args) {\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)3,\
    \ (int)1, (int)2, (int)4, (int)5)))) == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010244
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return median of elements in the list l.\n    // >>> median([3,\
    \ 1, 2, 4, 5])\n    // 3\n    // >>> median([-10, 4, 6, 1000, 10, 20])\n    //\
    \ 15.0\n    public static float median(ArrayList<Integer> l) {\n        int mid\
    \ = l.size() / 2;\n        float med = l.get(mid);\n        if (l.size() % 2 ==\
    \ 0) {\n            med = (med + l.get(mid - 1)) / 2;\n        }\n        return\
    \ med;\n}\n    public static void main(String[] args) {\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)3, (int)1, (int)2, (int)4, (int)5))))\
    \ == (float)3);\n    assert(median((new ArrayList<Integer>(Arrays.asList((int)-10,\
    \ (int)4, (int)6, (int)1000, (int)10, (int)20)))) == (8.0f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)5)))) == (float)5);\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)6, (int)5)))) == (5.5f));\n    assert(median((new\
    \ ArrayList<Integer>(Arrays.asList((int)8, (int)1, (int)3, (int)9, (int)9, (int)2,\
    \ (int)7)))) == (float)7);\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp89k3fk_g.java:23)\n"
  stdout: ''
  timestamp: 1660010244

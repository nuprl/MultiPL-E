name: HumanEval_162_string_to_md5
language: java
results:
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] data = text.getBytes(\"UTF-8\");\n            byte[] digest\
    \ = md.digest(data);\n            return Optional.of(String.format(\"%032x\",\
    \ new BigInteger(1, digest)));\n        } catch (NoSuchAlgorithmException | UnsupportedEncodingException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdkq6sey2.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        Optional<String> o = Optional.empty();\n\
    \        if (text.isEmpty()) {\n            return o;\n        }\n        try\
    \ {\n            MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n\
    \            digest.update(text.getBytes());\n            String md5 = new BigInteger(1,\
    \ digest.digest()).toString(16);\n            while (md5.length() < 32) {\n  \
    \              md5 = \"0\" + md5;\n            }\n            o = Optional.of(md5);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \        }\n        return o;\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3w751uva.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmbdwakie.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException ex) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbaq0_67s.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            return Optional.of(new\
    \ BigInteger(1, md.digest()).toString(16));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpza_ikyjj.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        MessageDigest md = null;\n        try\
    \ {\n            md = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n        }\n        md.update(text.getBytes());\n\
    \        byte[] digest = md.digest();\n        StringBuffer sb = new StringBuffer();\n\
    \        for (byte b : digest) {\n            sb.append(String.format(\"%02x\"\
    , b & 0xff));\n        }\n        return Optional.of(sb.toString());\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfdrv6bge.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        String result = null;\n        try {\n \
    \           MessageDigest md = MessageDigest.getInstance(\"MD5\");\n         \
    \   md.update(text.getBytes());\n            byte[] digest = md.digest();\n  \
    \          result = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \        }\n        return result == null ? Optional.empty() : Optional.of(result);\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbsw1khe8.java:18: error: cannot find symbol\n            result\
    \ = DatatypeConverter.printHexBinary(digest).toLowerCase();\n                \
    \     ^\n  symbol:   variable DatatypeConverter\n  location: class Problem\n1\
    \ error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] array = md.digest(text.getBytes());\n            StringBuffer\
    \ sb = new StringBuffer();\n            for (int i = 0; i < array.length; ++i)\
    \ {\n                sb.append(Integer.toHexString((array[i] & 0xFF) | 0x100).substring(1,3));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (java.security.NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4d7_k7xp.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, MessageDigest.getInstance(\"MD5\").digest(text.getBytes(\"\
    UTF-8\")))));\n        } catch (NoSuchAlgorithmException | UnsupportedEncodingException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8muz1bk0.java:18: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return null;\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvu9pd4lk.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return null;\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpk6vjpq4b.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] messageDigest = md.digest(text.getBytes());\n         \
    \   BigInteger no = new BigInteger(1, messageDigest);\n            String hashtext\
    \ = no.toString(16);\n            while (hashtext.length() < 32) {\n         \
    \       hashtext = \"0\" + hashtext;\n            }\n            return Optional.of(hashtext);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx57aycz4.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuilder sb = new StringBuilder();\n        \
    \    for (byte b : digest) {\n                sb.append(String.format(\"%02x\"\
    , b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp33nk74xi.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphjmq0h1q.java:23: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnivlf0lt.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n\n        try {\n            MessageDigest md\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj_o6xzfj.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            return Optional.of(String.format(\"%032x\", new BigInteger(1,\
    \ digest)));\n        } catch (NoSuchAlgorithmException e) {\n            return\
    \ Optional.empty();\n        }\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpck24lx29.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // Find the md5 hash\
    \ of 'text'\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] hash = md.digest();\n\
    \            // Convert the md5 hash to hex string\n            String result\
    \ = \"\";\n            for (byte b : hash) {\n                result += String.format(\"\
    %02x\", b);\n            }\n            return Optional.of(result);\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuy7e94pl.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ma9je7l.java:18: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code here\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyztyo5s_.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            String myHash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \            return Optional.of(myHash);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb04o_elz.java:17: error: cannot find symbol\n            String\
    \ myHash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n         \
    \                   ^\n  symbol:   variable DatatypeConverter\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        MessageDigest m = null;\n        try {\n\
    \            m = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n        }\n        m.update(text.getBytes(),\
    \ 0, text.length());\n        BigInteger i = new BigInteger(1, m.digest());\n\
    \        return Optional.of(String.format(\"%1$032x\", i));\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt17bpzbj.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // We simply create a\
    \ md5 hash object, update the object with\n            // 'text' (which will perform\
    \ MD5 hashing on the string), and\n            // get the digest of the object.\
    \ The digest() method returns\n            // a byte array, so we convert it to\
    \ a hexadecimal string\n            // representation.\n            //\n     \
    \       // For more information on the Java Cryptography API, refer to:\n    \
    \        // https://docs.oracle.com/javase/8/docs/technotes/guides/security/crypto/CryptoSpec.html\n\
    \            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        \
    \    md.update(text.getBytes());\n            byte[] digest = md.digest();\n \
    \           StringBuffer hexDigest = new StringBuffer();\n            for (int\
    \ i = 0; i < digest.length; i++) {\n                hexDigest.append(String.format(\"\
    %02x\", digest[i]));\n            }\n            return Optional.of(hexDigest.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            // This exception\
    \ should never occur since we are using the md5 algorithm.\n            return\
    \ Optional.empty();\n        }\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7ljifsr_.java:34: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ StringBuilder sb = new StringBuilder();\n            for (byte b : digest) {\n\
    \                sb.append(String.format(\"%02x\", b & 0xff));\n            }\n\
    \            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            System.out.println(\"No such algorithm.\");\n            return\
    \ Optional.empty();\n        }\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptpuf7pnb.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] hash = digest.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hash) {\n                sb.append(String.format(\"%02x\", b));\n        \
    \    }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_8rvu5kx.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new UnsupportedOperationException(\"\
    TODO implement me!\");\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptqgx1qv1.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         return Optional.empty();\n        }\nreturn Optional.empty();\n    }\n\
    \    public static void main(String[] args) {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjtzdq_71.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement this method.\n      \
    \  return Optional.empty();\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8uqzvxj8.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes(\"\
    UTF-8\"));\n            StringBuilder builder = new StringBuilder();\n       \
    \     for (byte b : bytes) {\n                builder.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(builder.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        } catch (UnsupportedEncodingException e) {\n            throw new RuntimeException(e);\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppspium8a.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Ensure text is not empty\n        if\
    \ (text.isEmpty()) {\n            return Optional.empty();\n        }\n      \
    \  // Compute text md5 hash\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder(2 * hash.length);\n        \
    \    for (byte b : hash) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqzalapw7.java:20: error: cannot find symbol\n            byte[]\
    \ hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n                 \
    \                                 ^\n  symbol:   variable StandardCharsets\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf5p5a9r1.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n      return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb0ee55u4.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            String hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \            return Optional.of(hash);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx_qteeyd.java:17: error: cannot find symbol\n            String\
    \ hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n           \
    \               ^\n  symbol:   variable DatatypeConverter\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger number = new BigInteger(1, messageDigest);\n         \
    \   String hashtext = number.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmhg5gt9a.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) return Optional.empty();\n\
    \        return Optional.of(toMd5(text));\nreturn Optional.empty();\n    }\n \
    \   public static void main(String[] args) {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphqffdaxk.java:14: error: cannot find symbol\n        return Optional.of(toMd5(text));\n\
    \                           ^\n  symbol:   method toMd5(String)\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code goes here\n        if (text.length()\
    \ == 0) {\n            return Optional.empty();\n        }\n        try {\n  \
    \          MessageDigest md = MessageDigest.getInstance(\"MD5\");\n          \
    \  md.update(text.getBytes());\n            return Optional.of(new BigInteger(1,\
    \ md.digest()).toString(16));\n        } catch (NoSuchAlgorithmException e) {\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqqb5j_6_.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        MessageDigest md = null;\n        try\
    \ {\n            md = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n        md.update(text.getBytes());\n\
    \        byte[] digest = md.digest();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (byte b : digest) {\n            sb.append(String.format(\"%02x\"\
    , b & 0xff));\n        }\n        return Optional.of(sb.toString());\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbys2j5r_.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            byte[] bytesOfMessage\
    \ = text.getBytes(\"UTF-8\");\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(bytesOfMessage);\n            BigInteger\
    \ bigInt = new BigInteger(1, digest);\n            String hashtext = bigInt.toString(16);\n\
    \            while (hashtext.length() < 32) {\n                hashtext = \"0\"\
    \ + hashtext;\n            }\n            return Optional.of(hashtext);\n    \
    \    } catch (Exception e) {\n            return Optional.empty();\n        }\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpogce6qwl.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            String result = String.format(\"%032x\", new BigInteger(1, digest.digest()));\n\
    \            return Optional.of(result);\n        } catch (NoSuchAlgorithmException\
    \ ex) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpxitosj6j.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, hash)));\n\
    \        } catch (NoSuchAlgorithmException ex) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbkgzp885.java:15: error: cannot find symbol\n            byte[]\
    \ hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                         ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement this function\n     \
    \   return Optional.empty();\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp02gc_8kj.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            byte[] bytesOfMessage\
    \ = text.getBytes(\"UTF-8\");\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] thedigest = md.digest(bytesOfMessage);\n         \
    \   BigInteger bigInt = new BigInteger(1, thedigest);\n            String hashtext\
    \ = bigInt.toString(16);\n            // Now we need to zero pad it if you actually\
    \ want the full 32 chars.\n            while (hashtext.length() < 32) {\n    \
    \            hashtext = \"0\" + hashtext;\n            }\n            return Optional.of(hashtext);\n\
    \        } catch (Exception e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkwfya3d6.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ StringBuilder sb = new StringBuilder();\n            for (byte b : digest) {\n\
    \                sb.append(String.format(\"%02x\", b & 0xff));\n            }\n\
    \            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgtar8fa8.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // Source: https://stackoverflow.com/a/41510357\n\
    \            MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n    \
    \        byte[] hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            String hex = String.format(\"%032x\", new BigInteger(1, hash));\n\
    \            return Optional.of(hex);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjnejdclh.java:16: error: cannot find symbol\n            byte[]\
    \ hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                         ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpukwv44da.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new RuntimeException(\"Not implemented.\"\
    );\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnbajmgox.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hash = md.digest(text.getBytes());\n            StringBuffer\
    \ hexString = new StringBuffer();\n            for (int i = 0; i < hash.length;\
    \ i++) {\n                String hex = Integer.toHexString(0xff & hash[i]);\n\
    \                if (hex.length() == 1) hexString.append('0');\n             \
    \   hexString.append(hex);\n            }\n            return Optional.of(hexString.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp76xuxqbw.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        //return Optional.ofNullable(text).map(String::toLowerCase).map(s\
    \ -> s.getBytes(StandardCharsets.UTF_8)).map(b -> MessageDigest.getInstance(\"\
    MD5\").digest(b)).map(b -> String.format(\"%032x\", new BigInteger(1, b)));\n\
    \        return Optional.ofNullable(text).map(String::toLowerCase).map(s -> s.getBytes(StandardCharsets.UTF_8)).map(b\
    \ -> String.format(\"%032x\", new BigInteger(1, MessageDigest.getInstance(\"MD5\"\
    ).digest(b))));\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz8452402.java:14: error: cannot find symbol\n        return Optional.ofNullable(text).map(String::toLowerCase).map(s\
    \ -> s.getBytes(StandardCharsets.UTF_8)).map(b -> String.format(\"%032x\", new\
    \ BigInteger(1, MessageDigest.getInstance(\"MD5\").digest(b))));\n           \
    \                                                                           ^\n\
    \  symbol:   variable StandardCharsets\n  location: class Problem\n/tmp/tmpz8452402.java:14:\
    \ error: incompatible types: Object cannot be converted to byte[]\n        return\
    \ Optional.ofNullable(text).map(String::toLowerCase).map(s -> s.getBytes(StandardCharsets.UTF_8)).map(b\
    \ -> String.format(\"%032x\", new BigInteger(1, MessageDigest.getInstance(\"MD5\"\
    ).digest(b))));\n                                                            \
    \                                                                            \
    \                                                                 ^\nNote: Some\
    \ messages have been simplified; recompile with -Xdiags:verbose to get full output\n\
    2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] byteArray = messageDigest.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : byteArray) {\n                sb.append(String.format(\"%02x\", b));\n   \
    \         }\n            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ykllz01.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = messageDigest.digest(text.getBytes(\"\
    UTF-8\"));\n            return Optional.of(\n                String.format(\"\
    %032x\", new BigInteger(1, bytes))\n            );\n        } catch (Exception\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5tkv8bv0.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        if (text == null\
    \ || text.length() == 0) {\n            return Optional.empty();\n        }\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] digest = md.digest();\n\
    \            StringBuffer sb = new StringBuffer();\n            for (byte b :\
    \ digest) {\n                sb.append(String.format(\"%02x\", b & 0xff));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (Exception e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpka9xtqzd.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n      try {\n        // Returns the MD5 hash of\
    \ the given text\n        MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n        byte[] messageDigest = md.digest(text.getBytes());\n        BigInteger\
    \ no = new BigInteger(1, messageDigest);\n        StringBuilder sb = new StringBuilder(2\
    \ * messageDigest.length);\n        for (byte b : messageDigest) {\n         \
    \ sb.append(String.format(\"%02x\", b & 0xff));\n        }\n        return Optional.of(sb.toString());\n\
    \      } catch (NoSuchAlgorithmException e) {\n        return Optional.empty();\n\
    \      }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptf1trli_.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqyj1e8fb.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        //doSomething with text\n        return\
    \ Optional.empty();\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpld7l969f.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length()==0) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n         \
    \   return Optional.empty();\n        }\nreturn Optional.empty();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe5gh2rj9.java:16: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, md.digest())));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp223v5n89.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code here.\n        try {\n    \
    \        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            byte[]\
    \ md5Bytes = md.digest(text.getBytes(\"UTF-8\"));\n            BigInteger no =\
    \ new BigInteger(1, md5Bytes);\n            return Optional.of(no.toString(16));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4l6up6wz.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n   \
    \         return Optional.empty();\n        }\nreturn Optional.empty();\n    }\n\
    \    public static void main(String[] args) {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0_ls_iag.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpn0xe99h2.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        else {\n            try {\n                MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n                byte[] hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \                BigInteger no = new BigInteger(1, hash);\n                StringBuilder\
    \ hexString = new StringBuilder(no.toString(16));\n                while (hexString.length()\
    \ < 32) {\n                    hexString.insert(0, '0');\n                }\n\
    \                return Optional.of(hexString.toString());\n            } catch\
    \ (NoSuchAlgorithmException e) {\n                return Optional.empty();\n \
    \           }\n        }\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa5ksa4mn.java:17: error: cannot find symbol\n                byte[]\
    \ hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                             ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            StringBuffer hex = new\
    \ StringBuffer();\n            for (int i = 0; i < digest.length; i++) {\n   \
    \             hex.append(Integer.toHexString(0xFF & digest[i]));\n           \
    \ }\n            return Optional.of(hex.toString());\n        } catch (NoSuchAlgorithmException\
    \ nsae) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnuzbkw2y.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n\ttry {\n\t    if (text.isEmpty()) {\n\t\treturn\
    \ Optional.empty();\n\t    }\n\t    MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n\t    byte[] messageDigest = md.digest(text.getBytes());\n\t    BigInteger\
    \ no = new BigInteger(1, messageDigest);\n\t    String hashtext = no.toString(16);\n\
    \t    while (hashtext.length() < 32) {\n\t\thashtext = \"0\" + hashtext;\n\t \
    \   }\n\t    return Optional.of(hashtext);\n\t} catch (NoSuchAlgorithmException\
    \ e) {\n\t    throw new RuntimeException(e);\n\t}\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpe_u2c5ap.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement me\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi5ko8bjk.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiymd3v7b.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_8jafa1c.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO\n        try {\n            return\
    \ Optional.of(DigestUtils.md5Hex(text));\n        } catch (Exception e) {\n  \
    \          return Optional.empty();\n        }\nreturn Optional.empty();\n   \
    \ }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0q5aab7b.java:15: error: cannot find symbol\n            return\
    \ Optional.of(DigestUtils.md5Hex(text));\n                               ^\n \
    \ symbol:   variable DigestUtils\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new UnsupportedOperationException(\"\
    Please implement the (static) stringToMd5 method\");\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf4wo5ti8.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // hash the text if it's not empty\n   \
    \     if (!text.isEmpty()) {\n            try {\n                MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n                md.update(text.getBytes());\n\
    \                byte[] digest = md.digest();\n                String hex = String.format(\"\
    %032x\", new BigInteger(1, digest));\n                return Optional.of(hex);\n\
    \            } catch (NoSuchAlgorithmException e) {\n                System.out.println(\"\
    No such algorithm: \" + e.getMessage());\n            }\n        }\n        return\
    \ Optional.empty();\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprsbjlqto.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgpvxg75_.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) return Optional.empty();\n\
    \        String hash = \"\";\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] data = digest.digest(text.getBytes());\n\
    \            BigInteger i = new BigInteger(1, data);\n            hash = String.format(\"\
    %1$032x\", i);\n        } catch (NoSuchAlgorithmException e) {\n            //\
    \ Don't care about the error.\n        }\n        return Optional.of(hash);\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfwc2q_w0.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        String md5 = \"\";\n        try {\n    \
    \        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            BigInteger no = new BigInteger(1,\
    \ digest);\n            md5 = no.toString(16);\n            while (md5.length()\
    \ < 32) {\n                md5 = \"0\" + md5;\n            }\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n\
    \        return md5.isEmpty() ? Optional.empty() : Optional.of(md5);\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpa72indjw.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] digest = md.digest(text.getBytes());\n\
    \            BigInteger number = new BigInteger(1, digest);\n            String\
    \ hashText = number.toString(16);\n            while (hashText.length() < 32)\
    \ {\n                hashText = \"0\" + hashText;\n            }\n           \
    \ return Optional.of(hashText);\n        } catch (NoSuchAlgorithmException e)\
    \ {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmppoccmfo1.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code goes here.\n        return\
    \ Optional.empty();\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp29geyolo.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        MessageDigest md = null;\n        try {\n\
    \            md = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n        byte[] md5 =\
    \ md.digest(text.getBytes());\n        BigInteger bi = new BigInteger(1, md5);\n\
    \        return Optional.of(String.format(\"%0\" + (md5.length << 1) + \"x\",\
    \ bi));\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgck3c7ww.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] md5bytes = md.digest(text.getBytes(\"UTF-8\"));\n\
    \            String result = DatatypeConverter.printHexBinary(md5bytes);\n   \
    \         return Optional.of(result);\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps2r8uz1u.java:16: error: cannot find symbol\n            String\
    \ result = DatatypeConverter.printHexBinary(md5bytes);\n                     \
    \       ^\n  symbol:   variable DatatypeConverter\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // ...\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprsug1k_8.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // define the digest, and digest the text\
    \ into it.\n        // digest should return a byte array, which we want to\n \
    \       // convert to a string.\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] array = digest.digest(text.getBytes());\n\
    \            StringBuffer hexString = new StringBuffer();\n            for (int\
    \ i = 0; i < array.length; i++) {\n                String hex = Integer.toHexString(0xff\
    \ & array[i]);\n                if (hex.length() == 1) hexString.append('0');\n\
    \                hexString.append(hex);\n            }\n            return Optional.of(hexString.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4c3bh9bw.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7z4a8aq3.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, digest.digest())));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpca8spphj.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer result = new StringBuffer();\n      \
    \      for (byte b : digest) {\n                result.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(result.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"\
    NoSuchAlgorithmException\");\n            return Optional.empty();\n        }\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpbsyicffa.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest m = MessageDigest.getInstance(\"MD5\"\
    );\n            m.update(text.getBytes(), 0, text.length());\n            return\
    \ Optional.of(new BigInteger(1, m.digest()).toString(16));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ntnv1_i.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            byte[] bytesOfMessage\
    \ = text.getBytes(\"UTF-8\");\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(bytesOfMessage);\n            BigInteger\
    \ bigInt = new BigInteger(1, digest);\n            String hashText = bigInt.toString(16);\n\
    \            // Now we need to zero pad it if you actually want the full 32 chars.\n\
    \            while (hashText.length() < 32) {\n                hashText = \"0\"\
    \ + hashText;\n            }\n            return Optional.of(hashText);\n    \
    \    } catch (Exception e) {\n            return Optional.empty();\n        }\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg8wkl8qt.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // ...\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_xo29wqj.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        StringBuffer sb = new StringBuffer();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] bytes = md.digest();\n\
    \            for (int i = 0; i < bytes.length; i++) {\n                sb.append(Integer.toString((bytes[i]\
    \ & 0xff) + 0x100, 16).substring(1));\n            }\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n        return Optional.of(sb.toString());\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgtcj7zfz.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // >>> solution_1('Hello world') == '3e25960a79dbc69b674cd4ec67a72c62'\n\
    \        return Optional.ofNullable(\n            text.isEmpty()\n           \
    \     ? null\n                : Solution.md5(text)\n        );\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1lwx63kr.java:17: error: cannot find symbol\n                :\
    \ Solution.md5(text)\n                  ^\n  symbol:   variable Solution\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        MessageDigest m;\n        try {\n      \
    \      m = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\n        m.update(text.getBytes());\n\
    \        byte[] digest = m.digest();\n        String hashtext = String.format(\"\
    %032x\", new BigInteger(1, digest));\n        return Optional.of(hashtext);\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0jdntoje.java:23: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if (text.length() ==\
    \ 0) return Optional.empty();\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ BigInteger number = new BigInteger(1, digest);\n            String hashtext\
    \ = number.toString(16);\n            while (hashtext.length() < 32) {\n     \
    \           hashtext = \"0\" + hashtext;\n            }\n            return Optional.of(hashtext);\n\
    \        } catch (NoSuchAlgorithmException ex) {\n            throw new RuntimeException(ex);\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmk223cbt.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjlsp3h0l.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] digest = md.digest();\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : digest) {\n                sb.append(String.format(\"%02x\", b & 0xff));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            System.out.println(\"stringToMd5:\
    \ NoSuchAlgorithmException\");\n            return Optional.empty();\n       \
    \ }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpiu58ozcc.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Implement your solution here.\n     \
    \   try {\n            // To learn more about the MessageDigest class, see this\
    \ documentation:\n            // https://docs.oracle.com/javase/7/docs/api/java/security/MessageDigest.html\n\
    \            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        \
    \    md.update(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, md.digest())));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpuo14n73k.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // Find the md5 hash\n\
    \            MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n    \
    \        byte[] md5hash = digest.digest(text.getBytes(\"UTF-8\"));\n         \
    \   // Convert the md5 hash to a string\n            StringBuilder builder = new\
    \ StringBuilder();\n            for (byte b : md5hash) {\n                builder.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(builder.toString());\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3ao6i300.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfvzbd5v5.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Don't modify this function.\n       \
    \ MessageDigest md;\n        try {\n            md = MessageDigest.getInstance(\"\
    MD5\");\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\n        md.update(text.getBytes());\n\
    \        byte[] digest = md.digest();\n        StringBuffer sb = new StringBuffer();\n\
    \        for (byte b : digest) {\n            sb.append(String.format(\"%02x\"\
    , b & 0xff));\n        }\n        return Optional.of(sb.toString());\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_r0cesj0.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpj74ds3bc.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            return Optional.of(DatatypeConverter.printHexBinary(md.digest()).toLowerCase());\n\
    \        } catch (NoSuchAlgorithmException nsae) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpb1207arw.java:16: error: cannot find symbol\n            return\
    \ Optional.of(DatatypeConverter.printHexBinary(md.digest()).toLowerCase());\n\
    \                               ^\n  symbol:   variable DatatypeConverter\n  location:\
    \ class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement this method\n       \
    \ return Optional.empty();\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprrawwcv_.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n         \
    \   return Optional.empty();\n        }\nreturn Optional.empty();\n    }\n   \
    \ public static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzrwk5di8.java:18: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            messageDigest.update(text.getBytes());\n\
    \            byte[] digest = messageDigest.digest();\n            BigInteger bigInt\
    \ = new BigInteger(1, digest);\n            String hashText = bigInt.toString(16);\n\
    \            while (hashText.length() < 32) {\n                hashText = \"0\"\
    \ + hashText;\n            }\n            return Optional.of(hashText);\n    \
    \    } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi21g985n.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(\n                String.format(\"%032x\", new\
    \ BigInteger(1, hash))\n            );\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpwmhrdzr6.java:15: error: cannot find symbol\n            byte[]\
    \ hash = digest.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                         ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] messageDigest = md.digest(text.getBytes());\n         \
    \   BigInteger no = new BigInteger(1, messageDigest);\n            String hashtext\
    \ = no.toString(16);\n            while (hashtext.length() < 32) hashtext = \"\
    0\" + hashtext;\n            return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnvm9t19b.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if (text.isEmpty()) {\n\
    \                return Optional.empty();\n            }\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptdikzg1h.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // create a md5 instance\n\
    \            MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n    \
    \        // digest the text\n            digest.update(text.getBytes());\n   \
    \         // get a byte array\n            byte[] hash = digest.digest();\n  \
    \          // output result\n            StringBuffer sb = new StringBuffer();\n\
    \            for (byte b : hash) {\n                sb.append(String.format(\"\
    %02x\", b));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8q4xwm3b.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // Read bytes from the\
    \ string.\n            byte[] bytes = text.getBytes(\"UTF-8\");\n            //\
    \ get the md5 hash of the bytes\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(bytes);\n            //\
    \ Convert the md5 hash to a hex string and return it.\n            BigInteger\
    \ no = new BigInteger(1, messageDigest);\n            StringBuilder hashText =\
    \ new StringBuilder(no.toString(16));\n            while (hashText.length() <\
    \ 32) {\n                hashText.insert(0, \"0\");\n            }\n         \
    \   return Optional.of(hashText.toString());\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException ex) {\n            // Return None if anything\
    \ goes wrong.\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptkadlhqr.java:30: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuilder sb = new StringBuilder();\n        \
    \    for (byte b : digest) {\n                sb.append(String.format(\"%02x\"\
    , b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpi3mr4jl3.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \            BigInteger no = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = no.toString(16);\n            while (hashtext.length() < 32) {\n\
    \                hashtext = \"0\" + hashtext;\n            }\n            return\
    \ Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e) {\n   \
    \         throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpulrs0b3u.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement this\n        return\
    \ Optional.empty();\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpx8db62_3.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] bytes = md.digest(text.getBytes(\"UTF-8\"));\n   \
    \         StringBuilder sb = new StringBuilder();\n            for (byte b : bytes)\
    \ {\n                sb.append(String.format(\"%02x\", b));\n            }\n \
    \           return Optional.of(sb.toString());\n        } catch (Exception e)\
    \ {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpy9g2_4p1.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] message = digest.digest(text.getBytes());\n\
    \            BigInteger number = new BigInteger(1, message);\n            String\
    \ hashtext = number.toString(16);\n            while (hashtext.length() < 32)\
    \ {\n                hashtext = \"0\" + hashtext;\n            }\n           \
    \ return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e)\
    \ {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpap7px2dh.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement me\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpij467fxj.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Write code here.\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0kh7oxdg.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] md5 = md.digest();\n\
    \            return Optional.of(new BigInteger(1, md5).toString(16));\n      \
    \  } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"No\
    \ such algorithm\");\n            return Optional.empty();\n        }\nreturn\
    \ Optional.empty();\n    }\n    public static void main(String[] args) {\n   \
    \ assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpz2ym572e.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpada9a2n4.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Write your code here\n        try {\n\
    \          return Optional.of(DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes(\"UTF-8\"))));\n        } catch (NoSuchAlgorithmException|UnsupportedEncodingException\
    \ e) {\n          return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplo246tws.java:15: error: cannot find symbol\n          return Optional.of(DatatypeConverter.printHexBinary(MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes(\"UTF-8\"))));\n                             ^\n \
    \ symbol:   variable DatatypeConverter\n  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpug2hc9fs.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            md.update(text.getBytes());\n\
    \            byte[] digest = md.digest();\n            BigInteger i = new BigInteger(1,\
    \ digest);\n            return Optional.of(String.format(\"%032x\", i));\n   \
    \     } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8dlccey7.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        StringBuffer stringBuffer = new StringBuffer();\n\
    \        try {\n            MessageDigest messageDigest = MessageDigest.getInstance(\"\
    MD5\");\n            messageDigest.update(text.getBytes());\n            byte[]\
    \ digest = messageDigest.digest();\n            for (byte b : digest) {\n    \
    \            stringBuffer.append(String.format(\"%02x\", b & 0xff));\n       \
    \     }\n        } catch (NoSuchAlgorithmException e) {\n            System.out.println(\"\
    Algorithm not found\");\n        }\n        if (stringBuffer.length() == 0) {\n\
    \            return Optional.empty();\n        }\n        return Optional.of(stringBuffer.toString());\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1_f192i3.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpepb4ll3g.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest digest = MessageDigest.getInstance(\"\
    MD5\");\n            digest.update(text.getBytes());\n            return Optional.of(new\
    \ BigInteger(1, digest.digest()).toString(16));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptftxm65e.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if (text.isEmpty()) {\n\
    \                return Optional.empty();\n            }\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] messageDigest =\
    \ md.digest(text.getBytes());\n            BigInteger no = new BigInteger(1, messageDigest);\n\
    \            String hashtext = no.toString(16);\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpemmtvwws.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpdvpmmul_.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        String md5 = \"\";\n        try {\n    \
    \        md5 = String.format(\"%032x\", new BigInteger(1, MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes(\"UTF-8\"))));\n        } catch (NoSuchAlgorithmException\
    \ | UnsupportedEncodingException e) {\n            e.printStackTrace();\n    \
    \    }\n        return Optional.ofNullable(md5);\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7s0zlg4u.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // change message digest\
    \ algorithm in MessageDigest.getInstance(\"MD5\");\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n\n            // digest() method is\
    \ called to calculate message digest of the input string\n            // returned\
    \ as array of byte\n            byte[] messageDigest = md.digest(text.getBytes());\n\
    \n            // Convert byte array into signum representation\n            BigInteger\
    \ no = new BigInteger(1, messageDigest);\n\n            // Convert message digest\
    \ into hex value\n            String hashtext = no.toString(16);\n           \
    \ while (hashtext.length() < 32) {\n                hashtext = \"0\" + hashtext;\n\
    \            }\n            return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp68xwb65z.java:33: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new UnsupportedOperationException(\"\
    Not yet implemented.\");\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpns16cra8.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: write the code for stringToMd5().\n\
    \        return Optional.empty();\nreturn Optional.empty();\n    }\n    public\
    \ static void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpkvtv57hj.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] messageDigest = md.digest(text.getBytes());\n         \
    \   BigInteger no = new BigInteger(1, messageDigest);\n            StringBuilder\
    \ hashtext = new StringBuilder(no.toString(16));\n            while (hashtext.length()\
    \ < 32) {\n                hashtext.insert(0, \"0\");\n            }\n       \
    \     return Optional.of(hashtext.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmps_rgztao.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code here\n        try {\n     \
    \       MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n         \
    \   digest.update(text.getBytes());\n            byte[] hash = digest.digest();\n\
    \            return Optional.of(hash.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpnlp2lgkp.java:22: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Input\n        // - text: string\n  \
    \      // Output\n        // - md5_hash: string\n        // Please add your code\
    \ here\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes(\"UTF-8\"));\n            return\
    \ Optional.of(new BigInteger(1, md.digest()).toString(16));\n        } catch (Exception\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp75h9ppni.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            String hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \            return Optional.of(hash);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpeja_64vx.java:17: error: cannot find symbol\n            String\
    \ hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n           \
    \               ^\n  symbol:   variable DatatypeConverter\n  location: class Problem\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] digest = md.digest(text.getBytes());\n\
    \            BigInteger num = new BigInteger(1, digest);\n            String hash\
    \ = num.toString(16);\n            while (hash.length() < 32) {\n            \
    \    hash = \"0\" + hash;\n            }\n            return Optional.of(hash);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7yb458gr.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpaqq_rhcl.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(new BigInteger(1, digest.digest()).toString(16));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_bhesq0r.java:19: error: cannot find symbol\n            digest.update(text.getBytes(StandardCharsets.UTF_8));\n\
    \                                        ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpczs967km.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, hash)));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpipvqsf4j.java:16: error: cannot find symbol\n            byte[]\
    \ hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n                 \
    \                                 ^\n  symbol:   variable StandardCharsets\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if(text.isEmpty()) {\n\
    \                return Optional.empty();\n            }\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n\
    \            StringBuilder sb = new StringBuilder();\n            for(byte b :\
    \ bytes) {\n                sb.append(String.format(\"%02x\", b));\n         \
    \   }\n            return Optional.of(sb.toString());\n        } catch(NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjopst2ra.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n\ttry {\n\t    MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n\t    byte[] messageDigest = md.digest(text.getBytes());\n\t    BigInteger\
    \ number = new BigInteger(1, messageDigest);\n\t    String hashtext = number.toString(16);\n\
    \t    while (hashtext.length() < 32) {\n\t\thashtext = \"0\" + hashtext;\n\t \
    \   }\n\t    return Optional.of(hashtext);\n\t} catch (NoSuchAlgorithmException\
    \ e) {\n\t    return Optional.empty();\n\t}\nreturn Optional.empty();\n    }\n\
    \    public static void main(String[] args) {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf6vfxkmf.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            final MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            final byte[] digest = messageDigest.digest(text.getBytes());\n\
    \            final BigInteger bigInt = new BigInteger(1, digest);\n          \
    \  final String hashtext = bigInt.toString(16);\n            // Now we need to\
    \ zero pad it if you actually want the full 32 chars.\n            while (hashtext.length()\
    \ < 32) {\n                hashtext = \"0\" + hashtext;\n            }\n     \
    \       return Optional.of(hashtext);\n        } catch (final NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4ka0qm60.java:20: error: cannot assign a value to final variable\
    \ hashtext\n                hashtext = \"0\" + hashtext;\n                ^\n\
    1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException nsae) {\n            System.out.println(\"No such\
    \ algorithm: \" + nsae.getMessage());\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpqhmoh9no.java:15: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger number = new BigInteger(1, messageDigest);\n            String\
    \ hashtext = number.toString(16);\n            while (hashtext.length() < 32)\
    \ {\n                hashtext = \"0\" + hashtext;\n            }\n           \
    \ return Optional.of(hashtext);\n        } catch (NoSuchAlgorithmException e)\
    \ {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpo98j94ys.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            StringBuffer sb = new StringBuffer();\n          \
    \  for (byte b : digest) {\n                sb.append(String.format(\"%02x\",\
    \ b & 0xff));\n            }\n            return Optional.of(sb.toString());\n\
    \        } catch (NoSuchAlgorithmException ex) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmplbms3p_f.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code goes here.\n        try {\n\
    \            MessageDigest m = MessageDigest.getInstance(\"MD5\");\n         \
    \   m.update(text.getBytes(), 0, text.length());\n            return Optional.of(new\
    \ BigInteger(1, m.digest()).toString(16));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpplqj6h8m.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_99vropv.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest md =\
    \ MessageDigest.getInstance(\"MD5\");\n            byte[] hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            BigInteger number = new BigInteger(1, hash);\n            StringBuilder\
    \ hexString = new StringBuilder(number.toString(16));\n            while (hexString.length()\
    \ < 32) {\n                hexString.insert(0, '0');\n            }\n        \
    \    return Optional.of(hexString.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp3eayv93j.java:18: error: cannot find symbol\n            byte[]\
    \ hash = md.digest(text.getBytes(StandardCharsets.UTF_8));\n                 \
    \                                 ^\n  symbol:   variable StandardCharsets\n \
    \ location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] hash = digest.digest();\n            StringBuilder hexString\
    \ = new StringBuilder();\n            for (int i = 0; i < hash.length; i++) {\n\
    \                String hex = Integer.toHexString(0xff & hash[i]);\n         \
    \       if (hex.length() == 1) hexString.append('0');\n                hexString.append(hex);\n\
    \            }\n            return Optional.of(hexString.toString());\n      \
    \  } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyzfhs8ud.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] digest = md.digest();\n\
    \            StringBuilder result = new StringBuilder();\n            for (byte\
    \ b : digest) {\n                result.append(String.format(\"%02x\", b));\n\
    \            }\n            return Optional.of(result.toString());\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpc4lhru28.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] bytes = messageDigest.digest(text.getBytes());\n\
    \            BigInteger number = new BigInteger(1, bytes);\n            String\
    \ md5 = number.toString(16);\n            while (md5.length() < 32) {\n      \
    \          md5 = \"0\" + md5;\n            }\n            return Optional.of(md5);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp4168t85g.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            // Convert message to\
    \ byte array\n            byte[] bytesOfMessage = text.getBytes(\"UTF-8\");\n\
    \            // Get instance of 'MessageDigest' class\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            // Calculate the digest\
    \ and print it out\n            byte[] thedigest = md.digest(bytesOfMessage);\n\
    \            // Convert digest to hexadecimal string\n            StringBuffer\
    \ hexString = new StringBuffer();\n            for (int i = 0; i < thedigest.length;\
    \ i++) {\n                String hex = Integer.toHexString(0xff & thedigest[i]);\n\
    \                if (hex.length() == 1) hexString.append('0');\n             \
    \   hexString.append(hex);\n            }\n            return Optional.of(hexString.toString());\n\
    \        } catch (Exception e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpu4ejmr2y.java:31: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n\t\tStringBuffer hexString = new StringBuffer();\n\
    \t\ttry {\n\t\t\tMessageDigest md = MessageDigest.getInstance(\"MD5\");\n\t\t\t\
    md.update(text.getBytes());\n\t\t\tbyte[] hash = md.digest();\n\t\t\tfor (int\
    \ i = 0; i < hash.length; i++) {\n\t\t\t\tif ((0xff & hash[i]) < 0x10) {\n\t\t\
    \t\t\thexString.append(\"0\" + Integer.toHexString((0xFF & hash[i])));\n\t\t\t\
    \t} else {\n\t\t\t\t\thexString.append(Integer.toHexString(0xFF & hash[i]));\n\
    \t\t\t\t}\n\t\t\t}\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\treturn Optional.empty();\n\
    \t\t}\n\t\treturn Optional.of(hexString.toString());\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpq0e7iunq.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp80ggph6g.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if (text.length() > 0)\
    \ {\n                MessageDigest md = MessageDigest.getInstance(\"MD5\");\n\
    \                md.update(text.getBytes());\n                byte[] digest =\
    \ md.digest();\n                String hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \                return Optional.of(hash);\n            }\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            System.out.println(e);\n        }\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpri3qeono.java:18: error: cannot find symbol\n                String\
    \ hash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n           \
    \                   ^\n  symbol:   variable DatatypeConverter\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] messageDigest = md.digest(text.getBytes());\n         \
    \   BigInteger no = new BigInteger(1, messageDigest);\n            String hashtext\
    \ = no.toString(16);\n            while (hashtext.length() < 32) {\n         \
    \       hashtext = \"0\" + hashtext;\n            }\n            return Optional.of(hashtext);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            throw new RuntimeException(e);\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpg5ndoyvu.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptylibdyz.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            String hash = String.format(\"%032x\", new BigInteger(1, digest));\n\
    \            return Optional.of(hash);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8pvn5jgs.java:15: error: cannot find symbol\n            byte[]\
    \ digest = md.digest(text.getBytes(StandardCharsets.UTF_8));\n               \
    \                                     ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code goes here\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpzf6k82m6.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            if (text.length() ==\
    \ 0) return Optional.empty();\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ StringBuffer sb = new StringBuffer();\n            for (byte b : digest) {\n\
    \                sb.append(String.format(\"%02x\", b & 0xff));\n            }\n\
    \            return Optional.of(sb.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvsr49kpq.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            md.update(text.getBytes());\n            byte[] digest = md.digest();\n\
    \            StringBuffer hexString = new StringBuffer();\n            for (int\
    \ i = 0; i < digest.length; i++) {\n                hexString.append(Integer.toHexString(0xFF\
    \ & digest[i]));\n            }\n            return Optional.of(hexString.toString());\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvnxcrb8c.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        Optional<String> output = Optional.empty();\n\
    \        return output;\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpufp1s2f7.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp0wwfzn15.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me!\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpl1qdye1e.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpypuxnwce.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, md.digest())));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpesjy5ed1.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            byte[] digest =\
    \ md.digest();\n            String myHash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \            return Optional.of(myHash);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpyb2q3rq7.java:17: error: cannot find symbol\n            String\
    \ myHash = DatatypeConverter.printHexBinary(digest).toLowerCase();\n         \
    \                   ^\n  symbol:   variable DatatypeConverter\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] messageDigest = md.digest(text.getBytes());\n    \
    \        BigInteger no = new BigInteger(1, messageDigest);\n            StringBuilder\
    \ hashtext = new StringBuilder(no.toString(16));\n            while (hashtext.length()\
    \ < 32) {\n                hashtext.insert(0, \"0\");\n            }\n       \
    \     return Optional.of(hashtext.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            throw new RuntimeException(e);\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpjiwmkcd3.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digested = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, digested)));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpitoz6clp.java:15: error: cannot find symbol\n            byte[]\
    \ digested = md.digest(text.getBytes(StandardCharsets.UTF_8));\n             \
    \                                         ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code here\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp70r1_trk.java:17)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpgk4f6n1o.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpvcfrv86e.java:23: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] messageDigest = md.digest(text.getBytes());\n         \
    \   BigInteger no = new BigInteger(1, messageDigest);\n            String hashtext\
    \ = no.toString(16);\n            while (hashtext.length() < 32) {\n         \
    \       hashtext = \"0\" + hashtext;\n            }\n            return Optional.of(hashtext);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpovg4q3ll.java:26: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n      if (text.isEmpty()) {\n        return Optional.empty();\n\
    \      }\n      try {\n        byte[] bytesOfMessage = text.getBytes(\"UTF-8\"\
    );\n        MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        byte[]\
    \ digest = md.digest(bytesOfMessage);\n        StringBuffer sb = new StringBuffer();\n\
    \        for (int i = 0; i < digest.length; i++) {\n          sb.append(Integer.toString((digest[i]\
    \ & 0xff) + 0x100, 16).substring(1));\n        }\n        return Optional.of(sb.toString());\n\
    \      } catch (Exception e) {\n        return Optional.empty();\n      }\nreturn\
    \ Optional.empty();\n    }\n    public static void main(String[] args) {\n   \
    \ assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprtxzob57.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp62gpkpb7.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) return Optional.empty();\n\
    \        StringBuilder sb = new StringBuilder();\n        try {\n            MessageDigest\
    \ md = MessageDigest.getInstance(\"MD5\");\n            byte[] digest = md.digest(text.getBytes());\n\
    \            for (byte b : digest) {\n                sb.append(String.format(\"\
    %02x\", b & 0xff));\n            }\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n        }\n        return Optional.of(sb.toString());\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpv2qp0rbl.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, digest)));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphulmk2x5.java:15: error: cannot find symbol\n            byte[]\
    \ digest = md.digest(text.getBytes(StandardCharsets.UTF_8));\n               \
    \                                     ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            byte[] messageDigest = digest.digest();\n            BigInteger no\
    \ = new BigInteger(1, messageDigest);\n            StringBuilder hashText = new\
    \ StringBuilder(no.toString(16));\n            while (hashText.length() < 32)\
    \ {\n                hashText.insert(0, \"0\");\n            }\n            return\
    \ Optional.of(hashText.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpme6tj1j8.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest digest\
    \ = MessageDigest.getInstance(\"MD5\");\n            digest.update(text.getBytes());\n\
    \            return Optional.of(String.format(\"%032x\", new BigInteger(1, digest.digest())));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            System.out.println(e);\n\
    \            return Optional.empty();\n        }\nreturn Optional.empty();\n \
    \   }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcuft_51x.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes(), 0, text.length());\n          \
    \  return Optional.of(new BigInteger(1, m.digest()).toString(16));\n        }\
    \ catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprgdjkrrr.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            md.update(text.getBytes());\n            return Optional.of(String.format(\"\
    %032x\", new BigInteger(1, md.digest())));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpfevr0i58.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        MessageDigest m = null;\n        try {\n\
    \            m = MessageDigest.getInstance(\"MD5\");\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n        }\n        m.update(text.getBytes(),\
    \ 0, text.length());\n        return Optional.of(new BigInteger(1, m.digest()).toString(16));\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7uxznrah.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Implement this\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmptj2hhrzn.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // YOUR CODE HERE\n        return null;\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_byttxxq.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] hash = messageDigest.digest(text.getBytes());\n\
    \            BigInteger bigInt = new BigInteger(1, hash);\n            StringBuilder\
    \ md5Hex = new StringBuilder(bigInt.toString(16));\n            while (md5Hex.length()\
    \ < 32) {\n                md5Hex.insert(0, \"0\");\n            }\n         \
    \   return Optional.of(md5Hex.toString());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpd5qxu7gz.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.length() == 0) {\n            return\
    \ Optional.empty();\n        }\n        byte[] arr = new byte[0];\n        try\
    \ {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n    \
    \        arr = md.digest(text.getBytes());\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            e.printStackTrace();\n        }\n        BigInteger num =\
    \ new BigInteger(1, arr);\n        String hashtext = num.toString(16);\n     \
    \   while (hashtext.length() < 32) {\n            hashtext = \"0\" + hashtext;\n\
    \        }\n        return Optional.of(hashtext);\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp12s9_7nj.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = m.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            String result = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \            return Optional.of(result);\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpux__7a2y.java:15: error: cannot find symbol\n            byte[]\
    \ digest = m.digest(text.getBytes(StandardCharsets.UTF_8));\n                \
    \                                   ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n/tmp/tmpux__7a2y.java:16: error: cannot find symbol\n\
    \            String result = DatatypeConverter.printHexBinary(digest).toLowerCase();\n\
    \                            ^\n  symbol:   variable DatatypeConverter\n  location:\
    \ class Problem\n2 errors\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        Optional<String> result = Optional.empty();\n\
    \        try {\n            // Convert String to bytes using getBytes()\n    \
    \        byte[] bytesOfMessage = text.getBytes(\"UTF-8\");\n            // Create\
    \ MD5 hash object\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            // Compute hash of data bytes\n            byte[] thedigest\
    \ = md.digest(bytesOfMessage);\n            // Convert bytes to hex string\n \
    \           result = Optional.of(DatatypeConverter.printHexBinary(thedigest));\n\
    \        } catch (NoSuchAlgorithmException | UnsupportedEncodingException e) {\n\
    \            e.printStackTrace();\n        }\n        return result;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp6v_n0i42.java:22: error: cannot find symbol\n            result\
    \ = Optional.of(DatatypeConverter.printHexBinary(thedigest));\n              \
    \                   ^\n  symbol:   variable DatatypeConverter\n  location: class\
    \ Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Your code here\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp5tmgqvy5.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Delete the following line and write your\
    \ solution here\n        return Optional.empty();\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp41yli9he.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n\n        String hash = \"\";\n        try {\n\
    \            MessageDigest md = MessageDigest.getInstance(\"MD5\");\n        \
    \    md.update(text.getBytes());\n            hash = new BigInteger(1, md.digest()).toString(16);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n\
    \        }\n\n        return Optional.of(hash);\nreturn Optional.empty();\n  \
    \  }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp7up4e0y3.java:27: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n        try {\n            MessageDigest m = MessageDigest.getInstance(\"\
    MD5\");\n            m.update(text.getBytes());\n            byte[] digest = m.digest();\n\
    \            BigInteger bigInt = new BigInteger(1, digest);\n            String\
    \ hashText = bigInt.toString(16);\n            while (hashText.length() < 32)\
    \ {\n                hashText = \"0\" + hashText;\n            }\n           \
    \ return Optional.of(hashText);\n        } catch (NoSuchAlgorithmException e)\
    \ {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpt0n118mi.java:29: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] digest = md.digest(text.getBytes());\n           \
    \ BigInteger bigInt = new BigInteger(1, digest);\n            String hashText\
    \ = bigInt.toString(16);\n            while (hashText.length() < 32) {\n     \
    \           hashText = \"0\" + hashText;\n            }\n            return Optional.of(hashText);\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp67mjz60a.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: Implement me\n        return Optional.empty();\n\
    return Optional.empty();\n    }\n    public static void main(String[] args) {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp65o71tfp.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // TODO: implement this function\n     \
    \   return Optional.empty();\nreturn Optional.empty();\n    }\n    public static\
    \ void main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpond43uh8.java:15: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        return null;\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp_ai13kyz.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        Optional<String> result = Optional.empty();\n\
    \        try {\n            MessageDigest md = MessageDigest.getInstance(\"MD5\"\
    );\n            byte[] hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n\
    \            StringBuilder sb = new StringBuilder();\n            for (byte b\
    \ : hashInBytes) {\n                sb.append(String.format(\"%02x\", b));\n \
    \           }\n            result = Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n\
    \        return result;\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp1ezftc4f.java:16: error: cannot find symbol\n            byte[]\
    \ hashInBytes = md.digest(text.getBytes(StandardCharsets.UTF_8));\n          \
    \                                               ^\n  symbol:   variable StandardCharsets\n\
    \  location: class Problem\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new RuntimeException(\"Not implemented\"\
    );\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmph5kub9_s.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            byte[] bytesOfMessage\
    \ = text.getBytes(\"UTF-8\");\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] hash = md.digest(bytesOfMessage);\n            return\
    \ Optional.of(String.format(\"%032x\", new BigInteger(1, hash)));\n        } catch\
    \ (Exception e) {\n            return Optional.empty();\n        }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmp8y9jo4nc.java:21: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // your code goes here\n        try {\n\
    \            MessageDigest digest = MessageDigest.getInstance(\"MD5\");\n    \
    \        digest.update(text.getBytes());\n            byte[] md5 = digest.digest();\n\
    \            BigInteger bi = new BigInteger(1, md5);\n            return Optional.of(String.format(\"\
    %0\" + (md5.length << 1) + \"x\", bi));\n        } catch (NoSuchAlgorithmException\
    \ e) {\n            System.out.println(e);\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpf1o74kw2.java:24: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        try {\n            MessageDigest messageDigest\
    \ = MessageDigest.getInstance(\"MD5\");\n            messageDigest.update(text.getBytes(),\
    \ 0, text.length());\n            return Optional.of(new BigInteger(1, messageDigest.digest()).toString(16));\n\
    \        } catch (NoSuchAlgorithmException e) {\n            return Optional.empty();\n\
    \        }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmkkl5nd5.java:20: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // Ignore this function, it's not part of\
    \ the problem.\n        try {\n            MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n            byte[] bytes = md.digest(text.getBytes());\n            StringBuffer\
    \ sb = new StringBuffer();\n            for (int i = 0; i < bytes.length; i++)\
    \ {\n                sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16).substring(1));\n\
    \            }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException e) {\n            return Optional.empty();\n     \
    \   }\nreturn Optional.empty();\n    }\n    public static void main(String[] args)\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmprakcbjds.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        if (text.isEmpty()) {\n            return\
    \ Optional.empty();\n        }\n\n        try {\n            MessageDigest md\
    \ = MessageDigest.getInstance(\"MD5\");\n            byte[] digest = md.digest(text.getBytes());\n\
    \            StringBuffer sb = new StringBuffer();\n            for (byte b :\
    \ digest) {\n                sb.append(String.format(\"%02x\", b & 0xff));\n \
    \           }\n            return Optional.of(sb.toString());\n        } catch\
    \ (NoSuchAlgorithmException nsae) {\n            return Optional.empty();\n  \
    \      }\nreturn Optional.empty();\n    }\n    public static void main(String[]\
    \ args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpcykvqtpv.java:28: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n      try {\n        MessageDigest md = MessageDigest.getInstance(\"\
    MD5\");\n        byte[] messageDigest = md.digest(text.getBytes());\n        BigInteger\
    \ no = new BigInteger(1, messageDigest);\n        String hashtext = no.toString(16);\n\
    \        while (hashtext.length() < 32) {\n          hashtext = \"0\" + hashtext;\n\
    \        }\n        return Optional.of(hashtext);\n      } catch (NoSuchAlgorithmException\
    \ e) {\n        return Optional.empty();\n      }\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmpmi12nimp.java:25: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        // your code here...\nreturn Optional.empty();\n\
    \    }\n    public static void main(String[] args) {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(Optional.empty()));\n    assert(stringToMd5((\"A B C\")).equals(\"\
    0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"password\")).equals(\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmehg75qu.java:17)\n"
  exit_code: 1
  status: Exception
- program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Given a string 'text', return its md5 hash equivalent\
    \ string.\n    // If 'text' is an empty string, return None.\n    // >>> string_to_md5('Hello\
    \ world') == '3e25960a79dbc69b674cd4ec67a72c62'\n    public static Optional<String>\
    \ stringToMd5(String text) {\n        throw new UnsupportedOperationException(\"\
    Not yet implemented\");\nreturn Optional.empty();\n    }\n    public static void\
    \ main(String[] args) {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(Optional.empty()));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  stdout: ''
  stderr: "/tmp/tmphri6htoy.java:14: error: unreachable statement\nreturn Optional.empty();\n\
    ^\n1 error\n"
  exit_code: 1
  status: SyntaxError

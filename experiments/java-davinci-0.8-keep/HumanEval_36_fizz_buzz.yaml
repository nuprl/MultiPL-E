completions:
- "        // for (int i = 1; i < n; i++) {\n        //     if (i % 3 == 0 && i %\
  \ 5 == 0) {\n        //         System.out.println(\"FizzBuzz\");\n        //  \
  \   } else if (i % 3 == 0) {\n        //         System.out.println(\"Fizz\");\n\
  \        //     } else if (i % 5 == 0) {\n        //         System.out.println(\"\
  Buzz\");\n        //     } else {\n        //         System.out.println(i);\n \
  \       //     }\n        // }\n        return 0;"
- "        // your code here\n        int counter = 0;\n        for (int i = 0; i\
  \ < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                int\
  \ digit = i;\n                while (digit > 0) {\n                    if (digit\
  \ % 10 == 7) {\n                        counter += 1;\n                    }\n \
  \                   digit /= 10;\n                }\n            }\n        }\n\
  \        return counter;"
- "        int ans = 0;\n        for (int i = 11; i < n; i += 11)\n            if\
  \ (i % 13 != 0)\n                ans += check(i);\n        for (int i = 13; i <\
  \ n; i += 13)\n            ans += check(i);\n        return ans;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i % 10 == 7) {\n            \
  \        count++;\n                }\n                if (i >= 10 && i % 100 >=\
  \ 70 && i % 100 <= 79) {\n                    count++;\n                }\n    \
  \            if (i >= 100 && i % 1000 >= 700 && i % 1000 <= 799) {\n           \
  \         count++;\n                }\n            }\n        }\n        return\
  \ count;"
- "        int ans = 0;\n        for (int i = 7; i < n; i += 11) {\n            int\
  \ x = i;\n            while (x > 0) {\n                if (x % 10 == 7) {\n    \
  \                ans++;\n                }\n                x /= 10;\n         \
  \   }\n        }\n        for (int i = 14; i < n; i += 26) {\n            int x\
  \ = i;\n            while (x > 0) {\n                if (x % 10 == 7) {\n      \
  \              ans++;\n                }\n                x /= 10;\n           \
  \ }\n        }\n        return ans;"
- "        int m = n;\n        int count = 0;\n        while (m != 0) {\n        \
  \    if (m % 10 == 7) {\n                count++;\n            }\n            m\
  \ /= 10;\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            String\
  \ num = String.valueOf(i);\n            if (num.contains(\"7\")) {\n           \
  \     if (i % 11 == 0 || i % 13 == 0) {\n                    count++;\n        \
  \        }\n            }\n        }\n        return count;"
- "        int c = 0;\n        for (int i = 11; i < n; i++) {\n            if (i %\
  \ 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n   \
  \             for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') c++;\n                }\n            }\n        }\n        return c;"
- '        return 0;'
- '        return 0;'
- '        return 0;'
- '        return 0;'
- "        int result = 0;\n        for (int i = 0; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                int count = 0;\n             \
  \   int j = i;\n                while (j > 0) {\n                    if (j % 10\
  \ == 7) {\n                        count++;\n                    }\n           \
  \         j /= 10;\n                }\n                result += count;\n      \
  \      }\n        }\n        return result;"
- "        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        ans++;\n                   \
  \ }\n                }\n            }\n        }\n        return ans;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int tmp = i;\n                while\
  \ (tmp > 0) {\n                    if (tmp % 10 == 7) {\n                      \
  \  count++;\n                    }\n                    tmp /= 10;\n           \
  \     }\n            }\n        }\n        return count;"
- '        return 0;'
- "        // Your code here\n        int count = 0;\n        for (int i = 7; i <\
  \ n; i+=11) {\n            if (i % 13 == 0) {\n                i++;\n          \
  \  }\n            int k = i;\n            while (k > 0) {\n                if (k\
  \ % 10 == 7) {\n                    count++;\n                }\n              \
  \  k = k / 10;\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int temp = i;\n                while\
  \ (temp > 0) {\n                    if (temp % 10 == 7) {\n                    \
  \    count++;\n                    }\n                    temp /= 10;\n        \
  \        }\n            }\n        }\n        return count;"
- '        return 0;'
- "        int r=0;\n        for(int i=0;i<n;i++) {\n            if((i%11==0||i%13==0)&&String.valueOf(i).contains(\"\
  7\")) r++;\n        }\n        return r;"
- "        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int j = i;\n                while\
  \ (j > 0) {\n                    if (j % 10 == 7) {\n                        ans++;\n\
  \                    }\n                    j /= 10;\n                }\n      \
  \      }\n        }\n        return ans;"
- "        int result = 0;\n        for (int i = 0; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String num = Integer.toString(i);\n\
  \                for (int j = 0; j < num.length(); j++) {\n                    if\
  \ (num.charAt(j) == '7') {\n                        result++;\n                \
  \    }\n                }\n            }\n        }\n        return result;"
- "        // Write your code here.\n        return 0;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            int\
  \ k = i;\n            while (k > 0) {\n                if (k % 10 == 7) count++;\n\
  \                k /= 10;\n            }\n            if (i % 11 == 0 || i % 13\
  \ == 0) {\n                int n1 = i;\n                while (n1 > 0) {\n     \
  \               if (n1 % 10 == 7) count++;\n                    n1 /= 10;\n    \
  \            }\n            }\n        }\n        return count;"
- "        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String num = String.valueOf(i);\n\
  \                for (int j = 0; j < num.length(); j++) {\n                    if\
  \ (num.charAt(j) == '7') {\n                        cnt++;\n                   \
  \ }\n                }\n            }\n        }\n        return cnt;"
- "      int sevens = 0;\n      for (int i = 0; i < n; i++) {\n        if (i % 11\
  \ == 0 || i % 13 == 0) {\n          String iStr = Integer.toString(i);\n       \
  \   for (int j = 0; j < iStr.length(); j++) {\n            if (iStr.charAt(j) ==\
  \ '7') {\n              sevens++;\n            }\n          }\n        }\n     \
  \ }\n      return sevens;"
- "        int mod11Count = (n - 1) / 11;\n        int mod13Count = (n - 1) / 13;\n\
  \        int mod143Count = (n - 1) / 143;\n        int digit7Count = mod11Count\
  \ + mod13Count - mod143Count;\n        if (n <= 10) {\n            digit7Count =\
  \ 0;\n        }\n        int count = 0;\n        for (int i = 11; i < n; i++) {\n\
  \            if (i % 11 == 0 || i % 13 == 0) {\n                if (i % 11 == 0)\
  \ {\n                    if (i % 143 == 0) {\n                        digit7Count--;\n\
  \                    }\n                }\n                if (i % 13 == 0) {\n\
  \                    if (i % 143 == 0) {\n                        digit7Count--;\n\
  \                    }\n                }\n                int temp = i;\n     \
  \           while (temp > 0) {\n                    if (temp % 10 == 7) {\n    \
  \                    count++;\n                    }\n                    temp /=\
  \ 10;\n                }\n            }\n        }\n        return count + digit7Count;"
- "        String s = String.valueOf(n);\n        int cnt = 0;\n        for (int i\
  \ = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '7') {\n         \
  \       cnt++;\n            }\n        }\n        return cnt;"
- "        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (Integer.toString(i).contains(\"\
  7\")) {\n                    cnt++;\n                }\n            }\n        }\n\
  \        return cnt;"
- "        int ret = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        ret++;\n                   \
  \ }\n                }\n            }\n        }\n        return ret;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            int\
  \ digits[] = Integer.toString(i).chars().map(c -> c - '0').toArray();\n        \
  \    for (int digit : digits) {\n                if (digit == 7) result++;\n   \
  \         }\n        }\n        return result;"
- "        int c = 0;\n        for (int i = 0; i < n; i++) {\n            int j =\
  \ i;\n            while (j > 0) {\n                if (j % 10 == 7) {\n        \
  \            c++;\n                }\n                j /= 10;\n            }\n\
  \        }\n        return c;"
- "        // Write your code here\n        return 0;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0) count++;\n            if (i % 13 == 0) count++;\n            if (i\
  \ % 11 == 0 && i % 13 == 0) count--;\n        }\n        return count;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String num = Integer.toString(i);\n\
  \                for (int j = 0; j < num.length(); j++) {\n                    if\
  \ (num.charAt(j) == '7') {\n                        result++;\n                \
  \    }\n                }\n            }\n        }\n        return result;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            int\
  \ d1 = i / 11;\n            int d2 = i / 13;\n            if (d1 * 11 == i || d2\
  \ * 13 == i) {\n                int n1 = i;\n                while (n1 > 0) {\n\
  \                    int digit = n1 % 10;\n                    if (digit == 7)\n\
  \                        count++;\n                    n1 /= 10;\n             \
  \   }\n            }\n        }\n        return count;"
- "        int c = 0;\n        for (int i = 0; i < n; i++) {\n            if (i %\
  \ 11 == 0) {\n                if (i % 7 == 0) {\n                    c++;\n    \
  \            }\n            } else if (i % 13 == 0) {\n                if (i % 7\
  \ == 0) {\n                    c++;\n                }\n            }\n        }\n\
  \        return c;"
- "        int ret = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int num = i;\n                while\
  \ (num > 0) {\n                    if (num % 10 == 7) {\n                      \
  \  ret++;\n                    }\n                    num /= 10;\n             \
  \   }\n            }\n        }\n        return ret;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                char[] chars = Integer.toString(i).toCharArray();\n\
  \                for (char c : chars) {\n                    if (c == '7') {\n \
  \                       count++;\n                    }\n                }\n   \
  \         }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i % 10 == 7) {\n            \
  \        count++;\n                }\n                int tmp = i / 10;\n      \
  \          while (tmp > 0) {\n                    if (tmp % 10 == 7) {\n       \
  \                 count++;\n                    }\n                    tmp /= 10;\n\
  \                }\n            }\n        }\n        return count;"
- "        int tot = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                tot += i;\n            }\n      \
  \  }\n        return tot;"
- "        int start11 = (n - 1) / 11 * 11;\n        int start13 = (n - 1) / 13 *\
  \ 13;\n        int start = start11 < start13 ? start11 : start13;\n        int count\
  \ = 0;\n        for (int i = start; i > 0; i -= 11) {\n            String str =\
  \ String.valueOf(i);\n            for (int j = 0; j < str.length(); j++) {\n   \
  \             if (str.charAt(j) == '7') {\n                    count++;\n      \
  \          }\n            }\n        }\n        return count;"
- "        int c = 0;\n        for (int i = 1; i < n; i++) {\n            String s\
  \ = String.valueOf(i);\n            if (i % 11 == 0 || i % 13 == 0) {\n        \
  \        for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        c++;\n                    }\n             \
  \   }\n            }\n        }\n        return c;"
- '        throw new UnsupportedOperationException("Problem 2 not implemented.");'
- "        int result = 0;\n        int digit;\n        int num = 0;\n        for\
  \ (int i = 11; i < n; i += 11) {\n            num = i;\n            while (num >\
  \ 0) {\n                digit = num % 10;\n                if (digit == 7) {\n \
  \                   result++;\n                }\n                num /= 10;\n \
  \           }\n        }\n        for (int i = 13; i < n; i += 13) {\n         \
  \   num = i;\n            while (num > 0) {\n                digit = num % 10;\n\
  \                if (digit == 7) {\n                    result++;\n            \
  \    }\n                num /= 10;\n            }\n        }\n        return result;"
- "        int max = Math.max(7, Math.max(11, 13));\n        int min = Math.min(7,\
  \ Math.min(11, 13));\n        int count = 0;\n        for (int i = 1; i < n; i++)\
  \ {\n            if (i % max == 0) {\n                count++;\n            } else\
  \ if (i % min == 0) {\n                String s = String.valueOf(i);\n         \
  \       if (s.contains(\"7\")) {\n                    count++;\n               \
  \ }\n            }\n        }\n        return count;"
- "        // your code goes here\n        return 0;"
- '        throw new UnsupportedOperationException("Not implemented");'
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i % 100 == 7 || i % 10 == 7)\
  \ {\n                    count++;\n                }\n            }\n        }\n\
  \        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        count++;\n                 \
  \   }\n                }\n            }\n        }\n        return count;"
- "        // Write your code here.\n        int count = 0;\n        for (int i =\
  \ n; i > 0; i--) {\n            if (i % 11 == 0 || i % 13 == 0) {\n            \
  \    int temp = i;\n                while (temp > 0) {\n                    if (temp\
  \ % 10 == 7) {\n                        count++;\n                    }\n      \
  \              temp /= 10;\n                }\n            }\n        }\n      \
  \  return count;"
- "        // Fill in this function\n        return -1;"
- "        int result = 0;\n        for (int i = 7; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                int j = i;\n                while\
  \ (j > 0) {\n                    if (j % 10 == 7) {\n                        result++;\n\
  \                    }\n                    j /= 10;\n                }\n      \
  \      }\n        }\n        return result;"
- "        int fizzbuzzcount = 0;\n        for (int i = 1; i < n; i++) {\n       \
  \     if (i % 11 == 0 || i % 13 == 0) {\n                //System.out.println(i);\n\
  \                String num = Integer.toString(i);\n                for (int j =\
  \ 0; j < num.length(); j++) {\n                    if (num.charAt(j) == '7')\n \
  \                       fizzbuzzcount++;\n                }\n            }\n   \
  \     }\n        return fizzbuzzcount;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                while (i > 0) {\n               \
  \     if (i % 10 == 7) {\n                        count++;\n                   \
  \ }\n                    i /= 10;\n                }\n            }\n        }\n\
  \        return count;"
- "        int result = 0;\n        if (n < 7) {\n            return result;\n   \
  \     } else {\n            String nString = String.valueOf(n);\n            String[]\
  \ splitString = nString.split(\"\");\n            for (int i = 0; i < splitString.length;\
  \ i++) {\n                if (splitString[i].equals(\"7\")) {\n                \
  \    result++;\n                }\n            }\n            if (n % 11 == 0 ||\
  \ n % 13 == 0) {\n                result += fizzBuzz(n - 1);\n            } else\
  \ {\n                result += fizzBuzz(n - 1);\n            }\n        }\n    \
  \    return result;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = String.valueOf(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        count++;\n                 \
  \   }\n                }\n            }\n        }\n        return count;"
- "        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        cnt++;\n                   \
  \ }\n                }\n            }\n        }\n        return cnt;"
- "        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                cnt += count(i);\n            }\n\
  \        }\n        return cnt;"
- '        return 0;'
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0) {\n                count += 1;\n            } else if (i % 13 == 0)\
  \ {\n                count += 1;\n            }\n        }\n        return count;"
- "        int cnt = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n \
  \               for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        cnt++;\n                    }\n           \
  \     }\n            }\n        }\n        return cnt;"
- "        // YOUR CODE HERE\n        return 0;"
- '        return IntStream.range(0, n).filter(x -> (x % 11 == 0 || x % 13 == 0) &&
  hasSeven(x)).map(x -> 1).sum();'
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        count++;\n                   \
  \ }\n                }\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                char[] arr = Integer.toString(i).toCharArray();\n\
  \                for (char c : arr) {\n                    if (c == '7') {\n   \
  \                     count++;\n                    }\n                }\n     \
  \       }\n        }\n        return count;"
- "        int total = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                total += countSevens(i);\n      \
  \      }\n        }\n        return total;"
- "        if (n<=0)\n            return 0;\n        int count = 0;\n        for (int\
  \ i=1; i<n; i++) {\n            if (i%11==0 || i%13==0) {\n                String\
  \ num = Integer.toString(i);\n                count += num.length() - num.replace(\"\
  7\", \"\").length();\n            }\n        }\n        return count;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        result++;\n                  \
  \  }\n                }\n            }\n        }\n        return result;"
- '        return 0;'
- '        return n;'
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n \
  \               for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i % 100 == 77) {\n          \
  \          count += 2;\n                } else if (i % 1000 == 777) {\n        \
  \            count += 3;\n                } else if (i % 1000 == 7777) {\n     \
  \               count += 4;\n                } else if (i % 1000 == 77777) {\n \
  \                   count += 5;\n                } else if (i % 1000 == 777777)\
  \ {\n                    count += 6;\n                } else if (i % 1000 == 7777777)\
  \ {\n                    count += 7;\n                } else if (i % 1000 == 77777777)\
  \ {\n                    count += 8;\n                } else if (i % 1000 == 777777777)\
  \ {\n                    count += 9;\n                } else if (i % 10 == 7) {\n\
  \                    count += 1;\n                }\n            }\n        }\n\
  \        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') count++;\n                }\n            }\n        }\n\
  \        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = \"\" + i;\n          \
  \      for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- "        // your code here\n        return n % 11 != 0 && n % 13 != 0\n        \
  \    ? 0\n            : n % 11 == 0\n                ? 1 + fizzBuzz(n / 11)\n  \
  \              : 1 + fizzBuzz(n / 13);"
- "        // WRITE YOUR CODE HERE\n        int count = 0;\n        for (int i = 0;\
  \ i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n               \
  \ String num = String.valueOf(i);\n                for (int j = 0; j < num.length();\
  \ j++) {\n                    if (num.charAt(j) == '7') {\n                    \
  \    count++;\n                    }\n                }\n            }\n       \
  \ }\n        return count;"
- "        int i = 1;\n        int fizzBuzz = 0;\n        while (i < n) {\n      \
  \      if (i % 11 == 0 || i % 13 == 0) {\n                if (i % 10 == 7) {\n \
  \                   fizzBuzz += 1;\n                }\n                if (i / 10\
  \ == 7) {\n                    fizzBuzz += 1;\n                }\n            }\n\
  \            i += 1;\n        }\n        return fizzBuzz;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String str = String.valueOf(i);\n\
  \                char[] arr = str.toCharArray();\n                for (char c :\
  \ arr) {\n                    if (c == '7') {\n                        result++;\n\
  \                    }\n                }\n            }\n        }\n        return\
  \ result;"
- "        if (n < 77) return 0;\n        int ans = 0;\n        for (int i = 77; i\
  \ < n; i += 11) {\n            String str = String.valueOf(i);\n            if (str.contains(\"\
  7\")) ans++;\n        }\n        for (int i = 91; i < n; i += 13) {\n          \
  \  String str = String.valueOf(i);\n            if (str.contains(\"7\")) ans++;\n\
  \        }\n        return ans;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int temp = i;\n                while\
  \ (temp > 0) {\n                    if (temp % 10 == 7) count++;\n             \
  \       temp /= 10;\n                }\n            }\n        }\n        return\
  \ count;"
- "        if (n <= 13) {\n            return 0;\n        }\n        if (n <= 16)\
  \ {\n            return 1;\n        }\n        int seven_count = 0;\n        for\
  \ (int i = 10; i < n; i += 11) {\n            if (i % 13 == 0) {\n             \
  \   i += 11;\n            }\n            if (i % 10 == 7) {\n                seven_count++;\n\
  \            }\n        }\n        return seven_count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String string = \"\" + i;\n     \
  \           for (int j = 0; j < string.length(); j++) {\n                    if\
  \ (string.charAt(j) == '7') {\n                        count++;\n              \
  \      }\n                }\n            }\n        }\n        return count;"
- "        int n11, n13, n;\n        n11 = (n-1)/11;\n        n13 = (n-1)/13;\n  \
  \      n = n11 + n13 - (n-1)/(11*13);\n        return n;"
- '        return 0;'
- '        return (int) IntStream.range(0, n).filter(i -> i % 11 == 0 || i % 13 ==
  0).filter(i -> String.valueOf(i).indexOf(''7'') >= 0).count();'
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            int\
  \ mod11 = i % 11;\n            int mod13 = i % 13;\n            if (mod11 == 0 ||\
  \ mod13 == 0) {\n                String stringI = String.valueOf(i);\n         \
  \       if (stringI.contains(\"7\")) {\n                    count++;\n         \
  \       }\n            }\n        }\n        return count;"
- '        return 0;'
- "        return Stream.iterate(1, i -> i + 1)\n            .limit(n)\n         \
  \   .filter(i -> i % 11 == 0 || i % 13 == 0)\n            .map(String::valueOf)\n\
  \            .mapToInt(i -> i.replaceAll(\"[^7]\", \"\").length())\n           \
  \ .sum();"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0) {\n                count++;\n            } else if (i % 13 == 0) {\n\
  \                count++;\n            }\n        }\n        return count;"
- "        int a = 0;\n        for (int i = 0; i < n; i++) {\n            if (i %\
  \ 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n   \
  \             for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        a++;\n                    }\n             \
  \   }\n            }\n        }\n        return a;"
- "        int counter = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String currentNumber = Integer.toString(i);\n\
  \                for (int j = 0; j < currentNumber.length(); j++) {\n          \
  \          if (currentNumber.charAt(j) == '7') {\n                        counter++;\n\
  \                    }\n                }\n            }\n        }\n        return\
  \ counter;"
- '        return 0;'
- '        return -1;'
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String num = String.valueOf(i);\n\
  \                char[] chars = num.toCharArray();\n                for (char c\
  \ : chars) {\n                    if (c == '7') {\n                        count++;\n\
  \                    }\n                }\n            }\n        }\n        return\
  \ count;"
- "        // Fill in your solution here\n        int a = n / 11;\n        int b =\
  \ n / 13;\n        int c = n / 11 / 13;\n        int count = 0;\n        for (int\
  \ i = 1; i <= a; i++) {\n            String s = Integer.toString(i * 11);\n    \
  \        if (s.contains(\"7\")) count++;\n        }\n        for (int i = 1; i <=\
  \ b; i++) {\n            String s = Integer.toString(i * 13);\n            if (s.contains(\"\
  7\")) count++;\n        }\n        for (int i = 1; i <= c; i++) {\n            String\
  \ s = Integer.toString(i * 11 * 13);\n            if (s.contains(\"7\")) count--;\n\
  \        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int tmp = i;\n                while\
  \ (tmp > 0) {\n                    if (tmp % 10 == 7) {\n                      \
  \  count++;\n                    }\n                    tmp /= 10;\n           \
  \     }\n            }\n        }\n        return count;"
- '        throw new NotImplementedException();'
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i < 10) {\n                 \
  \   if (i == 7) {\n                        count++;\n                    }\n   \
  \             } else {\n                    int d = i;\n                    while\
  \ (d != 0) {\n                        if (d % 10 == 7) {\n                     \
  \       count++;\n                        }\n                        d /= 10;\n\
  \                    }\n                }\n            }\n        }\n        return\
  \ count;"
- "        int counter = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String intStr = Integer.toString(i);\n\
  \                for (int j = 0; j < intStr.length(); j++) {\n                 \
  \   if (intStr.charAt(j) == '7') {\n                        counter++;\n       \
  \             }\n                }\n            }\n        }\n        return counter;"
- "        int result = 0;\n        for (int i = 7; i < n; i += 7) {\n           \
  \ if (i % 11 == 0 || i % 13 == 0) {\n                result++;\n            }\n\
  \        }\n        return result;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n \
  \               for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                char[] arr = Integer.toString(i).toCharArray();\n\
  \                for (char c : arr) {\n                    if (c == '7') count++;\n\
  \                }\n            }\n        }\n        return count;"
- "        // TODO: implement this function\n        return 0;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        count++;\n                   \
  \ }\n                }\n            }\n        }\n        return count;"
- "        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = String.valueOf(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        sum++;\n                   \
  \ }\n                }\n            }\n        }\n        return sum;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            String\
  \ s = String.valueOf(i);\n            if (s.contains(\"7\")) {\n               \
  \ count++;\n            }\n        }\n        return count;"
- '        return 0;'
- '        // Fill in the code here'
- "      int counter = 0;\n      for (int i = 1; i < n; i++) {\n        if (i % 11\
  \ == 0 || i % 13 == 0) {\n          String x = String.valueOf(i);\n          for\
  \ (int y = 0; y < x.length(); y++) {\n            if (x.charAt(y) == '7') {\n  \
  \            counter++;\n            }\n          }\n        }\n      }\n      return\
  \ counter;"
- "        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String str = Integer.toString(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        ans++;\n                   \
  \ }\n                }\n            }\n        }\n        return ans;"
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                count += Integer.toString(i).chars().filter(x\
  \ -> x == '7').count();\n            }\n        }\n        return count;"
- "        //\n        // YOUR CODE HERE\n        //"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (i % 10 == 7) {\n            \
  \        count++;\n                }\n                if (i / 10 > 0 && i / 10 %\
  \ 10 == 7) {\n                    count++;\n                }\n            }\n \
  \       }\n        return count;"
- "        // -----------------------------\n        // The solution below is not\
  \ good enough.\n        // -----------------------------\n        int count = 0;\n\
  \        int num = 1;\n        while (num < n) {\n            if (num % 11 == 0\
  \ || num % 13 == 0) {\n                if (countDigit(num, 7) > 0) {\n         \
  \           count++;\n                }\n            }\n            num++;\n   \
  \     }\n        return count;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String value = Integer.toString(i);\n\
  \                for (int j = 0; j < value.length(); j++) {\n                  \
  \  if (value.charAt(j) == '7') {\n                        result++;\n          \
  \          }\n                }\n            }\n        }\n        return result;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0) {\n                count++;\n            } else if (i % 13 == 0) {\n\
  \                count++;\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 7; i < n; i += 7) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                count++;\n            }\n    \
  \    }\n        return count;"
- "        return (n < 1) ? 0 :\n            fizzBuzz(n - 1) + (n % 11 == 0 || n %\
  \ 13 == 0 ? 1 : 0) +\n            (String.valueOf(n).chars().map(c -> c - '0').sum()\
  \ == 7 ? 1 : 0);"
- "        int sum = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        sum++;\n                    }\n\
  \                }\n            }\n        }\n        return sum;"
- "        if (n <= 0) {\n            return 0;\n        }\n        int div = 1;\n\
  \        while (div <= n) {\n            div *= 10;\n        }\n        div /= 10;\n\
  \        int sum = 0;\n        while (div > 0) {\n            int d = n / div;\n\
  \            n -= d * div;\n            if (d == 7) {\n                sum++;\n\
  \            }\n            div /= 10;\n        }\n        return sum;"
- '        return 0;'
- "        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (Integer.toString(i).contains(\"\
  7\")) {\n                    sum++;\n                }\n            }\n        }\n\
  \        return sum;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                count += numDigit7(i);\n        \
  \    }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int num = i;\n                while\
  \ (num > 0) {\n                    if (num % 10 == 7) {\n                      \
  \  count++;\n                    }\n                    num /= 10;\n           \
  \     }\n            }\n        }\n        return count;"
- "        // Fill in your answer here\n        return 0;"
- '      return 0;'
- '        throw new UnsupportedOperationException("Not supported yet.");'
- '        return 0;'
- "        int res = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                res += fizzBuzzHelper(i);\n     \
  \       }\n        }\n        return res;"
- "        String s = String.valueOf(n);\n        int count = 0;\n        for (int\
  \ i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '7') count++;\n\
  \        }\n        return count;"
- '        return 0;'
- '        return IntStream.range(0, n).filter(i -> i % 11 == 0 || i % 13 == 0).map(i
  -> String.valueOf(i).chars().filter(ch -> ch == ''7'').count()).sum();'
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String string = String.valueOf(i);\n\
  \                for (int j = 0; j < string.length(); j++) {\n                 \
  \   if (string.charAt(j) == '7') {\n                        count++;\n         \
  \           }\n                }\n            }\n        }\n        return count;"
- "        int[] fizzBuzz = new int[n];\n        int count = 0;\n        for (int\
  \ i = 0; i < n; i++) {\n            fizzBuzz[i] = (i + 1) % 11 == 0 || (i + 1) %\
  \ 13 == 0 ? 1 : 0;\n            count += fizzBuzz[i];\n        }\n        return\
  \ count;"
- "        // 2 == 11 or 13\n        return 0;"
- "        // 1st attempt:\n        // create a list of 11s and 13s less than n\n\
  \        // then loop through each number, converting it to a string,\n        //\
  \ and if the string contains a '7', then increment a counter\n        ArrayList<Integer>\
  \ elevensAndThirteens = new ArrayList<Integer>();\n        for (int i = 11; i <\
  \ n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                elevensAndThirteens.add(i);\n\
  \            }\n        }\n        int count = 0;\n        for (int number : elevensAndThirteens)\
  \ {\n            if (Integer.toString(number).contains(\"7\")) {\n             \
  \   count++;\n            }\n        }\n        return count;"
- "        int res = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String a = Integer.toString(i);\n\
  \                char[] b = a.toCharArray();\n                for (int j = 0; j\
  \ < b.length; j++) {\n                    if (b[j] == '7') {\n                 \
  \       res++;\n                    }\n                }\n            }\n      \
  \  }\n        return res;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n \
  \               for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- '        return IntStream.range(1, n).filter(x -> x % 11 == 0 || x % 13 == 0).map(x
  -> Integer.toString(x).replaceAll("[^7]", "").length()).sum();'
- '        return 0;'
- "        // return 0;\n        int count = 0;\n        for (int i = 0; i < n; i++)\
  \ {\n            if (i % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n\
  \                char[] c = s.toCharArray();\n                for (int j = 0; j\
  \ < c.length; j++) {\n                    if (c[j] == '7') {\n                 \
  \       count++;\n                    }\n                }\n            }\n    \
  \    }\n        return count;"
- '        return 0;'
- "        return IntStream.range(1, n)\n            .filter(Problem::isDivisibleBy11Or13)\n\
  \            .filter(Problem::contains7)\n            .map(x -> 1)\n           \
  \ .sum();"
- '        return 0;'
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                count += String.valueOf(i).chars().filter(ch\
  \ -> ch == '7').count();\n            }\n        }\n        return count;"
- "        int i = 1;\n        int count = 0;\n        while (i <= n) {\n        \
  \    if (i % 11 == 0 || i % 13 == 0) {\n                count += numberOfSevens(i);\n\
  \            }\n            i++;\n        }\n        return count;"
- "        int result = 0;\n        // YOUR CODE HERE\n        return result;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int j = i;\n                while\
  \ (j > 0) {\n                    if (j % 10 == 7) {\n                        count++;\n\
  \                    }\n                    j /= 10;\n                }\n      \
  \      }\n        }\n        return count;"
- "        int counter = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                if (Integer.toString(i).contains(\"\
  7\")) {\n                    counter++;\n                }\n            }\n    \
  \    }\n        return counter;"
- "        int count = 0;\n        // Add your code here\n        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String num = String.valueOf(i);\n\
  \                for (int j = 0; j < num.length(); j++) {\n                    if\
  \ (num.charAt(j) == '7') {\n                        count++;\n                 \
  \   }\n                }\n            }\n        }\n        return count;"
- '        throw new IllegalArgumentException("Not implemented");'
- '        return 2;'
- "        assert n >= 1;\n        int ret = 0;\n        for (int i = 0; i < n; i++)\
  \ {\n            int j = i;\n            while (j > 0) {\n                int k\
  \ = j % 10;\n                if (k == 7) {\n                    ret++;\n       \
  \         }\n                j /= 10;\n            }\n        }\n        return\
  \ ret;"
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        count++;\n                   \
  \ }\n                }\n            }\n        }\n        return count;"
- "        // Tasks:\n        // 1. find the number of times divisible by 11 or 13\n\
  \        // 2. find the number of times the digit 7 appears in the numbers generated\
  \ in 1.\n        // 3. return the result in 2.\n        return 0;"
- "        int nSevens = 0;\n        for (int i = 0; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                if (i % 11 == 0) {\n         \
  \           nSevens += countSevens(i);\n                }\n                if (i\
  \ % 13 == 0) {\n                    nSevens += countSevens(i);\n               \
  \ }\n            }\n        }\n        return nSevens;"
- "      int c = 0;\n      for (int i = 1; i < n; i++) {\n        if (i % 11 == 0\
  \ || i % 13 == 0) {\n          String s = String.valueOf(i);\n          for (int\
  \ j = 0; j < s.length(); j++) {\n            if (s.charAt(j) == '7') c++;\n    \
  \      }\n        }\n      }\n      return c;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String num = String.valueOf(i);\n\
  \                for (int j = 0; j < num.length(); j++) {\n                    if\
  \ (num.charAt(j) == '7') count++;\n                }\n            }\n        }\n\
  \        return count;"
- "        int fizz = 0;\n        int buzz = 0;\n        int i = 1;\n        for (i\
  \ = 1; i < n; i++) {\n            if (i % 11 == 0) {\n                fizz++;\n\
  \            }\n            if (i % 13 == 0) {\n                buzz++;\n      \
  \      }\n        }\n        return fizz+buzz;"
- "        // YOUR CODE HERE\n        // use mod\n        int count = 0;\n       \
  \ for (int i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n\
  \                count += sevens(i);\n            }\n        }\n        return count;"
- "        if (n < 7) {\n            return 0;\n        }\n        if (n < 11) {\n\
  \            return 1;\n        }\n        int count = n / 11;\n        int sum\
  \ = count * 2;\n        count = n / 13;\n        sum += count * 2;\n        count\
  \ = n / (11 * 13);\n        sum -= count;\n        return sum;"
- "        int c = 0;\n        for (int i = 0; i < n; i++) {\n            String tmp\
  \ = String.valueOf(i);\n            if (tmp.contains(\"7\")) {\n               \
  \ if (i % 11 == 0 || i % 13 == 0) {\n                    c++;\n                }\n\
  \            }\n        }\n        return c;"
- "        // YOUR CODE HERE\n        return 0;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String x = i + \"\";\n          \
  \      for (int j = 0; j < x.length(); j++) {\n                    if (x.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            String[]\
  \ num = String.valueOf(i).split(\"\");\n            for (String s : num) {\n   \
  \             if (s.equals(\"7\")) {\n                    count++;\n           \
  \     }\n            }\n        }\n        return count;"
- "        int num = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0) {\n                if (String.valueOf(i).contains(\"7\")) {\n     \
  \               num++;\n                }\n            }\n            if (i % 13\
  \ == 0) {\n                if (String.valueOf(i).contains(\"7\")) {\n          \
  \          num++;\n                }\n            }\n        }\n        return num;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                if (containsSeven(i)) count++;\n\
  \            }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String x = String.valueOf(i);\n \
  \               for (int j = 0; j < x.length(); j++) {\n                    if (x.charAt(j)\
  \ == '7') {\n                        count++;\n                    }\n         \
  \       }\n            }\n        }\n        return count;"
- "        int n_fizz_buzz = 0;\n        for (int i = 7; i < n; i++) {\n         \
  \   if (i % 11 == 0 || i % 13 == 0) {\n                String i_str = Integer.toString(i);\n\
  \                int c = 0;\n                for (int j = 0; j < i_str.length();\
  \ j++) {\n                    if (i_str.charAt(j) == '7') c++;\n               \
  \ }\n                n_fizz_buzz += c;\n            }\n        }\n        return\
  \ n_fizz_buzz;"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') {\n                        count++;\n                   \
  \ }\n                }\n            }\n        }\n        return count;"
- '        return IntStream.range(1, n).filter(x -> x % 11 == 0 || x % 13 == 0).map(Integer::toString).mapToInt(x
  -> x.contains("7") ? 1 : 0).sum();'
- '        // your code here'
- "        int c=0;\n        for(int i=1;i<n;i++) {\n            if(i%11==0||i%13==0)\
  \ {\n                String d=i+\"\";\n                int j=0;\n              \
  \  while(j<d.length()) {\n                    if(d.charAt(j)=='7') {\n         \
  \               c++;\n                    }\n                    j++;\n        \
  \        }\n            }\n        }\n        return c;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                count += Integer.toString(i).length()\
  \ - Integer.toString(i).replace(\"7\", \"\").length();\n            }\n        }\n\
  \        return count;"
- "        return IntStream.range(1, n)\n                .filter(n -> (n % 11 == 0\
  \ || n % 13 == 0))\n                .map(n -> String.valueOf(n))\n             \
  \   .filter(n -> n.contains(\"7\"))\n                .mapToInt(n -> 1)\n       \
  \         .sum();"
- "        int count = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int j = i;\n                while\
  \ (j > 0) {\n                    if (j % 10 == 7) {\n                        count++;\n\
  \                    }\n                    j /= 10;\n                }\n      \
  \      }\n        }\n        return count;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String number = String.valueOf(i);\n\
  \                for (int j = 0; j < number.length(); j++) {\n                 \
  \   if (number.charAt(j) == '7') {\n                        count++;\n         \
  \           }\n                }\n            }\n        }\n        return count;"
- '        return -1;'
- "        int res = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = Integer.toString(i);\n\
  \                for (int j = 0; j < s.length(); j++) {\n                    if\
  \ (s.charAt(j) == '7') res++;\n                }\n            }\n        }\n   \
  \     return res;"
- '        return 0;'
- "        if (n <= 10) return 0;\n        int sum = 0;\n        for (int i = 11;\
  \ i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) sum += countDigit(i,\
  \ 7);\n        }\n        return sum;"
- "        int total = 0;\n        for (int i = 1; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                int num = i;\n                while\
  \ (num > 0) {\n                    if (num % 10 == 7) {\n                      \
  \  total++;\n                    }\n                    num /= 10;\n           \
  \     }\n            }\n        }\n        return total;"
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                String s = String.valueOf(i);\n \
  \               for (int j = 0; j < s.length(); j++) {\n                    if (s.charAt(j)\
  \ == '7') count++;\n                }\n            }\n        }\n        return\
  \ count;"
- "        int counter = 0;\n        for (int i = 0; i < n; i++) {\n            String\
  \ x = String.valueOf(i);\n            if (i % 11 == 0 || i % 13 == 0) {\n      \
  \          for (int j = 0; j < x.length(); j++) {\n                    if (x.charAt(j)\
  \ == '7') {\n                        counter++;\n                    }\n       \
  \         }\n            }\n        }\n        return counter;"
- "        int count = 0;\n        for (int i = 7; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                while (i > 0) {\n               \
  \     if (i % 10 == 7) {\n                        count++;\n                   \
  \ }\n                    i /= 10;\n                }\n            }\n        }\n\
  \        return count;"
- "        int result = 0;\n        for (int i = 1; i < n; i++) {\n            if\
  \ (i % 11 == 0 || i % 13 == 0) {\n                String str = String.valueOf(i);\n\
  \                for (int j = 0; j < str.length(); j++) {\n                    if\
  \ (str.charAt(j) == '7') {\n                        result++;\n                \
  \    }\n                }\n            }\n        }\n        return result;"
- "        if (n <= 0) {\n            return 0;\n        }\n        int count = 0;\n\
  \        for (int i = 1; i < n; i++) {\n            if (i % 11 == 0 || i % 13 ==\
  \ 0) {\n                String s = String.valueOf(i);\n                for (int\
  \ j = 0; j < s.length(); j++) {\n                    if (s.charAt(j) == '7') {\n\
  \                        count++;\n                    }\n                }\n  \
  \          }\n        }\n        return count;"
- '        return 0;'
- "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (i\
  \ % 11 == 0 || i % 13 == 0) {\n                for (char d : Integer.toString(i).toCharArray())\
  \ {\n                    if (d == '7') count++;\n                }\n           \
  \ }\n        }\n        return count;"
- '        return 0;'
- "        // Start typing your Java solution below\n        // DO NOT write main()\
  \ function\n        if (n <= 0) return 0;\n        return fizzBuzzHelper(n, 11)\
  \ + fizzBuzzHelper(n, 13);"
- '        return -1;'
- '        return 0;'
- "        return (int) Stream.iterate(0, i -> i + 1)\n                    .limit(n)\n\
  \                    .filter(i -> i % 11 == 0 || i % 13 == 0)\n                \
  \    .map(i -> Integer.toString(i))\n                    .filter(i -> i.contains(\"\
  7\"))\n                    .count();"
- '        return 0;'
- "        // >>> fizz_buzz(50)\n        // 0\n        // >>> fizz_buzz(78)\n    \
  \    // 2\n        // >>> fizz_buzz(79)\n        // 3\n        return Stream.iterate(11,\
  \ i -> i + 1).limit(n).filter(i -> (i % 11 == 0 || i % 13 == 0) && Integer.toString(i).contains(\"\
  7\")).collect(Collectors.toList()).size();"
- "        int x = 0;\n        for (int i = 0; i < n; i++) {\n            String o\
  \ = String.valueOf(i);\n            if (i % 11 == 0 || i % 13 == 0) {\n        \
  \        for (int j = 0; j < o.length(); j++) {\n                    if (o.charAt(j)\
  \ == '7') {\n                        x++;\n                    }\n             \
  \   }\n            }\n        }\n        return x;"
- "        if (n < 0) {\n            return 0;\n        }\n        int cnt = 0;\n\
  \        for (int i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 ==\
  \ 0) {\n                String str = String.valueOf(i);\n                for (int\
  \ j = 0; j < str.length(); j++) {\n                    if (str.charAt(j) == '7')\
  \ {\n                        cnt++;\n                    }\n                }\n\
  \            }\n        }\n        return cnt;"
language: java
name: HumanEval_36_fizz_buzz
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return the number of times the digit 7 appears in integers\
  \ less than n which are divisible by 11 or 13.\n    // >>> fizz_buzz(50)\n    //\
  \ 0\n    // >>> fizz_buzz(78)\n    // 2\n    // >>> fizz_buzz(79)\n    // 3\n  \
  \  public static int fizzBuzz(int n) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(fizzBuzz((50))\
  \ == (0));\n    assert(fizzBuzz((78)) == (2));\n    assert(fizzBuzz((79)) == (3));\n\
  \    assert(fizzBuzz((100)) == (3));\n    assert(fizzBuzz((200)) == (6));\n    assert(fizzBuzz((4000))\
  \ == (192));\n    assert(fizzBuzz((10000)) == (639));\n    assert(fizzBuzz((100000))\
  \ == (8026));\n    }\n\n}\n"

completions:
- "        if ((a + b) > c && (a + c) > b && (b + c) > a) {\n            float p =\
  \ (a + b + c) / 2.0f;\n            return (float) Math.sqrt(p * (p - a) * (p - b)\
  \ * (p - c));\n        }\n        return -1;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area >= 0 ? (float) Math.round(area\
  \ * 100.0f) / 100.0f : -1;"
- "        // START\n        if (a + b > c && a + c > b && b + c > a) {\n        \
  \    float s = (a + b + c) / 2.0f;\n            float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n            return area;\n        } else {\n\
  \            return -1;\n        }\n        // END"
- "        if (a+b <= c || a+c <= b || b+c <= a) return -1;\n        float p = (a+b+c)/2f;\n\
  \        float area = (float)Math.sqrt(p*(p-a)*(p-b)*(p-c));\n        return (float)Math.round(area*100)/100;"
- "        if(a + b <= c || a + c <= b || b + c <= a) return -1;\n        float s\
  \ = (a + b + c) / 2f;\n        return (float)Math.sqrt(s * (s - a) * (s - b) * (s\
  \ - c));"
- "        float s = (a + b + c) / 2.0f;\n        float r = s * (s - a) * (s - b)\
  \ * (s - c);\n        if (r <= 0) {\n            return -1;\n        }\n       \
  \ float k = s - a;\n        float l = s - b;\n        float m = s - c;\n       \
  \ return (float)Math.sqrt(r);"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        double s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- "        if(a+b<=c||a+c<=b||b+c<=a) return -1;\n        return (float)Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;"
- "        // TODO\n        throw new UnsupportedOperationException(\"Method triangleArea\
  \ is not implemented\");"
- "        float s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s *\
  \ (s - a) * (s - b) * (s - c));\n        return area == (int) area ? area : -1;"
- "        float s = (a + b + c) / 2;\n        return (float) Math.sqrt(s * (s - a)\
  \ * (s - b) * (s - c));"
- "        float area = -1;\n        float s = (a + b + c) / 2;\n        if ((a +\
  \ b) > c && (a + c) > b && (b + c) > a) {\n            area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        }\n        return (float)Math.round(area\
  \ * 100) / 100;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2.0f;\n            float area = (float) Math.sqrt(p * (p - a) * (p -\
  \ b) * (p - c));\n            return (float) (Math.round(area * 100.0) / 100.0);\n\
  \        }\n        return -1;"
- "        if (a > 0 && b > 0 && c > 0) {\n            if (a + b > c && a + c > b\
  \ && b + c > a) {\n                double s = (a + b + c) / 2.0;\n             \
  \   double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n                return\
  \ (float) Math.round(area * 100) / 100;\n            }\n        }\n        return\
  \ -1;"
- "        // YOUR CODE HERE\n        return 0;"
- "        List<Integer> sides = Arrays.asList(a, b, c);\n        Collections.sort(sides);\n\
  \        if(sides.get(0) + sides.get(1) > sides.get(2)) {\n            double s\
  \ = (a + b + c) / 2.0;\n            double area = Math.sqrt(s * (s - a) * (s - b)\
  \ * (s - c));\n            return (float)Math.round(area * 100) / 100;\n       \
  \ }\n        return -1;"
- "        int sumA = b + c;\n        int sumB = a + c;\n        int sumC = a + b;\n\
  \        if (a <= 0 || b <= 0 || c <= 0) {\n            return -1;\n        }\n\
  \        if (sumA > a && sumB > b && sumC > c) {\n            float p = (a + b +\
  \ c) / 2;\n            float area = (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n            return area;\n        }\n        return -1;"
- "        if(a + b > c && a + c > b && b + c > a) {\n            float p = (a + b\
  \ + c) / 2f;\n            float s = (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n            return (float) (Math.round(s * 100) / 100.0);\n        }\n\
  \        return -1;"
- "        // your code here\n        float p = (a + b + c) / 2.0f;\n        float\
  \ area = (float)Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return a +\
  \ b > c && a + c > b && b + c > a ? area : -1;"
- "        // TODO: Implement your code here\n        //float p = (a + b + c) / 2;\n\
  \        //float area = (float) Math.sqrt(p * (p - a) * (p - b) * (p - c));\n  \
  \      //return area;\n        return 0;"
- "        int sum = a + b + c;\n        if (a + b > c && b + c > a && a + c > b)\
  \ {\n            return (float)Math.sqrt(sum * (sum - a) * (sum - b) * (sum - c))\
  \ / 4;\n        }\n        return -1;"
- "        if (a <= 0 || b <= 0 || c <= 0) {\n            return -1;\n        }\n\
  \        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        float s = (a + b + c) / 2.0f;\n        float area = (float)\
  \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area;"
- "        float area = -1.0f;\n        if (a+b>c && a+c>b && b+c>a) {\n         \
  \   float p = (a+b+c)/2.0f;\n            area = (float)Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
  \        }\n        return area;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2.0f;\n            float area = (float) Math.sqrt(s * (s - a) * (s -\
  \ b) * (s - c));\n            return area;\n        }\n        return -1;"
- "        float area = -1;\n        float p = (a + b + c) / 2;\n        double areaSq\
  \ = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        if (areaSq <= 0) {\n  \
  \          return area;\n        }\n        area = (float) areaSq;\n        // If\
  \ you want to round to 2 decimal points, you will need to do it here.\n        //\
  \ You can use Math.round() like this\n        // area = Math.round(area * 100) /\
  \ 100;\n        return area;"
- "        float abc = a + b + c;\n        if (abc == -3) {\n            return -1;\n\
  \        }\n        else {\n            float s = abc / 2.0f;\n            float\
  \ area = s * (s - a) * (s - b) * (s - c);\n            return (float)Math.sqrt(area);\n\
  \        }"
- "        //Write your code here\n        if (a + b > c && a + c > b && b + c > a)\
  \ {\n            return (float)Math.sqrt((a + b + c) * (a + b - c) * (a - b + c)\
  \ * (-a + b + c)) / 4;\n        }\n        return -1;"
- "        int[] l = {a, b, c};\n        Arrays.sort(l);\n        int i = l[0];\n\
  \        int j = l[1];\n        int k = l[2];\n        if (i + j <= k) {\n     \
  \       return -1;\n        }\n        float s = (i + j + k) / 2.0f;\n        return\
  \ (float) Math.sqrt(s * (s - i) * (s - j) * (s - k));"
- "        float s = (a + b + c) / 2.0f;\n        float result = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return Float.isNaN(result) ? -1 : result;"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        double s = (a + b + c) / 2.0;\n        double area = Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return (float) area;"
- "        // write your code here\n        return -1;"
- "        // your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
  \            float s = (a + b + c) / 2f;\n            return (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        }\n        return -1;"
- "        // COMPLETE\n        float s = (a + b + c) / 2.0f;\n        float area\
  \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (area < 0) {\n\
  \            return -1;\n        }\n        return area;"
- "        if (a <= 0 || b <= 0 || c <= 0) return -1;\n        int biggest = Math.max(a,\
  \ Math.max(b, c));\n        int smallest = Math.min(a, Math.min(b, c));\n      \
  \  int mid = a + b + c - smallest - biggest;\n        if (biggest >= smallest +\
  \ mid) return -1;\n        float s = (float)(a + b + c) / 2;\n        float area\
  \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return (float)Math.round(area\
  \ * 100) / 100;"
- "        boolean aBig = (a + b) > c && (a + c) > b;\n        boolean bBig = (b +\
  \ c) > a && (b + a) > c;\n        boolean cBig = (c + a) > b && (c + b) > a;\n \
  \       if (aBig && bBig && cBig) {\n            double p = ((double)a + (double)b\
  \ + (double)c) / 2;\n            double area = Math.sqrt(p * (p - a) * (p - b) *\
  \ (p - c));\n            return (float) area;\n        }\n        return -1;"
- "        // Determine the maximum length\n        int max = Math.max(a, Math.max(b,\
  \ c));\n        // Find the other two sides\n        int small1 = a, small2 = b;\n\
  \        if (small1 == max) {\n            small1 = b;\n            small2 = c;\n\
  \        } else if (small2 == max) {\n            small2 = c;\n        }\n     \
  \   // Verify that the two smaller sides add up to greater than the largest side\n\
  \        if (small1 + small2 > max) {\n            // We have a valid triangle,\
  \ so calculate the area\n            double p = (a + b + c) / 2.0;\n           \
  \ double s = Math.sqrt(p * (p - a) * (p - b) * (p - c));\n            return (float)s;\n\
  \        }\n        return -1;"
- "        // write your code here\n        // get semi-perimeter\n        double\
  \ s = (a + b + c) / 2.0;\n        // get area\n        double area = Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        // return area if valid, else return\
  \ -1\n        return area > 0 ? (float) Math.round(area * 100) / 100 : -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            return (float)\
  \ Math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n     \
  \   }\n        return -1;"
- "        float s = (a + b + c) / 2.0f;\n        float area = -1;\n        if (a\
  \ < s && b < s && c < s) {\n            area = (float) Math.sqrt(s * (s - a) * (s\
  \ - b) * (s - c));\n        }\n        return area;"
- "        float s = (a + b + c) / 2;\n        float area = (float)Math.sqrt(s * (s\
  \ - a) * (s - b) * (s - c));\n        return area < 0 ? -1 : area;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        if (area == 0.0f) {\n            return\
  \ -1;\n        }\n        else {\n            return area;\n        }"
- "        float s = (a + b + c) / 2.0f;\n        float result = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        if (Float.isNaN(result)) {\n        \
  \    return -1;\n        }\n        return result;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area == Float.NaN ? -1 : area;"
- "        // EXAMPLE OF BAD FUNCTION\n        // Making sure the parameters are within\
  \ range\n        if (a < 1 || a > 100 || b < 1 || b > 100 || c < 1 || c > 100) {\n\
  \            return -1;\n        }\n        // Compare the three numbers to see\
  \ if they make a valid triangle\n        // if(a + b > c && a + c > b && b + c >\
  \ a) {\n        //     return a * b * c;\n        // }\n        // else {\n    \
  \    //     return -1;\n        // }\n        return a + b > c && a + c > b && b\
  \ + c > a ? a * b * c : -1;"
- "        if (a + b <= c || a + c <= b || b + c <= a) return -1;\n        float s\
  \ = (a + b + c) / 2f;\n        return (float) Math.sqrt(s * (s - a) * (s - b) *\
  \ (s - c));"
- "        if (a + b > c && a + c > b && b + c > a) {\n            double s = (a +\
  \ b + c) / 2.0;\n            double area = Math.sqrt(s * (s - a) * (s - b) * (s\
  \ - c));\n            return (float) area;\n        }\n        return -1;"
- "        if (a <= 0 || b <= 0 || c <= 0) return -1;\n        if (a + b <= c || a\
  \ + c <= b || b + c <= a) return -1;\n        float p = (a + b + c) / 2.0f;\n  \
  \      return (float)Math.sqrt(p * (p - a) * (p - b) * (p - c));"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2f;\n            return (float) Math.sqrt(s * (s - a) * (s - b) * (s\
  \ - c));\n        }\n        return -1;"
- '        return (a + b > c && a + c > b && b + c > a) ? (float) Math.sqrt((a + b
  + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 : -1;'
- "        // Your code goes here\n        if ((a+b)>c && (a+c)>b && (b+c)>a)\n  \
  \          return (float) Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4;\n     \
  \   else\n            return -1;"
- "        if (a + b <= c || a + c <= b || b + c <= a) return -1;\n        float s\
  \ = (a + b + c) / 2.0f;\n        return (float)Math.sqrt(s * (s - a) * (s - b) *\
  \ (s - c));"
- "        if( a + b > c && a + c > b && b + c > a ){\n            float p = (a +\
  \ b + c) / 2.0f;\n            float s = (float)Math.sqrt(p * (p - a) * (p - b) *\
  \ (p - c));\n            return s;\n        }\n        return -1;"
- "        float area = -1;\n        float temp = (a + b + c) / 2;\n        if (a\
  \ <= 0 || b <= 0 || c <= 0) {\n            area = -1;\n        } else if (a + b\
  \ > c && a + c > b && b + c > a) {\n            area = (float) Math.sqrt(temp *\
  \ (temp - a) * (temp - b) * (temp - c));\n        } else {\n            area = -1;\n\
  \        }\n        return area;"
- '        return (a + b > c && a + c > b && b + c > a) ? (a + b + c) / 2.0f : -1;'
- "        // if(a + b > c && a + c > b && b + c > a)\n        //     return new BigDecimal(a\
  \ * b / 2.0).setScale(2, BigDecimal.ROUND_HALF_UP).floatValue();\n        // return\
  \ -1;\n        return new BigDecimal(0.5 * Math.abs(a * (b - c) + b * (c - a) +\
  \ c * (a - b))).setScale(2, BigDecimal.ROUND_HALF_UP).floatValue();"
- "      float result = -1;\n      // check that the input makes a valid triangle\n\
  \      if(Math.abs(a) + Math.abs(b) > Math.abs(c) && Math.abs(a) + Math.abs(c) >\
  \ Math.abs(b) && Math.abs(b) + Math.abs(c) > Math.abs(a)){\n        // if yes, calculate\
  \ the area\n        float s = (a + b + c) / 2.0f;\n        // returns -1 if the\
  \ area cannot be computed because we have a NaN\n        result = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n      }\n      return result;"
- "        // YOUR CODE HERE\n        float s = (a + b + c) / 2;\n        float area\
  \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if (a + b <= c\
  \ || a + c <= b || b + c <= a)\n            return -1;\n        return area;"
- "        float semiPerimeter = (a + b + c) / 2.0f;\n        float triangleArea =\
  \ (float) Math.sqrt(semiPerimeter * (semiPerimeter - a) * (semiPerimeter - b) *\
  \ (semiPerimeter - c));\n        return (triangleArea > 0) ? Float.parseFloat(String.format(\"\
  %.2f\", triangleArea)) : -1;"
- "        float p = (a + b + c) / 2f;\n        float area = (float)Math.sqrt(p *\
  \ (p - a) * (p - b) * (p - c));\n        return (area > 0) ? area : -1;"
- "        float x = Heron(a, b, c);\n        if (x == -1) {\n            return -1;\n\
  \        }\n        return x;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return a + b > c && a + c > b && b +\
  \ c > a ? area : -1;"
- "        if(a + b > c && a + c > b && b + c > a) {\n            float area = (float)\
  \ ((a + b + c) / 2.0);\n            return Math.round(Math.sqrt(area * (area - a)\
  \ * (area - b) * (area - c)) * 100.0) / 100.0f;\n        }\n        return -1;"
- "        // Write your code here\n        int sum = a + b + c;\n        if(sum -\
  \ a <= a || sum - b <= b || sum - c <= c) {\n            return -1;\n        } else\
  \ {\n            float s = (float) (sum) / 2;\n            float area = (float)\
  \ (Math.sqrt(s * (s - a) * (s - b) * (s - c)));\n            return Math.round(area\
  \ * 100) / 100.0f;\n        }"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2f;\n            return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n        }\n        return -1;"
- "        double p = (a + b + c) / 2.0;\n        double area = Math.sqrt(p * (p -\
  \ a) * (p - b) * (p - c));\n        return (float) Math.round(area * 100) / 100;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2.0f;\n            return (float) Math.sqrt(s * (s - a) * (s - b) * (s\
  \ - c));\n        }\n        return -1;"
- "        float s = (a + b + c) / 2.0f;\n        float area = s * (s - a) * (s -\
  \ b) * (s - c);\n        if (area > 0)\n            return (float)Math.sqrt(area);\n\
  \        return -1;"
- "        try {\n            double s = (a + b + c) / 2;\n            double area\
  \ = Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            return (float)Math.round(area\
  \ * 100.0) / 100.0f;\n        } catch (Exception e) {\n            return -1;\n\
  \        }"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return (a + b > c && a + c > b && b +\
  \ c > a) ? area : -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float semiPerimeter\
  \ = (a + b + c) / 2f;\n            float area = (float) Math.sqrt(semiPerimeter\
  \ * (semiPerimeter - a) * (semiPerimeter - b) * (semiPerimeter - c));\n        \
  \    return area;\n        } else {\n            return -1;\n        }"
- "        double s = (a + b + c) / 2.0;\n        double area = Math.sqrt(s * (s -\
  \ a) * (s - b) * (s - c));\n        if (area == 0) {\n            return -1;\n \
  \       }\n        return (float) area;"
- "        if (a < b + c && b < a + c && c < a + b) {\n            float p = (a +\
  \ b + c) / 2f;\n            return (float)Math.sqrt(p * (p - a) * (p - b) * (p -\
  \ c));\n        }\n        return -1;"
- "        float A = (float)a;\n        float B = (float)b;\n        float C = (float)c;\n\
  \        if ((A + B > C) && (A + C > B) && (B + C > A)) {\n            float s =\
  \ (A + B + C) / 2;\n            return (float)Math.sqrt(s * (s - A) * (s - B) *\
  \ (s - C));\n        }\n        return -1;"
- '        return (a + b > c && a + c > b && b + c > a) ? new Triangle(a, b, c).getArea()
  : -1;'
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area;"
- "        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n        //\n        //\n        //\n        //\n        //\n      \
  \  //\n        //\n        //\n        //\n        //\n        //\n        //\n\
  \        //\n       "
- "        if(a+b>c && a+c>b && b+c>a) return (float) Math.round(Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))\
  \ / 4.0 * 100)/100;\n        return -1;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        if (a <= 0 || b <= 0 || c <= 0 || area\
  \ <= 0) {\n            return -1;\n        }\n        return area;"
- "        float s = ((float) a + b + c) / 2;\n        float area = (float) (Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c)));\n        return (a + b > c && a + c > b && b\
  \ + c > a) ? area : -1;"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        float s = (a + b + c) / 2.0f;\n        return (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- '        return -1;'
- "        if (a + b > c && a + c > b && b + c > a) {\n            double s = (a +\
  \ b + c) / 2.0;\n            double triangleArea = Math.sqrt(s * (s - a) * (s -\
  \ b) * (s - c));\n            // System.out.println(triangleArea);\n           \
  \ return (float) (Math.round(triangleArea * 100) / 100.0);\n        }\n        return\
  \ -1;"
- "        float s = (a + b + c) / 2;\n        float t = s * (s - a) * (s - b) * (s\
  \ - c);\n        if (t <= 0) {\n            return -1;\n        }\n        return\
  \ (float) Math.sqrt(t);"
- "        if (a + b > c && a + c > b && b + c > a)\n            return Math.round(100.0f\
  \ * Math.sqrt((a + b + c) * (-a + b + c) * (a - b + c) * (a + b - c)) / 4.0f) /\
  \ 100.0f;\n        return -1;"
- "        double s = (a + b + c) / 2;\n        double x = Math.sqrt(s * (s - a) *\
  \ (s - b) * (s - c));\n        if (Double.isNaN(x)) {\n            return -1;\n\
  \        }\n        return (float) (Math.round(x * 100) / 100.0);"
- "        float p = (a + b + c) / 2.0f;\n        float s = (float) Math.sqrt(p *\
  \ (p - a) * (p - b) * (p - c));\n        if (s <= 0) return -1;\n        return\
  \ s;"
- '        return -1;'
- '        return 0;'
- "        int sum = a + b + c;\n        float p = (float)sum / 2;\n        float\
  \ area = (float)Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        if(a + b <=\
  \ c || a + c <= b || b + c <= a)\n            return -1;\n        else\n       \
  \     return area;"
- "        float ret = 0.0f;\n        if (a <= 0 || b <= 0 || c <= 0) {\n        \
  \    return -1;\n        }\n        if (a + b > c && a + c > b && b + c > a) {\n\
  \            ret = (float)Math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a\
  \ + b + c)) / 4;\n        } else {\n            ret = -1;\n        }\n        return\
  \ ret;"
- "        int s = (a + b + c) / 2;\n        return (a + b > c && a + c > b && b +\
  \ c > a) ? (float) Math.sqrt(s * (s - a) * (s - b) * (s - c)) : -1;"
- "        int s = (a + b + c) / 2;\n        double result = Math.sqrt(s * (s - a)\
  \ * (s - b) * (s - c));\n        return (float) (Math.round(result * 100.0) / 100.0);"
- "        if (a <= 0 || b <= 0 || c <= 0) {\n            return -1;\n        }\n\
  \        if (a + b > c && a + c > b && b + c > a) {\n            return ((a + b\
  \ + c) / 2) * (float) Math.sqrt(((a + b + c) / 2) * (((a + b + c) / 2) - a) * (((a\
  \ + b + c) / 2) - b) * (((a + b + c) / 2) - c));\n        }\n        return -1;"
- "        // Your code here...\n        float result = -1;\n        float s = (a\
  \ + b + c) / 2;\n        if (s > a && s > b && s > c) {\n            float p = (float)\
  \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n            result = (float) (Math.round(p\
  \ * 100.0) / 100.0);\n        }\n        return result;"
- "        float s = (a + b + c) / 2;\n        float area = (float)Math.sqrt(s * (s\
  \ - a) * (s - b) * (s - c));\n        return area;"
- "        if (a + b > c && a + c > b && b + c > a)\n            return ((a + b +\
  \ c) / 2.0f);\n        return -1;"
- "        // write code here\n        return -1;"
- "        if (a < 0 || b < 0 || c < 0) {\n            return -1;\n        }\n   \
  \     // Check that a side is longer than the sum of the other two sides\n     \
  \   if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n    \
  \    }\n        // Using Heron's formula\n        float s = (a + b + c) / 2.0f;\n\
  \        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    \
  \    return (float) (Math.round(area * 100.0) / 100.0);"
- "        float p = (a + b + c) / 2.0f;\n        float s = (float) Math.sqrt(p *\
  \ (p - a) * (p - b) * (p - c));\n        if (s > 0) {\n            return (float)\
  \ Math.round(s * 100.0f) / 100.0f;\n        }\n        return -1;"
- '        return 0;'
- "        if ((a + b) <= c || (a + c) <= b || (b + c) <= a) {\n            return\
  \ -1.0f;\n        }\n        float s = (a + b + c) / 2.0f;\n        float area =\
  \ (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return Math.round(area\
  \ * 100.0f) / 100.0f;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            double s = (a +\
  \ b + c) / 2;\n            double area = Math.sqrt(s * (s - a) * (s - b) * (s -\
  \ c));\n            return Math.round(area * 100) / 100f;\n        }\n        return\
  \ -1;"
- "        //TODO: Implement me\n        int h = 0;\n        float area = 0.0f;\n\
  \        if (a+b>c && a+c>b && b+c>a) {\n            h = Math.max(a,Math.max(b,c));\n\
  \            if (h == a) {\n                area = (float) (a*a - Math.pow((Math.pow(b,2)\
  \ + Math.pow(c,2) - Math.pow(a,2))/(2*b*c),2))*b*c/(4*a);\n            }\n     \
  \       else if (h == b) {\n                area = (float) (b*b - Math.pow((Math.pow(a,2)\
  \ + Math.pow(c,2) - Math.pow(b,2))/(2*a*c),2))*a*c/(4*b);\n            }\n     \
  \       else {\n                area = (float) (c*c - Math.pow((Math.pow(a,2) +\
  \ Math.pow(b,2) - Math.pow(c,2))/(2*a*b),2))*a*b/(4*c);\n            }\n       \
  \     return (float) (Math.round(area*100.0f)/100.0f);\n        }\n        else\
  \ {\n            return -1;\n        }"
- "    \tif (a < 1 || b < 1 || c < 1) return -1;\n    \tif (a + b < c || a + c < b\
  \ || b + c < a) return -1;\n    \treturn (float)Math.sqrt((a + b + c) * (a + b -\
  \ c) * (a - b + c) * (-a + b + c)) / 4;"
- "        // Your code here\n        if (a <= 0 || b <= 0 || c <= 0) return -1.0f;\n\
  \        if (a + b <= c || a + c <= b || b + c <= a) return -1.0f;\n        if (a\
  \ == b && b == c) return (Math.sqrt(3)/4.0f) * (a * a);\n        double s = (a +\
  \ b + c) / 2.0;\n        return (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));"
- "    \tfloat s = (a + b + c) / 2.0f;\n    \tif(s - a <= 0 || s - b <= 0 || s - c\
  \ <= 0) {\n    \t\treturn -1;\n    \t}\n    \treturn (float)Math.sqrt(s * (s - a)\
  \ * (s - b) * (s - c));"
- '        return -1;'
- "        // if sum of any two sides is less than or equal to the third side, \n\
  \        // cannot form a triangle\n        if (a + b <= c || a + c <= b || b +\
  \ c <= a) {\n            return -1;\n        }\n        // Heron's formula\n   \
  \     double s = (a + b + c) / 2.0;\n        double area = Math.sqrt(s * (s - a)\
  \ * (s - b) * (s - c));\n        return (float) Math.round(area * 100) / 100;"
- "        if(a + b <= c || a + c <= b || b + c <= a) {\n            return -1.0f;\n\
  \        }\n        float s = (a + b + c) / 2.0f;\n        return (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- '        return -1;'
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2.0f;\n            float area = (float) Math.sqrt(s * (s - a) * (s -\
  \ b) * (s - c));\n            return (float) Math.round(area * 100) / 100;\n   \
  \     }\n        return -1;"
- "        // Your code here\n        float p = (a + b + c) / 2.0f;\n        float\
  \ s = (float) Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return s;"
- "        // TODO: Implement this function.\n        return -1;"
- "        double s = (a + b + c) / 2.0;\n        double area = Math.sqrt(s * (s -\
  \ a) * (s - b) * (s - c));\n        return (float) area;"
- "        if(a + b > c && a + c > b && b + c > a)\n            return (float)Math.sqrt((a\
  \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n        return -1;"
- '        throw new RuntimeException("Not Implemented");'
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2.0f;\n            return (float) Math.sqrt(s * (s - a) * (s - b) * (s\
  \ - c));\n        }\n        return -1;"
- "      float area = -1;\n      float s = (a + b + c) / 2;\n      // Heron's formula\n\
  \      float root = s * (s - a) * (s - b) * (s - c);\n      if (root > 0) {\n  \
  \      area = (float) Math.sqrt(root);\n      }\n      return area;"
- "        float sum1 = (float) a + b;\n        float sum2 = (float) a + c;\n    \
  \    float sum3 = (float) b + c;\n        float s = (sum1 + sum2 + sum3) / 2;\n\
  \        float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n    \
  \    if (area > 0) {\n            return area;\n        } else {\n            return\
  \ -1;\n        }"
- "        if (a <= 0 || b <= 0 || c <= 0) {\n            return -1;\n        }\n\
  \        double s = (a + b + c) / 2.0;\n        double area = Math.sqrt(s * (s -\
  \ a) * (s - b) * (s - c));\n        return (float) (Math.round(area * 100.0) / 100.0);"
- "        float s = (a + b + c) / 2.0f;\n        float area = s * (s - a) * (s -\
  \ b) * (s - c);\n        if (area < 0) return -1;\n        return (float)Math.sqrt(area);"
- "        float semiPerimeter = (a + b + c) / 2;\n        float numerator = semiPerimeter\
  \ * (semiPerimeter - a) * (semiPerimeter - b) * (semiPerimeter - c);\n        if\
  \ (numerator <= 0) return -1;\n        return (float) Math.sqrt(numerator);"
- "        if(a > 0 && b > 0 && c > 0 && a + b > c && a + c > b && b + c > a)\n  \
  \          return (float)Math.sqrt((a + b + c) * (a + b - c) * (a - b + c) * (-a\
  \ + b + c)) / 4;\n        return -1;"
- "        float s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s *\
  \ (s - a) * (s - b) * (s - c));\n        if (a + b > c && a + c > b && b + c > a)\
  \ {\n            return area;\n        } else {\n            return -1;\n      \
  \  }"
- "        if (a + b > c && a + c > b && b + c > a) {\n            // use heron's\
  \ formula to calculate the area\n            // where s = (a + b + c) / 2\n    \
  \        float s = (a + b + c) / 2.0f;\n            float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n            return (float)Math.round(area * 100)\
  \ / 100;\n        } else {\n            return -1;\n        }"
- "        // Write your code here\n        return 0;"
- "        // Your code here\n        if (a + b > c && a + c > b && b + c > a) {\n\
  \            float p = (a + b + c) / 2.0f;\n            return (float) Math.sqrt(p\
  \ * (p - a) * (p - b) * (p - c));\n        }\n        return -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2f;\n            return Math.round(Math.sqrt(s * (s - a) * (s - b) *\
  \ (s - c)) * 100) / 100f;\n        }\n        return -1;"
- "        float s = (a + b + c) / 2;\n        float area = (float)Math.sqrt(s * (s\
  \ - a) * (s - b) * (s - c));\n        return area;"
- "        // Your code here\n        float s = (a + b + c) / 2.0f;\n        float\
  \ area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        return area\
  \ > 0 ? area : -1;"
- "        // Write your code here\n        int perimeter = a + b + c;\n        double\
  \ s = perimeter / 2.0;\n        double area = Math.sqrt(s * (s - a) * (s - b) *\
  \ (s - c));\n        return (float) Math.round(area * 100.0) / 100.0;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area > 0 ? Float.parseFloat(String.format(\"\
  %.2f\", area)) : -1;"
- "        int temp = a + b + c;\n        if (temp - a <= a || temp - b <= b || temp\
  \ - c <= c) {\n            return -1;\n        }\n        // Heron's formula\n \
  \       float s = temp / 2;\n        return (float)Math.sqrt(s * (s - a) * (s -\
  \ b) * (s - c));"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area;"
- '        return -1;'
- "        if (isValidTriangle(a, b, c)) {\n            return (float) Math.sqrt(calculateTriangleArea(a,\
  \ b, c));\n        } else {\n            return -1;\n        }"
- "        float s = (a + b + c) / 2.0f;\n        float x = s * (s - a) * (s - b)\
  \ * (s - c);\n        if (x < 0) return -1;\n        return (float) Math.sqrt(x);"
- '        return (a + b > c && a + c > b && b + c > a) ? (float) Math.sqrt((a + b
  + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4 : -1;'
- "        float A = (float) a;\n        float B = (float) b;\n        float C = (float)\
  \ c;\n        float s = (A + B + C) / 2;\n        if (A + B <= C || A + C <= B ||\
  \ B + C <= A) {\n            return -1;\n        }\n        else {\n           \
  \ return (float) Math.sqrt(s * (s - A) * (s - B) * (s - C));\n        }"
- "        if (a+b>c && a+c>b && b+c>a) {\n            float s = (a+b+c)/2.0f;\n \
  \           return (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n        }\n        return\
  \ -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2f;\n            return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n        }\n        return -1;"
- "        float s = (a + b + c) / 2;\n        return (float) (Math.sqrt(s * (s -\
  \ a) * (s - b) * (s - c)));"
- "        if (a + b > c && a + c > b && b + c > a) {\n            double s = (a +\
  \ b + c) / 2;\n            double area = Math.sqrt(s * (s - a) * (s - b) * (s -\
  \ c));\n            return (float) area;\n        }\n        return -1;"
- "        // https://www.mathopenref.com/heronsformula.html\n        float p = (a\
  \ + b + c) / 2f;\n        float s = (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n        return Float.isNaN(s) ? -1 : s;"
- "        // If any of the sides has a length of 0, this is not a triangle\n    \
  \    if (a == 0 || b == 0 || c == 0) return -1;\n        // If the sum of any two\
  \ sides is less than or equal to the third side,\n        // this is not a triangle\n\
  \        if (a + b <= c || a + c <= b || b + c <= a) return -1;\n        // Calculate\
  \ area using Heron's formula\n        float s = (a + b + c) / 2f;\n        float\
  \ aa = s * (s - a) * (s - b) * (s - c);\n        return (float) Math.sqrt(aa);"
- "        if (a + b <= c || a + c <= b || b + c <= a) return -1;\n        double\
  \ s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s * (s - a) * (s - b)\
  \ * (s - c));"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        if (Float.isNaN(area)) {\n          \
  \  return -1;\n        }\n        return (float)Math.round(area * 100) / 100;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            return (float)Math.sqrt((a\
  \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4;\n        }\n       \
  \ return -1;"
- "        float p = (a + b + c) / 2f;\n        float area = (float)Math.sqrt(p *\
  \ (p - a) * (p - b) * (p - c));\n        return (area > 0) ? area : -1;"
- "        int[] sides = {a, b, c};\n        Arrays.sort(sides);\n        if (sides[0]\
  \ + sides[1] <= sides[2]) return -1.0f;\n        float s = (a + b + c) / 2.0f;\n\
  \        float area = s * (s - a) * (s - b) * (s - c);\n        return (float) Math.sqrt(area);"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area < 0 ? -1 : Math.round(area\
  \ * 100) / 100.0f;"
- "        if (a < 1 || b < 1 || c < 1) {\n            return -1;\n        } else\
  \ if (a > b + c || b > a + c || c > a + b) {\n            return -1;\n        }\
  \ else {\n            float s = (a + b + c) / 2.0f;\n            return (float)\
  \ Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2f;\n            float result = (float) Math.sqrt(p * (p - a) * (p -\
  \ b) * (p - c));\n            return Float.parseFloat(String.format(\"%.2f\", result));\n\
  \        }\n        return -1;"
- "        int[] ordered = new int[]{a, b, c};\n        Arrays.sort(ordered);\n  \
  \      return ordered[0] + ordered[1] > ordered[2] ? (float) ordered[0] * ordered[1]\
  \ / 2 : -1;"
- "        boolean first = ((a + b) > c);\n        boolean second = ((a + c) > b);\n\
  \        boolean third = ((b + c) > a);\n        if(first && second && third) {\n\
  \            float halfPerimeter = (a + b + c) / 2f;\n            float area = (float)Math.sqrt(halfPerimeter\
  \ * (halfPerimeter - a) * (halfPerimeter - b) * (halfPerimeter - c));\n        \
  \    return (float)Math.round(area * 100) / 100;\n        }\n        return -1;"
- "        float s = (a + b + c) / 2;\n        if (a + b > c && a + c > b && b + c\
  \ > a) {\n            return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n\
  \        }\n        return -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float s = (a +\
  \ b + c) / 2f;\n            return Math.round(Math.sqrt(s * (s - a) * (s - b) *\
  \ (s - c)) * 100) / 100f;\n        }\n        return -1;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2.0f;\n            return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n        }\n        return -1;"
- "        float s = (a + b + c) / 2;\n        float area = (float) Math.sqrt(s *\
  \ (s - a) * (s - b) * (s - c));\n        if (a + b > c && a + c > b && b + c > a)\
  \ {\n            return area;\n        } else {\n            return -1;\n      \
  \  }"
- "        float s = (a + b + c) / 2;\n        return s > a && s > b && s > c ? (float)\
  \ Math.sqrt(s * (s - a) * (s - b) * (s - c)) : -1;"
- "        float area = -1;\n        float s = (a + b + c) / 2;\n        if ((a +\
  \ b) > c && (a + c) > b && (b + c) > a) {\n            area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        }\n        return area;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            return (float)\
  \ ((a + b + c) / 2.0);\n        }\n        return -1;"
- "        // How do we know when a triangle is valid?\n        // A valid triangle's\
  \ sum of any two sides must be greater than the third\n        // What is a triangle?\n\
  \        // A triangle is a 3 sided polygon\n        if (a < 1 || b < 1 || c < 1)\
  \ {\n            return -1.0f;\n        }\n        if (a + b > c && a + c > b &&\
  \ b + c > a) {\n            // Create an array of the 3 side lengths\n         \
  \   int[] sides = {a, b, c};\n            // Determine the maximum side length\n\
  \            int max = 0;\n            for (int i = 0; i < sides.length; i++) {\n\
  \                if (sides[i] > max) {\n                    max = sides[i];\n  \
  \              }\n            }\n            // Determine the remaining 2 side lengths\n\
  \            int remainingSides = 0;\n            for (int i = 0; i < sides.length;\
  \ i++) {\n                if (sides[i] != max) {\n                    remainingSides\
  \ += sides[i];\n                }\n            }\n            // Calculate the area\n\
  \            float area = (float) remainingSides * max / 2;\n            return\
  \ area;\n        }\n        return -1.0f;"
- "        if (a < 1 || b < 1 || c < 1) return -1.00f;\n        if (a + b <= c ||\
  \ a + c <= b || b + c <= a) return -1.00f;\n        double s = (a + b + c) / 2.0;\n\
  \        return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));"
- "        if ((a + b) > c && (a + c) > b && (b + c) > a) {\n            float s =\
  \ (a + b + c) / 2.0f;\n            return (float)Math.sqrt(s * (s - a) * (s - b)\
  \ * (s - c));\n        }\n        return -1;"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1.0f;\n\
  \        } else {\n            // Heron's formula:\n            // A = \u221Ap(p\
  \ \u2212 a)(p \u2212 b)(p \u2212 c)\n            // where p = (a + b + c) / 2\n\
  \            int p = (a + b + c) / 2;\n            return (float)Math.sqrt(p * (p\
  \ - a) * (p - b) * (p - c));\n        }"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return (area > 0 ? area : -1);"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        double s = (a + b + c) / 2.0;\n        return (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- "        if (a <= 0 || b <= 0 || c <= 0) return -1;\n        if (a >= b + c || b\
  \ >= a + c || c >= a + b) return -1;\n        float s = (a + b + c) / 2.0f;\n  \
  \      float area = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n      \
  \  return (float) (Math.round(area * 100.0) / 100.0);"
- "        if (a+b>c&&a+c>b&&b+c>a) {\n            return (float) Math.round(Math.sqrt((a+b+c)*(a+b-c)*(a-b+c)*(-a+b+c))/4*100)/100;\n\
  \        }\n        return -1;"
- "        float[] sides = new float[]{a, b, c};\n        Arrays.sort(sides);\n  \
  \      if (sides[0] + sides[1] > sides[2]) {\n            float s = 0.5f * (sides[0]\
  \ + sides[1] + sides[2]);\n            return (float) Math.sqrt(s * (s - sides[0])\
  \ * (s - sides[1]) * (s - sides[2]));\n        }\n        return -1;"
- "        float s = (a + b + c) / 2;\n        float area = -1;\n        if (a + b\
  \ > c && a + c > b && b + c > a) {\n            area = (float) Math.sqrt(s * (s\
  \ - a) * (s - b) * (s - c));\n        }\n        return area;"
- "        float area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a))\
  \ {\n            float s = (a + b + c) / 2;\n            area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        }\n        return area;"
- "        float result = -1;\n        float s = (a + b + c) / 2;\n        float area\
  \ = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        if(area >= 0) {\n\
  \            result = (float)Math.round(area * 100) / 100;\n        }\n        return\
  \ result;"
- '        return -1;'
- "        float s = (a + b + c) / 2;\n        float area = -1;\n        try {\n \
  \           area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        }\
  \ catch (Exception e) {\n            // do nothing\n        }\n        return area;"
- "        if (a < 0 || b < 0 || c < 0) {\n            return -1;\n        }\n   \
  \     if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n  \
  \      }\n        double s = (a + b + c) / 2.0;\n        return (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- "        float t_area;\n        float s = (a + b + c) / 2.0f;\n        float area\
  \ = (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n        t_area = (float)\
  \ Math.round(area * 100) / 100;\n        return (t_area > 0) ? t_area : -1;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        if (a + b > c && a + c > b && b + c >\
  \ a) {\n            return area;\n        } else {\n            return -1;\n   \
  \     }"
- "        if (a + b > c && a + c > b && b + c > a) {\n            return new Float(Math.sqrt((a\
  \ + b + c) * (a + b - c) * (a - b + c) * (-a + b + c)) / 4);\n        }\n      \
  \  return -1;"
- "        if (a+b>c&&a+c>b&&b+c>a)\n        {\n            float s=(a+b+c)/2;\n \
  \           float area=(float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n            return\
  \ Float.parseFloat(String.format(\"%.2f\", area));\n        }\n        else\n  \
  \      {\n            return -1;\n        }"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return (area == 0) ? -1 : area;"
- "        if (a + b <= c || a + c <= b || b + c <= a) {\n            return -1;\n\
  \        }\n        float s = (a + b + c) / 2.0f;\n        return (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));"
- '        return -1;'
- "        float p = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(p\
  \ * (p - a) * (p - b) * (p - c));\n        if (a + b <= c || a + c <= b || b + c\
  \ <= a) return -1;\n        return area;"
- "        // write your code here\n        float s,x;\n        s=(a+b+c)/2;\n   \
  \     x=(float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n        if((a+b)>c&&(a+c)>b&&(b+c)>a)\n\
  \        {\n        return x;\n        }\n        else\n        {\n        return\
  \ -1;\n        }"
- "        float area;\n        if ((a+b>c) && (a+c>b) && (b+c>a)) {\n           \
  \ float p = (a+b+c)/2;\n            area = (float) Math.sqrt(p*(p-a)*(p-b)*(p-c));\n\
  \        } else {\n            area = -1;\n        }\n        return area;"
- "        // Really we should check if it's a triangle, but I don't think we have\
  \ to\n        float s = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area;"
- "        int largest = Math.max(a, Math.max(b, c));\n        int sum = a + b + c;\n\
  \        if (sum - largest > largest) {\n            float s = (float) (sum / 2.0);\n\
  \            return (float) Math.sqrt(s * (s - a) * (s - b) * (s - c));\n      \
  \  }\n        return -1;"
- "        float area = -1;\n        if (a+b > c && a+c > b && b+c > a) {\n      \
  \      float s = (a+b+c)/2.0f;\n            area = (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));\n\
  \        }\n        return area;"
- "        if (a + b > c && a + c > b && b + c > a) {\n            float p = (a +\
  \ b + c) / 2f;\n            return (float) Math.sqrt(p * (p - a) * (p - b) * (p\
  \ - c));\n        }\n        return -1;"
- "        if (a + b <= c || a + c <= b || b + c <= a) return -1;\n        // Use\
  \ Heron's formula for the area of a triangle.\n        float s = (a + b + c) / 2.0f;\n\
  \        float area = (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));\n     \
  \   return area;"
- "        if(a <= 0 || b <= 0 || c <= 0) return -1;\n        // The sum of the lengths\
  \ of any two sides of a triangle always exceeds the length of the third side,\n\
  \        // a principle known as the triangle inequality.\n        // In this case,\
  \ the triangle inequality states that the sum of the lengths of any two sides of\
  \ a \n        // triangle is greater than or equal to the length of the third side.\n\
  \        int max = Math.max(a, Math.max(b, c));\n        int min = Math.min(a, Math.min(b,\
  \ c));\n        int mid = a + b + c - max - min;\n        if(max >= mid + min) return\
  \ -1;\n        // Using Heron's formula\n        float s = (a + b + c) / 2f;\n \
  \       return (float)Math.sqrt(s * (s - a) * (s - b) * (s - c));"
- "        float s = (a + b + c) / 2;\n        float s2 = s * (s - a) * (s - b) *\
  \ (s - c);\n        if (s2 < 0) {\n            return -1;\n        }\n        return\
  \ (float) Math.sqrt(s2);"
- "        int[] arr = {a, b, c};\n        Arrays.sort(arr);\n        int largest\
  \ = arr[2];\n        int smallest = arr[0];\n        int mid = arr[1];\n       \
  \ if (largest >= smallest + mid) {\n            return -1;\n        } else {\n \
  \           double s = (a + b + c) / 2.0;\n            double area = Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n            return (float) Math.round(area *\
  \ 100) / 100;\n        }"
- "        if (a + b <= c || a + c <= b || b + c <= a) return -1.00f;\n        float\
  \ s = (a + b + c) / 2.0f;\n        return (float)Math.sqrt(s * (s - a) * (s - b)\
  \ * (s - c));"
- "        // In order to calculate the area, we need to calculate the value of \"\
  p\"\n        // which is half of the perimeter of the triangle\n        // p = (a\
  \ + b + c) / 2\n        // Then we can calculate the area using Heron's formula\n\
  \        // Area = sqrt(p(p-a)(p-b)(p-c))\n        // We need to do a check to make\
  \ sure that the perimeter is greater than\n        // each of the sides because\
  \ there is no triangle with perimeter = 1 and side = 2\n        // To do that we\
  \ need to find the max value in the three sides.\n        // If the max value is\
  \ greater than half of the perimeter then we can't \n        // form a triangle.\n\
  \        // If we can form a triangle then we should apply Heron's formula to find\n\
  \        // the area\n        int max = Math.max(a, Math.max(b, c));\n        int\
  \ perimeter = a + b + c;\n        if (max >= perimeter / 2.0) {\n            return\
  \ -1;\n        }\n        float p = perimeter / 2.0f;\n        float area = (float)\
  \ Math.sqrt(p * (p - a) * (p - b) * (p - c));\n        return (float) Math.round(area\
  \ * 100.0f) / 100.0f;"
- "        float p = (a + b + c) / 2.0f;\n        float area = (float) Math.sqrt(p\
  \ * (p - a) * (p - b) * (p - c));\n        if(area <= 0) {\n            return -1;\n\
  \        }\n        return area;"
- "        float s = (a + b + c) / 2.0f;\n        float area = (float)Math.sqrt(s\
  \ * (s - a) * (s - b) * (s - c));\n        return area;"
- "        if (a+b <= c || a+c <= b || b+c <= a) {\n            return -1.0f;\n  \
  \      }\n        float s = (a+b+c)/2.0f;\n        return (float)Math.sqrt(s*(s-a)*(s-b)*(s-c));"
language: java
name: HumanEval_71_triangle_area
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
  \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
  \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make a\
  \ valid triangle when the sum of any two sides is greater \n    // than the third\
  \ side.\n    // Example:\n    // triangle_area(3, 4, 5) == 6.00\n    // triangle_area(1,\
  \ 2, 10) == -1\n    public static float triangleArea(int a, int b, int c) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(triangleArea((3),\
  \ (4), (5)) == (6.0f));\n    assert(triangleArea((1), (2), (10)) == (float)-1);\n\
  \    assert(triangleArea((4), (8), (5)) == (8.18f));\n    assert(triangleArea((2),\
  \ (2), (2)) == (1.73f));\n    assert(triangleArea((1), (2), (3)) == (float)-1);\n\
  \    assert(triangleArea((10), (5), (7)) == (16.25f));\n    assert(triangleArea((2),\
  \ (6), (3)) == (float)-1);\n    assert(triangleArea((1), (1), (1)) == (0.43f));\n\
  \    assert(triangleArea((2), (2), (10)) == (float)-1);\n    }\n\n}\n"
